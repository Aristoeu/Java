package buffers;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest1 {

    public static boolean debug = false;

    @Test
    public void test0501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0501");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean4 = typeCircularBuffer3.isFull();
        boolean boolean5 = typeCircularBuffer3.isEmpty();
        java.lang.reflect.Type type6 = typeCircularBuffer3.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer10.get();
        boolean boolean17 = typeCircularBuffer8.put(type16);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer8.getClass();
        boolean boolean19 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass18);
        boolean boolean20 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass18);
        boolean boolean21 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test0502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0502");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type4 = typeCircularBuffer3.get();
        boolean boolean5 = typeCircularBuffer3.isFull();
        boolean boolean6 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean9 = typeCircularBuffer8.isEmpty();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer8.getClass();
        boolean boolean14 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass13);
        boolean boolean15 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean18 = typeCircularBuffer17.isFull();
        boolean boolean19 = typeCircularBuffer17.isEmpty();
        java.lang.reflect.Type type20 = typeCircularBuffer17.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean25 = typeCircularBuffer24.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer27.getClass();
        boolean boolean29 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.reflect.Type type30 = typeCircularBuffer24.get();
        boolean boolean31 = typeCircularBuffer22.put(type30);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer22.getClass();
        boolean boolean33 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean35 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean36 = typeCircularBuffer1.isFull();
        boolean boolean37 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean42 = typeCircularBuffer41.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass45 = typeCircularBuffer44.getClass();
        boolean boolean46 = typeCircularBuffer41.put((java.lang.reflect.Type) wildcardClass45);
        java.lang.reflect.Type type47 = typeCircularBuffer41.get();
        boolean boolean48 = typeCircularBuffer39.put(type47);
        java.lang.reflect.Type type49 = typeCircularBuffer39.get();
        boolean boolean50 = typeCircularBuffer39.isFull();
        boolean boolean51 = typeCircularBuffer39.isEmpty();
        java.lang.Class<?> wildcardClass52 = typeCircularBuffer39.getClass();
        boolean boolean53 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass52);
        boolean boolean54 = typeCircularBuffer1.isEmpty();
        boolean boolean55 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass56 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(type20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test0503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0503");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer5 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean6 = typeCircularBuffer5.isEmpty();
        boolean boolean7 = typeCircularBuffer5.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        java.lang.reflect.Type type15 = typeCircularBuffer9.get();
        boolean boolean16 = typeCircularBuffer5.put(type15);
        boolean boolean17 = typeCircularBuffer5.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean20 = typeCircularBuffer19.isFull();
        boolean boolean21 = typeCircularBuffer19.isEmpty();
        boolean boolean22 = typeCircularBuffer19.isFull();
        java.lang.reflect.Type type23 = null;
        boolean boolean24 = typeCircularBuffer19.put(type23);
        boolean boolean25 = typeCircularBuffer19.isFull();
        java.lang.Class<?> wildcardClass26 = typeCircularBuffer19.getClass();
        boolean boolean27 = typeCircularBuffer5.put((java.lang.reflect.Type) wildcardClass26);
        boolean boolean28 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass26);
        java.lang.reflect.Type type29 = typeCircularBuffer1.get();
        java.lang.reflect.Type type30 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(type29);
        org.junit.Assert.assertNull(type30);
    }

    @Test
    public void test0504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0504");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer6.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.reflect.Type type13 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer20.getClass();
        boolean boolean22 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type23 = typeCircularBuffer17.get();
        boolean boolean24 = typeCircularBuffer15.put(type23);
        boolean boolean25 = typeCircularBuffer1.put(type23);
        java.lang.reflect.Type type26 = typeCircularBuffer1.get();
        boolean boolean27 = typeCircularBuffer1.isFull();
        boolean boolean28 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type29 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(type29);
    }

    @Test
    public void test0505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0505");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        boolean boolean5 = typeCircularBuffer1.isFull();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test0506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0506");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
    }

    @Test
    public void test0507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0507");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 100);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass4 = type3.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertNull(type3);
    }

    @Test
    public void test0508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0508");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = null;
        boolean boolean8 = typeCircularBuffer1.put(type7);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean13 = typeCircularBuffer12.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass16 = typeCircularBuffer15.getClass();
        boolean boolean17 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass16);
        java.lang.reflect.Type type18 = typeCircularBuffer12.get();
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer12.getClass();
        boolean boolean20 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass19);
        boolean boolean21 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass19);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean24 = typeCircularBuffer23.isEmpty();
        boolean boolean25 = typeCircularBuffer23.isEmpty();
        java.lang.reflect.Type type26 = typeCircularBuffer23.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer31.getClass();
        boolean boolean33 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean35 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass32);
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(type26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0509");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean4 = typeCircularBuffer3.isFull();
        boolean boolean5 = typeCircularBuffer3.isEmpty();
        java.lang.reflect.Type type6 = typeCircularBuffer3.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer10.get();
        boolean boolean17 = typeCircularBuffer8.put(type16);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer8.getClass();
        boolean boolean19 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass18);
        boolean boolean20 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass18);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type23 = typeCircularBuffer22.get();
        boolean boolean24 = typeCircularBuffer22.isFull();
        boolean boolean25 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean28 = typeCircularBuffer27.isEmpty();
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        boolean boolean31 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass30);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer27.getClass();
        boolean boolean33 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean37 = typeCircularBuffer36.isFull();
        boolean boolean38 = typeCircularBuffer36.isEmpty();
        java.lang.reflect.Type type39 = typeCircularBuffer36.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer46.getClass();
        boolean boolean48 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass47);
        java.lang.reflect.Type type49 = typeCircularBuffer43.get();
        boolean boolean50 = typeCircularBuffer41.put(type49);
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer41.getClass();
        boolean boolean52 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean53 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass51);
        java.lang.Class<?> wildcardClass54 = typeCircularBuffer22.getClass();
        boolean boolean55 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean56 = typeCircularBuffer1.isEmpty();
        boolean boolean57 = typeCircularBuffer1.isFull();
        boolean boolean58 = typeCircularBuffer1.isFull();
        boolean boolean59 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type60 = typeCircularBuffer1.get();
        boolean boolean61 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass62 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(type39);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test0510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0510");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        java.lang.reflect.Type type12 = typeCircularBuffer6.get();
        boolean boolean13 = typeCircularBuffer4.put(type12);
        boolean boolean14 = typeCircularBuffer4.isFull();
        java.lang.reflect.Type type15 = typeCircularBuffer4.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type18 = typeCircularBuffer17.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean21 = typeCircularBuffer20.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer23.getClass();
        boolean boolean25 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass24);
        java.lang.reflect.Type type26 = typeCircularBuffer20.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type29 = typeCircularBuffer28.get();
        boolean boolean30 = typeCircularBuffer28.isFull();
        boolean boolean31 = typeCircularBuffer28.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean34 = typeCircularBuffer33.isEmpty();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        boolean boolean37 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass36);
        java.lang.Class<?> wildcardClass38 = typeCircularBuffer33.getClass();
        boolean boolean39 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass38);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean42 = typeCircularBuffer41.isEmpty();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        boolean boolean45 = typeCircularBuffer41.put((java.lang.reflect.Type) wildcardClass44);
        java.lang.Class<?> wildcardClass46 = typeCircularBuffer41.getClass();
        boolean boolean47 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass46);
        boolean boolean48 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass46);
        boolean boolean49 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass46);
        boolean boolean50 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass46);
        boolean boolean51 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass46);
        boolean boolean52 = typeCircularBuffer1.isEmpty();
        boolean boolean53 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type54 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNull(type18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNull(type29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(type54);
    }

    @Test
    public void test0511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0511");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        boolean boolean9 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer13.getClass();
        boolean boolean21 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean22 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type23 = typeCircularBuffer1.get();
        boolean boolean24 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass25 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0512");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(type8);
    }

    @Test
    public void test0513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0513");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass8 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0514");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        boolean boolean8 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass7);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean13 = typeCircularBuffer12.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass16 = typeCircularBuffer15.getClass();
        boolean boolean17 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass16);
        java.lang.reflect.Type type18 = typeCircularBuffer12.get();
        boolean boolean19 = typeCircularBuffer10.put(type18);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer10.getClass();
        boolean boolean21 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0515");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        java.lang.reflect.Type type11 = typeCircularBuffer1.get();
        boolean boolean12 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer17.getClass();
        boolean boolean19 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass18);
        java.lang.reflect.Type type20 = typeCircularBuffer14.get();
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        boolean boolean23 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass22);
        java.lang.reflect.Type type24 = typeCircularBuffer14.get();
        boolean boolean25 = typeCircularBuffer1.put(type24);
        java.lang.reflect.Type type26 = typeCircularBuffer1.get();
        boolean boolean27 = typeCircularBuffer1.isEmpty();
        boolean boolean28 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
    }

    @Test
    public void test0516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0516");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.io.Serializable> serializableCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.io.Serializable>(0);
    }

    @Test
    public void test0517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0517");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer17.getClass();
        boolean boolean19 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass18);
        java.lang.reflect.Type type20 = typeCircularBuffer14.get();
        boolean boolean21 = typeCircularBuffer12.put(type20);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer12.getClass();
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass22);
        boolean boolean24 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type25 = typeCircularBuffer1.get();
        boolean boolean26 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        java.lang.reflect.Type type30 = typeCircularBuffer28.get();
        java.lang.reflect.Type type31 = typeCircularBuffer28.get();
        java.lang.reflect.Type type32 = typeCircularBuffer28.get();
        boolean boolean33 = typeCircularBuffer28.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean36 = typeCircularBuffer35.isFull();
        java.lang.reflect.Type type37 = typeCircularBuffer35.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean40 = typeCircularBuffer39.isEmpty();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        boolean boolean43 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass42);
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer39.getClass();
        boolean boolean45 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean46 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass44);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '#');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer52 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean53 = typeCircularBuffer52.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer55 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass56 = typeCircularBuffer55.getClass();
        boolean boolean57 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass56);
        java.lang.reflect.Type type58 = typeCircularBuffer52.get();
        boolean boolean59 = typeCircularBuffer50.put(type58);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer61 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer63 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean64 = typeCircularBuffer63.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer66 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass67 = typeCircularBuffer66.getClass();
        boolean boolean68 = typeCircularBuffer63.put((java.lang.reflect.Type) wildcardClass67);
        java.lang.reflect.Type type69 = typeCircularBuffer63.get();
        boolean boolean70 = typeCircularBuffer61.put(type69);
        java.lang.Class<?> wildcardClass71 = typeCircularBuffer61.getClass();
        boolean boolean72 = typeCircularBuffer50.put((java.lang.reflect.Type) wildcardClass71);
        boolean boolean73 = typeCircularBuffer48.put((java.lang.reflect.Type) wildcardClass71);
        boolean boolean74 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass71);
        java.lang.reflect.Type type75 = typeCircularBuffer28.get();
        java.lang.Class<?> wildcardClass76 = type75.getClass();
        boolean boolean77 = typeCircularBuffer1.put(type75);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(type30);
        org.junit.Assert.assertNull(type31);
        org.junit.Assert.assertNull(type32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(type37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
    }

    @Test
    public void test0518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0518");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type4 = typeCircularBuffer3.get();
        boolean boolean5 = typeCircularBuffer3.isFull();
        boolean boolean6 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean9 = typeCircularBuffer8.isEmpty();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer8.getClass();
        boolean boolean14 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass13);
        boolean boolean15 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean18 = typeCircularBuffer17.isFull();
        boolean boolean19 = typeCircularBuffer17.isEmpty();
        java.lang.reflect.Type type20 = typeCircularBuffer17.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean25 = typeCircularBuffer24.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer27.getClass();
        boolean boolean29 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.reflect.Type type30 = typeCircularBuffer24.get();
        boolean boolean31 = typeCircularBuffer22.put(type30);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer22.getClass();
        boolean boolean33 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean35 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean36 = typeCircularBuffer1.isFull();
        boolean boolean37 = typeCircularBuffer1.isEmpty();
        boolean boolean38 = typeCircularBuffer1.isFull();
        boolean boolean39 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass40 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(type20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test0519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0519");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean10 = typeCircularBuffer9.isFull();
        boolean boolean11 = typeCircularBuffer9.isEmpty();
        java.lang.reflect.Type type12 = typeCircularBuffer9.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer19.getClass();
        boolean boolean21 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type22 = typeCircularBuffer16.get();
        boolean boolean23 = typeCircularBuffer14.put(type22);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer14.getClass();
        boolean boolean25 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean26 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass24);
        java.lang.reflect.Type type27 = typeCircularBuffer1.get();
        boolean boolean28 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass29 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(type12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test0520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0520");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        java.lang.reflect.Type type12 = typeCircularBuffer6.get();
        boolean boolean13 = typeCircularBuffer4.put(type12);
        boolean boolean14 = typeCircularBuffer4.isFull();
        java.lang.reflect.Type type15 = typeCircularBuffer4.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        boolean boolean21 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean22 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean24 = typeCircularBuffer1.isEmpty();
        boolean boolean25 = typeCircularBuffer1.isFull();
        boolean boolean26 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type27 = typeCircularBuffer1.get();
        java.lang.reflect.Type type28 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNull(type28);
    }

    @Test
    public void test0521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0521");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer6.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.reflect.Type type13 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer20.getClass();
        boolean boolean22 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type23 = typeCircularBuffer17.get();
        boolean boolean24 = typeCircularBuffer15.put(type23);
        boolean boolean25 = typeCircularBuffer1.put(type23);
        java.lang.reflect.Type type26 = typeCircularBuffer1.get();
        boolean boolean27 = typeCircularBuffer1.isEmpty();
        boolean boolean28 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
    }

    @Test
    public void test0522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0522");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean13 = typeCircularBuffer12.isFull();
        boolean boolean14 = typeCircularBuffer12.isEmpty();
        boolean boolean15 = typeCircularBuffer12.isFull();
        java.lang.Class<?> wildcardClass16 = typeCircularBuffer12.getClass();
        boolean boolean17 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass16);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean22 = typeCircularBuffer21.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass25 = typeCircularBuffer24.getClass();
        boolean boolean26 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.reflect.Type type27 = typeCircularBuffer21.get();
        boolean boolean28 = typeCircularBuffer19.put(type27);
        boolean boolean29 = typeCircularBuffer19.isFull();
        java.lang.reflect.Type type30 = typeCircularBuffer19.get();
        boolean boolean31 = typeCircularBuffer19.isEmpty();
        java.lang.reflect.Type type32 = typeCircularBuffer19.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean35 = typeCircularBuffer34.isEmpty();
        boolean boolean36 = typeCircularBuffer34.isFull();
        java.lang.reflect.Type type37 = typeCircularBuffer34.get();
        boolean boolean38 = typeCircularBuffer34.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean43 = typeCircularBuffer42.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass46 = typeCircularBuffer45.getClass();
        boolean boolean47 = typeCircularBuffer42.put((java.lang.reflect.Type) wildcardClass46);
        java.lang.reflect.Type type48 = typeCircularBuffer42.get();
        boolean boolean49 = typeCircularBuffer40.put(type48);
        boolean boolean50 = typeCircularBuffer40.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer52 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean53 = typeCircularBuffer52.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer55 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass56 = typeCircularBuffer55.getClass();
        boolean boolean57 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass56);
        java.lang.reflect.Type type58 = typeCircularBuffer52.get();
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        boolean boolean61 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass60);
        boolean boolean62 = typeCircularBuffer40.put((java.lang.reflect.Type) wildcardClass60);
        boolean boolean63 = typeCircularBuffer40.isEmpty();
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        boolean boolean66 = typeCircularBuffer40.put((java.lang.reflect.Type) wildcardClass65);
        boolean boolean67 = typeCircularBuffer34.put((java.lang.reflect.Type) wildcardClass65);
        boolean boolean68 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass65);
        java.lang.reflect.Type type69 = typeCircularBuffer19.get();
        boolean boolean70 = typeCircularBuffer1.put(type69);
        java.lang.Class<?> wildcardClass71 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(type32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(type37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test0523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0523");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) 'a');
        boolean boolean2 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean7 = typeCircularBuffer6.isFull();
        boolean boolean8 = typeCircularBuffer6.isEmpty();
        java.lang.reflect.Type type9 = typeCircularBuffer6.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        boolean boolean20 = typeCircularBuffer11.put(type19);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer11.getClass();
        boolean boolean22 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean24 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type25 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean28 = typeCircularBuffer27.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass31 = typeCircularBuffer30.getClass();
        boolean boolean32 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass31);
        java.lang.reflect.Type type33 = null;
        boolean boolean34 = typeCircularBuffer27.put(type33);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean39 = typeCircularBuffer38.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass42 = typeCircularBuffer41.getClass();
        boolean boolean43 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass42);
        java.lang.reflect.Type type44 = typeCircularBuffer38.get();
        java.lang.Class<?> wildcardClass45 = typeCircularBuffer38.getClass();
        boolean boolean46 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass45);
        boolean boolean47 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass45);
        java.lang.Class<?> wildcardClass48 = typeCircularBuffer27.getClass();
        boolean boolean49 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass48);
        boolean boolean50 = typeCircularBuffer1.isFull();
        boolean boolean51 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test0524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0524");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer6.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.reflect.Type type13 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer20.getClass();
        boolean boolean22 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type23 = typeCircularBuffer17.get();
        boolean boolean24 = typeCircularBuffer15.put(type23);
        boolean boolean25 = typeCircularBuffer1.put(type23);
        java.lang.reflect.Type type26 = typeCircularBuffer1.get();
        boolean boolean27 = typeCircularBuffer1.isFull();
        boolean boolean28 = typeCircularBuffer1.isFull();
        boolean boolean29 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test0525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0525");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer10.get();
        boolean boolean17 = typeCircularBuffer8.put(type16);
        boolean boolean18 = typeCircularBuffer8.isFull();
        java.lang.reflect.Type type19 = typeCircularBuffer8.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean22 = typeCircularBuffer21.isEmpty();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean26 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean27 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean28 = typeCircularBuffer1.isFull();
        boolean boolean29 = typeCircularBuffer1.isFull();
        boolean boolean30 = typeCircularBuffer1.isEmpty();
        boolean boolean31 = typeCircularBuffer1.isFull();
        boolean boolean32 = typeCircularBuffer1.isFull();
        boolean boolean33 = typeCircularBuffer1.isEmpty();
        boolean boolean34 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test0526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0526");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type5 = null;
        boolean boolean6 = typeCircularBuffer1.put(type5);
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type8 = null;
        boolean boolean9 = typeCircularBuffer1.put(type8);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test0527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0527");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean13 = typeCircularBuffer12.isFull();
        boolean boolean14 = typeCircularBuffer12.isEmpty();
        boolean boolean15 = typeCircularBuffer12.isFull();
        java.lang.Class<?> wildcardClass16 = typeCircularBuffer12.getClass();
        boolean boolean17 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass16);
        java.lang.reflect.Type type18 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass19 = type18.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0528");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) ' ');
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean5 = typeCircularBuffer4.isEmpty();
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        boolean boolean8 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.Class<?> wildcardClass9 = typeCircularBuffer4.getClass();
        boolean boolean10 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass9);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean13 = typeCircularBuffer12.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type16 = typeCircularBuffer15.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean21 = typeCircularBuffer20.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer23.getClass();
        boolean boolean25 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass24);
        java.lang.reflect.Type type26 = typeCircularBuffer20.get();
        boolean boolean27 = typeCircularBuffer18.put(type26);
        boolean boolean28 = typeCircularBuffer18.isFull();
        java.lang.reflect.Type type29 = typeCircularBuffer18.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        boolean boolean35 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass34);
        boolean boolean36 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass34);
        boolean boolean37 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass34);
        boolean boolean38 = typeCircularBuffer15.isEmpty();
        java.lang.Class<?> wildcardClass39 = typeCircularBuffer15.getClass();
        boolean boolean40 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass39);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean43 = typeCircularBuffer42.isFull();
        boolean boolean44 = typeCircularBuffer42.isEmpty();
        boolean boolean45 = typeCircularBuffer42.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean48 = typeCircularBuffer47.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer50.getClass();
        boolean boolean52 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass51);
        java.lang.reflect.Type type53 = typeCircularBuffer47.get();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        boolean boolean56 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass55);
        boolean boolean57 = typeCircularBuffer42.put((java.lang.reflect.Type) wildcardClass55);
        boolean boolean58 = typeCircularBuffer42.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer60 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer62 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean63 = typeCircularBuffer62.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer65 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass66 = typeCircularBuffer65.getClass();
        boolean boolean67 = typeCircularBuffer62.put((java.lang.reflect.Type) wildcardClass66);
        java.lang.reflect.Type type68 = typeCircularBuffer62.get();
        boolean boolean69 = typeCircularBuffer60.put(type68);
        boolean boolean70 = typeCircularBuffer60.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer72 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean73 = typeCircularBuffer72.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer75 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass76 = typeCircularBuffer75.getClass();
        boolean boolean77 = typeCircularBuffer72.put((java.lang.reflect.Type) wildcardClass76);
        java.lang.reflect.Type type78 = typeCircularBuffer72.get();
        java.lang.Object obj79 = new java.lang.Object();
        java.lang.Class<?> wildcardClass80 = obj79.getClass();
        boolean boolean81 = typeCircularBuffer72.put((java.lang.reflect.Type) wildcardClass80);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer83 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean84 = typeCircularBuffer83.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer86 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass87 = typeCircularBuffer86.getClass();
        boolean boolean88 = typeCircularBuffer83.put((java.lang.reflect.Type) wildcardClass87);
        java.lang.Class<?> wildcardClass89 = typeCircularBuffer83.getClass();
        boolean boolean90 = typeCircularBuffer72.put((java.lang.reflect.Type) wildcardClass89);
        boolean boolean91 = typeCircularBuffer60.put((java.lang.reflect.Type) wildcardClass89);
        boolean boolean92 = typeCircularBuffer42.put((java.lang.reflect.Type) wildcardClass89);
        boolean boolean93 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass89);
        boolean boolean94 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass89);
        java.lang.Class<?> wildcardClass95 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(type16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test0529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0529");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.String> strCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.String>((int) '#');
    }

    @Test
    public void test0530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0530");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        java.lang.reflect.Type type11 = typeCircularBuffer1.get();
        boolean boolean12 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer17.getClass();
        boolean boolean19 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass18);
        java.lang.reflect.Type type20 = typeCircularBuffer14.get();
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        boolean boolean23 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass22);
        java.lang.reflect.Type type24 = typeCircularBuffer14.get();
        boolean boolean25 = typeCircularBuffer1.put(type24);
        java.lang.reflect.Type type26 = typeCircularBuffer1.get();
        boolean boolean27 = typeCircularBuffer1.isEmpty();
        boolean boolean28 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test0531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0531");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
    }

    @Test
    public void test0532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0532");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass10);
        boolean boolean13 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.invoke.TypeDescriptor> typeDescriptorCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.invoke.TypeDescriptor>(100);
        java.lang.Class<?> wildcardClass16 = typeDescriptorCircularBuffer15.getClass();
        boolean boolean17 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass16);
        boolean boolean18 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test0533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0533");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.AnnotatedElement> annotatedElementCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.AnnotatedElement>((int) (short) 10);
    }

    @Test
    public void test0534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0534");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.reflect.Type type11 = typeCircularBuffer1.get();
        boolean boolean12 = typeCircularBuffer1.isFull();
        boolean boolean13 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type14 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean19 = typeCircularBuffer18.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer21.getClass();
        boolean boolean23 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass22);
        java.lang.reflect.Type type24 = typeCircularBuffer18.get();
        boolean boolean25 = typeCircularBuffer16.put(type24);
        boolean boolean26 = typeCircularBuffer16.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer31.getClass();
        boolean boolean33 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass32);
        java.lang.reflect.Type type34 = typeCircularBuffer28.get();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        boolean boolean37 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean38 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean39 = typeCircularBuffer16.isEmpty();
        java.lang.Class<?> wildcardClass40 = typeCircularBuffer16.getClass();
        boolean boolean41 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass40);
        boolean boolean42 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(type14);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
    }

    @Test
    public void test0535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0535");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean13 = typeCircularBuffer12.isFull();
        boolean boolean14 = typeCircularBuffer12.isEmpty();
        boolean boolean15 = typeCircularBuffer12.isFull();
        java.lang.Class<?> wildcardClass16 = typeCircularBuffer12.getClass();
        boolean boolean17 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass16);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean22 = typeCircularBuffer21.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass25 = typeCircularBuffer24.getClass();
        boolean boolean26 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.reflect.Type type27 = typeCircularBuffer21.get();
        boolean boolean28 = typeCircularBuffer19.put(type27);
        boolean boolean29 = typeCircularBuffer19.isFull();
        java.lang.reflect.Type type30 = typeCircularBuffer19.get();
        boolean boolean31 = typeCircularBuffer19.isEmpty();
        java.lang.reflect.Type type32 = typeCircularBuffer19.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean35 = typeCircularBuffer34.isEmpty();
        boolean boolean36 = typeCircularBuffer34.isFull();
        java.lang.reflect.Type type37 = typeCircularBuffer34.get();
        boolean boolean38 = typeCircularBuffer34.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean43 = typeCircularBuffer42.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass46 = typeCircularBuffer45.getClass();
        boolean boolean47 = typeCircularBuffer42.put((java.lang.reflect.Type) wildcardClass46);
        java.lang.reflect.Type type48 = typeCircularBuffer42.get();
        boolean boolean49 = typeCircularBuffer40.put(type48);
        boolean boolean50 = typeCircularBuffer40.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer52 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean53 = typeCircularBuffer52.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer55 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass56 = typeCircularBuffer55.getClass();
        boolean boolean57 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass56);
        java.lang.reflect.Type type58 = typeCircularBuffer52.get();
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        boolean boolean61 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass60);
        boolean boolean62 = typeCircularBuffer40.put((java.lang.reflect.Type) wildcardClass60);
        boolean boolean63 = typeCircularBuffer40.isEmpty();
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        boolean boolean66 = typeCircularBuffer40.put((java.lang.reflect.Type) wildcardClass65);
        boolean boolean67 = typeCircularBuffer34.put((java.lang.reflect.Type) wildcardClass65);
        boolean boolean68 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass65);
        java.lang.reflect.Type type69 = typeCircularBuffer19.get();
        boolean boolean70 = typeCircularBuffer1.put(type69);
        java.lang.reflect.Type type71 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(type32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(type37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(type71);
    }

    @Test
    public void test0536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0536");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean24 = typeCircularBuffer1.isEmpty();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        boolean boolean27 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass26);
        java.lang.reflect.Type type28 = typeCircularBuffer1.get();
        boolean boolean29 = typeCircularBuffer1.isEmpty();
        boolean boolean30 = typeCircularBuffer1.isEmpty();
        boolean boolean31 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
    }

    @Test
    public void test0537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0537");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer6.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.reflect.Type type13 = typeCircularBuffer1.get();
        boolean boolean14 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer19.getClass();
        boolean boolean21 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean22 = typeCircularBuffer16.isEmpty();
        java.lang.reflect.Type type23 = typeCircularBuffer16.get();
        boolean boolean24 = typeCircularBuffer1.put(type23);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type27 = typeCircularBuffer26.get();
        boolean boolean28 = typeCircularBuffer26.isFull();
        boolean boolean29 = typeCircularBuffer26.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        boolean boolean35 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass34);
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer31.getClass();
        boolean boolean37 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass36);
        java.lang.reflect.Type type38 = typeCircularBuffer26.get();
        boolean boolean39 = typeCircularBuffer26.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type42 = typeCircularBuffer41.get();
        boolean boolean43 = typeCircularBuffer41.isFull();
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer41.getClass();
        boolean boolean45 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean46 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass44);
        java.lang.reflect.Type type47 = typeCircularBuffer1.get();
        boolean boolean48 = typeCircularBuffer1.isFull();
        boolean boolean49 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type50 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(type42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(type50);
    }

    @Test
    public void test0538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0538");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '#');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean9 = typeCircularBuffer8.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass12 = typeCircularBuffer11.getClass();
        boolean boolean13 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass12);
        java.lang.reflect.Type type14 = typeCircularBuffer8.get();
        boolean boolean15 = typeCircularBuffer6.put(type14);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean20 = typeCircularBuffer19.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass23 = typeCircularBuffer22.getClass();
        boolean boolean24 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass23);
        java.lang.reflect.Type type25 = typeCircularBuffer19.get();
        boolean boolean26 = typeCircularBuffer17.put(type25);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer17.getClass();
        boolean boolean28 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean30 = typeCircularBuffer4.isEmpty();
        java.lang.Class<?> wildcardClass31 = typeCircularBuffer4.getClass();
        boolean boolean32 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass31);
        java.lang.Class<?> wildcardClass33 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test0539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0539");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) ' ');
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        boolean boolean5 = typeCircularBuffer1.isFull();
        boolean boolean6 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0540");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0541");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass21);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean26 = typeCircularBuffer25.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass29 = typeCircularBuffer28.getClass();
        boolean boolean30 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass29);
        java.lang.reflect.Type type31 = typeCircularBuffer25.get();
        boolean boolean32 = typeCircularBuffer1.put(type31);
        boolean boolean33 = typeCircularBuffer1.isEmpty();
        boolean boolean34 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test0542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0542");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) 'a');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass4 = typeCircularBuffer3.getClass();
        boolean boolean5 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass4);
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type10 = typeCircularBuffer9.get();
        boolean boolean11 = typeCircularBuffer9.isFull();
        boolean boolean12 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer14.getClass();
        boolean boolean20 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass19);
        java.lang.reflect.Type type21 = typeCircularBuffer9.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean26 = typeCircularBuffer25.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass29 = typeCircularBuffer28.getClass();
        boolean boolean30 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass29);
        java.lang.reflect.Type type31 = typeCircularBuffer25.get();
        boolean boolean32 = typeCircularBuffer23.put(type31);
        boolean boolean33 = typeCircularBuffer9.put(type31);
        java.lang.Class<?> wildcardClass34 = typeCircularBuffer9.getClass();
        boolean boolean35 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass34);
        java.lang.reflect.Type type36 = typeCircularBuffer1.get();
        boolean boolean37 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass38 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test0543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0543");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '#');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) ' ');
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer3.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0544");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        boolean boolean15 = typeCircularBuffer13.isFull();
        java.lang.reflect.Type type16 = typeCircularBuffer13.get();
        boolean boolean17 = typeCircularBuffer13.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean20 = typeCircularBuffer19.isFull();
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer19.getClass();
        boolean boolean22 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type24 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass25 = type24.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0545");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass9);
        boolean boolean11 = typeCircularBuffer6.isFull();
        java.lang.Class<?> wildcardClass12 = typeCircularBuffer6.getClass();
        boolean boolean13 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass12);
        boolean boolean14 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type15 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass16 = type15.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0546");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        java.lang.reflect.Type type15 = typeCircularBuffer9.get();
        boolean boolean16 = typeCircularBuffer7.put(type15);
        boolean boolean17 = typeCircularBuffer7.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean20 = typeCircularBuffer19.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass23 = typeCircularBuffer22.getClass();
        boolean boolean24 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass23);
        java.lang.reflect.Type type25 = typeCircularBuffer19.get();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        boolean boolean28 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer7.put((java.lang.reflect.Type) wildcardClass27);
        java.lang.reflect.Type type30 = typeCircularBuffer7.get();
        boolean boolean31 = typeCircularBuffer7.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type34 = typeCircularBuffer33.get();
        boolean boolean35 = typeCircularBuffer33.isFull();
        boolean boolean36 = typeCircularBuffer33.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean39 = typeCircularBuffer38.isEmpty();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        boolean boolean42 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass41);
        java.lang.Class<?> wildcardClass43 = typeCircularBuffer38.getClass();
        boolean boolean44 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass43);
        java.lang.reflect.Type type45 = typeCircularBuffer33.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer49 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean50 = typeCircularBuffer49.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer52 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass53 = typeCircularBuffer52.getClass();
        boolean boolean54 = typeCircularBuffer49.put((java.lang.reflect.Type) wildcardClass53);
        java.lang.reflect.Type type55 = typeCircularBuffer49.get();
        boolean boolean56 = typeCircularBuffer47.put(type55);
        boolean boolean57 = typeCircularBuffer33.put(type55);
        java.lang.reflect.Type type58 = typeCircularBuffer33.get();
        boolean boolean59 = typeCircularBuffer7.put(type58);
        boolean boolean60 = typeCircularBuffer1.put(type58);
        boolean boolean61 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer63 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type64 = typeCircularBuffer63.get();
        boolean boolean65 = typeCircularBuffer63.isFull();
        boolean boolean66 = typeCircularBuffer63.isFull();
        boolean boolean67 = typeCircularBuffer63.isEmpty();
        java.lang.reflect.Type type68 = typeCircularBuffer63.get();
        boolean boolean69 = typeCircularBuffer63.isEmpty();
        boolean boolean70 = typeCircularBuffer63.isFull();
        java.lang.reflect.Type type71 = typeCircularBuffer63.get();
        java.lang.reflect.Type type72 = typeCircularBuffer63.get();
        boolean boolean73 = typeCircularBuffer63.isFull();
        java.lang.Class<?> wildcardClass74 = typeCircularBuffer63.getClass();
        boolean boolean75 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass74);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(type34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(type64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNull(type68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(type71);
        org.junit.Assert.assertNull(type72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
    }

    @Test
    public void test0547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0547");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        java.lang.reflect.Type type11 = typeCircularBuffer1.get();
        java.lang.reflect.Type type12 = null;
        boolean boolean13 = typeCircularBuffer1.put(type12);
        boolean boolean14 = typeCircularBuffer1.isEmpty();
        boolean boolean15 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 10);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type20 = typeCircularBuffer19.get();
        boolean boolean21 = typeCircularBuffer19.isFull();
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer19.getClass();
        boolean boolean23 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass22);
        boolean boolean24 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass22);
        boolean boolean25 = typeCircularBuffer1.isFull();
        boolean boolean26 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type27 = typeCircularBuffer1.get();
        boolean boolean28 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(type20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test0548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0548");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type9 = typeCircularBuffer8.get();
        boolean boolean10 = typeCircularBuffer8.isFull();
        boolean boolean11 = typeCircularBuffer8.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass16);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer13.getClass();
        boolean boolean19 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass18);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean22 = typeCircularBuffer21.isEmpty();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass24);
        java.lang.Class<?> wildcardClass26 = typeCircularBuffer21.getClass();
        boolean boolean27 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass26);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer34.getClass();
        boolean boolean36 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass35);
        java.lang.reflect.Type type37 = typeCircularBuffer31.get();
        boolean boolean38 = typeCircularBuffer29.put(type37);
        java.lang.Class<?> wildcardClass39 = typeCircularBuffer29.getClass();
        boolean boolean40 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass39);
        java.lang.Class<?> wildcardClass41 = typeCircularBuffer8.getClass();
        boolean boolean42 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean43 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type44 = typeCircularBuffer1.get();
        boolean boolean45 = typeCircularBuffer1.isFull();
        boolean boolean46 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
    }

    @Test
    public void test0549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0549");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer10.get();
        boolean boolean17 = typeCircularBuffer8.put(type16);
        boolean boolean18 = typeCircularBuffer8.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean21 = typeCircularBuffer20.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer23.getClass();
        boolean boolean25 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass24);
        java.lang.reflect.Type type26 = typeCircularBuffer20.get();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        boolean boolean29 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass28);
        boolean boolean30 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass28);
        boolean boolean31 = typeCircularBuffer8.isEmpty();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        boolean boolean34 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass33);
        boolean boolean35 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass33);
        boolean boolean36 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type37 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(type37);
    }

    @Test
    public void test0550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0550");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass6 = type5.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(type5);
    }

    @Test
    public void test0551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0551");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer10.get();
        boolean boolean17 = typeCircularBuffer8.put(type16);
        boolean boolean18 = typeCircularBuffer8.isFull();
        java.lang.reflect.Type type19 = typeCircularBuffer8.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean22 = typeCircularBuffer21.isEmpty();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean26 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass24);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean31 = typeCircularBuffer30.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass34 = typeCircularBuffer33.getClass();
        boolean boolean35 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass34);
        java.lang.reflect.Type type36 = typeCircularBuffer30.get();
        boolean boolean37 = typeCircularBuffer28.put(type36);
        boolean boolean38 = typeCircularBuffer28.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean41 = typeCircularBuffer40.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer43.getClass();
        boolean boolean45 = typeCircularBuffer40.put((java.lang.reflect.Type) wildcardClass44);
        java.lang.reflect.Type type46 = typeCircularBuffer40.get();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        boolean boolean49 = typeCircularBuffer40.put((java.lang.reflect.Type) wildcardClass48);
        boolean boolean50 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass48);
        boolean boolean51 = typeCircularBuffer28.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer53 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type54 = typeCircularBuffer53.get();
        boolean boolean55 = typeCircularBuffer53.isFull();
        boolean boolean56 = typeCircularBuffer53.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer58 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean59 = typeCircularBuffer58.isEmpty();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        boolean boolean62 = typeCircularBuffer58.put((java.lang.reflect.Type) wildcardClass61);
        java.lang.Class<?> wildcardClass63 = typeCircularBuffer58.getClass();
        boolean boolean64 = typeCircularBuffer53.put((java.lang.reflect.Type) wildcardClass63);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer66 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean67 = typeCircularBuffer66.isEmpty();
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        boolean boolean70 = typeCircularBuffer66.put((java.lang.reflect.Type) wildcardClass69);
        java.lang.Class<?> wildcardClass71 = typeCircularBuffer66.getClass();
        boolean boolean72 = typeCircularBuffer53.put((java.lang.reflect.Type) wildcardClass71);
        boolean boolean73 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass71);
        java.lang.reflect.Type type74 = typeCircularBuffer28.get();
        boolean boolean75 = typeCircularBuffer8.put(type74);
        boolean boolean76 = typeCircularBuffer1.put(type74);
        boolean boolean77 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(type54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test0552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0552");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        boolean boolean5 = typeCircularBuffer1.isFull();
        boolean boolean6 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type9 = typeCircularBuffer8.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        boolean boolean20 = typeCircularBuffer11.put(type19);
        boolean boolean21 = typeCircularBuffer11.isFull();
        java.lang.reflect.Type type22 = typeCircularBuffer11.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean25 = typeCircularBuffer24.isEmpty();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        boolean boolean28 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean30 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass27);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 0);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer34.getClass();
        boolean boolean36 = typeCircularBuffer32.put((java.lang.reflect.Type) wildcardClass35);
        boolean boolean37 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass35);
        boolean boolean38 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass35);
        java.lang.reflect.Type type39 = typeCircularBuffer1.get();
        java.lang.reflect.Type type40 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean43 = typeCircularBuffer42.isEmpty();
        boolean boolean44 = typeCircularBuffer42.isEmpty();
        java.lang.reflect.Type type45 = typeCircularBuffer42.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean48 = typeCircularBuffer47.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer50.getClass();
        boolean boolean52 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean53 = typeCircularBuffer42.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean54 = typeCircularBuffer42.isEmpty();
        java.lang.Class<?> wildcardClass55 = typeCircularBuffer42.getClass();
        boolean boolean56 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass55);
        java.lang.reflect.Type type57 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass58 = type57.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNull(type40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(type45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test0553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0553");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.Comparable<java.lang.String>> strComparableCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.Comparable<java.lang.String>>((int) (short) 100);
    }

    @Test
    public void test0554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0554");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        boolean boolean9 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test0555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0555");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        boolean boolean9 = typeCircularBuffer1.isEmpty();
        boolean boolean10 = typeCircularBuffer1.isFull();
        boolean boolean11 = typeCircularBuffer1.isFull();
        boolean boolean12 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type15 = typeCircularBuffer14.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean20 = typeCircularBuffer19.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass23 = typeCircularBuffer22.getClass();
        boolean boolean24 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass23);
        java.lang.reflect.Type type25 = typeCircularBuffer19.get();
        boolean boolean26 = typeCircularBuffer17.put(type25);
        boolean boolean27 = typeCircularBuffer17.isFull();
        java.lang.reflect.Type type28 = typeCircularBuffer17.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean31 = typeCircularBuffer30.isEmpty();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        boolean boolean34 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass33);
        boolean boolean35 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass33);
        boolean boolean36 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass33);
        boolean boolean37 = typeCircularBuffer14.isEmpty();
        java.lang.reflect.Type type38 = typeCircularBuffer14.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean41 = typeCircularBuffer40.isEmpty();
        java.lang.reflect.Type type42 = typeCircularBuffer40.get();
        java.lang.reflect.Type type43 = typeCircularBuffer40.get();
        java.lang.reflect.Type type44 = typeCircularBuffer40.get();
        java.lang.reflect.Type type45 = typeCircularBuffer40.get();
        boolean boolean46 = typeCircularBuffer40.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) ' ');
        java.lang.reflect.Type type49 = typeCircularBuffer48.get();
        java.lang.Class<?> wildcardClass50 = typeCircularBuffer48.getClass();
        boolean boolean51 = typeCircularBuffer40.put((java.lang.reflect.Type) wildcardClass50);
        boolean boolean52 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass50);
        boolean boolean53 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(type15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(type42);
        org.junit.Assert.assertNull(type43);
        org.junit.Assert.assertNull(type44);
        org.junit.Assert.assertNull(type45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(type49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
    }

    @Test
    public void test0556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0556");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        boolean boolean15 = typeCircularBuffer13.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type18 = typeCircularBuffer17.get();
        boolean boolean19 = typeCircularBuffer17.isFull();
        boolean boolean20 = typeCircularBuffer17.isFull();
        boolean boolean21 = typeCircularBuffer17.isEmpty();
        java.lang.reflect.Type type22 = typeCircularBuffer17.get();
        java.lang.Class<?> wildcardClass23 = typeCircularBuffer17.getClass();
        boolean boolean24 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass23);
        boolean boolean25 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass23);
        java.lang.reflect.Type type26 = typeCircularBuffer1.get();
        java.lang.reflect.Type type27 = typeCircularBuffer1.get();
        boolean boolean28 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type31 = typeCircularBuffer30.get();
        boolean boolean32 = typeCircularBuffer30.isFull();
        boolean boolean33 = typeCircularBuffer30.isEmpty();
        boolean boolean34 = typeCircularBuffer30.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass37 = typeCircularBuffer36.getClass();
        boolean boolean38 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass37);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean41 = typeCircularBuffer40.isFull();
        boolean boolean42 = typeCircularBuffer40.isEmpty();
        boolean boolean43 = typeCircularBuffer40.isFull();
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer40.getClass();
        boolean boolean45 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass44);
        java.lang.reflect.Type type46 = typeCircularBuffer30.get();
        java.lang.Class<?> wildcardClass47 = type46.getClass();
        boolean boolean48 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(type18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(type22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(type31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
    }

    @Test
    public void test0557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0557");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        boolean boolean10 = typeCircularBuffer1.isFull();
        boolean boolean11 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type12 = typeCircularBuffer1.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass13 = type12.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(type12);
    }

    @Test
    public void test0558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0558");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        boolean boolean5 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass8 = typeCircularBuffer7.getClass();
        boolean boolean9 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass8);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean12 = typeCircularBuffer11.isFull();
        boolean boolean13 = typeCircularBuffer11.isEmpty();
        boolean boolean14 = typeCircularBuffer11.isFull();
        java.lang.Class<?> wildcardClass15 = typeCircularBuffer11.getClass();
        boolean boolean16 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass15);
        java.lang.reflect.Type type17 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean22 = typeCircularBuffer21.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass25 = typeCircularBuffer24.getClass();
        boolean boolean26 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.reflect.Type type27 = typeCircularBuffer21.get();
        boolean boolean28 = typeCircularBuffer19.put(type27);
        boolean boolean29 = typeCircularBuffer19.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer34.getClass();
        boolean boolean36 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass35);
        java.lang.reflect.Type type37 = typeCircularBuffer31.get();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        boolean boolean40 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass39);
        boolean boolean41 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass39);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer46.getClass();
        boolean boolean48 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass47);
        java.lang.reflect.Type type49 = typeCircularBuffer43.get();
        boolean boolean50 = typeCircularBuffer19.put(type49);
        java.lang.reflect.Type type51 = typeCircularBuffer19.get();
        boolean boolean52 = typeCircularBuffer1.put(type51);
        boolean boolean53 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type54 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer56 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer58 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean59 = typeCircularBuffer58.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer61 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass62 = typeCircularBuffer61.getClass();
        boolean boolean63 = typeCircularBuffer58.put((java.lang.reflect.Type) wildcardClass62);
        java.lang.reflect.Type type64 = typeCircularBuffer58.get();
        boolean boolean65 = typeCircularBuffer56.put(type64);
        boolean boolean66 = typeCircularBuffer56.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer68 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 1);
        boolean boolean69 = typeCircularBuffer68.isEmpty();
        boolean boolean70 = typeCircularBuffer68.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer72 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type73 = typeCircularBuffer72.get();
        boolean boolean74 = typeCircularBuffer72.isFull();
        boolean boolean75 = typeCircularBuffer72.isFull();
        boolean boolean76 = typeCircularBuffer72.isEmpty();
        java.lang.reflect.Type type77 = typeCircularBuffer72.get();
        java.lang.Class<?> wildcardClass78 = typeCircularBuffer72.getClass();
        boolean boolean79 = typeCircularBuffer68.put((java.lang.reflect.Type) wildcardClass78);
        boolean boolean80 = typeCircularBuffer56.put((java.lang.reflect.Type) wildcardClass78);
        java.lang.reflect.Type type81 = typeCircularBuffer56.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer83 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type84 = typeCircularBuffer83.get();
        boolean boolean85 = typeCircularBuffer83.isFull();
        boolean boolean86 = typeCircularBuffer83.isEmpty();
        java.lang.Class<?> wildcardClass87 = typeCircularBuffer83.getClass();
        boolean boolean88 = typeCircularBuffer56.put((java.lang.reflect.Type) wildcardClass87);
        boolean boolean89 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass87);
        boolean boolean90 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass91 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(type73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNull(type77);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(type81);
        org.junit.Assert.assertNull(type84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0559");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass8 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0560");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        boolean boolean8 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type12 = typeCircularBuffer11.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        boolean boolean16 = typeCircularBuffer14.isFull();
        java.lang.reflect.Type type17 = typeCircularBuffer14.get();
        boolean boolean18 = typeCircularBuffer14.isFull();
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer14.getClass();
        boolean boolean20 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass19);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer11.getClass();
        boolean boolean22 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertNull(type12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(type17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    }

    @Test
    public void test0561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0561");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type10 = typeCircularBuffer9.get();
        boolean boolean11 = typeCircularBuffer9.isFull();
        boolean boolean12 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer14.getClass();
        boolean boolean20 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass19);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        boolean boolean26 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer22.getClass();
        boolean boolean28 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean30 = typeCircularBuffer1.isEmpty();
        boolean boolean31 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type32 = typeCircularBuffer1.get();
        boolean boolean33 = typeCircularBuffer1.isEmpty();
        boolean boolean34 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type35 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(type35);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0562");
        com.thealgorithms.datastructures.buffers.CircularBuffer<com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>> typeCircularBufferCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>>((int) (byte) 1);
    }

    @Test
    public void test0563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0563");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer5 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean6 = typeCircularBuffer5.isEmpty();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = typeCircularBuffer5.put((java.lang.reflect.Type) wildcardClass8);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer5.getClass();
        boolean boolean11 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass10);
        boolean boolean12 = typeCircularBuffer1.isEmpty();
        boolean boolean13 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer20.getClass();
        boolean boolean22 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type23 = typeCircularBuffer17.get();
        boolean boolean24 = typeCircularBuffer15.put(type23);
        boolean boolean25 = typeCircularBuffer15.isFull();
        java.lang.reflect.Type type26 = typeCircularBuffer15.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        boolean boolean32 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass31);
        boolean boolean33 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass31);
        java.lang.reflect.Type type34 = typeCircularBuffer15.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean37 = typeCircularBuffer36.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass40 = typeCircularBuffer39.getClass();
        boolean boolean41 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass40);
        boolean boolean42 = typeCircularBuffer36.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean45 = typeCircularBuffer44.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass48 = typeCircularBuffer47.getClass();
        boolean boolean49 = typeCircularBuffer44.put((java.lang.reflect.Type) wildcardClass48);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer53 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean54 = typeCircularBuffer53.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer56 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass57 = typeCircularBuffer56.getClass();
        boolean boolean58 = typeCircularBuffer53.put((java.lang.reflect.Type) wildcardClass57);
        java.lang.reflect.Type type59 = typeCircularBuffer53.get();
        boolean boolean60 = typeCircularBuffer51.put(type59);
        boolean boolean61 = typeCircularBuffer51.isFull();
        java.lang.reflect.Type type62 = typeCircularBuffer51.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer64 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean65 = typeCircularBuffer64.isEmpty();
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        boolean boolean68 = typeCircularBuffer64.put((java.lang.reflect.Type) wildcardClass67);
        boolean boolean69 = typeCircularBuffer51.put((java.lang.reflect.Type) wildcardClass67);
        boolean boolean70 = typeCircularBuffer44.put((java.lang.reflect.Type) wildcardClass67);
        boolean boolean71 = typeCircularBuffer44.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer73 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean74 = typeCircularBuffer73.isFull();
        boolean boolean75 = typeCircularBuffer73.isEmpty();
        boolean boolean76 = typeCircularBuffer73.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer78 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean79 = typeCircularBuffer78.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer81 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass82 = typeCircularBuffer81.getClass();
        boolean boolean83 = typeCircularBuffer78.put((java.lang.reflect.Type) wildcardClass82);
        java.lang.reflect.Type type84 = typeCircularBuffer78.get();
        java.lang.Object obj85 = new java.lang.Object();
        java.lang.Class<?> wildcardClass86 = obj85.getClass();
        boolean boolean87 = typeCircularBuffer78.put((java.lang.reflect.Type) wildcardClass86);
        boolean boolean88 = typeCircularBuffer73.put((java.lang.reflect.Type) wildcardClass86);
        boolean boolean89 = typeCircularBuffer73.isFull();
        java.lang.reflect.Type type90 = typeCircularBuffer73.get();
        boolean boolean91 = typeCircularBuffer44.put(type90);
        java.lang.Class<?> wildcardClass92 = type90.getClass();
        boolean boolean93 = typeCircularBuffer36.put(type90);
        java.lang.reflect.Type type94 = typeCircularBuffer36.get();
        boolean boolean95 = typeCircularBuffer15.put(type94);
        boolean boolean96 = typeCircularBuffer1.put(type94);
        boolean boolean97 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass98 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(type84);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(type90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(type94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0564");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        boolean boolean10 = typeCircularBuffer1.isFull();
        boolean boolean11 = typeCircularBuffer1.isEmpty();
        boolean boolean12 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test0565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0565");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0566");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        boolean boolean8 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        java.lang.reflect.Type type10 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean13 = typeCircularBuffer12.isEmpty();
        java.lang.reflect.Type type14 = typeCircularBuffer12.get();
        java.lang.reflect.Type type15 = typeCircularBuffer12.get();
        java.lang.reflect.Type type16 = typeCircularBuffer12.get();
        java.lang.reflect.Type type17 = typeCircularBuffer12.get();
        boolean boolean18 = typeCircularBuffer12.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) ' ');
        java.lang.reflect.Type type21 = typeCircularBuffer20.get();
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer20.getClass();
        boolean boolean23 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass22);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean28 = typeCircularBuffer27.isFull();
        boolean boolean29 = typeCircularBuffer27.isEmpty();
        java.lang.reflect.Type type30 = typeCircularBuffer27.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean35 = typeCircularBuffer34.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass38 = typeCircularBuffer37.getClass();
        boolean boolean39 = typeCircularBuffer34.put((java.lang.reflect.Type) wildcardClass38);
        java.lang.reflect.Type type40 = typeCircularBuffer34.get();
        boolean boolean41 = typeCircularBuffer32.put(type40);
        java.lang.Class<?> wildcardClass42 = typeCircularBuffer32.getClass();
        boolean boolean43 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass42);
        boolean boolean44 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass42);
        boolean boolean45 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass42);
        java.lang.Class<?> wildcardClass46 = typeCircularBuffer12.getClass();
        boolean boolean47 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass46);
        java.lang.reflect.Type type48 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass49 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(type14);
        org.junit.Assert.assertNull(type15);
        org.junit.Assert.assertNull(type16);
        org.junit.Assert.assertNull(type17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(type21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(type30);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test0567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0567");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 100);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type5 = typeCircularBuffer4.get();
        boolean boolean6 = typeCircularBuffer4.isFull();
        boolean boolean7 = typeCircularBuffer4.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        java.lang.Object obj11 = new java.lang.Object();
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        boolean boolean13 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass12);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer9.getClass();
        boolean boolean15 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass14);
        boolean boolean16 = typeCircularBuffer4.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean19 = typeCircularBuffer18.isFull();
        boolean boolean20 = typeCircularBuffer18.isEmpty();
        java.lang.reflect.Type type21 = typeCircularBuffer18.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean26 = typeCircularBuffer25.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass29 = typeCircularBuffer28.getClass();
        boolean boolean30 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass29);
        java.lang.reflect.Type type31 = typeCircularBuffer25.get();
        boolean boolean32 = typeCircularBuffer23.put(type31);
        java.lang.Class<?> wildcardClass33 = typeCircularBuffer23.getClass();
        boolean boolean34 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass33);
        boolean boolean35 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass33);
        boolean boolean36 = typeCircularBuffer4.isFull();
        java.lang.reflect.Type type37 = typeCircularBuffer4.get();
        boolean boolean38 = typeCircularBuffer1.put(type37);
        java.lang.reflect.Type type39 = typeCircularBuffer1.get();
        java.lang.reflect.Type type40 = typeCircularBuffer1.get();
        java.lang.reflect.Type type41 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(type21);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNull(type40);
        org.junit.Assert.assertNull(type41);
    }

    @Test
    public void test0568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0568");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean9 = typeCircularBuffer8.isFull();
        java.lang.reflect.Type type10 = typeCircularBuffer8.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean13 = typeCircularBuffer12.isEmpty();
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        boolean boolean16 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass15);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer12.getClass();
        boolean boolean18 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass17);
        boolean boolean19 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass17);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '#');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean26 = typeCircularBuffer25.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass29 = typeCircularBuffer28.getClass();
        boolean boolean30 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass29);
        java.lang.reflect.Type type31 = typeCircularBuffer25.get();
        boolean boolean32 = typeCircularBuffer23.put(type31);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean37 = typeCircularBuffer36.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass40 = typeCircularBuffer39.getClass();
        boolean boolean41 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass40);
        java.lang.reflect.Type type42 = typeCircularBuffer36.get();
        boolean boolean43 = typeCircularBuffer34.put(type42);
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer34.getClass();
        boolean boolean45 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean46 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean47 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass44);
        java.lang.reflect.Type type48 = typeCircularBuffer1.get();
        java.lang.reflect.Type type49 = typeCircularBuffer1.get();
        java.lang.reflect.Type type50 = typeCircularBuffer1.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass51 = type50.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNull(type49);
        org.junit.Assert.assertNull(type50);
    }

    @Test
    public void test0569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0569");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean4 = typeCircularBuffer3.isFull();
        boolean boolean5 = typeCircularBuffer3.isEmpty();
        java.lang.reflect.Type type6 = typeCircularBuffer3.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer10.get();
        boolean boolean17 = typeCircularBuffer8.put(type16);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer8.getClass();
        boolean boolean19 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass18);
        boolean boolean20 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass18);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type23 = typeCircularBuffer22.get();
        boolean boolean24 = typeCircularBuffer22.isFull();
        boolean boolean25 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean28 = typeCircularBuffer27.isEmpty();
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        boolean boolean31 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass30);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer27.getClass();
        boolean boolean33 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean37 = typeCircularBuffer36.isFull();
        boolean boolean38 = typeCircularBuffer36.isEmpty();
        java.lang.reflect.Type type39 = typeCircularBuffer36.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer46.getClass();
        boolean boolean48 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass47);
        java.lang.reflect.Type type49 = typeCircularBuffer43.get();
        boolean boolean50 = typeCircularBuffer41.put(type49);
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer41.getClass();
        boolean boolean52 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean53 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass51);
        java.lang.Class<?> wildcardClass54 = typeCircularBuffer22.getClass();
        boolean boolean55 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean56 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type57 = typeCircularBuffer1.get();
        boolean boolean58 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(type39);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test0570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0570");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass9);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean13 = typeCircularBuffer12.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass16 = typeCircularBuffer15.getClass();
        boolean boolean17 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass16);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer12.getClass();
        boolean boolean19 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass18);
        java.lang.reflect.Type type20 = typeCircularBuffer1.get();
        java.lang.reflect.Type type21 = typeCircularBuffer1.get();
        java.lang.reflect.Type type22 = typeCircularBuffer1.get();
        boolean boolean23 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNull(type21);
        org.junit.Assert.assertNull(type22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    }

    @Test
    public void test0571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0571");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean9 = typeCircularBuffer8.isFull();
        java.lang.reflect.Type type10 = typeCircularBuffer8.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean13 = typeCircularBuffer12.isEmpty();
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        boolean boolean16 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass15);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer12.getClass();
        boolean boolean18 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass17);
        boolean boolean19 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass17);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type24 = typeCircularBuffer23.get();
        boolean boolean25 = typeCircularBuffer23.isFull();
        boolean boolean26 = typeCircularBuffer23.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        boolean boolean32 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass31);
        java.lang.Class<?> wildcardClass33 = typeCircularBuffer28.getClass();
        boolean boolean34 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass33);
        boolean boolean35 = typeCircularBuffer23.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean38 = typeCircularBuffer37.isFull();
        boolean boolean39 = typeCircularBuffer37.isEmpty();
        java.lang.reflect.Type type40 = typeCircularBuffer37.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean45 = typeCircularBuffer44.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass48 = typeCircularBuffer47.getClass();
        boolean boolean49 = typeCircularBuffer44.put((java.lang.reflect.Type) wildcardClass48);
        java.lang.reflect.Type type50 = typeCircularBuffer44.get();
        boolean boolean51 = typeCircularBuffer42.put(type50);
        java.lang.Class<?> wildcardClass52 = typeCircularBuffer42.getClass();
        boolean boolean53 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass52);
        boolean boolean54 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass52);
        boolean boolean55 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass52);
        boolean boolean56 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass52);
        java.lang.reflect.Type type57 = typeCircularBuffer1.get();
        boolean boolean58 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type59 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(type40);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(type59);
    }

    @Test
    public void test0572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0572");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean13 = typeCircularBuffer12.isFull();
        boolean boolean14 = typeCircularBuffer12.isEmpty();
        boolean boolean15 = typeCircularBuffer12.isFull();
        java.lang.Class<?> wildcardClass16 = typeCircularBuffer12.getClass();
        boolean boolean17 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass16);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type20 = typeCircularBuffer19.get();
        boolean boolean21 = typeCircularBuffer19.isFull();
        boolean boolean22 = typeCircularBuffer19.isFull();
        boolean boolean23 = typeCircularBuffer19.isEmpty();
        java.lang.reflect.Type type24 = typeCircularBuffer19.get();
        boolean boolean25 = typeCircularBuffer19.isEmpty();
        java.lang.Class<?> wildcardClass26 = typeCircularBuffer19.getClass();
        boolean boolean27 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass26);
        boolean boolean28 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(type20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
    }

    @Test
    public void test0573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0573");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 0);
        java.lang.Class<?> wildcardClass4 = typeCircularBuffer3.getClass();
        boolean boolean5 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass4);
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isFull();
        boolean boolean8 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass9 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0574");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.io.Serializable> serializableCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.io.Serializable>((int) (short) 0);
    }

    @Test
    public void test0575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0575");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.constant.ConstantDesc> constantDescCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.constant.ConstantDesc>(100);
        java.lang.Class<?> wildcardClass2 = constantDescCircularBuffer1.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test0576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0576");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        boolean boolean9 = typeCircularBuffer1.isFull();
        boolean boolean10 = typeCircularBuffer1.isEmpty();
        boolean boolean11 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type22 = typeCircularBuffer21.get();
        boolean boolean23 = typeCircularBuffer21.isFull();
        boolean boolean24 = typeCircularBuffer21.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean27 = typeCircularBuffer26.isEmpty();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        boolean boolean30 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass29);
        java.lang.Class<?> wildcardClass31 = typeCircularBuffer26.getClass();
        boolean boolean32 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass31);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean35 = typeCircularBuffer34.isEmpty();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        boolean boolean38 = typeCircularBuffer34.put((java.lang.reflect.Type) wildcardClass37);
        java.lang.Class<?> wildcardClass39 = typeCircularBuffer34.getClass();
        boolean boolean40 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass39);
        boolean boolean41 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass39);
        boolean boolean42 = typeCircularBuffer13.isEmpty();
        boolean boolean43 = typeCircularBuffer13.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean48 = typeCircularBuffer47.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer50.getClass();
        boolean boolean52 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass51);
        java.lang.reflect.Type type53 = typeCircularBuffer47.get();
        boolean boolean54 = typeCircularBuffer45.put(type53);
        boolean boolean55 = typeCircularBuffer45.isEmpty();
        boolean boolean56 = typeCircularBuffer45.isFull();
        boolean boolean57 = typeCircularBuffer45.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer59 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer61 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean62 = typeCircularBuffer61.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer64 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass65 = typeCircularBuffer64.getClass();
        boolean boolean66 = typeCircularBuffer61.put((java.lang.reflect.Type) wildcardClass65);
        java.lang.reflect.Type type67 = typeCircularBuffer61.get();
        boolean boolean68 = typeCircularBuffer59.put(type67);
        boolean boolean69 = typeCircularBuffer59.isFull();
        java.lang.reflect.Type type70 = typeCircularBuffer59.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer72 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean73 = typeCircularBuffer72.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer75 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass76 = typeCircularBuffer75.getClass();
        boolean boolean77 = typeCircularBuffer72.put((java.lang.reflect.Type) wildcardClass76);
        boolean boolean78 = typeCircularBuffer72.isFull();
        java.lang.reflect.Type type79 = typeCircularBuffer72.get();
        boolean boolean80 = typeCircularBuffer59.put(type79);
        boolean boolean81 = typeCircularBuffer45.put(type79);
        boolean boolean82 = typeCircularBuffer13.put(type79);
        boolean boolean83 = typeCircularBuffer1.put(type79);
        boolean boolean84 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type85 = typeCircularBuffer1.get();
        java.lang.reflect.Type type86 = typeCircularBuffer1.get();
        java.lang.reflect.Type type87 = typeCircularBuffer1.get();
        java.lang.reflect.Type type88 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNull(type22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(type85);
        org.junit.Assert.assertNull(type86);
        org.junit.Assert.assertNull(type87);
        org.junit.Assert.assertNull(type88);
    }

    @Test
    public void test0577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0577");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type4 = typeCircularBuffer3.get();
        boolean boolean5 = typeCircularBuffer3.isFull();
        boolean boolean6 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean9 = typeCircularBuffer8.isEmpty();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer8.getClass();
        boolean boolean14 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass13);
        boolean boolean15 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean18 = typeCircularBuffer17.isFull();
        boolean boolean19 = typeCircularBuffer17.isEmpty();
        java.lang.reflect.Type type20 = typeCircularBuffer17.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean25 = typeCircularBuffer24.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer27.getClass();
        boolean boolean29 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.reflect.Type type30 = typeCircularBuffer24.get();
        boolean boolean31 = typeCircularBuffer22.put(type30);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer22.getClass();
        boolean boolean33 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean35 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass32);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean38 = typeCircularBuffer37.isFull();
        java.lang.reflect.Type type39 = typeCircularBuffer37.get();
        boolean boolean40 = typeCircularBuffer37.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean43 = typeCircularBuffer42.isEmpty();
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer42.getClass();
        boolean boolean45 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass44);
        java.lang.Class<?> wildcardClass46 = typeCircularBuffer37.getClass();
        boolean boolean47 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass46);
        boolean boolean48 = typeCircularBuffer1.isFull();
        boolean boolean49 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer53 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean54 = typeCircularBuffer53.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer56 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass57 = typeCircularBuffer56.getClass();
        boolean boolean58 = typeCircularBuffer53.put((java.lang.reflect.Type) wildcardClass57);
        java.lang.reflect.Type type59 = typeCircularBuffer53.get();
        boolean boolean60 = typeCircularBuffer51.put(type59);
        boolean boolean61 = typeCircularBuffer51.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer63 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean64 = typeCircularBuffer63.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer66 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass67 = typeCircularBuffer66.getClass();
        boolean boolean68 = typeCircularBuffer63.put((java.lang.reflect.Type) wildcardClass67);
        java.lang.reflect.Type type69 = typeCircularBuffer63.get();
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        boolean boolean72 = typeCircularBuffer63.put((java.lang.reflect.Type) wildcardClass71);
        boolean boolean73 = typeCircularBuffer51.put((java.lang.reflect.Type) wildcardClass71);
        boolean boolean74 = typeCircularBuffer51.isEmpty();
        java.lang.Object obj75 = new java.lang.Object();
        java.lang.Class<?> wildcardClass76 = obj75.getClass();
        boolean boolean77 = typeCircularBuffer51.put((java.lang.reflect.Type) wildcardClass76);
        java.lang.Class<?> wildcardClass78 = typeCircularBuffer51.getClass();
        boolean boolean79 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass78);
        java.lang.reflect.Type type80 = typeCircularBuffer1.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass81 = type80.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(type20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(type39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNull(type80);
    }

    @Test
    public void test0578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0578");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass6 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0579");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        boolean boolean6 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0580");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        boolean boolean8 = typeCircularBuffer7.isEmpty();
        java.lang.Class<?> wildcardClass9 = typeCircularBuffer7.getClass();
        boolean boolean10 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass9);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean13 = typeCircularBuffer12.isFull();
        boolean boolean14 = typeCircularBuffer12.isEmpty();
        boolean boolean15 = typeCircularBuffer12.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer20.getClass();
        boolean boolean22 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type23 = typeCircularBuffer17.get();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        boolean boolean26 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass25);
        boolean boolean27 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass25);
        boolean boolean28 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.reflect.Type type29 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean34 = typeCircularBuffer33.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass37 = typeCircularBuffer36.getClass();
        boolean boolean38 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass37);
        java.lang.reflect.Type type39 = typeCircularBuffer33.get();
        boolean boolean40 = typeCircularBuffer31.put(type39);
        boolean boolean41 = typeCircularBuffer31.isFull();
        java.lang.reflect.Type type42 = typeCircularBuffer31.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean45 = typeCircularBuffer44.isEmpty();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        boolean boolean48 = typeCircularBuffer44.put((java.lang.reflect.Type) wildcardClass47);
        boolean boolean49 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass47);
        boolean boolean50 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass47);
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test0581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0581");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean7 = typeCircularBuffer6.isFull();
        boolean boolean8 = typeCircularBuffer6.isEmpty();
        boolean boolean9 = typeCircularBuffer6.isFull();
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer6.getClass();
        boolean boolean11 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass10);
        boolean boolean12 = typeCircularBuffer1.isFull();
        boolean boolean13 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test0582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0582");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.AnnotatedElement> annotatedElementCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.AnnotatedElement>((int) (byte) 0);
    }

    @Test
    public void test0583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0583");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        boolean boolean9 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type10 = typeCircularBuffer1.get();
        boolean boolean11 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test0584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0584");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.reflect.Type type11 = typeCircularBuffer1.get();
        boolean boolean12 = typeCircularBuffer1.isFull();
        boolean boolean13 = typeCircularBuffer1.isFull();
        boolean boolean14 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test0585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0585");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        java.lang.reflect.Type type11 = typeCircularBuffer1.get();
        java.lang.reflect.Type type12 = null;
        boolean boolean13 = typeCircularBuffer1.put(type12);
        boolean boolean14 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type15 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.invoke.TypeDescriptor> typeDescriptorCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.invoke.TypeDescriptor>(100);
        java.lang.Class<?> wildcardClass18 = typeDescriptorCircularBuffer17.getClass();
        boolean boolean19 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass18);
        boolean boolean20 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(type15);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test0586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0586");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        boolean boolean7 = typeCircularBuffer1.isFull();
        boolean boolean8 = typeCircularBuffer1.isFull();
        boolean boolean9 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type10 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0587");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type12 = typeCircularBuffer1.get();
        boolean boolean13 = typeCircularBuffer1.isEmpty();
        boolean boolean14 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type15 = typeCircularBuffer1.get();
        boolean boolean16 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean19 = typeCircularBuffer18.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer21.getClass();
        boolean boolean23 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass22);
        boolean boolean24 = typeCircularBuffer18.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean27 = typeCircularBuffer26.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass30 = typeCircularBuffer29.getClass();
        boolean boolean31 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass30);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean36 = typeCircularBuffer35.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass39 = typeCircularBuffer38.getClass();
        boolean boolean40 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass39);
        java.lang.reflect.Type type41 = typeCircularBuffer35.get();
        boolean boolean42 = typeCircularBuffer33.put(type41);
        boolean boolean43 = typeCircularBuffer33.isFull();
        java.lang.reflect.Type type44 = typeCircularBuffer33.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean47 = typeCircularBuffer46.isEmpty();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        boolean boolean50 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass49);
        boolean boolean51 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass49);
        boolean boolean52 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass49);
        boolean boolean53 = typeCircularBuffer26.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer55 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean56 = typeCircularBuffer55.isFull();
        boolean boolean57 = typeCircularBuffer55.isEmpty();
        boolean boolean58 = typeCircularBuffer55.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer60 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean61 = typeCircularBuffer60.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer63 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass64 = typeCircularBuffer63.getClass();
        boolean boolean65 = typeCircularBuffer60.put((java.lang.reflect.Type) wildcardClass64);
        java.lang.reflect.Type type66 = typeCircularBuffer60.get();
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        boolean boolean69 = typeCircularBuffer60.put((java.lang.reflect.Type) wildcardClass68);
        boolean boolean70 = typeCircularBuffer55.put((java.lang.reflect.Type) wildcardClass68);
        boolean boolean71 = typeCircularBuffer55.isFull();
        java.lang.reflect.Type type72 = typeCircularBuffer55.get();
        boolean boolean73 = typeCircularBuffer26.put(type72);
        java.lang.Class<?> wildcardClass74 = type72.getClass();
        boolean boolean75 = typeCircularBuffer18.put(type72);
        java.lang.reflect.Type type76 = typeCircularBuffer18.get();
        boolean boolean77 = typeCircularBuffer1.put(type76);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(type15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
    }

    @Test
    public void test0588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0588");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 0);
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass3 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0589");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean9 = typeCircularBuffer8.isFull();
        java.lang.reflect.Type type10 = typeCircularBuffer8.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean13 = typeCircularBuffer12.isEmpty();
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        boolean boolean16 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass15);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer12.getClass();
        boolean boolean18 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass17);
        boolean boolean19 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass17);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '#');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean26 = typeCircularBuffer25.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass29 = typeCircularBuffer28.getClass();
        boolean boolean30 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass29);
        java.lang.reflect.Type type31 = typeCircularBuffer25.get();
        boolean boolean32 = typeCircularBuffer23.put(type31);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean37 = typeCircularBuffer36.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass40 = typeCircularBuffer39.getClass();
        boolean boolean41 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass40);
        java.lang.reflect.Type type42 = typeCircularBuffer36.get();
        boolean boolean43 = typeCircularBuffer34.put(type42);
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer34.getClass();
        boolean boolean45 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean46 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean47 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass44);
        java.lang.reflect.Type type48 = typeCircularBuffer1.get();
        java.lang.reflect.Type type49 = typeCircularBuffer1.get();
        boolean boolean50 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNull(type49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test0590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0590");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type12 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer17.getClass();
        boolean boolean19 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass18);
        boolean boolean20 = typeCircularBuffer14.isFull();
        java.lang.reflect.Type type21 = typeCircularBuffer14.get();
        boolean boolean22 = typeCircularBuffer1.put(type21);
        java.lang.reflect.Type type23 = typeCircularBuffer1.get();
        boolean boolean24 = typeCircularBuffer1.isFull();
        boolean boolean25 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type26 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(type26);
    }

    @Test
    public void test0591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0591");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer6.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.reflect.Type type13 = typeCircularBuffer1.get();
        boolean boolean14 = typeCircularBuffer1.isFull();
        boolean boolean15 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type16 = typeCircularBuffer1.get();
        boolean boolean17 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test0592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0592");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        boolean boolean9 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer13.getClass();
        boolean boolean21 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean22 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.Class<?> wildcardClass23 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0593");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        java.lang.reflect.Type type11 = typeCircularBuffer1.get();
        boolean boolean12 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer17.getClass();
        boolean boolean19 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass18);
        java.lang.reflect.Type type20 = typeCircularBuffer14.get();
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        boolean boolean23 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass22);
        java.lang.reflect.Type type24 = typeCircularBuffer14.get();
        boolean boolean25 = typeCircularBuffer1.put(type24);
        boolean boolean26 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type27 = typeCircularBuffer1.get();
        boolean boolean28 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean31 = typeCircularBuffer30.isFull();
        java.lang.reflect.Type type32 = typeCircularBuffer30.get();
        boolean boolean33 = typeCircularBuffer30.isEmpty();
        java.lang.reflect.Type type34 = typeCircularBuffer30.get();
        java.lang.reflect.Type type35 = typeCircularBuffer30.get();
        boolean boolean36 = typeCircularBuffer30.isEmpty();
        java.lang.Class<?> wildcardClass37 = typeCircularBuffer30.getClass();
        boolean boolean38 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass37);
        boolean boolean39 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(type32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(type34);
        org.junit.Assert.assertNull(type35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test0594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0594");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        boolean boolean9 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer13.getClass();
        boolean boolean21 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean22 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean23 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type24 = typeCircularBuffer1.get();
        boolean boolean25 = typeCircularBuffer1.isFull();
        boolean boolean26 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    }

    @Test
    public void test0595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0595");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type12 = typeCircularBuffer1.get();
        boolean boolean13 = typeCircularBuffer1.isFull();
        boolean boolean14 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type15 = typeCircularBuffer1.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass16 = type15.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(type15);
    }

    @Test
    public void test0596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0596");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer10.get();
        boolean boolean17 = typeCircularBuffer8.put(type16);
        boolean boolean18 = typeCircularBuffer8.isFull();
        java.lang.reflect.Type type19 = typeCircularBuffer8.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean22 = typeCircularBuffer21.isEmpty();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean26 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean27 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass24);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean30 = typeCircularBuffer29.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass33 = typeCircularBuffer32.getClass();
        boolean boolean34 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass33);
        java.lang.reflect.Type type35 = typeCircularBuffer29.get();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        boolean boolean38 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass37);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean41 = typeCircularBuffer40.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer43.getClass();
        boolean boolean45 = typeCircularBuffer40.put((java.lang.reflect.Type) wildcardClass44);
        java.lang.Class<?> wildcardClass46 = typeCircularBuffer40.getClass();
        boolean boolean47 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass46);
        java.lang.reflect.Type type48 = typeCircularBuffer29.get();
        boolean boolean49 = typeCircularBuffer1.put(type48);
        boolean boolean50 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test0597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0597");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        boolean boolean15 = typeCircularBuffer13.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type18 = typeCircularBuffer17.get();
        boolean boolean19 = typeCircularBuffer17.isFull();
        boolean boolean20 = typeCircularBuffer17.isFull();
        boolean boolean21 = typeCircularBuffer17.isEmpty();
        java.lang.reflect.Type type22 = typeCircularBuffer17.get();
        java.lang.Class<?> wildcardClass23 = typeCircularBuffer17.getClass();
        boolean boolean24 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass23);
        boolean boolean25 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass23);
        java.lang.reflect.Type type26 = typeCircularBuffer1.get();
        java.lang.reflect.Type type27 = typeCircularBuffer1.get();
        boolean boolean28 = typeCircularBuffer1.isFull();
        boolean boolean29 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass30 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(type18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(type22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test0598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0598");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        java.lang.reflect.Type type15 = typeCircularBuffer9.get();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer9.get();
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer9.getClass();
        boolean boolean21 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean22 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type23 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(type23);
    }

    @Test
    public void test0599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0599");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean12 = typeCircularBuffer11.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass15 = typeCircularBuffer14.getClass();
        boolean boolean16 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass15);
        java.lang.reflect.Type type17 = typeCircularBuffer11.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type20 = typeCircularBuffer19.get();
        boolean boolean21 = typeCircularBuffer19.isFull();
        boolean boolean22 = typeCircularBuffer19.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean25 = typeCircularBuffer24.isEmpty();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        boolean boolean28 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass27);
        java.lang.Class<?> wildcardClass29 = typeCircularBuffer24.getClass();
        boolean boolean30 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass29);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean33 = typeCircularBuffer32.isEmpty();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        boolean boolean36 = typeCircularBuffer32.put((java.lang.reflect.Type) wildcardClass35);
        java.lang.Class<?> wildcardClass37 = typeCircularBuffer32.getClass();
        boolean boolean38 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass37);
        boolean boolean39 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass37);
        java.lang.reflect.Type type40 = typeCircularBuffer11.get();
        boolean boolean41 = typeCircularBuffer1.put(type40);
        java.lang.Class<?> wildcardClass42 = type40.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNull(type20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test0600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0600");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type10 = typeCircularBuffer9.get();
        boolean boolean11 = typeCircularBuffer9.isFull();
        boolean boolean12 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer14.getClass();
        boolean boolean20 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass19);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        boolean boolean26 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer22.getClass();
        boolean boolean28 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean30 = typeCircularBuffer1.isEmpty();
        boolean boolean31 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean36 = typeCircularBuffer35.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass39 = typeCircularBuffer38.getClass();
        boolean boolean40 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass39);
        java.lang.reflect.Type type41 = typeCircularBuffer35.get();
        boolean boolean42 = typeCircularBuffer33.put(type41);
        boolean boolean43 = typeCircularBuffer33.isEmpty();
        boolean boolean44 = typeCircularBuffer33.isFull();
        boolean boolean45 = typeCircularBuffer33.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer49 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean50 = typeCircularBuffer49.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer52 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass53 = typeCircularBuffer52.getClass();
        boolean boolean54 = typeCircularBuffer49.put((java.lang.reflect.Type) wildcardClass53);
        java.lang.reflect.Type type55 = typeCircularBuffer49.get();
        boolean boolean56 = typeCircularBuffer47.put(type55);
        boolean boolean57 = typeCircularBuffer47.isFull();
        java.lang.reflect.Type type58 = typeCircularBuffer47.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer60 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean61 = typeCircularBuffer60.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer63 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass64 = typeCircularBuffer63.getClass();
        boolean boolean65 = typeCircularBuffer60.put((java.lang.reflect.Type) wildcardClass64);
        boolean boolean66 = typeCircularBuffer60.isFull();
        java.lang.reflect.Type type67 = typeCircularBuffer60.get();
        boolean boolean68 = typeCircularBuffer47.put(type67);
        boolean boolean69 = typeCircularBuffer33.put(type67);
        boolean boolean70 = typeCircularBuffer1.put(type67);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer72 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type73 = typeCircularBuffer72.get();
        boolean boolean74 = typeCircularBuffer72.isFull();
        boolean boolean75 = typeCircularBuffer72.isFull();
        boolean boolean76 = typeCircularBuffer72.isEmpty();
        java.lang.reflect.Type type77 = typeCircularBuffer72.get();
        boolean boolean78 = typeCircularBuffer72.isEmpty();
        java.lang.reflect.Type type79 = typeCircularBuffer72.get();
        java.lang.Class<?> wildcardClass80 = typeCircularBuffer72.getClass();
        boolean boolean81 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass80);
        java.lang.reflect.Type type82 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(type73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNull(type77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNull(type79);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(type82);
    }

    @Test
    public void test0601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0601");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isEmpty();
        boolean boolean12 = typeCircularBuffer1.isFull();
        boolean boolean13 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer20.getClass();
        boolean boolean22 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type23 = typeCircularBuffer17.get();
        boolean boolean24 = typeCircularBuffer15.put(type23);
        boolean boolean25 = typeCircularBuffer15.isFull();
        java.lang.reflect.Type type26 = typeCircularBuffer15.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer31.getClass();
        boolean boolean33 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer28.isFull();
        java.lang.reflect.Type type35 = typeCircularBuffer28.get();
        boolean boolean36 = typeCircularBuffer15.put(type35);
        boolean boolean37 = typeCircularBuffer1.put(type35);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean40 = typeCircularBuffer39.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass43 = typeCircularBuffer42.getClass();
        boolean boolean44 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass43);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean49 = typeCircularBuffer48.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass52 = typeCircularBuffer51.getClass();
        boolean boolean53 = typeCircularBuffer48.put((java.lang.reflect.Type) wildcardClass52);
        java.lang.reflect.Type type54 = typeCircularBuffer48.get();
        boolean boolean55 = typeCircularBuffer46.put(type54);
        boolean boolean56 = typeCircularBuffer46.isFull();
        java.lang.reflect.Type type57 = typeCircularBuffer46.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer59 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean60 = typeCircularBuffer59.isEmpty();
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        boolean boolean63 = typeCircularBuffer59.put((java.lang.reflect.Type) wildcardClass62);
        boolean boolean64 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass62);
        boolean boolean65 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass62);
        boolean boolean66 = typeCircularBuffer39.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer68 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean69 = typeCircularBuffer68.isFull();
        boolean boolean70 = typeCircularBuffer68.isEmpty();
        boolean boolean71 = typeCircularBuffer68.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer73 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean74 = typeCircularBuffer73.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer76 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass77 = typeCircularBuffer76.getClass();
        boolean boolean78 = typeCircularBuffer73.put((java.lang.reflect.Type) wildcardClass77);
        java.lang.reflect.Type type79 = typeCircularBuffer73.get();
        java.lang.Object obj80 = new java.lang.Object();
        java.lang.Class<?> wildcardClass81 = obj80.getClass();
        boolean boolean82 = typeCircularBuffer73.put((java.lang.reflect.Type) wildcardClass81);
        boolean boolean83 = typeCircularBuffer68.put((java.lang.reflect.Type) wildcardClass81);
        boolean boolean84 = typeCircularBuffer68.isFull();
        java.lang.reflect.Type type85 = typeCircularBuffer68.get();
        boolean boolean86 = typeCircularBuffer39.put(type85);
        boolean boolean87 = typeCircularBuffer1.put(type85);
        boolean boolean88 = typeCircularBuffer1.isFull();
        boolean boolean89 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass90 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(type85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0602");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        boolean boolean8 = typeCircularBuffer1.isFull();
        boolean boolean9 = typeCircularBuffer1.isFull();
        boolean boolean10 = typeCircularBuffer1.isEmpty();
        boolean boolean11 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0603");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.Comparable<java.lang.String>> strComparableCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.Comparable<java.lang.String>>((int) (short) 10);
    }

    @Test
    public void test0604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0604");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type11 = typeCircularBuffer10.get();
        boolean boolean12 = typeCircularBuffer10.isFull();
        boolean boolean13 = typeCircularBuffer10.isFull();
        boolean boolean14 = typeCircularBuffer10.isFull();
        java.lang.reflect.Type type15 = typeCircularBuffer10.get();
        boolean boolean16 = typeCircularBuffer10.isEmpty();
        java.lang.reflect.Type type17 = typeCircularBuffer10.get();
        java.lang.reflect.Type type18 = typeCircularBuffer10.get();
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer10.getClass();
        boolean boolean20 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass19);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertNull(type11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(type15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(type17);
        org.junit.Assert.assertNull(type18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0605");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.io.Serializable> serializableCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.io.Serializable>((int) (byte) 100);
        java.lang.Class<?> wildcardClass2 = serializableCircularBuffer1.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test0606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0606");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = null;
        boolean boolean8 = typeCircularBuffer1.put(type7);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean13 = typeCircularBuffer12.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass16 = typeCircularBuffer15.getClass();
        boolean boolean17 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass16);
        java.lang.reflect.Type type18 = typeCircularBuffer12.get();
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer12.getClass();
        boolean boolean20 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass19);
        boolean boolean21 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass19);
        java.lang.reflect.Type type22 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass23 = type22.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0607");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        boolean boolean8 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass7);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean13 = typeCircularBuffer12.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass16 = typeCircularBuffer15.getClass();
        boolean boolean17 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass16);
        java.lang.reflect.Type type18 = typeCircularBuffer12.get();
        boolean boolean19 = typeCircularBuffer10.put(type18);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer10.getClass();
        boolean boolean21 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass20);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean24 = typeCircularBuffer23.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer26.getClass();
        boolean boolean28 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass27);
        java.lang.reflect.Type type29 = typeCircularBuffer23.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type32 = typeCircularBuffer31.get();
        boolean boolean33 = typeCircularBuffer31.isFull();
        boolean boolean34 = typeCircularBuffer31.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean37 = typeCircularBuffer36.isEmpty();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        boolean boolean40 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass39);
        java.lang.Class<?> wildcardClass41 = typeCircularBuffer36.getClass();
        boolean boolean42 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass41);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean45 = typeCircularBuffer44.isEmpty();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        boolean boolean48 = typeCircularBuffer44.put((java.lang.reflect.Type) wildcardClass47);
        java.lang.Class<?> wildcardClass49 = typeCircularBuffer44.getClass();
        boolean boolean50 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass49);
        boolean boolean51 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass49);
        java.lang.reflect.Type type52 = typeCircularBuffer23.get();
        java.lang.reflect.Type type53 = typeCircularBuffer23.get();
        java.lang.Class<?> wildcardClass54 = typeCircularBuffer23.getClass();
        boolean boolean55 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean56 = typeCircularBuffer1.isEmpty();
        boolean boolean57 = typeCircularBuffer1.isFull();
        boolean boolean58 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass59 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNull(type32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNull(type53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test0608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0608");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass10);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer19.getClass();
        boolean boolean21 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type22 = typeCircularBuffer16.get();
        java.lang.Class<?> wildcardClass23 = typeCircularBuffer16.getClass();
        boolean boolean24 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass23);
        boolean boolean25 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass23);
        boolean boolean26 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type27 = typeCircularBuffer1.get();
        boolean boolean28 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass29 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test0609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0609");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type12 = typeCircularBuffer1.get();
        boolean boolean13 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type14 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        boolean boolean18 = typeCircularBuffer16.isFull();
        java.lang.reflect.Type type19 = typeCircularBuffer16.get();
        boolean boolean20 = typeCircularBuffer16.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean25 = typeCircularBuffer24.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer27.getClass();
        boolean boolean29 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.reflect.Type type30 = typeCircularBuffer24.get();
        boolean boolean31 = typeCircularBuffer22.put(type30);
        boolean boolean32 = typeCircularBuffer22.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean35 = typeCircularBuffer34.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass38 = typeCircularBuffer37.getClass();
        boolean boolean39 = typeCircularBuffer34.put((java.lang.reflect.Type) wildcardClass38);
        java.lang.reflect.Type type40 = typeCircularBuffer34.get();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        boolean boolean43 = typeCircularBuffer34.put((java.lang.reflect.Type) wildcardClass42);
        boolean boolean44 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass42);
        boolean boolean45 = typeCircularBuffer22.isEmpty();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        boolean boolean48 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass47);
        boolean boolean49 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass47);
        boolean boolean50 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass47);
        boolean boolean51 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(type14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(type19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
    }

    @Test
    public void test0610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0610");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        boolean boolean5 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass4);
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0611");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer10.get();
        boolean boolean17 = typeCircularBuffer8.put(type16);
        boolean boolean18 = typeCircularBuffer8.isFull();
        java.lang.reflect.Type type19 = typeCircularBuffer8.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean22 = typeCircularBuffer21.isEmpty();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean26 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean27 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean28 = typeCircularBuffer1.isFull();
        boolean boolean29 = typeCircularBuffer1.isFull();
        boolean boolean30 = typeCircularBuffer1.isEmpty();
        boolean boolean31 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type32 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean37 = typeCircularBuffer36.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass40 = typeCircularBuffer39.getClass();
        boolean boolean41 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass40);
        java.lang.reflect.Type type42 = typeCircularBuffer36.get();
        boolean boolean43 = typeCircularBuffer34.put(type42);
        boolean boolean44 = typeCircularBuffer34.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean47 = typeCircularBuffer46.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer49 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass50 = typeCircularBuffer49.getClass();
        boolean boolean51 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass50);
        java.lang.reflect.Type type52 = typeCircularBuffer46.get();
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        boolean boolean55 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean56 = typeCircularBuffer34.put((java.lang.reflect.Type) wildcardClass54);
        java.lang.reflect.Type type57 = typeCircularBuffer34.get();
        boolean boolean58 = typeCircularBuffer1.put(type57);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer60 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer62 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean63 = typeCircularBuffer62.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer65 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass66 = typeCircularBuffer65.getClass();
        boolean boolean67 = typeCircularBuffer62.put((java.lang.reflect.Type) wildcardClass66);
        java.lang.reflect.Type type68 = typeCircularBuffer62.get();
        boolean boolean69 = typeCircularBuffer60.put(type68);
        boolean boolean70 = typeCircularBuffer60.isFull();
        java.lang.reflect.Type type71 = typeCircularBuffer60.get();
        boolean boolean72 = typeCircularBuffer60.isEmpty();
        boolean boolean73 = typeCircularBuffer60.isEmpty();
        java.lang.Class<?> wildcardClass74 = typeCircularBuffer60.getClass();
        boolean boolean75 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass74);
        boolean boolean76 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test0612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0612");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        boolean boolean8 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test0613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0613");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        boolean boolean7 = typeCircularBuffer1.isFull();
        boolean boolean8 = typeCircularBuffer1.isFull();
        boolean boolean9 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean12 = typeCircularBuffer11.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass15 = typeCircularBuffer14.getClass();
        boolean boolean16 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass15);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean21 = typeCircularBuffer20.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer23.getClass();
        boolean boolean25 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass24);
        java.lang.reflect.Type type26 = typeCircularBuffer20.get();
        boolean boolean27 = typeCircularBuffer18.put(type26);
        boolean boolean28 = typeCircularBuffer18.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean31 = typeCircularBuffer30.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass34 = typeCircularBuffer33.getClass();
        boolean boolean35 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass34);
        java.lang.reflect.Type type36 = typeCircularBuffer30.get();
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        boolean boolean39 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass38);
        boolean boolean40 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass38);
        boolean boolean41 = typeCircularBuffer18.isEmpty();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        boolean boolean44 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass43);
        boolean boolean45 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass43);
        boolean boolean46 = typeCircularBuffer11.isFull();
        boolean boolean47 = typeCircularBuffer11.isEmpty();
        boolean boolean48 = typeCircularBuffer11.isFull();
        java.lang.Class<?> wildcardClass49 = typeCircularBuffer11.getClass();
        boolean boolean50 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass49);
        boolean boolean51 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
    }

    @Test
    public void test0614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0614");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        boolean boolean8 = typeCircularBuffer7.isEmpty();
        java.lang.Class<?> wildcardClass9 = typeCircularBuffer7.getClass();
        boolean boolean10 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass9);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean13 = typeCircularBuffer12.isFull();
        boolean boolean14 = typeCircularBuffer12.isEmpty();
        boolean boolean15 = typeCircularBuffer12.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer20.getClass();
        boolean boolean22 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type23 = typeCircularBuffer17.get();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        boolean boolean26 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass25);
        boolean boolean27 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass25);
        boolean boolean28 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass25);
        boolean boolean29 = typeCircularBuffer1.isEmpty();
        boolean boolean30 = typeCircularBuffer1.isEmpty();
        boolean boolean31 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test0615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0615");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean8 = typeCircularBuffer7.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer10.getClass();
        boolean boolean12 = typeCircularBuffer7.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.reflect.Type type13 = typeCircularBuffer7.get();
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        boolean boolean16 = typeCircularBuffer7.put((java.lang.reflect.Type) wildcardClass15);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean19 = typeCircularBuffer18.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer21.getClass();
        boolean boolean23 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass22);
        java.lang.reflect.Type type24 = typeCircularBuffer18.get();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        boolean boolean27 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass26);
        java.lang.reflect.Type type28 = typeCircularBuffer18.get();
        boolean boolean29 = typeCircularBuffer7.put(type28);
        java.lang.Class<?> wildcardClass30 = typeCircularBuffer7.getClass();
        boolean boolean31 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass30);
        java.lang.reflect.Type type32 = typeCircularBuffer1.get();
        boolean boolean33 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type34 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(type34);
    }

    @Test
    public void test0616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0616");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 0);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass4 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0617");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) ' ');
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer5 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type6 = typeCircularBuffer5.get();
        boolean boolean7 = typeCircularBuffer5.isFull();
        boolean boolean8 = typeCircularBuffer5.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        boolean boolean14 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass13);
        java.lang.Class<?> wildcardClass15 = typeCircularBuffer10.getClass();
        boolean boolean16 = typeCircularBuffer5.put((java.lang.reflect.Type) wildcardClass15);
        java.lang.reflect.Type type17 = typeCircularBuffer5.get();
        boolean boolean18 = typeCircularBuffer5.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean21 = typeCircularBuffer20.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer23.getClass();
        boolean boolean25 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean26 = typeCircularBuffer20.isEmpty();
        java.lang.reflect.Type type27 = typeCircularBuffer20.get();
        boolean boolean28 = typeCircularBuffer5.put(type27);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type31 = typeCircularBuffer30.get();
        boolean boolean32 = typeCircularBuffer30.isFull();
        boolean boolean33 = typeCircularBuffer30.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean36 = typeCircularBuffer35.isEmpty();
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        boolean boolean39 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass38);
        java.lang.Class<?> wildcardClass40 = typeCircularBuffer35.getClass();
        boolean boolean41 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass40);
        java.lang.reflect.Type type42 = typeCircularBuffer30.get();
        boolean boolean43 = typeCircularBuffer30.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type46 = typeCircularBuffer45.get();
        boolean boolean47 = typeCircularBuffer45.isFull();
        java.lang.Class<?> wildcardClass48 = typeCircularBuffer45.getClass();
        boolean boolean49 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass48);
        boolean boolean50 = typeCircularBuffer5.put((java.lang.reflect.Type) wildcardClass48);
        boolean boolean51 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass48);
        boolean boolean52 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass53 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(type31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(type46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test0618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0618");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        java.lang.reflect.Type type12 = typeCircularBuffer6.get();
        boolean boolean13 = typeCircularBuffer4.put(type12);
        boolean boolean14 = typeCircularBuffer4.isFull();
        java.lang.reflect.Type type15 = typeCircularBuffer4.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        boolean boolean21 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean22 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type24 = typeCircularBuffer1.get();
        boolean boolean25 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type26 = typeCircularBuffer1.get();
        boolean boolean27 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type28 = typeCircularBuffer1.get();
        boolean boolean29 = typeCircularBuffer1.isEmpty();
        boolean boolean30 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type31 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(type26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(type28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(type31);
    }

    @Test
    public void test0619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0619");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass10);
        java.lang.reflect.Type type13 = typeCircularBuffer1.get();
        java.lang.reflect.Type type14 = typeCircularBuffer1.get();
        boolean boolean15 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNull(type14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test0620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0620");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer10.get();
        boolean boolean17 = typeCircularBuffer8.put(type16);
        boolean boolean18 = typeCircularBuffer8.isFull();
        java.lang.reflect.Type type19 = typeCircularBuffer8.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean22 = typeCircularBuffer21.isEmpty();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean26 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean27 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean28 = typeCircularBuffer1.isFull();
        boolean boolean29 = typeCircularBuffer1.isFull();
        boolean boolean30 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean35 = typeCircularBuffer34.isFull();
        boolean boolean36 = typeCircularBuffer34.isEmpty();
        java.lang.reflect.Type type37 = typeCircularBuffer34.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean42 = typeCircularBuffer41.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass45 = typeCircularBuffer44.getClass();
        boolean boolean46 = typeCircularBuffer41.put((java.lang.reflect.Type) wildcardClass45);
        java.lang.reflect.Type type47 = typeCircularBuffer41.get();
        boolean boolean48 = typeCircularBuffer39.put(type47);
        java.lang.Class<?> wildcardClass49 = typeCircularBuffer39.getClass();
        boolean boolean50 = typeCircularBuffer34.put((java.lang.reflect.Type) wildcardClass49);
        boolean boolean51 = typeCircularBuffer32.put((java.lang.reflect.Type) wildcardClass49);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer53 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type54 = typeCircularBuffer53.get();
        boolean boolean55 = typeCircularBuffer53.isFull();
        boolean boolean56 = typeCircularBuffer53.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer58 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean59 = typeCircularBuffer58.isEmpty();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        boolean boolean62 = typeCircularBuffer58.put((java.lang.reflect.Type) wildcardClass61);
        java.lang.Class<?> wildcardClass63 = typeCircularBuffer58.getClass();
        boolean boolean64 = typeCircularBuffer53.put((java.lang.reflect.Type) wildcardClass63);
        boolean boolean65 = typeCircularBuffer53.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer67 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean68 = typeCircularBuffer67.isFull();
        boolean boolean69 = typeCircularBuffer67.isEmpty();
        java.lang.reflect.Type type70 = typeCircularBuffer67.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer72 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer74 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean75 = typeCircularBuffer74.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer77 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass78 = typeCircularBuffer77.getClass();
        boolean boolean79 = typeCircularBuffer74.put((java.lang.reflect.Type) wildcardClass78);
        java.lang.reflect.Type type80 = typeCircularBuffer74.get();
        boolean boolean81 = typeCircularBuffer72.put(type80);
        java.lang.Class<?> wildcardClass82 = typeCircularBuffer72.getClass();
        boolean boolean83 = typeCircularBuffer67.put((java.lang.reflect.Type) wildcardClass82);
        boolean boolean84 = typeCircularBuffer53.put((java.lang.reflect.Type) wildcardClass82);
        java.lang.Class<?> wildcardClass85 = typeCircularBuffer53.getClass();
        boolean boolean86 = typeCircularBuffer32.put((java.lang.reflect.Type) wildcardClass85);
        boolean boolean87 = typeCircularBuffer32.isEmpty();
        boolean boolean88 = typeCircularBuffer32.isFull();
        boolean boolean89 = typeCircularBuffer32.isFull();
        java.lang.reflect.Type type90 = typeCircularBuffer32.get();
        boolean boolean91 = typeCircularBuffer1.put(type90);
        java.lang.Class<?> wildcardClass92 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(type37);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNull(type54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNull(type70);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(type90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test0621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0621");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean9 = typeCircularBuffer8.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass12 = typeCircularBuffer11.getClass();
        boolean boolean13 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass12);
        java.lang.reflect.Type type14 = typeCircularBuffer8.get();
        boolean boolean15 = typeCircularBuffer6.put(type14);
        java.lang.Class<?> wildcardClass16 = typeCircularBuffer6.getClass();
        boolean boolean17 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass16);
        boolean boolean18 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test0622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0622");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass5 = type4.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(type4);
    }

    @Test
    public void test0623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0623");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isFull();
        boolean boolean8 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        boolean boolean10 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean13 = typeCircularBuffer12.isFull();
        java.lang.reflect.Type type14 = typeCircularBuffer12.get();
        boolean boolean15 = typeCircularBuffer12.isFull();
        java.lang.reflect.Type type16 = typeCircularBuffer12.get();
        boolean boolean17 = typeCircularBuffer12.isFull();
        boolean boolean18 = typeCircularBuffer12.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean21 = typeCircularBuffer20.isFull();
        boolean boolean22 = typeCircularBuffer20.isEmpty();
        java.lang.reflect.Type type23 = typeCircularBuffer20.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean28 = typeCircularBuffer27.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass31 = typeCircularBuffer30.getClass();
        boolean boolean32 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass31);
        java.lang.reflect.Type type33 = typeCircularBuffer27.get();
        boolean boolean34 = typeCircularBuffer25.put(type33);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer25.getClass();
        boolean boolean36 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass35);
        boolean boolean37 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass35);
        boolean boolean38 = typeCircularBuffer12.isEmpty();
        boolean boolean39 = typeCircularBuffer12.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer46.getClass();
        boolean boolean48 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass47);
        java.lang.reflect.Type type49 = typeCircularBuffer43.get();
        boolean boolean50 = typeCircularBuffer41.put(type49);
        java.lang.reflect.Type type51 = typeCircularBuffer41.get();
        java.lang.reflect.Type type52 = null;
        boolean boolean53 = typeCircularBuffer41.put(type52);
        boolean boolean54 = typeCircularBuffer41.isEmpty();
        java.lang.Class<?> wildcardClass55 = typeCircularBuffer41.getClass();
        boolean boolean56 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass55);
        java.lang.Class<?> wildcardClass57 = typeCircularBuffer12.getClass();
        boolean boolean58 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass57);
        java.lang.reflect.Type type59 = typeCircularBuffer1.get();
        java.lang.reflect.Type type60 = typeCircularBuffer1.get();
        boolean boolean61 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(type14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(type23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNull(type60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
    }

    @Test
    public void test0624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0624");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean7 = typeCircularBuffer6.isFull();
        boolean boolean8 = typeCircularBuffer6.isEmpty();
        java.lang.reflect.Type type9 = typeCircularBuffer6.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        boolean boolean20 = typeCircularBuffer11.put(type19);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer11.getClass();
        boolean boolean22 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass21);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(10);
        java.lang.Class<?> wildcardClass25 = typeCircularBuffer24.getClass();
        boolean boolean26 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass25);
        boolean boolean27 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass25);
        boolean boolean28 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean31 = typeCircularBuffer30.isEmpty();
        java.lang.reflect.Type type32 = typeCircularBuffer30.get();
        java.lang.reflect.Type type33 = typeCircularBuffer30.get();
        java.lang.reflect.Type type34 = typeCircularBuffer30.get();
        boolean boolean35 = typeCircularBuffer30.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean38 = typeCircularBuffer37.isFull();
        java.lang.reflect.Type type39 = typeCircularBuffer37.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean42 = typeCircularBuffer41.isEmpty();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        boolean boolean45 = typeCircularBuffer41.put((java.lang.reflect.Type) wildcardClass44);
        java.lang.Class<?> wildcardClass46 = typeCircularBuffer41.getClass();
        boolean boolean47 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass46);
        boolean boolean48 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass46);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer52 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type53 = typeCircularBuffer52.get();
        boolean boolean54 = typeCircularBuffer52.isFull();
        boolean boolean55 = typeCircularBuffer52.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer57 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean58 = typeCircularBuffer57.isEmpty();
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        boolean boolean61 = typeCircularBuffer57.put((java.lang.reflect.Type) wildcardClass60);
        java.lang.Class<?> wildcardClass62 = typeCircularBuffer57.getClass();
        boolean boolean63 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass62);
        boolean boolean64 = typeCircularBuffer52.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer66 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean67 = typeCircularBuffer66.isFull();
        boolean boolean68 = typeCircularBuffer66.isEmpty();
        java.lang.reflect.Type type69 = typeCircularBuffer66.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer71 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer73 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean74 = typeCircularBuffer73.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer76 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass77 = typeCircularBuffer76.getClass();
        boolean boolean78 = typeCircularBuffer73.put((java.lang.reflect.Type) wildcardClass77);
        java.lang.reflect.Type type79 = typeCircularBuffer73.get();
        boolean boolean80 = typeCircularBuffer71.put(type79);
        java.lang.Class<?> wildcardClass81 = typeCircularBuffer71.getClass();
        boolean boolean82 = typeCircularBuffer66.put((java.lang.reflect.Type) wildcardClass81);
        boolean boolean83 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass81);
        boolean boolean84 = typeCircularBuffer50.put((java.lang.reflect.Type) wildcardClass81);
        boolean boolean85 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass81);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer87 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean88 = typeCircularBuffer87.isFull();
        java.lang.reflect.Type type89 = typeCircularBuffer87.get();
        boolean boolean90 = typeCircularBuffer87.isEmpty();
        boolean boolean91 = typeCircularBuffer87.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer93 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        boolean boolean94 = typeCircularBuffer93.isEmpty();
        java.lang.Class<?> wildcardClass95 = typeCircularBuffer93.getClass();
        boolean boolean96 = typeCircularBuffer87.put((java.lang.reflect.Type) wildcardClass95);
        boolean boolean97 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass95);
        java.lang.reflect.Type type98 = typeCircularBuffer30.get();
        boolean boolean99 = typeCircularBuffer1.put(type98);
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(type32);
        org.junit.Assert.assertNull(type33);
        org.junit.Assert.assertNull(type34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(type39);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(type53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNull(type69);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNull(type89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNotNull(wildcardClass95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertNotNull(type98);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test0625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0625");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass6 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0626");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type12 = typeCircularBuffer1.get();
        boolean boolean13 = typeCircularBuffer1.isFull();
        boolean boolean14 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type15 = typeCircularBuffer1.get();
        boolean boolean16 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type17 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(type15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(type17);
    }

    @Test
    public void test0627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0627");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.CharSequence> charSequenceCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.CharSequence>((int) (byte) 100);
    }

    @Test
    public void test0628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0628");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) ' ');
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean5 = typeCircularBuffer4.isEmpty();
        java.lang.reflect.Type type6 = typeCircularBuffer4.get();
        java.lang.reflect.Type type7 = typeCircularBuffer4.get();
        java.lang.reflect.Type type8 = typeCircularBuffer4.get();
        boolean boolean9 = typeCircularBuffer4.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean12 = typeCircularBuffer11.isFull();
        java.lang.reflect.Type type13 = typeCircularBuffer11.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean16 = typeCircularBuffer15.isEmpty();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        boolean boolean19 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass18);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer15.getClass();
        boolean boolean21 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean22 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass20);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type27 = typeCircularBuffer26.get();
        boolean boolean28 = typeCircularBuffer26.isFull();
        boolean boolean29 = typeCircularBuffer26.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        boolean boolean35 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass34);
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer31.getClass();
        boolean boolean37 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean38 = typeCircularBuffer26.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean41 = typeCircularBuffer40.isFull();
        boolean boolean42 = typeCircularBuffer40.isEmpty();
        java.lang.reflect.Type type43 = typeCircularBuffer40.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean48 = typeCircularBuffer47.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer50.getClass();
        boolean boolean52 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass51);
        java.lang.reflect.Type type53 = typeCircularBuffer47.get();
        boolean boolean54 = typeCircularBuffer45.put(type53);
        java.lang.Class<?> wildcardClass55 = typeCircularBuffer45.getClass();
        boolean boolean56 = typeCircularBuffer40.put((java.lang.reflect.Type) wildcardClass55);
        boolean boolean57 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass55);
        boolean boolean58 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass55);
        boolean boolean59 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass55);
        java.lang.Class<?> wildcardClass60 = typeCircularBuffer4.getClass();
        boolean boolean61 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass60);
        java.lang.Class<?> wildcardClass62 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(type13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(type43);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test0629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0629");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer6.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.reflect.Type type13 = typeCircularBuffer1.get();
        boolean boolean14 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type17 = typeCircularBuffer16.get();
        boolean boolean18 = typeCircularBuffer16.isFull();
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer16.getClass();
        boolean boolean20 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass19);
        java.lang.reflect.Type type21 = typeCircularBuffer1.get();
        java.lang.reflect.Type type22 = typeCircularBuffer1.get();
        boolean boolean23 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(type17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNull(type22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0630");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type24 = typeCircularBuffer1.get();
        boolean boolean25 = typeCircularBuffer1.isFull();
        boolean boolean26 = typeCircularBuffer1.isEmpty();
        boolean boolean27 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0631");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type4 = typeCircularBuffer3.get();
        boolean boolean5 = typeCircularBuffer3.isFull();
        boolean boolean6 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean9 = typeCircularBuffer8.isEmpty();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer8.getClass();
        boolean boolean14 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass13);
        boolean boolean15 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean18 = typeCircularBuffer17.isFull();
        boolean boolean19 = typeCircularBuffer17.isEmpty();
        java.lang.reflect.Type type20 = typeCircularBuffer17.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean25 = typeCircularBuffer24.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer27.getClass();
        boolean boolean29 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.reflect.Type type30 = typeCircularBuffer24.get();
        boolean boolean31 = typeCircularBuffer22.put(type30);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer22.getClass();
        boolean boolean33 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean35 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean36 = typeCircularBuffer1.isFull();
        boolean boolean37 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean42 = typeCircularBuffer41.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass45 = typeCircularBuffer44.getClass();
        boolean boolean46 = typeCircularBuffer41.put((java.lang.reflect.Type) wildcardClass45);
        java.lang.reflect.Type type47 = typeCircularBuffer41.get();
        boolean boolean48 = typeCircularBuffer39.put(type47);
        java.lang.reflect.Type type49 = typeCircularBuffer39.get();
        boolean boolean50 = typeCircularBuffer39.isFull();
        boolean boolean51 = typeCircularBuffer39.isEmpty();
        java.lang.Class<?> wildcardClass52 = typeCircularBuffer39.getClass();
        boolean boolean53 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass52);
        boolean boolean54 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass55 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(type20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test0632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0632");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass9);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean13 = typeCircularBuffer12.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass16 = typeCircularBuffer15.getClass();
        boolean boolean17 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass16);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer12.getClass();
        boolean boolean19 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass18);
        java.lang.reflect.Type type20 = typeCircularBuffer1.get();
        java.lang.reflect.Type type21 = typeCircularBuffer1.get();
        boolean boolean22 = typeCircularBuffer1.isEmpty();
        boolean boolean23 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type24 = typeCircularBuffer1.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass25 = type24.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNull(type21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(type24);
    }

    @Test
    public void test0633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0633");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.constant.Constable> constableCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.constant.Constable>((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0634");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer6.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.reflect.Type type13 = typeCircularBuffer1.get();
        boolean boolean14 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer19.getClass();
        boolean boolean21 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean22 = typeCircularBuffer16.isEmpty();
        java.lang.reflect.Type type23 = typeCircularBuffer16.get();
        boolean boolean24 = typeCircularBuffer1.put(type23);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type27 = typeCircularBuffer26.get();
        boolean boolean28 = typeCircularBuffer26.isFull();
        boolean boolean29 = typeCircularBuffer26.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        boolean boolean35 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass34);
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer31.getClass();
        boolean boolean37 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass36);
        java.lang.reflect.Type type38 = typeCircularBuffer26.get();
        boolean boolean39 = typeCircularBuffer26.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type42 = typeCircularBuffer41.get();
        boolean boolean43 = typeCircularBuffer41.isFull();
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer41.getClass();
        boolean boolean45 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean46 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass44);
        java.lang.reflect.Type type47 = typeCircularBuffer1.get();
        boolean boolean48 = typeCircularBuffer1.isEmpty();
        boolean boolean49 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(type42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
    }

    @Test
    public void test0635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0635");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type4 = typeCircularBuffer3.get();
        boolean boolean5 = typeCircularBuffer3.isFull();
        boolean boolean6 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean9 = typeCircularBuffer8.isEmpty();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer8.getClass();
        boolean boolean14 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass13);
        boolean boolean15 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean18 = typeCircularBuffer17.isFull();
        boolean boolean19 = typeCircularBuffer17.isEmpty();
        java.lang.reflect.Type type20 = typeCircularBuffer17.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean25 = typeCircularBuffer24.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer27.getClass();
        boolean boolean29 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.reflect.Type type30 = typeCircularBuffer24.get();
        boolean boolean31 = typeCircularBuffer22.put(type30);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer22.getClass();
        boolean boolean33 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean35 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean36 = typeCircularBuffer1.isFull();
        boolean boolean37 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean40 = typeCircularBuffer39.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass43 = typeCircularBuffer42.getClass();
        boolean boolean44 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass43);
        java.lang.reflect.Type type45 = typeCircularBuffer39.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type48 = typeCircularBuffer47.get();
        boolean boolean49 = typeCircularBuffer47.isFull();
        boolean boolean50 = typeCircularBuffer47.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer52 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean53 = typeCircularBuffer52.isEmpty();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        boolean boolean56 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass55);
        java.lang.Class<?> wildcardClass57 = typeCircularBuffer52.getClass();
        boolean boolean58 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass57);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer60 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean61 = typeCircularBuffer60.isEmpty();
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        boolean boolean64 = typeCircularBuffer60.put((java.lang.reflect.Type) wildcardClass63);
        java.lang.Class<?> wildcardClass65 = typeCircularBuffer60.getClass();
        boolean boolean66 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass65);
        boolean boolean67 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass65);
        java.lang.reflect.Type type68 = typeCircularBuffer39.get();
        boolean boolean69 = typeCircularBuffer1.put(type68);
        java.lang.reflect.Type type70 = typeCircularBuffer1.get();
        boolean boolean71 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(type20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNull(type48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(type70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
    }

    @Test
    public void test0636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0636");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        boolean boolean8 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test0637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0637");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer10.get();
        boolean boolean17 = typeCircularBuffer8.put(type16);
        boolean boolean18 = typeCircularBuffer8.isFull();
        java.lang.reflect.Type type19 = typeCircularBuffer8.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean22 = typeCircularBuffer21.isEmpty();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean26 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean27 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean28 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean31 = typeCircularBuffer30.isFull();
        boolean boolean32 = typeCircularBuffer30.isEmpty();
        boolean boolean33 = typeCircularBuffer30.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean36 = typeCircularBuffer35.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass39 = typeCircularBuffer38.getClass();
        boolean boolean40 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass39);
        java.lang.reflect.Type type41 = typeCircularBuffer35.get();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        boolean boolean44 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass43);
        boolean boolean45 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass43);
        boolean boolean46 = typeCircularBuffer30.isFull();
        java.lang.reflect.Type type47 = typeCircularBuffer30.get();
        boolean boolean48 = typeCircularBuffer1.put(type47);
        boolean boolean49 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean52 = typeCircularBuffer51.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer54 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass55 = typeCircularBuffer54.getClass();
        boolean boolean56 = typeCircularBuffer51.put((java.lang.reflect.Type) wildcardClass55);
        java.lang.reflect.Type type57 = typeCircularBuffer51.get();
        boolean boolean58 = typeCircularBuffer51.isFull();
        java.lang.reflect.Type type59 = typeCircularBuffer51.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer61 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean62 = typeCircularBuffer61.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer64 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass65 = typeCircularBuffer64.getClass();
        boolean boolean66 = typeCircularBuffer61.put((java.lang.reflect.Type) wildcardClass65);
        java.lang.reflect.Type type67 = typeCircularBuffer61.get();
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        boolean boolean70 = typeCircularBuffer61.put((java.lang.reflect.Type) wildcardClass69);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer72 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean73 = typeCircularBuffer72.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer75 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass76 = typeCircularBuffer75.getClass();
        boolean boolean77 = typeCircularBuffer72.put((java.lang.reflect.Type) wildcardClass76);
        java.lang.Class<?> wildcardClass78 = typeCircularBuffer72.getClass();
        boolean boolean79 = typeCircularBuffer61.put((java.lang.reflect.Type) wildcardClass78);
        boolean boolean80 = typeCircularBuffer51.put((java.lang.reflect.Type) wildcardClass78);
        java.lang.reflect.Type type81 = typeCircularBuffer51.get();
        boolean boolean82 = typeCircularBuffer1.put(type81);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer84 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '#');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer86 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) ' ');
        boolean boolean87 = typeCircularBuffer86.isEmpty();
        java.lang.Class<?> wildcardClass88 = typeCircularBuffer86.getClass();
        boolean boolean89 = typeCircularBuffer84.put((java.lang.reflect.Type) wildcardClass88);
        boolean boolean90 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass88);
        java.lang.reflect.Type type91 = null;
        boolean boolean92 = typeCircularBuffer1.put(type91);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(type59);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(type81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test0638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0638");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type12 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        boolean boolean19 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass17);
        boolean boolean20 = typeCircularBuffer1.isEmpty();
        boolean boolean21 = typeCircularBuffer1.isEmpty();
        boolean boolean22 = typeCircularBuffer1.isEmpty();
        boolean boolean23 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean28 = typeCircularBuffer27.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass31 = typeCircularBuffer30.getClass();
        boolean boolean32 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass31);
        java.lang.reflect.Type type33 = typeCircularBuffer27.get();
        boolean boolean34 = typeCircularBuffer25.put(type33);
        boolean boolean35 = typeCircularBuffer25.isEmpty();
        boolean boolean36 = typeCircularBuffer25.isFull();
        boolean boolean37 = typeCircularBuffer25.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean40 = typeCircularBuffer39.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass43 = typeCircularBuffer42.getClass();
        boolean boolean44 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass43);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean49 = typeCircularBuffer48.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass52 = typeCircularBuffer51.getClass();
        boolean boolean53 = typeCircularBuffer48.put((java.lang.reflect.Type) wildcardClass52);
        java.lang.reflect.Type type54 = typeCircularBuffer48.get();
        boolean boolean55 = typeCircularBuffer46.put(type54);
        boolean boolean56 = typeCircularBuffer46.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer58 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean59 = typeCircularBuffer58.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer61 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass62 = typeCircularBuffer61.getClass();
        boolean boolean63 = typeCircularBuffer58.put((java.lang.reflect.Type) wildcardClass62);
        java.lang.reflect.Type type64 = typeCircularBuffer58.get();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        boolean boolean67 = typeCircularBuffer58.put((java.lang.reflect.Type) wildcardClass66);
        boolean boolean68 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass66);
        boolean boolean69 = typeCircularBuffer46.isEmpty();
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        boolean boolean72 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass71);
        boolean boolean73 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass71);
        boolean boolean74 = typeCircularBuffer39.isEmpty();
        boolean boolean75 = typeCircularBuffer39.isEmpty();
        boolean boolean76 = typeCircularBuffer39.isEmpty();
        java.lang.Class<?> wildcardClass77 = typeCircularBuffer39.getClass();
        boolean boolean78 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass77);
        boolean boolean79 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass77);
        boolean boolean80 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
    }

    @Test
    public void test0639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0639");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean12 = typeCircularBuffer11.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass15 = typeCircularBuffer14.getClass();
        boolean boolean16 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass15);
        java.lang.reflect.Type type17 = typeCircularBuffer11.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type20 = typeCircularBuffer19.get();
        boolean boolean21 = typeCircularBuffer19.isFull();
        boolean boolean22 = typeCircularBuffer19.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean25 = typeCircularBuffer24.isEmpty();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        boolean boolean28 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass27);
        java.lang.Class<?> wildcardClass29 = typeCircularBuffer24.getClass();
        boolean boolean30 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass29);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean33 = typeCircularBuffer32.isEmpty();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        boolean boolean36 = typeCircularBuffer32.put((java.lang.reflect.Type) wildcardClass35);
        java.lang.Class<?> wildcardClass37 = typeCircularBuffer32.getClass();
        boolean boolean38 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass37);
        boolean boolean39 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass37);
        java.lang.reflect.Type type40 = typeCircularBuffer11.get();
        boolean boolean41 = typeCircularBuffer1.put(type40);
        boolean boolean42 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNull(type20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test0640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0640");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) ' ');
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean5 = typeCircularBuffer4.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass8 = typeCircularBuffer7.getClass();
        boolean boolean9 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass8);
        java.lang.reflect.Type type10 = typeCircularBuffer4.get();
        java.lang.Object obj11 = new java.lang.Object();
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        boolean boolean13 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass12);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean16 = typeCircularBuffer15.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer18.getClass();
        boolean boolean20 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass19);
        java.lang.reflect.Type type21 = typeCircularBuffer15.get();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        boolean boolean24 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass23);
        java.lang.reflect.Type type25 = typeCircularBuffer15.get();
        boolean boolean26 = typeCircularBuffer4.put(type25);
        boolean boolean27 = typeCircularBuffer1.put(type25);
        boolean boolean28 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type29 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(type29);
    }

    @Test
    public void test0641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0641");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test0642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0642");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.invoke.TypeDescriptor> typeDescriptorCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.invoke.TypeDescriptor>(1);
    }

    @Test
    public void test0643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0643");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass9);
        boolean boolean11 = typeCircularBuffer1.isEmpty();
        boolean boolean12 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test0644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0644");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        boolean boolean7 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer10.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer19.getClass();
        boolean boolean21 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type22 = typeCircularBuffer16.get();
        boolean boolean23 = typeCircularBuffer14.put(type22);
        java.lang.reflect.Type type24 = typeCircularBuffer14.get();
        boolean boolean25 = typeCircularBuffer14.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean28 = typeCircularBuffer27.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass31 = typeCircularBuffer30.getClass();
        boolean boolean32 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass31);
        java.lang.reflect.Type type33 = typeCircularBuffer27.get();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        boolean boolean36 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass35);
        java.lang.reflect.Type type37 = typeCircularBuffer27.get();
        boolean boolean38 = typeCircularBuffer14.put(type37);
        boolean boolean39 = typeCircularBuffer1.put(type37);
        boolean boolean40 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.CharSequence> charSequenceCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.CharSequence>((int) '4');
        java.lang.Class<?> wildcardClass43 = charSequenceCircularBuffer42.getClass();
        boolean boolean44 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass43);
        java.lang.Class<?> wildcardClass45 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test0645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0645");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        boolean boolean7 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean19 = typeCircularBuffer18.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer21.getClass();
        boolean boolean23 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass22);
        java.lang.reflect.Type type24 = typeCircularBuffer18.get();
        boolean boolean25 = typeCircularBuffer16.put(type24);
        boolean boolean26 = typeCircularBuffer16.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer31.getClass();
        boolean boolean33 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass32);
        java.lang.reflect.Type type34 = typeCircularBuffer28.get();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        boolean boolean37 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean38 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean39 = typeCircularBuffer16.isEmpty();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        boolean boolean42 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean43 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean44 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean45 = typeCircularBuffer1.isFull();
        boolean boolean46 = typeCircularBuffer1.isEmpty();
        boolean boolean47 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type48 = typeCircularBuffer1.get();
        java.lang.reflect.Type type49 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNull(type49);
    }

    @Test
    public void test0646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0646");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean9 = typeCircularBuffer8.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass12 = typeCircularBuffer11.getClass();
        boolean boolean13 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass12);
        java.lang.reflect.Type type14 = typeCircularBuffer8.get();
        boolean boolean15 = typeCircularBuffer6.put(type14);
        java.lang.Class<?> wildcardClass16 = typeCircularBuffer6.getClass();
        boolean boolean17 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass16);
        boolean boolean18 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type21 = typeCircularBuffer20.get();
        boolean boolean22 = typeCircularBuffer20.isFull();
        boolean boolean23 = typeCircularBuffer20.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean26 = typeCircularBuffer25.isEmpty();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        boolean boolean29 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.Class<?> wildcardClass30 = typeCircularBuffer25.getClass();
        boolean boolean31 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass30);
        java.lang.reflect.Type type32 = typeCircularBuffer20.get();
        boolean boolean33 = typeCircularBuffer20.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type36 = typeCircularBuffer35.get();
        boolean boolean37 = typeCircularBuffer35.isFull();
        java.lang.Class<?> wildcardClass38 = typeCircularBuffer35.getClass();
        boolean boolean39 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass38);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        boolean boolean42 = typeCircularBuffer41.isEmpty();
        boolean boolean43 = typeCircularBuffer41.isEmpty();
        boolean boolean44 = typeCircularBuffer41.isFull();
        java.lang.Class<?> wildcardClass45 = typeCircularBuffer41.getClass();
        boolean boolean46 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass45);
        boolean boolean47 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass45);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer49 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean52 = typeCircularBuffer51.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer54 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass55 = typeCircularBuffer54.getClass();
        boolean boolean56 = typeCircularBuffer51.put((java.lang.reflect.Type) wildcardClass55);
        java.lang.reflect.Type type57 = typeCircularBuffer51.get();
        boolean boolean58 = typeCircularBuffer49.put(type57);
        boolean boolean59 = typeCircularBuffer49.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer61 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean62 = typeCircularBuffer61.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer64 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass65 = typeCircularBuffer64.getClass();
        boolean boolean66 = typeCircularBuffer61.put((java.lang.reflect.Type) wildcardClass65);
        java.lang.reflect.Type type67 = typeCircularBuffer61.get();
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        boolean boolean70 = typeCircularBuffer61.put((java.lang.reflect.Type) wildcardClass69);
        boolean boolean71 = typeCircularBuffer49.put((java.lang.reflect.Type) wildcardClass69);
        java.lang.reflect.Type type72 = typeCircularBuffer49.get();
        boolean boolean73 = typeCircularBuffer49.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer75 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type76 = typeCircularBuffer75.get();
        boolean boolean77 = typeCircularBuffer75.isFull();
        boolean boolean78 = typeCircularBuffer75.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer80 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean81 = typeCircularBuffer80.isEmpty();
        java.lang.Object obj82 = new java.lang.Object();
        java.lang.Class<?> wildcardClass83 = obj82.getClass();
        boolean boolean84 = typeCircularBuffer80.put((java.lang.reflect.Type) wildcardClass83);
        java.lang.Class<?> wildcardClass85 = typeCircularBuffer80.getClass();
        boolean boolean86 = typeCircularBuffer75.put((java.lang.reflect.Type) wildcardClass85);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer88 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean89 = typeCircularBuffer88.isFull();
        java.lang.reflect.Type type90 = typeCircularBuffer88.get();
        boolean boolean91 = typeCircularBuffer88.isEmpty();
        java.lang.Class<?> wildcardClass92 = typeCircularBuffer88.getClass();
        boolean boolean93 = typeCircularBuffer75.put((java.lang.reflect.Type) wildcardClass92);
        boolean boolean94 = typeCircularBuffer49.put((java.lang.reflect.Type) wildcardClass92);
        boolean boolean95 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass92);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(type21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(type36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNull(type76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNull(type90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test0647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0647");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0648");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type9 = typeCircularBuffer8.get();
        boolean boolean10 = typeCircularBuffer8.isFull();
        boolean boolean11 = typeCircularBuffer8.isEmpty();
        boolean boolean12 = typeCircularBuffer8.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass15 = typeCircularBuffer14.getClass();
        boolean boolean16 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass15);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean19 = typeCircularBuffer18.isFull();
        boolean boolean20 = typeCircularBuffer18.isEmpty();
        boolean boolean21 = typeCircularBuffer18.isFull();
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer18.getClass();
        boolean boolean23 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass22);
        java.lang.reflect.Type type24 = typeCircularBuffer8.get();
        boolean boolean25 = typeCircularBuffer8.isFull();
        java.lang.Class<?> wildcardClass26 = typeCircularBuffer8.getClass();
        boolean boolean27 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test0649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0649");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass8 = type7.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(type7);
    }

    @Test
    public void test0650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0650");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        java.lang.reflect.Type type15 = typeCircularBuffer9.get();
        boolean boolean16 = typeCircularBuffer7.put(type15);
        java.lang.reflect.Type type17 = null;
        boolean boolean18 = typeCircularBuffer7.put(type17);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer7.getClass();
        boolean boolean20 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test0651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0651");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.AnnotatedElement> annotatedElementCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.AnnotatedElement>((int) '4');
        java.lang.Class<?> wildcardClass2 = annotatedElementCircularBuffer1.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test0652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0652");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type10 = typeCircularBuffer9.get();
        boolean boolean11 = typeCircularBuffer9.isFull();
        boolean boolean12 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer14.getClass();
        boolean boolean20 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass19);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        boolean boolean26 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer22.getClass();
        boolean boolean28 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass27);
        java.lang.reflect.Type type30 = typeCircularBuffer1.get();
        java.lang.reflect.Type type31 = typeCircularBuffer1.get();
        boolean boolean32 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type33 = typeCircularBuffer1.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass34 = type33.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNull(type31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(type33);
    }

    @Test
    public void test0653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0653");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isEmpty();
        boolean boolean12 = typeCircularBuffer1.isFull();
        boolean boolean13 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type14 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass15 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0654");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass6 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0655");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isFull();
        boolean boolean8 = typeCircularBuffer1.isFull();
        boolean boolean9 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type12 = typeCircularBuffer11.get();
        boolean boolean13 = typeCircularBuffer11.isFull();
        boolean boolean14 = typeCircularBuffer11.isFull();
        boolean boolean15 = typeCircularBuffer11.isFull();
        java.lang.reflect.Type type16 = typeCircularBuffer11.get();
        boolean boolean17 = typeCircularBuffer11.isEmpty();
        boolean boolean18 = typeCircularBuffer11.isEmpty();
        boolean boolean19 = typeCircularBuffer11.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type22 = typeCircularBuffer21.get();
        boolean boolean23 = typeCircularBuffer21.isFull();
        boolean boolean24 = typeCircularBuffer21.isFull();
        boolean boolean25 = typeCircularBuffer21.isFull();
        boolean boolean26 = typeCircularBuffer21.isFull();
        boolean boolean27 = typeCircularBuffer21.isFull();
        boolean boolean28 = typeCircularBuffer21.isEmpty();
        java.lang.reflect.Type type29 = typeCircularBuffer21.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        java.lang.reflect.Type type33 = typeCircularBuffer31.get();
        boolean boolean34 = typeCircularBuffer31.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type37 = typeCircularBuffer36.get();
        boolean boolean38 = typeCircularBuffer36.isFull();
        boolean boolean39 = typeCircularBuffer36.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean42 = typeCircularBuffer41.isEmpty();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        boolean boolean45 = typeCircularBuffer41.put((java.lang.reflect.Type) wildcardClass44);
        java.lang.Class<?> wildcardClass46 = typeCircularBuffer41.getClass();
        boolean boolean47 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass46);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer49 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean50 = typeCircularBuffer49.isEmpty();
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        boolean boolean53 = typeCircularBuffer49.put((java.lang.reflect.Type) wildcardClass52);
        java.lang.Class<?> wildcardClass54 = typeCircularBuffer49.getClass();
        boolean boolean55 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean56 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean57 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean58 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean59 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean60 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(type22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(type29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(type33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(type37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
    }

    @Test
    public void test0656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0656");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.Comparable<java.lang.String>> strComparableCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.Comparable<java.lang.String>>((int) ' ');
    }

    @Test
    public void test0657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0657");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer6.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.reflect.Type type13 = typeCircularBuffer1.get();
        boolean boolean14 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type17 = typeCircularBuffer16.get();
        boolean boolean18 = typeCircularBuffer16.isFull();
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer16.getClass();
        boolean boolean20 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass19);
        boolean boolean21 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean24 = typeCircularBuffer23.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer26.getClass();
        boolean boolean28 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass27);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean33 = typeCircularBuffer32.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer35.getClass();
        boolean boolean37 = typeCircularBuffer32.put((java.lang.reflect.Type) wildcardClass36);
        java.lang.reflect.Type type38 = typeCircularBuffer32.get();
        boolean boolean39 = typeCircularBuffer30.put(type38);
        boolean boolean40 = typeCircularBuffer30.isFull();
        java.lang.reflect.Type type41 = typeCircularBuffer30.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        boolean boolean47 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass46);
        boolean boolean48 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass46);
        boolean boolean49 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass46);
        boolean boolean50 = typeCircularBuffer23.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer52 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type53 = typeCircularBuffer52.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer55 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean56 = typeCircularBuffer55.isEmpty();
        boolean boolean57 = typeCircularBuffer55.isFull();
        java.lang.reflect.Type type58 = typeCircularBuffer55.get();
        boolean boolean59 = typeCircularBuffer55.isFull();
        java.lang.Class<?> wildcardClass60 = typeCircularBuffer55.getClass();
        boolean boolean61 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass60);
        java.lang.Class<?> wildcardClass62 = typeCircularBuffer52.getClass();
        boolean boolean63 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass62);
        boolean boolean64 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass62);
        java.lang.reflect.Type type65 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(type17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(type53);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(type58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(type65);
    }

    @Test
    public void test0658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0658");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean9 = typeCircularBuffer8.isEmpty();
        boolean boolean10 = typeCircularBuffer8.isEmpty();
        boolean boolean11 = typeCircularBuffer8.isEmpty();
        boolean boolean12 = typeCircularBuffer8.isEmpty();
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer8.getClass();
        boolean boolean14 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass13);
        boolean boolean15 = typeCircularBuffer1.isFull();
        boolean boolean16 = typeCircularBuffer1.isFull();
        boolean boolean17 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        boolean boolean20 = typeCircularBuffer19.isFull();
        boolean boolean21 = typeCircularBuffer19.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type24 = typeCircularBuffer23.get();
        boolean boolean25 = typeCircularBuffer23.isFull();
        boolean boolean26 = typeCircularBuffer23.isFull();
        boolean boolean27 = typeCircularBuffer23.isFull();
        boolean boolean28 = typeCircularBuffer23.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean31 = typeCircularBuffer30.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean36 = typeCircularBuffer35.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass39 = typeCircularBuffer38.getClass();
        boolean boolean40 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass39);
        java.lang.reflect.Type type41 = typeCircularBuffer35.get();
        boolean boolean42 = typeCircularBuffer33.put(type41);
        boolean boolean43 = typeCircularBuffer33.isFull();
        java.lang.reflect.Type type44 = typeCircularBuffer33.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type47 = typeCircularBuffer46.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer49 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean50 = typeCircularBuffer49.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer52 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass53 = typeCircularBuffer52.getClass();
        boolean boolean54 = typeCircularBuffer49.put((java.lang.reflect.Type) wildcardClass53);
        java.lang.reflect.Type type55 = typeCircularBuffer49.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer57 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type58 = typeCircularBuffer57.get();
        boolean boolean59 = typeCircularBuffer57.isFull();
        boolean boolean60 = typeCircularBuffer57.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer62 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean63 = typeCircularBuffer62.isEmpty();
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        boolean boolean66 = typeCircularBuffer62.put((java.lang.reflect.Type) wildcardClass65);
        java.lang.Class<?> wildcardClass67 = typeCircularBuffer62.getClass();
        boolean boolean68 = typeCircularBuffer57.put((java.lang.reflect.Type) wildcardClass67);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer70 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean71 = typeCircularBuffer70.isEmpty();
        java.lang.Object obj72 = new java.lang.Object();
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        boolean boolean74 = typeCircularBuffer70.put((java.lang.reflect.Type) wildcardClass73);
        java.lang.Class<?> wildcardClass75 = typeCircularBuffer70.getClass();
        boolean boolean76 = typeCircularBuffer57.put((java.lang.reflect.Type) wildcardClass75);
        boolean boolean77 = typeCircularBuffer49.put((java.lang.reflect.Type) wildcardClass75);
        boolean boolean78 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass75);
        boolean boolean79 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass75);
        boolean boolean80 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass75);
        boolean boolean81 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass75);
        boolean boolean82 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass75);
        boolean boolean83 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass75);
        boolean boolean84 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNull(type47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNull(type58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
    }

    @Test
    public void test0659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0659");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type5 = null;
        boolean boolean6 = typeCircularBuffer1.put(type5);
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        boolean boolean8 = typeCircularBuffer1.isFull();
        boolean boolean9 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type10 = typeCircularBuffer1.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass11 = type10.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(type10);
    }

    @Test
    public void test0660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0660");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer10.get();
        boolean boolean17 = typeCircularBuffer8.put(type16);
        boolean boolean18 = typeCircularBuffer8.isFull();
        java.lang.reflect.Type type19 = typeCircularBuffer8.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean22 = typeCircularBuffer21.isEmpty();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean26 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean27 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean28 = typeCircularBuffer1.isFull();
        boolean boolean29 = typeCircularBuffer1.isFull();
        boolean boolean30 = typeCircularBuffer1.isEmpty();
        boolean boolean31 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type32 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean37 = typeCircularBuffer36.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass40 = typeCircularBuffer39.getClass();
        boolean boolean41 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass40);
        java.lang.reflect.Type type42 = typeCircularBuffer36.get();
        boolean boolean43 = typeCircularBuffer34.put(type42);
        boolean boolean44 = typeCircularBuffer34.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean47 = typeCircularBuffer46.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer49 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass50 = typeCircularBuffer49.getClass();
        boolean boolean51 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass50);
        java.lang.reflect.Type type52 = typeCircularBuffer46.get();
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        boolean boolean55 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean56 = typeCircularBuffer34.put((java.lang.reflect.Type) wildcardClass54);
        java.lang.reflect.Type type57 = typeCircularBuffer34.get();
        boolean boolean58 = typeCircularBuffer1.put(type57);
        boolean boolean59 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type60 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(type60);
    }

    @Test
    public void test0661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0661");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        boolean boolean7 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean19 = typeCircularBuffer18.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer21.getClass();
        boolean boolean23 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass22);
        java.lang.reflect.Type type24 = typeCircularBuffer18.get();
        boolean boolean25 = typeCircularBuffer16.put(type24);
        boolean boolean26 = typeCircularBuffer16.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer31.getClass();
        boolean boolean33 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass32);
        java.lang.reflect.Type type34 = typeCircularBuffer28.get();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        boolean boolean37 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean38 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean39 = typeCircularBuffer16.isEmpty();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        boolean boolean42 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean43 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean44 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass41);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean47 = typeCircularBuffer46.isEmpty();
        boolean boolean48 = typeCircularBuffer46.isFull();
        java.lang.reflect.Type type49 = typeCircularBuffer46.get();
        boolean boolean50 = typeCircularBuffer46.isFull();
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer46.getClass();
        boolean boolean52 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean53 = typeCircularBuffer1.isFull();
        boolean boolean54 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type55 = typeCircularBuffer1.get();
        boolean boolean56 = typeCircularBuffer1.isEmpty();
        boolean boolean57 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(type49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test0662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0662");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean9 = typeCircularBuffer8.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass12 = typeCircularBuffer11.getClass();
        boolean boolean13 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass12);
        java.lang.reflect.Type type14 = typeCircularBuffer8.get();
        boolean boolean15 = typeCircularBuffer6.put(type14);
        java.lang.Class<?> wildcardClass16 = typeCircularBuffer6.getClass();
        boolean boolean17 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass16);
        boolean boolean18 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type19 = typeCircularBuffer1.get();
        boolean boolean20 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type21 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(type21);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0663");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) ' ');
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean5 = typeCircularBuffer4.isEmpty();
        java.lang.reflect.Type type6 = typeCircularBuffer4.get();
        java.lang.reflect.Type type7 = typeCircularBuffer4.get();
        java.lang.reflect.Type type8 = typeCircularBuffer4.get();
        boolean boolean9 = typeCircularBuffer4.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean12 = typeCircularBuffer11.isFull();
        java.lang.reflect.Type type13 = typeCircularBuffer11.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean16 = typeCircularBuffer15.isEmpty();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        boolean boolean19 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass18);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer15.getClass();
        boolean boolean21 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean22 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass20);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type27 = typeCircularBuffer26.get();
        boolean boolean28 = typeCircularBuffer26.isFull();
        boolean boolean29 = typeCircularBuffer26.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        boolean boolean35 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass34);
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer31.getClass();
        boolean boolean37 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean38 = typeCircularBuffer26.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean41 = typeCircularBuffer40.isFull();
        boolean boolean42 = typeCircularBuffer40.isEmpty();
        java.lang.reflect.Type type43 = typeCircularBuffer40.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean48 = typeCircularBuffer47.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer50.getClass();
        boolean boolean52 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass51);
        java.lang.reflect.Type type53 = typeCircularBuffer47.get();
        boolean boolean54 = typeCircularBuffer45.put(type53);
        java.lang.Class<?> wildcardClass55 = typeCircularBuffer45.getClass();
        boolean boolean56 = typeCircularBuffer40.put((java.lang.reflect.Type) wildcardClass55);
        boolean boolean57 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass55);
        boolean boolean58 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass55);
        boolean boolean59 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass55);
        java.lang.Class<?> wildcardClass60 = typeCircularBuffer4.getClass();
        boolean boolean61 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass60);
        java.lang.reflect.Type type62 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass63 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(type13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(type43);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test0664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0664");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer10.get();
        boolean boolean17 = typeCircularBuffer8.put(type16);
        boolean boolean18 = typeCircularBuffer8.isFull();
        java.lang.reflect.Type type19 = typeCircularBuffer8.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean22 = typeCircularBuffer21.isEmpty();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean26 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean27 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean28 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean31 = typeCircularBuffer30.isFull();
        boolean boolean32 = typeCircularBuffer30.isEmpty();
        boolean boolean33 = typeCircularBuffer30.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean36 = typeCircularBuffer35.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass39 = typeCircularBuffer38.getClass();
        boolean boolean40 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass39);
        java.lang.reflect.Type type41 = typeCircularBuffer35.get();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        boolean boolean44 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass43);
        boolean boolean45 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass43);
        boolean boolean46 = typeCircularBuffer30.isFull();
        java.lang.reflect.Type type47 = typeCircularBuffer30.get();
        boolean boolean48 = typeCircularBuffer1.put(type47);
        boolean boolean49 = typeCircularBuffer1.isEmpty();
        boolean boolean50 = typeCircularBuffer1.isFull();
        boolean boolean51 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type52 = typeCircularBuffer1.get();
        java.lang.reflect.Type type53 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNull(type53);
    }

    @Test
    public void test0665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0665");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        java.lang.reflect.Type type12 = typeCircularBuffer6.get();
        boolean boolean13 = typeCircularBuffer4.put(type12);
        boolean boolean14 = typeCircularBuffer4.isFull();
        java.lang.reflect.Type type15 = typeCircularBuffer4.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        boolean boolean21 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean22 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean24 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type25 = typeCircularBuffer1.get();
        boolean boolean26 = typeCircularBuffer1.isFull();
        boolean boolean27 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type28 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(type28);
    }

    @Test
    public void test0666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0666");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(type6);
    }

    @Test
    public void test0667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0667");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '#');
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass6 = type5.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
    }

    @Test
    public void test0668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0668");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        java.lang.reflect.Type type12 = typeCircularBuffer6.get();
        boolean boolean13 = typeCircularBuffer4.put(type12);
        boolean boolean14 = typeCircularBuffer4.isFull();
        java.lang.reflect.Type type15 = typeCircularBuffer4.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        boolean boolean21 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean22 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean24 = typeCircularBuffer1.isEmpty();
        boolean boolean25 = typeCircularBuffer1.isFull();
        boolean boolean26 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type27 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0669");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type10 = typeCircularBuffer9.get();
        boolean boolean11 = typeCircularBuffer9.isFull();
        boolean boolean12 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer14.getClass();
        boolean boolean20 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass19);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        boolean boolean26 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer22.getClass();
        boolean boolean28 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass27);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean33 = typeCircularBuffer32.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer35.getClass();
        boolean boolean37 = typeCircularBuffer32.put((java.lang.reflect.Type) wildcardClass36);
        java.lang.reflect.Type type38 = typeCircularBuffer32.get();
        boolean boolean39 = typeCircularBuffer30.put(type38);
        java.lang.Class<?> wildcardClass40 = typeCircularBuffer30.getClass();
        boolean boolean41 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass40);
        boolean boolean42 = typeCircularBuffer9.isFull();
        java.lang.Class<?> wildcardClass43 = typeCircularBuffer9.getClass();
        boolean boolean44 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
    }

    @Test
    public void test0670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0670");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 10);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type4 = typeCircularBuffer3.get();
        boolean boolean5 = typeCircularBuffer3.isFull();
        java.lang.Class<?> wildcardClass6 = typeCircularBuffer3.getClass();
        boolean boolean7 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass6);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type10 = typeCircularBuffer9.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer17.getClass();
        boolean boolean19 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass18);
        java.lang.reflect.Type type20 = typeCircularBuffer14.get();
        boolean boolean21 = typeCircularBuffer12.put(type20);
        boolean boolean22 = typeCircularBuffer12.isFull();
        java.lang.reflect.Type type23 = typeCircularBuffer12.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean26 = typeCircularBuffer25.isEmpty();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        boolean boolean29 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass28);
        boolean boolean30 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass28);
        boolean boolean31 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass28);
        boolean boolean32 = typeCircularBuffer9.isEmpty();
        java.lang.reflect.Type type33 = typeCircularBuffer9.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean38 = typeCircularBuffer37.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass41 = typeCircularBuffer40.getClass();
        boolean boolean42 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass41);
        java.lang.reflect.Type type43 = typeCircularBuffer37.get();
        boolean boolean44 = typeCircularBuffer35.put(type43);
        boolean boolean45 = typeCircularBuffer35.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean48 = typeCircularBuffer47.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer50.getClass();
        boolean boolean52 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass51);
        java.lang.reflect.Type type53 = typeCircularBuffer47.get();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        boolean boolean56 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass55);
        boolean boolean57 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass55);
        boolean boolean58 = typeCircularBuffer35.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer60 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type61 = typeCircularBuffer60.get();
        boolean boolean62 = typeCircularBuffer60.isFull();
        boolean boolean63 = typeCircularBuffer60.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer65 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean66 = typeCircularBuffer65.isEmpty();
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        boolean boolean69 = typeCircularBuffer65.put((java.lang.reflect.Type) wildcardClass68);
        java.lang.Class<?> wildcardClass70 = typeCircularBuffer65.getClass();
        boolean boolean71 = typeCircularBuffer60.put((java.lang.reflect.Type) wildcardClass70);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer73 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean74 = typeCircularBuffer73.isEmpty();
        java.lang.Object obj75 = new java.lang.Object();
        java.lang.Class<?> wildcardClass76 = obj75.getClass();
        boolean boolean77 = typeCircularBuffer73.put((java.lang.reflect.Type) wildcardClass76);
        java.lang.Class<?> wildcardClass78 = typeCircularBuffer73.getClass();
        boolean boolean79 = typeCircularBuffer60.put((java.lang.reflect.Type) wildcardClass78);
        boolean boolean80 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass78);
        java.lang.reflect.Type type81 = typeCircularBuffer35.get();
        boolean boolean82 = typeCircularBuffer9.put(type81);
        boolean boolean83 = typeCircularBuffer1.put(type81);
        java.lang.Class<?> wildcardClass84 = type81.getClass();
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(type61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(type81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test0671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0671");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        boolean boolean8 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass9 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0672");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) 'a');
        boolean boolean7 = typeCircularBuffer6.isFull();
        java.lang.Class<?> wildcardClass8 = typeCircularBuffer6.getClass();
        boolean boolean9 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass8);
        boolean boolean10 = typeCircularBuffer1.isEmpty();
        boolean boolean11 = typeCircularBuffer1.isFull();
        boolean boolean12 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test0673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0673");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
    }

    @Test
    public void test0674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0674");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer6.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.reflect.Type type13 = typeCircularBuffer1.get();
        boolean boolean14 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type17 = typeCircularBuffer16.get();
        boolean boolean18 = typeCircularBuffer16.isFull();
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer16.getClass();
        boolean boolean20 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass19);
        boolean boolean21 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean24 = typeCircularBuffer23.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer26.getClass();
        boolean boolean28 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass27);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean33 = typeCircularBuffer32.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer35.getClass();
        boolean boolean37 = typeCircularBuffer32.put((java.lang.reflect.Type) wildcardClass36);
        java.lang.reflect.Type type38 = typeCircularBuffer32.get();
        boolean boolean39 = typeCircularBuffer30.put(type38);
        boolean boolean40 = typeCircularBuffer30.isFull();
        java.lang.reflect.Type type41 = typeCircularBuffer30.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        boolean boolean47 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass46);
        boolean boolean48 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass46);
        boolean boolean49 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass46);
        boolean boolean50 = typeCircularBuffer23.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer52 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type53 = typeCircularBuffer52.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer55 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean56 = typeCircularBuffer55.isEmpty();
        boolean boolean57 = typeCircularBuffer55.isFull();
        java.lang.reflect.Type type58 = typeCircularBuffer55.get();
        boolean boolean59 = typeCircularBuffer55.isFull();
        java.lang.Class<?> wildcardClass60 = typeCircularBuffer55.getClass();
        boolean boolean61 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass60);
        java.lang.Class<?> wildcardClass62 = typeCircularBuffer52.getClass();
        boolean boolean63 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass62);
        boolean boolean64 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass62);
        boolean boolean65 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(type17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(type53);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(type58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
    }

    @Test
    public void test0675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0675");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) 'a');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass4 = typeCircularBuffer3.getClass();
        boolean boolean5 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass4);
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type10 = typeCircularBuffer9.get();
        boolean boolean11 = typeCircularBuffer9.isFull();
        boolean boolean12 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer14.getClass();
        boolean boolean20 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass19);
        java.lang.reflect.Type type21 = typeCircularBuffer9.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean26 = typeCircularBuffer25.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass29 = typeCircularBuffer28.getClass();
        boolean boolean30 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass29);
        java.lang.reflect.Type type31 = typeCircularBuffer25.get();
        boolean boolean32 = typeCircularBuffer23.put(type31);
        boolean boolean33 = typeCircularBuffer9.put(type31);
        java.lang.Class<?> wildcardClass34 = typeCircularBuffer9.getClass();
        boolean boolean35 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass34);
        java.lang.reflect.Type type36 = typeCircularBuffer1.get();
        java.lang.reflect.Type type37 = typeCircularBuffer1.get();
        java.lang.reflect.Type type38 = typeCircularBuffer1.get();
        boolean boolean39 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer46.getClass();
        boolean boolean48 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass47);
        java.lang.reflect.Type type49 = typeCircularBuffer43.get();
        boolean boolean50 = typeCircularBuffer41.put(type49);
        boolean boolean51 = typeCircularBuffer41.isFull();
        java.lang.reflect.Type type52 = typeCircularBuffer41.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer54 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type55 = typeCircularBuffer54.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer57 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean58 = typeCircularBuffer57.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer60 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass61 = typeCircularBuffer60.getClass();
        boolean boolean62 = typeCircularBuffer57.put((java.lang.reflect.Type) wildcardClass61);
        java.lang.reflect.Type type63 = typeCircularBuffer57.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer65 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type66 = typeCircularBuffer65.get();
        boolean boolean67 = typeCircularBuffer65.isFull();
        boolean boolean68 = typeCircularBuffer65.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer70 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean71 = typeCircularBuffer70.isEmpty();
        java.lang.Object obj72 = new java.lang.Object();
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        boolean boolean74 = typeCircularBuffer70.put((java.lang.reflect.Type) wildcardClass73);
        java.lang.Class<?> wildcardClass75 = typeCircularBuffer70.getClass();
        boolean boolean76 = typeCircularBuffer65.put((java.lang.reflect.Type) wildcardClass75);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer78 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean79 = typeCircularBuffer78.isEmpty();
        java.lang.Object obj80 = new java.lang.Object();
        java.lang.Class<?> wildcardClass81 = obj80.getClass();
        boolean boolean82 = typeCircularBuffer78.put((java.lang.reflect.Type) wildcardClass81);
        java.lang.Class<?> wildcardClass83 = typeCircularBuffer78.getClass();
        boolean boolean84 = typeCircularBuffer65.put((java.lang.reflect.Type) wildcardClass83);
        boolean boolean85 = typeCircularBuffer57.put((java.lang.reflect.Type) wildcardClass83);
        boolean boolean86 = typeCircularBuffer54.put((java.lang.reflect.Type) wildcardClass83);
        boolean boolean87 = typeCircularBuffer41.put((java.lang.reflect.Type) wildcardClass83);
        boolean boolean88 = typeCircularBuffer41.isFull();
        java.lang.reflect.Type type89 = typeCircularBuffer41.get();
        boolean boolean90 = typeCircularBuffer1.put(type89);
        java.lang.Class<?> wildcardClass91 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNull(type37);
        org.junit.Assert.assertNull(type38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNull(type55);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNull(type66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(type89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0676");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean9 = typeCircularBuffer8.isFull();
        java.lang.reflect.Type type10 = typeCircularBuffer8.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean13 = typeCircularBuffer12.isEmpty();
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        boolean boolean16 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass15);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer12.getClass();
        boolean boolean18 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass17);
        boolean boolean19 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass17);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type24 = typeCircularBuffer23.get();
        boolean boolean25 = typeCircularBuffer23.isFull();
        boolean boolean26 = typeCircularBuffer23.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        boolean boolean32 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass31);
        java.lang.Class<?> wildcardClass33 = typeCircularBuffer28.getClass();
        boolean boolean34 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass33);
        boolean boolean35 = typeCircularBuffer23.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean38 = typeCircularBuffer37.isFull();
        boolean boolean39 = typeCircularBuffer37.isEmpty();
        java.lang.reflect.Type type40 = typeCircularBuffer37.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean45 = typeCircularBuffer44.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass48 = typeCircularBuffer47.getClass();
        boolean boolean49 = typeCircularBuffer44.put((java.lang.reflect.Type) wildcardClass48);
        java.lang.reflect.Type type50 = typeCircularBuffer44.get();
        boolean boolean51 = typeCircularBuffer42.put(type50);
        java.lang.Class<?> wildcardClass52 = typeCircularBuffer42.getClass();
        boolean boolean53 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass52);
        boolean boolean54 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass52);
        boolean boolean55 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass52);
        boolean boolean56 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass52);
        java.lang.reflect.Type type57 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass58 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(type40);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test0677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0677");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean9 = typeCircularBuffer8.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass12 = typeCircularBuffer11.getClass();
        boolean boolean13 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass12);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer20.getClass();
        boolean boolean22 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type23 = typeCircularBuffer17.get();
        boolean boolean24 = typeCircularBuffer15.put(type23);
        boolean boolean25 = typeCircularBuffer15.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean28 = typeCircularBuffer27.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass31 = typeCircularBuffer30.getClass();
        boolean boolean32 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass31);
        java.lang.reflect.Type type33 = typeCircularBuffer27.get();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        boolean boolean36 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass35);
        boolean boolean37 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass35);
        boolean boolean38 = typeCircularBuffer15.isEmpty();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        boolean boolean41 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass40);
        boolean boolean42 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass40);
        boolean boolean43 = typeCircularBuffer8.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type46 = typeCircularBuffer45.get();
        boolean boolean47 = typeCircularBuffer45.isFull();
        boolean boolean48 = typeCircularBuffer45.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean51 = typeCircularBuffer50.isEmpty();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        boolean boolean54 = typeCircularBuffer50.put((java.lang.reflect.Type) wildcardClass53);
        java.lang.Class<?> wildcardClass55 = typeCircularBuffer50.getClass();
        boolean boolean56 = typeCircularBuffer45.put((java.lang.reflect.Type) wildcardClass55);
        java.lang.reflect.Type type57 = typeCircularBuffer45.get();
        boolean boolean58 = typeCircularBuffer45.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer60 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type61 = typeCircularBuffer60.get();
        boolean boolean62 = typeCircularBuffer60.isFull();
        java.lang.Class<?> wildcardClass63 = typeCircularBuffer60.getClass();
        boolean boolean64 = typeCircularBuffer45.put((java.lang.reflect.Type) wildcardClass63);
        java.lang.reflect.Type type65 = typeCircularBuffer45.get();
        boolean boolean66 = typeCircularBuffer8.put(type65);
        java.lang.reflect.Type type67 = typeCircularBuffer8.get();
        boolean boolean68 = typeCircularBuffer1.put(type67);
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(type46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(type61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test0678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0678");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type24 = typeCircularBuffer1.get();
        boolean boolean25 = typeCircularBuffer1.isFull();
        boolean boolean26 = typeCircularBuffer1.isEmpty();
        boolean boolean27 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean30 = typeCircularBuffer29.isEmpty();
        java.lang.reflect.Type type31 = typeCircularBuffer29.get();
        java.lang.reflect.Type type32 = typeCircularBuffer29.get();
        java.lang.reflect.Type type33 = typeCircularBuffer29.get();
        boolean boolean34 = typeCircularBuffer29.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean37 = typeCircularBuffer36.isFull();
        java.lang.reflect.Type type38 = typeCircularBuffer36.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean41 = typeCircularBuffer40.isEmpty();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        boolean boolean44 = typeCircularBuffer40.put((java.lang.reflect.Type) wildcardClass43);
        java.lang.Class<?> wildcardClass45 = typeCircularBuffer40.getClass();
        boolean boolean46 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass45);
        boolean boolean47 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass45);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer49 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type52 = typeCircularBuffer51.get();
        boolean boolean53 = typeCircularBuffer51.isFull();
        boolean boolean54 = typeCircularBuffer51.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer56 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean57 = typeCircularBuffer56.isEmpty();
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        boolean boolean60 = typeCircularBuffer56.put((java.lang.reflect.Type) wildcardClass59);
        java.lang.Class<?> wildcardClass61 = typeCircularBuffer56.getClass();
        boolean boolean62 = typeCircularBuffer51.put((java.lang.reflect.Type) wildcardClass61);
        boolean boolean63 = typeCircularBuffer51.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer65 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean66 = typeCircularBuffer65.isFull();
        boolean boolean67 = typeCircularBuffer65.isEmpty();
        java.lang.reflect.Type type68 = typeCircularBuffer65.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer70 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer72 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean73 = typeCircularBuffer72.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer75 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass76 = typeCircularBuffer75.getClass();
        boolean boolean77 = typeCircularBuffer72.put((java.lang.reflect.Type) wildcardClass76);
        java.lang.reflect.Type type78 = typeCircularBuffer72.get();
        boolean boolean79 = typeCircularBuffer70.put(type78);
        java.lang.Class<?> wildcardClass80 = typeCircularBuffer70.getClass();
        boolean boolean81 = typeCircularBuffer65.put((java.lang.reflect.Type) wildcardClass80);
        boolean boolean82 = typeCircularBuffer51.put((java.lang.reflect.Type) wildcardClass80);
        boolean boolean83 = typeCircularBuffer49.put((java.lang.reflect.Type) wildcardClass80);
        boolean boolean84 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass80);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer86 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean87 = typeCircularBuffer86.isFull();
        java.lang.reflect.Type type88 = typeCircularBuffer86.get();
        boolean boolean89 = typeCircularBuffer86.isEmpty();
        boolean boolean90 = typeCircularBuffer86.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer92 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        boolean boolean93 = typeCircularBuffer92.isEmpty();
        java.lang.Class<?> wildcardClass94 = typeCircularBuffer92.getClass();
        boolean boolean95 = typeCircularBuffer86.put((java.lang.reflect.Type) wildcardClass94);
        boolean boolean96 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass94);
        boolean boolean97 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass94);
        boolean boolean98 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass99 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(type31);
        org.junit.Assert.assertNull(type32);
        org.junit.Assert.assertNull(type33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(type38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(type52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNull(type68);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNull(type88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0679");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass10);
        boolean boolean13 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) ' ');
        java.lang.reflect.Type type16 = typeCircularBuffer15.get();
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer15.getClass();
        boolean boolean18 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass17);
        boolean boolean19 = typeCircularBuffer1.isFull();
        boolean boolean20 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(type16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test0680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0680");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        boolean boolean8 = typeCircularBuffer1.isEmpty();
        boolean boolean9 = typeCircularBuffer1.isFull();
        boolean boolean10 = typeCircularBuffer1.isFull();
        boolean boolean11 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type12 = null;
        boolean boolean13 = typeCircularBuffer1.put(type12);
        boolean boolean14 = typeCircularBuffer1.isFull();
        boolean boolean15 = typeCircularBuffer1.isFull();
        boolean boolean16 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test0681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0681");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.AnnotatedElement> annotatedElementCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.AnnotatedElement>(100);
        java.lang.Class<?> wildcardClass2 = annotatedElementCircularBuffer1.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test0682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0682");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer6.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        boolean boolean13 = typeCircularBuffer1.isEmpty();
        boolean boolean14 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass15 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0683");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean10 = typeCircularBuffer9.isFull();
        java.lang.reflect.Type type11 = typeCircularBuffer9.get();
        boolean boolean12 = typeCircularBuffer9.isFull();
        java.lang.reflect.Type type13 = typeCircularBuffer9.get();
        boolean boolean14 = typeCircularBuffer9.isFull();
        boolean boolean15 = typeCircularBuffer9.isEmpty();
        java.lang.Class<?> wildcardClass16 = typeCircularBuffer9.getClass();
        boolean boolean17 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(type11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(type13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test0684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0684");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.AnnotatedElement> annotatedElementCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.AnnotatedElement>((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0685");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer6.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.reflect.Type type13 = typeCircularBuffer1.get();
        boolean boolean14 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer19.getClass();
        boolean boolean21 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean22 = typeCircularBuffer16.isEmpty();
        java.lang.reflect.Type type23 = typeCircularBuffer16.get();
        boolean boolean24 = typeCircularBuffer1.put(type23);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type27 = typeCircularBuffer26.get();
        boolean boolean28 = typeCircularBuffer26.isFull();
        boolean boolean29 = typeCircularBuffer26.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        boolean boolean35 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass34);
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer31.getClass();
        boolean boolean37 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass36);
        java.lang.reflect.Type type38 = typeCircularBuffer26.get();
        boolean boolean39 = typeCircularBuffer26.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type42 = typeCircularBuffer41.get();
        boolean boolean43 = typeCircularBuffer41.isFull();
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer41.getClass();
        boolean boolean45 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean46 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass44);
        java.lang.reflect.Type type47 = typeCircularBuffer1.get();
        boolean boolean48 = typeCircularBuffer1.isFull();
        boolean boolean49 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass50 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(type42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test0686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0686");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean9 = typeCircularBuffer8.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass12 = typeCircularBuffer11.getClass();
        boolean boolean13 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass12);
        java.lang.reflect.Type type14 = typeCircularBuffer8.get();
        boolean boolean15 = typeCircularBuffer6.put(type14);
        java.lang.Class<?> wildcardClass16 = typeCircularBuffer6.getClass();
        boolean boolean17 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass16);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(10);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer19.getClass();
        boolean boolean21 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type22 = typeCircularBuffer1.get();
        java.lang.reflect.Type type23 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type26 = typeCircularBuffer25.get();
        boolean boolean27 = typeCircularBuffer25.isFull();
        boolean boolean28 = typeCircularBuffer25.isEmpty();
        boolean boolean29 = typeCircularBuffer25.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer31.getClass();
        boolean boolean33 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass32);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean36 = typeCircularBuffer35.isFull();
        boolean boolean37 = typeCircularBuffer35.isEmpty();
        boolean boolean38 = typeCircularBuffer35.isFull();
        java.lang.Class<?> wildcardClass39 = typeCircularBuffer35.getClass();
        boolean boolean40 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass39);
        java.lang.reflect.Type type41 = typeCircularBuffer25.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean46 = typeCircularBuffer45.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass49 = typeCircularBuffer48.getClass();
        boolean boolean50 = typeCircularBuffer45.put((java.lang.reflect.Type) wildcardClass49);
        java.lang.reflect.Type type51 = typeCircularBuffer45.get();
        boolean boolean52 = typeCircularBuffer43.put(type51);
        boolean boolean53 = typeCircularBuffer43.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer55 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean56 = typeCircularBuffer55.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer58 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass59 = typeCircularBuffer58.getClass();
        boolean boolean60 = typeCircularBuffer55.put((java.lang.reflect.Type) wildcardClass59);
        java.lang.reflect.Type type61 = typeCircularBuffer55.get();
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        boolean boolean64 = typeCircularBuffer55.put((java.lang.reflect.Type) wildcardClass63);
        boolean boolean65 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass63);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer67 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean68 = typeCircularBuffer67.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer70 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass71 = typeCircularBuffer70.getClass();
        boolean boolean72 = typeCircularBuffer67.put((java.lang.reflect.Type) wildcardClass71);
        java.lang.reflect.Type type73 = typeCircularBuffer67.get();
        boolean boolean74 = typeCircularBuffer43.put(type73);
        java.lang.reflect.Type type75 = typeCircularBuffer43.get();
        boolean boolean76 = typeCircularBuffer25.put(type75);
        boolean boolean77 = typeCircularBuffer25.isFull();
        java.lang.reflect.Type type78 = typeCircularBuffer25.get();
        boolean boolean79 = typeCircularBuffer1.put(type78);
        java.lang.Class<?> wildcardClass80 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNull(type23);
        org.junit.Assert.assertNull(type26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test0687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0687");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        boolean boolean11 = typeCircularBuffer9.isEmpty();
        boolean boolean12 = typeCircularBuffer9.isFull();
        java.lang.reflect.Type type13 = typeCircularBuffer9.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean16 = typeCircularBuffer15.isFull();
        java.lang.reflect.Type type17 = typeCircularBuffer15.get();
        boolean boolean18 = typeCircularBuffer15.isFull();
        boolean boolean19 = typeCircularBuffer15.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean22 = typeCircularBuffer21.isEmpty();
        java.lang.reflect.Type type23 = typeCircularBuffer21.get();
        java.lang.reflect.Type type24 = typeCircularBuffer21.get();
        java.lang.reflect.Type type25 = typeCircularBuffer21.get();
        boolean boolean26 = typeCircularBuffer21.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean29 = typeCircularBuffer28.isFull();
        java.lang.reflect.Type type30 = typeCircularBuffer28.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean33 = typeCircularBuffer32.isEmpty();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        boolean boolean36 = typeCircularBuffer32.put((java.lang.reflect.Type) wildcardClass35);
        java.lang.Class<?> wildcardClass37 = typeCircularBuffer32.getClass();
        boolean boolean38 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass37);
        boolean boolean39 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass37);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '#');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean46 = typeCircularBuffer45.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass49 = typeCircularBuffer48.getClass();
        boolean boolean50 = typeCircularBuffer45.put((java.lang.reflect.Type) wildcardClass49);
        java.lang.reflect.Type type51 = typeCircularBuffer45.get();
        boolean boolean52 = typeCircularBuffer43.put(type51);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer54 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer56 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean57 = typeCircularBuffer56.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer59 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass60 = typeCircularBuffer59.getClass();
        boolean boolean61 = typeCircularBuffer56.put((java.lang.reflect.Type) wildcardClass60);
        java.lang.reflect.Type type62 = typeCircularBuffer56.get();
        boolean boolean63 = typeCircularBuffer54.put(type62);
        java.lang.Class<?> wildcardClass64 = typeCircularBuffer54.getClass();
        boolean boolean65 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass64);
        boolean boolean66 = typeCircularBuffer41.put((java.lang.reflect.Type) wildcardClass64);
        boolean boolean67 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass64);
        boolean boolean68 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass64);
        java.lang.reflect.Type type69 = typeCircularBuffer15.get();
        boolean boolean70 = typeCircularBuffer9.put(type69);
        java.lang.reflect.Type type71 = typeCircularBuffer9.get();
        java.lang.Class<?> wildcardClass72 = typeCircularBuffer9.getClass();
        boolean boolean73 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass72);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(type13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(type17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(type23);
        org.junit.Assert.assertNull(type24);
        org.junit.Assert.assertNull(type25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(type30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test0688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0688");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        java.lang.reflect.Type type12 = typeCircularBuffer6.get();
        boolean boolean13 = typeCircularBuffer4.put(type12);
        boolean boolean14 = typeCircularBuffer4.isFull();
        java.lang.reflect.Type type15 = typeCircularBuffer4.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        boolean boolean21 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean22 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type24 = typeCircularBuffer1.get();
        boolean boolean25 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type26 = typeCircularBuffer1.get();
        java.lang.reflect.Type type27 = typeCircularBuffer1.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass28 = type27.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(type26);
        org.junit.Assert.assertNull(type27);
    }

    @Test
    public void test0689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0689");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean9 = typeCircularBuffer8.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass12 = typeCircularBuffer11.getClass();
        boolean boolean13 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass12);
        java.lang.reflect.Type type14 = typeCircularBuffer8.get();
        boolean boolean15 = typeCircularBuffer6.put(type14);
        java.lang.Class<?> wildcardClass16 = typeCircularBuffer6.getClass();
        boolean boolean17 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass16);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type20 = typeCircularBuffer19.get();
        boolean boolean21 = typeCircularBuffer19.isFull();
        boolean boolean22 = typeCircularBuffer19.isFull();
        boolean boolean23 = typeCircularBuffer19.isFull();
        java.lang.reflect.Type type24 = typeCircularBuffer19.get();
        boolean boolean25 = typeCircularBuffer19.isEmpty();
        java.lang.reflect.Type type26 = typeCircularBuffer19.get();
        java.lang.reflect.Type type27 = typeCircularBuffer19.get();
        boolean boolean28 = typeCircularBuffer19.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean33 = typeCircularBuffer32.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer35.getClass();
        boolean boolean37 = typeCircularBuffer32.put((java.lang.reflect.Type) wildcardClass36);
        java.lang.reflect.Type type38 = typeCircularBuffer32.get();
        boolean boolean39 = typeCircularBuffer30.put(type38);
        boolean boolean40 = typeCircularBuffer30.isFull();
        java.lang.reflect.Type type41 = typeCircularBuffer30.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        boolean boolean47 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass46);
        boolean boolean48 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass46);
        boolean boolean49 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass46);
        java.lang.Class<?> wildcardClass50 = typeCircularBuffer19.getClass();
        boolean boolean51 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass50);
        boolean boolean52 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(type20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(type26);
        org.junit.Assert.assertNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
    }

    @Test
    public void test0690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0690");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.reflect.Type type11 = typeCircularBuffer1.get();
        boolean boolean12 = typeCircularBuffer1.isFull();
        boolean boolean13 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type14 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(type14);
    }

    @Test
    public void test0691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0691");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean9 = typeCircularBuffer8.isFull();
        java.lang.reflect.Type type10 = typeCircularBuffer8.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean13 = typeCircularBuffer12.isEmpty();
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        boolean boolean16 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass15);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer12.getClass();
        boolean boolean18 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass17);
        boolean boolean19 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type20 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass26 = typeCircularBuffer25.getClass();
        boolean boolean27 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass26);
        java.lang.reflect.Type type28 = typeCircularBuffer22.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type31 = typeCircularBuffer30.get();
        boolean boolean32 = typeCircularBuffer30.isFull();
        boolean boolean33 = typeCircularBuffer30.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean36 = typeCircularBuffer35.isEmpty();
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        boolean boolean39 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass38);
        java.lang.Class<?> wildcardClass40 = typeCircularBuffer35.getClass();
        boolean boolean41 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass40);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        boolean boolean47 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass46);
        java.lang.Class<?> wildcardClass48 = typeCircularBuffer43.getClass();
        boolean boolean49 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass48);
        boolean boolean50 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass48);
        java.lang.reflect.Type type51 = typeCircularBuffer22.get();
        java.lang.reflect.Type type52 = typeCircularBuffer22.get();
        boolean boolean53 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer55 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass56 = typeCircularBuffer55.getClass();
        boolean boolean57 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass56);
        boolean boolean58 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass56);
        java.lang.reflect.Type type59 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNull(type31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNull(type52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(type59);
    }

    @Test
    public void test0692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0692");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean24 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type27 = typeCircularBuffer26.get();
        boolean boolean28 = typeCircularBuffer26.isFull();
        boolean boolean29 = typeCircularBuffer26.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        boolean boolean35 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass34);
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer31.getClass();
        boolean boolean37 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass36);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean40 = typeCircularBuffer39.isEmpty();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        boolean boolean43 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass42);
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer39.getClass();
        boolean boolean45 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean46 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass44);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass49 = typeCircularBuffer48.getClass();
        boolean boolean50 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass49);
        java.lang.reflect.Type type51 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(type51);
    }

    @Test
    public void test0693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0693");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        boolean boolean6 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean9 = typeCircularBuffer8.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        boolean boolean20 = typeCircularBuffer11.put(type19);
        boolean boolean21 = typeCircularBuffer11.isFull();
        java.lang.reflect.Type type22 = typeCircularBuffer11.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type25 = typeCircularBuffer24.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean28 = typeCircularBuffer27.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass31 = typeCircularBuffer30.getClass();
        boolean boolean32 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass31);
        java.lang.reflect.Type type33 = typeCircularBuffer27.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type36 = typeCircularBuffer35.get();
        boolean boolean37 = typeCircularBuffer35.isFull();
        boolean boolean38 = typeCircularBuffer35.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean41 = typeCircularBuffer40.isEmpty();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        boolean boolean44 = typeCircularBuffer40.put((java.lang.reflect.Type) wildcardClass43);
        java.lang.Class<?> wildcardClass45 = typeCircularBuffer40.getClass();
        boolean boolean46 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass45);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean49 = typeCircularBuffer48.isEmpty();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        boolean boolean52 = typeCircularBuffer48.put((java.lang.reflect.Type) wildcardClass51);
        java.lang.Class<?> wildcardClass53 = typeCircularBuffer48.getClass();
        boolean boolean54 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass53);
        boolean boolean55 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass53);
        boolean boolean56 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass53);
        boolean boolean57 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass53);
        boolean boolean58 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass53);
        boolean boolean59 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass53);
        java.lang.reflect.Type type60 = typeCircularBuffer1.get();
        boolean boolean61 = typeCircularBuffer1.isFull();
        boolean boolean62 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type63 = typeCircularBuffer1.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass64 = type63.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNull(type25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNull(type36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNull(type63);
    }

    @Test
    public void test0694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0694");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer10.get();
        boolean boolean17 = typeCircularBuffer8.put(type16);
        boolean boolean18 = typeCircularBuffer8.isFull();
        java.lang.reflect.Type type19 = typeCircularBuffer8.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean22 = typeCircularBuffer21.isEmpty();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean26 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean27 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean28 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean31 = typeCircularBuffer30.isFull();
        boolean boolean32 = typeCircularBuffer30.isEmpty();
        boolean boolean33 = typeCircularBuffer30.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean36 = typeCircularBuffer35.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass39 = typeCircularBuffer38.getClass();
        boolean boolean40 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass39);
        java.lang.reflect.Type type41 = typeCircularBuffer35.get();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        boolean boolean44 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass43);
        boolean boolean45 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass43);
        boolean boolean46 = typeCircularBuffer30.isFull();
        java.lang.reflect.Type type47 = typeCircularBuffer30.get();
        boolean boolean48 = typeCircularBuffer1.put(type47);
        boolean boolean49 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean52 = typeCircularBuffer51.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer54 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass55 = typeCircularBuffer54.getClass();
        boolean boolean56 = typeCircularBuffer51.put((java.lang.reflect.Type) wildcardClass55);
        java.lang.reflect.Type type57 = typeCircularBuffer51.get();
        boolean boolean58 = typeCircularBuffer51.isFull();
        java.lang.reflect.Type type59 = typeCircularBuffer51.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer61 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean62 = typeCircularBuffer61.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer64 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass65 = typeCircularBuffer64.getClass();
        boolean boolean66 = typeCircularBuffer61.put((java.lang.reflect.Type) wildcardClass65);
        java.lang.reflect.Type type67 = typeCircularBuffer61.get();
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        boolean boolean70 = typeCircularBuffer61.put((java.lang.reflect.Type) wildcardClass69);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer72 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean73 = typeCircularBuffer72.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer75 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass76 = typeCircularBuffer75.getClass();
        boolean boolean77 = typeCircularBuffer72.put((java.lang.reflect.Type) wildcardClass76);
        java.lang.Class<?> wildcardClass78 = typeCircularBuffer72.getClass();
        boolean boolean79 = typeCircularBuffer61.put((java.lang.reflect.Type) wildcardClass78);
        boolean boolean80 = typeCircularBuffer51.put((java.lang.reflect.Type) wildcardClass78);
        java.lang.reflect.Type type81 = typeCircularBuffer51.get();
        boolean boolean82 = typeCircularBuffer1.put(type81);
        boolean boolean83 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(type59);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(type81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
    }

    @Test
    public void test0695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0695");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        boolean boolean7 = typeCircularBuffer6.isFull();
        boolean boolean8 = typeCircularBuffer6.isEmpty();
        java.lang.Class<?> wildcardClass9 = typeCircularBuffer6.getClass();
        boolean boolean10 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass12 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0696");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type10 = typeCircularBuffer9.get();
        boolean boolean11 = typeCircularBuffer9.isFull();
        boolean boolean12 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer14.getClass();
        boolean boolean20 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass19);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        boolean boolean26 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer22.getClass();
        boolean boolean28 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean30 = typeCircularBuffer1.isEmpty();
        boolean boolean31 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean36 = typeCircularBuffer35.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass39 = typeCircularBuffer38.getClass();
        boolean boolean40 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass39);
        java.lang.reflect.Type type41 = typeCircularBuffer35.get();
        boolean boolean42 = typeCircularBuffer33.put(type41);
        boolean boolean43 = typeCircularBuffer33.isEmpty();
        boolean boolean44 = typeCircularBuffer33.isFull();
        boolean boolean45 = typeCircularBuffer33.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer49 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean50 = typeCircularBuffer49.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer52 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass53 = typeCircularBuffer52.getClass();
        boolean boolean54 = typeCircularBuffer49.put((java.lang.reflect.Type) wildcardClass53);
        java.lang.reflect.Type type55 = typeCircularBuffer49.get();
        boolean boolean56 = typeCircularBuffer47.put(type55);
        boolean boolean57 = typeCircularBuffer47.isFull();
        java.lang.reflect.Type type58 = typeCircularBuffer47.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer60 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean61 = typeCircularBuffer60.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer63 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass64 = typeCircularBuffer63.getClass();
        boolean boolean65 = typeCircularBuffer60.put((java.lang.reflect.Type) wildcardClass64);
        boolean boolean66 = typeCircularBuffer60.isFull();
        java.lang.reflect.Type type67 = typeCircularBuffer60.get();
        boolean boolean68 = typeCircularBuffer47.put(type67);
        boolean boolean69 = typeCircularBuffer33.put(type67);
        boolean boolean70 = typeCircularBuffer1.put(type67);
        java.lang.reflect.Type type71 = typeCircularBuffer1.get();
        boolean boolean72 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
    }

    @Test
    public void test0697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0697");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isFull();
        boolean boolean8 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean12 = typeCircularBuffer11.isEmpty();
        java.lang.reflect.Type type13 = typeCircularBuffer11.get();
        boolean boolean14 = typeCircularBuffer11.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type17 = typeCircularBuffer16.get();
        boolean boolean18 = typeCircularBuffer16.isFull();
        boolean boolean19 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean22 = typeCircularBuffer21.isEmpty();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass24);
        java.lang.Class<?> wildcardClass26 = typeCircularBuffer21.getClass();
        boolean boolean27 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass26);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean30 = typeCircularBuffer29.isEmpty();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        boolean boolean33 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass32);
        java.lang.Class<?> wildcardClass34 = typeCircularBuffer29.getClass();
        boolean boolean35 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass34);
        boolean boolean36 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass34);
        boolean boolean37 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass34);
        boolean boolean38 = typeCircularBuffer1.isEmpty();
        boolean boolean39 = typeCircularBuffer1.isEmpty();
        boolean boolean40 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(type13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(type17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
    }

    @Test
    public void test0698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0698");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type5 = null;
        boolean boolean6 = typeCircularBuffer1.put(type5);
        boolean boolean7 = typeCircularBuffer1.isFull();
        boolean boolean8 = typeCircularBuffer1.isFull();
        boolean boolean9 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type10 = typeCircularBuffer1.get();
        boolean boolean11 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0699");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        boolean boolean7 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean19 = typeCircularBuffer18.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer21.getClass();
        boolean boolean23 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass22);
        java.lang.reflect.Type type24 = typeCircularBuffer18.get();
        boolean boolean25 = typeCircularBuffer16.put(type24);
        boolean boolean26 = typeCircularBuffer16.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer31.getClass();
        boolean boolean33 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass32);
        java.lang.reflect.Type type34 = typeCircularBuffer28.get();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        boolean boolean37 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean38 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean39 = typeCircularBuffer16.isEmpty();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        boolean boolean42 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean43 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean44 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean45 = typeCircularBuffer1.isFull();
        boolean boolean46 = typeCircularBuffer1.isEmpty();
        boolean boolean47 = typeCircularBuffer1.isFull();
        boolean boolean48 = typeCircularBuffer1.isEmpty();
        boolean boolean49 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type50 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(type50);
    }

    @Test
    public void test0700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0700");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        boolean boolean10 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0701");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type24 = typeCircularBuffer1.get();
        boolean boolean25 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type28 = typeCircularBuffer27.get();
        boolean boolean29 = typeCircularBuffer27.isFull();
        boolean boolean30 = typeCircularBuffer27.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean33 = typeCircularBuffer32.isEmpty();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        boolean boolean36 = typeCircularBuffer32.put((java.lang.reflect.Type) wildcardClass35);
        java.lang.Class<?> wildcardClass37 = typeCircularBuffer32.getClass();
        boolean boolean38 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass37);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean41 = typeCircularBuffer40.isFull();
        java.lang.reflect.Type type42 = typeCircularBuffer40.get();
        boolean boolean43 = typeCircularBuffer40.isEmpty();
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer40.getClass();
        boolean boolean45 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean46 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass44);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean49 = typeCircularBuffer48.isEmpty();
        java.lang.reflect.Type type50 = typeCircularBuffer48.get();
        java.lang.reflect.Type type51 = typeCircularBuffer48.get();
        java.lang.reflect.Type type52 = typeCircularBuffer48.get();
        boolean boolean53 = typeCircularBuffer48.isFull();
        boolean boolean54 = typeCircularBuffer48.isFull();
        boolean boolean55 = typeCircularBuffer48.isFull();
        java.lang.reflect.Type type56 = typeCircularBuffer48.get();
        java.lang.Class<?> wildcardClass57 = typeCircularBuffer48.getClass();
        boolean boolean58 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass57);
        java.lang.Class<?> wildcardClass59 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(type28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(type42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(type50);
        org.junit.Assert.assertNull(type51);
        org.junit.Assert.assertNull(type52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(type56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test0702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0702");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer5 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean6 = typeCircularBuffer5.isFull();
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer5.getClass();
        boolean boolean8 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass10 = type9.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0703");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean9 = typeCircularBuffer8.isFull();
        java.lang.reflect.Type type10 = typeCircularBuffer8.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean13 = typeCircularBuffer12.isEmpty();
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        boolean boolean16 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass15);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer12.getClass();
        boolean boolean18 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass17);
        boolean boolean19 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass17);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '#');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean26 = typeCircularBuffer25.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass29 = typeCircularBuffer28.getClass();
        boolean boolean30 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass29);
        java.lang.reflect.Type type31 = typeCircularBuffer25.get();
        boolean boolean32 = typeCircularBuffer23.put(type31);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean37 = typeCircularBuffer36.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass40 = typeCircularBuffer39.getClass();
        boolean boolean41 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass40);
        java.lang.reflect.Type type42 = typeCircularBuffer36.get();
        boolean boolean43 = typeCircularBuffer34.put(type42);
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer34.getClass();
        boolean boolean45 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean46 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean47 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean48 = typeCircularBuffer1.isFull();
        boolean boolean49 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type50 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass51 = type50.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test0704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0704");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type9 = typeCircularBuffer8.get();
        boolean boolean10 = typeCircularBuffer8.isFull();
        boolean boolean11 = typeCircularBuffer8.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass16);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer13.getClass();
        boolean boolean19 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass18);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean22 = typeCircularBuffer21.isEmpty();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass24);
        java.lang.Class<?> wildcardClass26 = typeCircularBuffer21.getClass();
        boolean boolean27 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass26);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer34.getClass();
        boolean boolean36 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass35);
        java.lang.reflect.Type type37 = typeCircularBuffer31.get();
        boolean boolean38 = typeCircularBuffer29.put(type37);
        java.lang.Class<?> wildcardClass39 = typeCircularBuffer29.getClass();
        boolean boolean40 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass39);
        java.lang.Class<?> wildcardClass41 = typeCircularBuffer8.getClass();
        boolean boolean42 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean43 = typeCircularBuffer1.isFull();
        boolean boolean44 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type45 = typeCircularBuffer1.get();
        boolean boolean46 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type47 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(type47);
    }

    @Test
    public void test0705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0705");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer10.get();
        boolean boolean17 = typeCircularBuffer8.put(type16);
        boolean boolean18 = typeCircularBuffer8.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean21 = typeCircularBuffer20.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer23.getClass();
        boolean boolean25 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass24);
        java.lang.reflect.Type type26 = typeCircularBuffer20.get();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        boolean boolean29 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass28);
        boolean boolean30 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass28);
        boolean boolean31 = typeCircularBuffer8.isEmpty();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        boolean boolean34 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass33);
        boolean boolean35 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass33);
        boolean boolean36 = typeCircularBuffer1.isEmpty();
        boolean boolean37 = typeCircularBuffer1.isEmpty();
        boolean boolean38 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean41 = typeCircularBuffer40.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer43.getClass();
        boolean boolean45 = typeCircularBuffer40.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean46 = typeCircularBuffer40.isFull();
        java.lang.reflect.Type type47 = typeCircularBuffer40.get();
        boolean boolean48 = typeCircularBuffer1.put(type47);
        boolean boolean49 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type50 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test0706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0706");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.constant.ConstantDesc> constantDescCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.constant.ConstantDesc>((int) ' ');
    }

    @Test
    public void test0707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0707");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        java.lang.reflect.Type type12 = typeCircularBuffer6.get();
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        boolean boolean15 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass14);
        boolean boolean16 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass14);
        boolean boolean17 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type18 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean21 = typeCircularBuffer20.isFull();
        boolean boolean22 = typeCircularBuffer20.isEmpty();
        boolean boolean23 = typeCircularBuffer20.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean26 = typeCircularBuffer25.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass29 = typeCircularBuffer28.getClass();
        boolean boolean30 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass29);
        java.lang.reflect.Type type31 = typeCircularBuffer25.get();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        boolean boolean34 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass33);
        boolean boolean35 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass33);
        boolean boolean36 = typeCircularBuffer20.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean41 = typeCircularBuffer40.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer43.getClass();
        boolean boolean45 = typeCircularBuffer40.put((java.lang.reflect.Type) wildcardClass44);
        java.lang.reflect.Type type46 = typeCircularBuffer40.get();
        boolean boolean47 = typeCircularBuffer38.put(type46);
        boolean boolean48 = typeCircularBuffer38.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean51 = typeCircularBuffer50.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer53 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass54 = typeCircularBuffer53.getClass();
        boolean boolean55 = typeCircularBuffer50.put((java.lang.reflect.Type) wildcardClass54);
        java.lang.reflect.Type type56 = typeCircularBuffer50.get();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        boolean boolean59 = typeCircularBuffer50.put((java.lang.reflect.Type) wildcardClass58);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer61 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean62 = typeCircularBuffer61.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer64 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass65 = typeCircularBuffer64.getClass();
        boolean boolean66 = typeCircularBuffer61.put((java.lang.reflect.Type) wildcardClass65);
        java.lang.Class<?> wildcardClass67 = typeCircularBuffer61.getClass();
        boolean boolean68 = typeCircularBuffer50.put((java.lang.reflect.Type) wildcardClass67);
        boolean boolean69 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass67);
        boolean boolean70 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass67);
        boolean boolean71 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass67);
        boolean boolean72 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type73 = typeCircularBuffer1.get();
        boolean boolean74 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
    }

    @Test
    public void test0708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0708");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>((int) (byte) 100);
    }

    @Test
    public void test0709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0709");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type12 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean17 = typeCircularBuffer16.isFull();
        boolean boolean18 = typeCircularBuffer16.isEmpty();
        java.lang.reflect.Type type19 = typeCircularBuffer16.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean24 = typeCircularBuffer23.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer26.getClass();
        boolean boolean28 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass27);
        java.lang.reflect.Type type29 = typeCircularBuffer23.get();
        boolean boolean30 = typeCircularBuffer21.put(type29);
        java.lang.Class<?> wildcardClass31 = typeCircularBuffer21.getClass();
        boolean boolean32 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass31);
        boolean boolean33 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass31);
        boolean boolean34 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass31);
        boolean boolean35 = typeCircularBuffer1.isEmpty();
        boolean boolean36 = typeCircularBuffer1.isEmpty();
        boolean boolean37 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(type19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
    }

    @Test
    public void test0710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0710");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) ' ');
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean5 = typeCircularBuffer4.isEmpty();
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        boolean boolean8 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.Class<?> wildcardClass9 = typeCircularBuffer4.getClass();
        boolean boolean10 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass9);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean13 = typeCircularBuffer12.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type16 = typeCircularBuffer15.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean21 = typeCircularBuffer20.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer23.getClass();
        boolean boolean25 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass24);
        java.lang.reflect.Type type26 = typeCircularBuffer20.get();
        boolean boolean27 = typeCircularBuffer18.put(type26);
        boolean boolean28 = typeCircularBuffer18.isFull();
        java.lang.reflect.Type type29 = typeCircularBuffer18.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        boolean boolean35 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass34);
        boolean boolean36 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass34);
        boolean boolean37 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass34);
        boolean boolean38 = typeCircularBuffer15.isEmpty();
        java.lang.Class<?> wildcardClass39 = typeCircularBuffer15.getClass();
        boolean boolean40 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass39);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean43 = typeCircularBuffer42.isFull();
        boolean boolean44 = typeCircularBuffer42.isEmpty();
        boolean boolean45 = typeCircularBuffer42.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean48 = typeCircularBuffer47.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer50.getClass();
        boolean boolean52 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass51);
        java.lang.reflect.Type type53 = typeCircularBuffer47.get();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        boolean boolean56 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass55);
        boolean boolean57 = typeCircularBuffer42.put((java.lang.reflect.Type) wildcardClass55);
        boolean boolean58 = typeCircularBuffer42.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer60 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer62 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean63 = typeCircularBuffer62.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer65 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass66 = typeCircularBuffer65.getClass();
        boolean boolean67 = typeCircularBuffer62.put((java.lang.reflect.Type) wildcardClass66);
        java.lang.reflect.Type type68 = typeCircularBuffer62.get();
        boolean boolean69 = typeCircularBuffer60.put(type68);
        boolean boolean70 = typeCircularBuffer60.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer72 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean73 = typeCircularBuffer72.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer75 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass76 = typeCircularBuffer75.getClass();
        boolean boolean77 = typeCircularBuffer72.put((java.lang.reflect.Type) wildcardClass76);
        java.lang.reflect.Type type78 = typeCircularBuffer72.get();
        java.lang.Object obj79 = new java.lang.Object();
        java.lang.Class<?> wildcardClass80 = obj79.getClass();
        boolean boolean81 = typeCircularBuffer72.put((java.lang.reflect.Type) wildcardClass80);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer83 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean84 = typeCircularBuffer83.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer86 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass87 = typeCircularBuffer86.getClass();
        boolean boolean88 = typeCircularBuffer83.put((java.lang.reflect.Type) wildcardClass87);
        java.lang.Class<?> wildcardClass89 = typeCircularBuffer83.getClass();
        boolean boolean90 = typeCircularBuffer72.put((java.lang.reflect.Type) wildcardClass89);
        boolean boolean91 = typeCircularBuffer60.put((java.lang.reflect.Type) wildcardClass89);
        boolean boolean92 = typeCircularBuffer42.put((java.lang.reflect.Type) wildcardClass89);
        boolean boolean93 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass89);
        boolean boolean94 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass89);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.invoke.TypeDescriptor> typeDescriptorCircularBuffer96 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.invoke.TypeDescriptor>((int) (byte) 100);
        java.lang.Class<?> wildcardClass97 = typeDescriptorCircularBuffer96.getClass();
        boolean boolean98 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass97);
        boolean boolean99 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(type16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test0711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0711");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean5 = typeCircularBuffer4.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass8 = typeCircularBuffer7.getClass();
        boolean boolean9 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass8);
        java.lang.reflect.Type type10 = typeCircularBuffer4.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type13 = typeCircularBuffer12.get();
        boolean boolean14 = typeCircularBuffer12.isFull();
        boolean boolean15 = typeCircularBuffer12.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        boolean boolean21 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer17.getClass();
        boolean boolean23 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass22);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean26 = typeCircularBuffer25.isEmpty();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        boolean boolean29 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.Class<?> wildcardClass30 = typeCircularBuffer25.getClass();
        boolean boolean31 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass30);
        boolean boolean32 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass30);
        java.lang.Class<?> wildcardClass33 = typeCircularBuffer4.getClass();
        boolean boolean34 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass33);
        java.lang.reflect.Type type35 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass36 = type35.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNull(type13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0712");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.Object> objCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.Object>((int) (byte) 1);
        java.lang.Class<?> wildcardClass2 = objCircularBuffer1.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test0713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0713");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        boolean boolean6 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        boolean boolean8 = typeCircularBuffer1.isEmpty();
        boolean boolean9 = typeCircularBuffer1.isFull();
        boolean boolean10 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type11 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(type11);
    }

    @Test
    public void test0714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0714");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        boolean boolean9 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer13.getClass();
        boolean boolean21 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean22 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean23 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean26 = typeCircularBuffer25.isEmpty();
        java.lang.reflect.Type type27 = typeCircularBuffer25.get();
        java.lang.reflect.Type type28 = typeCircularBuffer25.get();
        java.lang.reflect.Type type29 = typeCircularBuffer25.get();
        boolean boolean30 = typeCircularBuffer25.isFull();
        java.lang.reflect.Type type31 = typeCircularBuffer25.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean34 = typeCircularBuffer33.isEmpty();
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer33.getClass();
        boolean boolean36 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass35);
        java.lang.Class<?> wildcardClass37 = typeCircularBuffer25.getClass();
        boolean boolean38 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass37);
        java.lang.reflect.Type type39 = typeCircularBuffer1.get();
        java.lang.reflect.Type type40 = typeCircularBuffer1.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass41 = type40.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(type27);
        org.junit.Assert.assertNull(type28);
        org.junit.Assert.assertNull(type29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(type31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNull(type40);
    }

    @Test
    public void test0715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0715");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0716");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean4 = typeCircularBuffer3.isFull();
        boolean boolean5 = typeCircularBuffer3.isEmpty();
        java.lang.reflect.Type type6 = typeCircularBuffer3.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer10.get();
        boolean boolean17 = typeCircularBuffer8.put(type16);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer8.getClass();
        boolean boolean19 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass18);
        boolean boolean20 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass18);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type23 = typeCircularBuffer22.get();
        boolean boolean24 = typeCircularBuffer22.isFull();
        boolean boolean25 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean28 = typeCircularBuffer27.isEmpty();
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        boolean boolean31 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass30);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer27.getClass();
        boolean boolean33 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean37 = typeCircularBuffer36.isFull();
        boolean boolean38 = typeCircularBuffer36.isEmpty();
        java.lang.reflect.Type type39 = typeCircularBuffer36.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer46.getClass();
        boolean boolean48 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass47);
        java.lang.reflect.Type type49 = typeCircularBuffer43.get();
        boolean boolean50 = typeCircularBuffer41.put(type49);
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer41.getClass();
        boolean boolean52 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean53 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass51);
        java.lang.Class<?> wildcardClass54 = typeCircularBuffer22.getClass();
        boolean boolean55 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean56 = typeCircularBuffer1.isEmpty();
        boolean boolean57 = typeCircularBuffer1.isFull();
        boolean boolean58 = typeCircularBuffer1.isFull();
        boolean boolean59 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass60 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(type39);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test0717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0717");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.CharSequence> charSequenceCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.CharSequence>(10);
    }

    @Test
    public void test0718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0718");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean4 = typeCircularBuffer3.isFull();
        boolean boolean5 = typeCircularBuffer3.isEmpty();
        java.lang.reflect.Type type6 = typeCircularBuffer3.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer10.get();
        boolean boolean17 = typeCircularBuffer8.put(type16);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer8.getClass();
        boolean boolean19 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass18);
        boolean boolean20 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass18);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type23 = typeCircularBuffer22.get();
        boolean boolean24 = typeCircularBuffer22.isFull();
        boolean boolean25 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean28 = typeCircularBuffer27.isEmpty();
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        boolean boolean31 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass30);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer27.getClass();
        boolean boolean33 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean37 = typeCircularBuffer36.isFull();
        boolean boolean38 = typeCircularBuffer36.isEmpty();
        java.lang.reflect.Type type39 = typeCircularBuffer36.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer46.getClass();
        boolean boolean48 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass47);
        java.lang.reflect.Type type49 = typeCircularBuffer43.get();
        boolean boolean50 = typeCircularBuffer41.put(type49);
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer41.getClass();
        boolean boolean52 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean53 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass51);
        java.lang.Class<?> wildcardClass54 = typeCircularBuffer22.getClass();
        boolean boolean55 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean56 = typeCircularBuffer1.isEmpty();
        boolean boolean57 = typeCircularBuffer1.isEmpty();
        boolean boolean58 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer60 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type61 = typeCircularBuffer60.get();
        boolean boolean62 = typeCircularBuffer60.isFull();
        boolean boolean63 = typeCircularBuffer60.isEmpty();
        boolean boolean64 = typeCircularBuffer60.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer66 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass67 = typeCircularBuffer66.getClass();
        boolean boolean68 = typeCircularBuffer60.put((java.lang.reflect.Type) wildcardClass67);
        boolean boolean69 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass67);
        java.lang.reflect.Type type70 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass71 = type70.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(type39);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(type61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test0719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0719");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean19 = typeCircularBuffer18.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer21.getClass();
        boolean boolean23 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass22);
        java.lang.reflect.Type type24 = typeCircularBuffer18.get();
        boolean boolean25 = typeCircularBuffer16.put(type24);
        boolean boolean26 = typeCircularBuffer16.isFull();
        java.lang.reflect.Type type27 = typeCircularBuffer16.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean30 = typeCircularBuffer29.isEmpty();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        boolean boolean33 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean35 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean36 = typeCircularBuffer9.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean39 = typeCircularBuffer38.isFull();
        boolean boolean40 = typeCircularBuffer38.isEmpty();
        boolean boolean41 = typeCircularBuffer38.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer46.getClass();
        boolean boolean48 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass47);
        java.lang.reflect.Type type49 = typeCircularBuffer43.get();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        boolean boolean52 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean53 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean54 = typeCircularBuffer38.isFull();
        java.lang.reflect.Type type55 = typeCircularBuffer38.get();
        boolean boolean56 = typeCircularBuffer9.put(type55);
        java.lang.Class<?> wildcardClass57 = type55.getClass();
        boolean boolean58 = typeCircularBuffer1.put(type55);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer60 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean61 = typeCircularBuffer60.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer63 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass64 = typeCircularBuffer63.getClass();
        boolean boolean65 = typeCircularBuffer60.put((java.lang.reflect.Type) wildcardClass64);
        boolean boolean66 = typeCircularBuffer60.isEmpty();
        java.lang.reflect.Type type67 = typeCircularBuffer60.get();
        boolean boolean68 = typeCircularBuffer1.put(type67);
        java.lang.reflect.Type type69 = typeCircularBuffer1.get();
        java.lang.reflect.Type type70 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNull(type70);
    }

    @Test
    public void test0720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0720");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isFull();
        boolean boolean8 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean12 = typeCircularBuffer11.isEmpty();
        java.lang.reflect.Type type13 = typeCircularBuffer11.get();
        boolean boolean14 = typeCircularBuffer11.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type17 = typeCircularBuffer16.get();
        boolean boolean18 = typeCircularBuffer16.isFull();
        boolean boolean19 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean22 = typeCircularBuffer21.isEmpty();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass24);
        java.lang.Class<?> wildcardClass26 = typeCircularBuffer21.getClass();
        boolean boolean27 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass26);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean30 = typeCircularBuffer29.isEmpty();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        boolean boolean33 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass32);
        java.lang.Class<?> wildcardClass34 = typeCircularBuffer29.getClass();
        boolean boolean35 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass34);
        boolean boolean36 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass34);
        boolean boolean37 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass34);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean40 = typeCircularBuffer39.isEmpty();
        java.lang.reflect.Type type41 = typeCircularBuffer39.get();
        java.lang.reflect.Type type42 = typeCircularBuffer39.get();
        java.lang.reflect.Type type43 = typeCircularBuffer39.get();
        boolean boolean44 = typeCircularBuffer39.isFull();
        boolean boolean45 = typeCircularBuffer39.isFull();
        java.lang.reflect.Type type46 = typeCircularBuffer39.get();
        boolean boolean47 = typeCircularBuffer39.isFull();
        boolean boolean48 = typeCircularBuffer39.isEmpty();
        boolean boolean49 = typeCircularBuffer39.isFull();
        java.lang.Class<?> wildcardClass50 = typeCircularBuffer39.getClass();
        boolean boolean51 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass50);
        boolean boolean52 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass53 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(type13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(type17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(type41);
        org.junit.Assert.assertNull(type42);
        org.junit.Assert.assertNull(type43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(type46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test0721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0721");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type4 = typeCircularBuffer3.get();
        boolean boolean5 = typeCircularBuffer3.isFull();
        boolean boolean6 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean9 = typeCircularBuffer8.isEmpty();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer8.getClass();
        boolean boolean14 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass13);
        boolean boolean15 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean18 = typeCircularBuffer17.isFull();
        boolean boolean19 = typeCircularBuffer17.isEmpty();
        java.lang.reflect.Type type20 = typeCircularBuffer17.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean25 = typeCircularBuffer24.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer27.getClass();
        boolean boolean29 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.reflect.Type type30 = typeCircularBuffer24.get();
        boolean boolean31 = typeCircularBuffer22.put(type30);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer22.getClass();
        boolean boolean33 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean35 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass32);
        java.lang.reflect.Type type36 = typeCircularBuffer1.get();
        java.lang.reflect.Type type37 = typeCircularBuffer1.get();
        boolean boolean38 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(type20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(type36);
        org.junit.Assert.assertNull(type37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
    }

    @Test
    public void test0722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0722");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass21);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean26 = typeCircularBuffer25.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass29 = typeCircularBuffer28.getClass();
        boolean boolean30 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass29);
        java.lang.reflect.Type type31 = typeCircularBuffer25.get();
        boolean boolean32 = typeCircularBuffer1.put(type31);
        java.lang.reflect.Type type33 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean36 = typeCircularBuffer35.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean41 = typeCircularBuffer40.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer43.getClass();
        boolean boolean45 = typeCircularBuffer40.put((java.lang.reflect.Type) wildcardClass44);
        java.lang.reflect.Type type46 = typeCircularBuffer40.get();
        boolean boolean47 = typeCircularBuffer38.put(type46);
        boolean boolean48 = typeCircularBuffer38.isFull();
        java.lang.reflect.Type type49 = typeCircularBuffer38.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type52 = typeCircularBuffer51.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer54 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean55 = typeCircularBuffer54.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer57 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass58 = typeCircularBuffer57.getClass();
        boolean boolean59 = typeCircularBuffer54.put((java.lang.reflect.Type) wildcardClass58);
        java.lang.reflect.Type type60 = typeCircularBuffer54.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer62 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type63 = typeCircularBuffer62.get();
        boolean boolean64 = typeCircularBuffer62.isFull();
        boolean boolean65 = typeCircularBuffer62.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer67 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean68 = typeCircularBuffer67.isEmpty();
        java.lang.Object obj69 = new java.lang.Object();
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        boolean boolean71 = typeCircularBuffer67.put((java.lang.reflect.Type) wildcardClass70);
        java.lang.Class<?> wildcardClass72 = typeCircularBuffer67.getClass();
        boolean boolean73 = typeCircularBuffer62.put((java.lang.reflect.Type) wildcardClass72);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer75 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean76 = typeCircularBuffer75.isEmpty();
        java.lang.Object obj77 = new java.lang.Object();
        java.lang.Class<?> wildcardClass78 = obj77.getClass();
        boolean boolean79 = typeCircularBuffer75.put((java.lang.reflect.Type) wildcardClass78);
        java.lang.Class<?> wildcardClass80 = typeCircularBuffer75.getClass();
        boolean boolean81 = typeCircularBuffer62.put((java.lang.reflect.Type) wildcardClass80);
        boolean boolean82 = typeCircularBuffer54.put((java.lang.reflect.Type) wildcardClass80);
        boolean boolean83 = typeCircularBuffer51.put((java.lang.reflect.Type) wildcardClass80);
        boolean boolean84 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass80);
        boolean boolean85 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass80);
        boolean boolean86 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass80);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNull(type52);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNull(type63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
    }

    @Test
    public void test0723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0723");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isFull();
        boolean boolean8 = typeCircularBuffer1.isFull();
        boolean boolean9 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type10 = typeCircularBuffer1.get();
        java.lang.reflect.Type type11 = typeCircularBuffer1.get();
        boolean boolean12 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertNull(type11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0724");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer6.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.reflect.Type type13 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer20.getClass();
        boolean boolean22 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type23 = typeCircularBuffer17.get();
        boolean boolean24 = typeCircularBuffer15.put(type23);
        boolean boolean25 = typeCircularBuffer1.put(type23);
        java.lang.reflect.Type type26 = null;
        boolean boolean27 = typeCircularBuffer1.put(type26);
        boolean boolean28 = typeCircularBuffer1.isEmpty();
        boolean boolean29 = typeCircularBuffer1.isFull();
        boolean boolean30 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type31 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(type31);
    }

    @Test
    public void test0725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0725");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean5 = typeCircularBuffer4.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass8 = typeCircularBuffer7.getClass();
        boolean boolean9 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass8);
        java.lang.reflect.Type type10 = typeCircularBuffer4.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type13 = typeCircularBuffer12.get();
        boolean boolean14 = typeCircularBuffer12.isFull();
        boolean boolean15 = typeCircularBuffer12.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        boolean boolean21 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer17.getClass();
        boolean boolean23 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass22);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean26 = typeCircularBuffer25.isEmpty();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        boolean boolean29 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.Class<?> wildcardClass30 = typeCircularBuffer25.getClass();
        boolean boolean31 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass30);
        boolean boolean32 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass30);
        java.lang.Class<?> wildcardClass33 = typeCircularBuffer4.getClass();
        boolean boolean34 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass33);
        boolean boolean35 = typeCircularBuffer1.isFull();
        boolean boolean36 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNull(type13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test0726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0726");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        boolean boolean7 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer10.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer19.getClass();
        boolean boolean21 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type22 = typeCircularBuffer16.get();
        boolean boolean23 = typeCircularBuffer14.put(type22);
        java.lang.reflect.Type type24 = typeCircularBuffer14.get();
        boolean boolean25 = typeCircularBuffer14.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean28 = typeCircularBuffer27.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass31 = typeCircularBuffer30.getClass();
        boolean boolean32 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass31);
        java.lang.reflect.Type type33 = typeCircularBuffer27.get();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        boolean boolean36 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass35);
        java.lang.reflect.Type type37 = typeCircularBuffer27.get();
        boolean boolean38 = typeCircularBuffer14.put(type37);
        boolean boolean39 = typeCircularBuffer1.put(type37);
        boolean boolean40 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type43 = typeCircularBuffer42.get();
        boolean boolean44 = typeCircularBuffer42.isFull();
        boolean boolean45 = typeCircularBuffer42.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean48 = typeCircularBuffer47.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer50.getClass();
        boolean boolean52 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean53 = typeCircularBuffer42.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean54 = typeCircularBuffer42.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer56 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) ' ');
        java.lang.reflect.Type type57 = typeCircularBuffer56.get();
        java.lang.Class<?> wildcardClass58 = typeCircularBuffer56.getClass();
        boolean boolean59 = typeCircularBuffer42.put((java.lang.reflect.Type) wildcardClass58);
        boolean boolean60 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(type43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNull(type57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test0727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0727");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type9 = typeCircularBuffer8.get();
        boolean boolean10 = typeCircularBuffer8.isFull();
        boolean boolean11 = typeCircularBuffer8.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass16);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer13.getClass();
        boolean boolean19 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass18);
        boolean boolean20 = typeCircularBuffer8.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean23 = typeCircularBuffer22.isFull();
        boolean boolean24 = typeCircularBuffer22.isEmpty();
        java.lang.reflect.Type type25 = typeCircularBuffer22.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean30 = typeCircularBuffer29.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass33 = typeCircularBuffer32.getClass();
        boolean boolean34 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass33);
        java.lang.reflect.Type type35 = typeCircularBuffer29.get();
        boolean boolean36 = typeCircularBuffer27.put(type35);
        java.lang.Class<?> wildcardClass37 = typeCircularBuffer27.getClass();
        boolean boolean38 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass37);
        boolean boolean39 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass37);
        boolean boolean40 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass37);
        boolean boolean41 = typeCircularBuffer6.isFull();
        boolean boolean42 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean45 = typeCircularBuffer44.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass48 = typeCircularBuffer47.getClass();
        boolean boolean49 = typeCircularBuffer44.put((java.lang.reflect.Type) wildcardClass48);
        java.lang.reflect.Type type50 = typeCircularBuffer44.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer52 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type53 = typeCircularBuffer52.get();
        boolean boolean54 = typeCircularBuffer52.isFull();
        boolean boolean55 = typeCircularBuffer52.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer57 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean58 = typeCircularBuffer57.isEmpty();
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        boolean boolean61 = typeCircularBuffer57.put((java.lang.reflect.Type) wildcardClass60);
        java.lang.Class<?> wildcardClass62 = typeCircularBuffer57.getClass();
        boolean boolean63 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass62);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer65 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean66 = typeCircularBuffer65.isEmpty();
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        boolean boolean69 = typeCircularBuffer65.put((java.lang.reflect.Type) wildcardClass68);
        java.lang.Class<?> wildcardClass70 = typeCircularBuffer65.getClass();
        boolean boolean71 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass70);
        boolean boolean72 = typeCircularBuffer44.put((java.lang.reflect.Type) wildcardClass70);
        java.lang.reflect.Type type73 = typeCircularBuffer44.get();
        boolean boolean74 = typeCircularBuffer6.put(type73);
        boolean boolean75 = typeCircularBuffer1.put(type73);
        java.lang.Class<?> wildcardClass76 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(type25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNull(type53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test0728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0728");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        boolean boolean8 = typeCircularBuffer1.isFull();
        boolean boolean9 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type10 = typeCircularBuffer1.get();
        boolean boolean11 = typeCircularBuffer1.isFull();
        boolean boolean12 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type15 = typeCircularBuffer14.get();
        boolean boolean16 = typeCircularBuffer14.isFull();
        boolean boolean17 = typeCircularBuffer14.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean20 = typeCircularBuffer19.isEmpty();
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        boolean boolean23 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass22);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer19.getClass();
        boolean boolean25 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass24);
        java.lang.reflect.Type type26 = typeCircularBuffer14.get();
        boolean boolean27 = typeCircularBuffer14.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type30 = typeCircularBuffer29.get();
        boolean boolean31 = typeCircularBuffer29.isFull();
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer29.getClass();
        boolean boolean33 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer14.isFull();
        java.lang.reflect.Type type35 = typeCircularBuffer14.get();
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer14.getClass();
        boolean boolean37 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean38 = typeCircularBuffer1.isFull();
        boolean boolean39 = typeCircularBuffer1.isFull();
        boolean boolean40 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type41 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass42 = type41.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(type15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test0729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0729");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type5 = null;
        boolean boolean6 = typeCircularBuffer1.put(type5);
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        boolean boolean8 = typeCircularBuffer1.isFull();
        boolean boolean9 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type10 = typeCircularBuffer1.get();
        boolean boolean11 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0730");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer6.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.reflect.Type type13 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer20.getClass();
        boolean boolean22 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type23 = typeCircularBuffer17.get();
        boolean boolean24 = typeCircularBuffer15.put(type23);
        boolean boolean25 = typeCircularBuffer15.isFull();
        java.lang.reflect.Type type26 = typeCircularBuffer15.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        boolean boolean32 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass31);
        boolean boolean33 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass31);
        boolean boolean34 = typeCircularBuffer15.isEmpty();
        java.lang.reflect.Type type35 = typeCircularBuffer15.get();
        boolean boolean36 = typeCircularBuffer1.put(type35);
        java.lang.Class<?> wildcardClass37 = type35.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test0731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0731");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        boolean boolean12 = typeCircularBuffer6.isFull();
        java.lang.reflect.Type type13 = typeCircularBuffer6.get();
        boolean boolean14 = typeCircularBuffer1.put(type13);
        boolean boolean15 = typeCircularBuffer1.isEmpty();
        boolean boolean16 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type17 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0732");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.AnnotatedElement> annotatedElementCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.AnnotatedElement>((int) (byte) 1);
        java.lang.Class<?> wildcardClass2 = annotatedElementCircularBuffer1.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test0733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0733");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        boolean boolean9 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type10 = typeCircularBuffer1.get();
        boolean boolean11 = typeCircularBuffer1.isEmpty();
        boolean boolean12 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0734");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        boolean boolean5 = typeCircularBuffer1.isFull();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        java.lang.reflect.Type type8 = null;
        boolean boolean9 = typeCircularBuffer1.put(type8);
        boolean boolean10 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean13 = typeCircularBuffer12.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass16 = typeCircularBuffer15.getClass();
        boolean boolean17 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass16);
        java.lang.reflect.Type type18 = typeCircularBuffer12.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type21 = typeCircularBuffer20.get();
        boolean boolean22 = typeCircularBuffer20.isFull();
        boolean boolean23 = typeCircularBuffer20.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean26 = typeCircularBuffer25.isEmpty();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        boolean boolean29 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.Class<?> wildcardClass30 = typeCircularBuffer25.getClass();
        boolean boolean31 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass30);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean34 = typeCircularBuffer33.isEmpty();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        boolean boolean37 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass36);
        java.lang.Class<?> wildcardClass38 = typeCircularBuffer33.getClass();
        boolean boolean39 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass38);
        boolean boolean40 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass38);
        java.lang.reflect.Type type41 = typeCircularBuffer12.get();
        boolean boolean42 = typeCircularBuffer1.put(type41);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNull(type21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test0735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0735");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isFull();
        boolean boolean8 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        boolean boolean10 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type13 = typeCircularBuffer12.get();
        boolean boolean14 = typeCircularBuffer12.isEmpty();
        boolean boolean15 = typeCircularBuffer12.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        boolean boolean19 = typeCircularBuffer17.isEmpty();
        java.lang.reflect.Type type20 = typeCircularBuffer17.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass26 = typeCircularBuffer25.getClass();
        boolean boolean27 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass26);
        boolean boolean28 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass26);
        boolean boolean29 = typeCircularBuffer17.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean34 = typeCircularBuffer33.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass37 = typeCircularBuffer36.getClass();
        boolean boolean38 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass37);
        java.lang.reflect.Type type39 = typeCircularBuffer33.get();
        boolean boolean40 = typeCircularBuffer31.put(type39);
        boolean boolean41 = typeCircularBuffer31.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer46.getClass();
        boolean boolean48 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass47);
        java.lang.reflect.Type type49 = typeCircularBuffer43.get();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        boolean boolean52 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean53 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass51);
        java.lang.reflect.Type type54 = typeCircularBuffer31.get();
        boolean boolean55 = typeCircularBuffer17.put(type54);
        boolean boolean56 = typeCircularBuffer12.put(type54);
        boolean boolean57 = typeCircularBuffer1.put(type54);
        java.lang.Class<?> wildcardClass58 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(type13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(type20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test0736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0736");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0737");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean8 = typeCircularBuffer7.isFull();
        boolean boolean9 = typeCircularBuffer7.isEmpty();
        boolean boolean10 = typeCircularBuffer7.isFull();
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer7.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.reflect.Type type13 = typeCircularBuffer1.get();
        boolean boolean14 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test0738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0738");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type11 = typeCircularBuffer10.get();
        boolean boolean12 = typeCircularBuffer10.isFull();
        boolean boolean13 = typeCircularBuffer10.isFull();
        boolean boolean14 = typeCircularBuffer10.isFull();
        java.lang.reflect.Type type15 = typeCircularBuffer10.get();
        boolean boolean16 = typeCircularBuffer10.isEmpty();
        java.lang.reflect.Type type17 = typeCircularBuffer10.get();
        java.lang.reflect.Type type18 = typeCircularBuffer10.get();
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer10.getClass();
        boolean boolean20 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass19);
        boolean boolean21 = typeCircularBuffer1.isEmpty();
        boolean boolean22 = typeCircularBuffer1.isFull();
        boolean boolean23 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertNull(type11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(type15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(type17);
        org.junit.Assert.assertNull(type18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0739");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer10.get();
        boolean boolean17 = typeCircularBuffer8.put(type16);
        boolean boolean18 = typeCircularBuffer8.isFull();
        java.lang.reflect.Type type19 = typeCircularBuffer8.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean22 = typeCircularBuffer21.isEmpty();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean26 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean27 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean28 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean31 = typeCircularBuffer30.isFull();
        boolean boolean32 = typeCircularBuffer30.isEmpty();
        boolean boolean33 = typeCircularBuffer30.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean36 = typeCircularBuffer35.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass39 = typeCircularBuffer38.getClass();
        boolean boolean40 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass39);
        java.lang.reflect.Type type41 = typeCircularBuffer35.get();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        boolean boolean44 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass43);
        boolean boolean45 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass43);
        boolean boolean46 = typeCircularBuffer30.isFull();
        java.lang.reflect.Type type47 = typeCircularBuffer30.get();
        boolean boolean48 = typeCircularBuffer1.put(type47);
        java.lang.reflect.Type type49 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass50 = type49.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test0740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0740");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        boolean boolean8 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        boolean boolean10 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test0741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0741");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        java.lang.reflect.Type type11 = typeCircularBuffer1.get();
        java.lang.reflect.Type type12 = typeCircularBuffer1.get();
        boolean boolean13 = typeCircularBuffer1.isFull();
        boolean boolean14 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test0742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0742");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isFull();
        boolean boolean8 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        boolean boolean10 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean13 = typeCircularBuffer12.isFull();
        java.lang.reflect.Type type14 = typeCircularBuffer12.get();
        boolean boolean15 = typeCircularBuffer12.isFull();
        java.lang.reflect.Type type16 = typeCircularBuffer12.get();
        boolean boolean17 = typeCircularBuffer12.isFull();
        boolean boolean18 = typeCircularBuffer12.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean21 = typeCircularBuffer20.isFull();
        boolean boolean22 = typeCircularBuffer20.isEmpty();
        java.lang.reflect.Type type23 = typeCircularBuffer20.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean28 = typeCircularBuffer27.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass31 = typeCircularBuffer30.getClass();
        boolean boolean32 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass31);
        java.lang.reflect.Type type33 = typeCircularBuffer27.get();
        boolean boolean34 = typeCircularBuffer25.put(type33);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer25.getClass();
        boolean boolean36 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass35);
        boolean boolean37 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass35);
        boolean boolean38 = typeCircularBuffer12.isEmpty();
        boolean boolean39 = typeCircularBuffer12.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer46.getClass();
        boolean boolean48 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass47);
        java.lang.reflect.Type type49 = typeCircularBuffer43.get();
        boolean boolean50 = typeCircularBuffer41.put(type49);
        java.lang.reflect.Type type51 = typeCircularBuffer41.get();
        java.lang.reflect.Type type52 = null;
        boolean boolean53 = typeCircularBuffer41.put(type52);
        boolean boolean54 = typeCircularBuffer41.isEmpty();
        java.lang.Class<?> wildcardClass55 = typeCircularBuffer41.getClass();
        boolean boolean56 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass55);
        java.lang.Class<?> wildcardClass57 = typeCircularBuffer12.getClass();
        boolean boolean58 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass57);
        java.lang.reflect.Type type59 = typeCircularBuffer1.get();
        java.lang.reflect.Type type60 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass61 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(type14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(type23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNull(type60);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test0743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0743");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass10 = type9.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertNull(type9);
    }

    @Test
    public void test0744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0744");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(type4);
    }

    @Test
    public void test0745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0745");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer6.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.reflect.Type type13 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer20.getClass();
        boolean boolean22 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type23 = typeCircularBuffer17.get();
        boolean boolean24 = typeCircularBuffer15.put(type23);
        boolean boolean25 = typeCircularBuffer15.isFull();
        java.lang.reflect.Type type26 = typeCircularBuffer15.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        boolean boolean32 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass31);
        boolean boolean33 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass31);
        boolean boolean34 = typeCircularBuffer15.isEmpty();
        java.lang.reflect.Type type35 = typeCircularBuffer15.get();
        boolean boolean36 = typeCircularBuffer1.put(type35);
        java.lang.Class<?> wildcardClass37 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test0746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0746");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean13 = typeCircularBuffer12.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass16 = typeCircularBuffer15.getClass();
        boolean boolean17 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass16);
        java.lang.reflect.Type type18 = typeCircularBuffer12.get();
        boolean boolean19 = typeCircularBuffer10.put(type18);
        java.lang.reflect.Type type20 = typeCircularBuffer10.get();
        java.lang.reflect.Type type21 = null;
        boolean boolean22 = typeCircularBuffer10.put(type21);
        boolean boolean23 = typeCircularBuffer10.isFull();
        java.lang.reflect.Type type24 = typeCircularBuffer10.get();
        java.lang.reflect.Type type25 = typeCircularBuffer10.get();
        java.lang.reflect.Type type26 = typeCircularBuffer10.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean31 = typeCircularBuffer30.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass34 = typeCircularBuffer33.getClass();
        boolean boolean35 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass34);
        java.lang.reflect.Type type36 = typeCircularBuffer30.get();
        boolean boolean37 = typeCircularBuffer28.put(type36);
        boolean boolean38 = typeCircularBuffer28.isFull();
        java.lang.reflect.Type type39 = typeCircularBuffer28.get();
        boolean boolean40 = typeCircularBuffer28.isEmpty();
        boolean boolean41 = typeCircularBuffer28.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean46 = typeCircularBuffer45.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass49 = typeCircularBuffer48.getClass();
        boolean boolean50 = typeCircularBuffer45.put((java.lang.reflect.Type) wildcardClass49);
        java.lang.reflect.Type type51 = typeCircularBuffer45.get();
        boolean boolean52 = typeCircularBuffer43.put(type51);
        boolean boolean53 = typeCircularBuffer43.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer55 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean56 = typeCircularBuffer55.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer58 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass59 = typeCircularBuffer58.getClass();
        boolean boolean60 = typeCircularBuffer55.put((java.lang.reflect.Type) wildcardClass59);
        java.lang.reflect.Type type61 = typeCircularBuffer55.get();
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        boolean boolean64 = typeCircularBuffer55.put((java.lang.reflect.Type) wildcardClass63);
        boolean boolean65 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass63);
        java.lang.reflect.Type type66 = typeCircularBuffer43.get();
        boolean boolean67 = typeCircularBuffer43.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer69 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type70 = typeCircularBuffer69.get();
        boolean boolean71 = typeCircularBuffer69.isFull();
        boolean boolean72 = typeCircularBuffer69.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer74 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean75 = typeCircularBuffer74.isEmpty();
        java.lang.Object obj76 = new java.lang.Object();
        java.lang.Class<?> wildcardClass77 = obj76.getClass();
        boolean boolean78 = typeCircularBuffer74.put((java.lang.reflect.Type) wildcardClass77);
        java.lang.Class<?> wildcardClass79 = typeCircularBuffer74.getClass();
        boolean boolean80 = typeCircularBuffer69.put((java.lang.reflect.Type) wildcardClass79);
        java.lang.reflect.Type type81 = typeCircularBuffer69.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer83 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer85 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean86 = typeCircularBuffer85.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer88 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass89 = typeCircularBuffer88.getClass();
        boolean boolean90 = typeCircularBuffer85.put((java.lang.reflect.Type) wildcardClass89);
        java.lang.reflect.Type type91 = typeCircularBuffer85.get();
        boolean boolean92 = typeCircularBuffer83.put(type91);
        boolean boolean93 = typeCircularBuffer69.put(type91);
        java.lang.reflect.Type type94 = typeCircularBuffer69.get();
        boolean boolean95 = typeCircularBuffer43.put(type94);
        boolean boolean96 = typeCircularBuffer28.put(type94);
        boolean boolean97 = typeCircularBuffer10.put(type94);
        boolean boolean98 = typeCircularBuffer1.put(type94);
        java.lang.Class<?> wildcardClass99 = type94.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(type24);
        org.junit.Assert.assertNull(type25);
        org.junit.Assert.assertNull(type26);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNull(type70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(type81);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(type91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertNotNull(type94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0747");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        java.lang.reflect.Type type15 = typeCircularBuffer9.get();
        boolean boolean16 = typeCircularBuffer7.put(type15);
        boolean boolean17 = typeCircularBuffer7.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean20 = typeCircularBuffer19.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass23 = typeCircularBuffer22.getClass();
        boolean boolean24 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass23);
        java.lang.reflect.Type type25 = typeCircularBuffer19.get();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        boolean boolean28 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer7.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean30 = typeCircularBuffer7.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type33 = typeCircularBuffer32.get();
        boolean boolean34 = typeCircularBuffer32.isFull();
        boolean boolean35 = typeCircularBuffer32.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean38 = typeCircularBuffer37.isEmpty();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        boolean boolean41 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass40);
        java.lang.Class<?> wildcardClass42 = typeCircularBuffer37.getClass();
        boolean boolean43 = typeCircularBuffer32.put((java.lang.reflect.Type) wildcardClass42);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean46 = typeCircularBuffer45.isEmpty();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        boolean boolean49 = typeCircularBuffer45.put((java.lang.reflect.Type) wildcardClass48);
        java.lang.Class<?> wildcardClass50 = typeCircularBuffer45.getClass();
        boolean boolean51 = typeCircularBuffer32.put((java.lang.reflect.Type) wildcardClass50);
        boolean boolean52 = typeCircularBuffer7.put((java.lang.reflect.Type) wildcardClass50);
        java.lang.Class<?> wildcardClass53 = typeCircularBuffer7.getClass();
        boolean boolean54 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass53);
        java.lang.Class<?> wildcardClass55 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(type33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test0748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0748");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean13 = typeCircularBuffer12.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass16 = typeCircularBuffer15.getClass();
        boolean boolean17 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass16);
        java.lang.reflect.Type type18 = typeCircularBuffer12.get();
        boolean boolean19 = typeCircularBuffer10.put(type18);
        boolean boolean20 = typeCircularBuffer10.isEmpty();
        boolean boolean21 = typeCircularBuffer10.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean24 = typeCircularBuffer23.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer26.getClass();
        boolean boolean28 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass27);
        java.lang.reflect.Type type29 = typeCircularBuffer23.get();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        boolean boolean32 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass31);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean35 = typeCircularBuffer34.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass38 = typeCircularBuffer37.getClass();
        boolean boolean39 = typeCircularBuffer34.put((java.lang.reflect.Type) wildcardClass38);
        java.lang.reflect.Type type40 = typeCircularBuffer34.get();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        boolean boolean43 = typeCircularBuffer34.put((java.lang.reflect.Type) wildcardClass42);
        java.lang.reflect.Type type44 = typeCircularBuffer34.get();
        boolean boolean45 = typeCircularBuffer23.put(type44);
        boolean boolean46 = typeCircularBuffer10.put(type44);
        boolean boolean47 = typeCircularBuffer10.isEmpty();
        java.lang.reflect.Type type48 = typeCircularBuffer10.get();
        boolean boolean49 = typeCircularBuffer1.put(type48);
        boolean boolean50 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type51 = typeCircularBuffer1.get();
        java.lang.reflect.Type type52 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass53 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNull(type52);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test0749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0749");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        java.lang.reflect.Type type12 = typeCircularBuffer6.get();
        boolean boolean13 = typeCircularBuffer4.put(type12);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer20.getClass();
        boolean boolean22 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type23 = typeCircularBuffer17.get();
        boolean boolean24 = typeCircularBuffer15.put(type23);
        java.lang.Class<?> wildcardClass25 = typeCircularBuffer15.getClass();
        boolean boolean26 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass25);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer31.getClass();
        boolean boolean33 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass32);
        java.lang.reflect.Type type34 = typeCircularBuffer28.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type37 = typeCircularBuffer36.get();
        boolean boolean38 = typeCircularBuffer36.isFull();
        boolean boolean39 = typeCircularBuffer36.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean42 = typeCircularBuffer41.isEmpty();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        boolean boolean45 = typeCircularBuffer41.put((java.lang.reflect.Type) wildcardClass44);
        java.lang.Class<?> wildcardClass46 = typeCircularBuffer41.getClass();
        boolean boolean47 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass46);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer49 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean50 = typeCircularBuffer49.isEmpty();
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        boolean boolean53 = typeCircularBuffer49.put((java.lang.reflect.Type) wildcardClass52);
        java.lang.Class<?> wildcardClass54 = typeCircularBuffer49.getClass();
        boolean boolean55 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean56 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass54);
        java.lang.reflect.Type type57 = typeCircularBuffer28.get();
        boolean boolean58 = typeCircularBuffer4.put(type57);
        boolean boolean59 = typeCircularBuffer1.put(type57);
        boolean boolean60 = typeCircularBuffer1.isEmpty();
        boolean boolean61 = typeCircularBuffer1.isFull();
        boolean boolean62 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass63 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNull(type37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test0750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0750");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass7 = type6.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertNull(type6);
    }

    @Test
    public void test0751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0751");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type4 = typeCircularBuffer3.get();
        boolean boolean5 = typeCircularBuffer3.isFull();
        boolean boolean6 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean9 = typeCircularBuffer8.isEmpty();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer8.getClass();
        boolean boolean14 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass13);
        boolean boolean15 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean18 = typeCircularBuffer17.isFull();
        boolean boolean19 = typeCircularBuffer17.isEmpty();
        java.lang.reflect.Type type20 = typeCircularBuffer17.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean25 = typeCircularBuffer24.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer27.getClass();
        boolean boolean29 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.reflect.Type type30 = typeCircularBuffer24.get();
        boolean boolean31 = typeCircularBuffer22.put(type30);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer22.getClass();
        boolean boolean33 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean35 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean36 = typeCircularBuffer1.isFull();
        boolean boolean37 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean42 = typeCircularBuffer41.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass45 = typeCircularBuffer44.getClass();
        boolean boolean46 = typeCircularBuffer41.put((java.lang.reflect.Type) wildcardClass45);
        java.lang.reflect.Type type47 = typeCircularBuffer41.get();
        boolean boolean48 = typeCircularBuffer39.put(type47);
        java.lang.reflect.Type type49 = typeCircularBuffer39.get();
        boolean boolean50 = typeCircularBuffer39.isFull();
        boolean boolean51 = typeCircularBuffer39.isEmpty();
        java.lang.Class<?> wildcardClass52 = typeCircularBuffer39.getClass();
        boolean boolean53 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass52);
        boolean boolean54 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer56 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type57 = typeCircularBuffer56.get();
        boolean boolean58 = typeCircularBuffer56.isFull();
        boolean boolean59 = typeCircularBuffer56.isFull();
        boolean boolean60 = typeCircularBuffer56.isEmpty();
        java.lang.reflect.Type type61 = typeCircularBuffer56.get();
        boolean boolean62 = typeCircularBuffer56.isEmpty();
        boolean boolean63 = typeCircularBuffer56.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer65 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) 'a');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer67 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass68 = typeCircularBuffer67.getClass();
        boolean boolean69 = typeCircularBuffer65.put((java.lang.reflect.Type) wildcardClass68);
        java.lang.reflect.Type type70 = typeCircularBuffer65.get();
        boolean boolean71 = typeCircularBuffer56.put(type70);
        boolean boolean72 = typeCircularBuffer1.put(type70);
        boolean boolean73 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(type20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNull(type57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(type61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
    }

    @Test
    public void test0752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0752");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '#');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean9 = typeCircularBuffer8.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass12 = typeCircularBuffer11.getClass();
        boolean boolean13 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass12);
        java.lang.reflect.Type type14 = typeCircularBuffer8.get();
        boolean boolean15 = typeCircularBuffer6.put(type14);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean20 = typeCircularBuffer19.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass23 = typeCircularBuffer22.getClass();
        boolean boolean24 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass23);
        java.lang.reflect.Type type25 = typeCircularBuffer19.get();
        boolean boolean26 = typeCircularBuffer17.put(type25);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer17.getClass();
        boolean boolean28 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean30 = typeCircularBuffer4.isEmpty();
        java.lang.Class<?> wildcardClass31 = typeCircularBuffer4.getClass();
        boolean boolean32 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass31);
        java.lang.reflect.Type type33 = typeCircularBuffer1.get();
        boolean boolean34 = typeCircularBuffer1.isEmpty();
        boolean boolean35 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
    }

    @Test
    public void test0753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0753");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        java.lang.reflect.Type type10 = typeCircularBuffer1.get();
        java.lang.reflect.Type type11 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.AnnotatedElement> annotatedElementCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.AnnotatedElement>(0);
        java.lang.Class<?> wildcardClass14 = annotatedElementCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass14);
        boolean boolean16 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertNull(type11);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test0754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0754");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type5 = typeCircularBuffer4.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        java.lang.reflect.Type type15 = typeCircularBuffer9.get();
        boolean boolean16 = typeCircularBuffer7.put(type15);
        boolean boolean17 = typeCircularBuffer7.isFull();
        java.lang.reflect.Type type18 = typeCircularBuffer7.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean21 = typeCircularBuffer20.isEmpty();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        boolean boolean24 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass23);
        boolean boolean25 = typeCircularBuffer7.put((java.lang.reflect.Type) wildcardClass23);
        boolean boolean26 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass23);
        boolean boolean27 = typeCircularBuffer4.isEmpty();
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer4.getClass();
        boolean boolean29 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass28);
        boolean boolean30 = typeCircularBuffer1.isFull();
        boolean boolean31 = typeCircularBuffer1.isEmpty();
        boolean boolean32 = typeCircularBuffer1.isFull();
        boolean boolean33 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test0755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0755");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean9 = typeCircularBuffer8.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass12 = typeCircularBuffer11.getClass();
        boolean boolean13 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass12);
        java.lang.reflect.Type type14 = typeCircularBuffer8.get();
        boolean boolean15 = typeCircularBuffer6.put(type14);
        java.lang.Class<?> wildcardClass16 = typeCircularBuffer6.getClass();
        boolean boolean17 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass16);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type20 = typeCircularBuffer19.get();
        boolean boolean21 = typeCircularBuffer19.isFull();
        boolean boolean22 = typeCircularBuffer19.isFull();
        boolean boolean23 = typeCircularBuffer19.isFull();
        java.lang.reflect.Type type24 = typeCircularBuffer19.get();
        boolean boolean25 = typeCircularBuffer19.isEmpty();
        java.lang.reflect.Type type26 = typeCircularBuffer19.get();
        java.lang.reflect.Type type27 = typeCircularBuffer19.get();
        boolean boolean28 = typeCircularBuffer19.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean33 = typeCircularBuffer32.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer35.getClass();
        boolean boolean37 = typeCircularBuffer32.put((java.lang.reflect.Type) wildcardClass36);
        java.lang.reflect.Type type38 = typeCircularBuffer32.get();
        boolean boolean39 = typeCircularBuffer30.put(type38);
        boolean boolean40 = typeCircularBuffer30.isFull();
        java.lang.reflect.Type type41 = typeCircularBuffer30.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        boolean boolean47 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass46);
        boolean boolean48 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass46);
        boolean boolean49 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass46);
        java.lang.Class<?> wildcardClass50 = typeCircularBuffer19.getClass();
        boolean boolean51 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass50);
        java.lang.reflect.Type type52 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass53 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(type20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(type26);
        org.junit.Assert.assertNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(type52);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test0756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0756");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean8 = typeCircularBuffer7.isEmpty();
        java.lang.reflect.Type type9 = typeCircularBuffer7.get();
        java.lang.reflect.Type type10 = typeCircularBuffer7.get();
        java.lang.reflect.Type type11 = typeCircularBuffer7.get();
        boolean boolean12 = typeCircularBuffer7.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean15 = typeCircularBuffer14.isFull();
        java.lang.reflect.Type type16 = typeCircularBuffer14.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean19 = typeCircularBuffer18.isEmpty();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.Class<?> wildcardClass23 = typeCircularBuffer18.getClass();
        boolean boolean24 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass23);
        boolean boolean25 = typeCircularBuffer7.put((java.lang.reflect.Type) wildcardClass23);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '#');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer34.getClass();
        boolean boolean36 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass35);
        java.lang.reflect.Type type37 = typeCircularBuffer31.get();
        boolean boolean38 = typeCircularBuffer29.put(type37);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean43 = typeCircularBuffer42.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass46 = typeCircularBuffer45.getClass();
        boolean boolean47 = typeCircularBuffer42.put((java.lang.reflect.Type) wildcardClass46);
        java.lang.reflect.Type type48 = typeCircularBuffer42.get();
        boolean boolean49 = typeCircularBuffer40.put(type48);
        java.lang.Class<?> wildcardClass50 = typeCircularBuffer40.getClass();
        boolean boolean51 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass50);
        boolean boolean52 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass50);
        boolean boolean53 = typeCircularBuffer7.put((java.lang.reflect.Type) wildcardClass50);
        boolean boolean54 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass50);
        java.lang.reflect.Type type55 = typeCircularBuffer1.get();
        boolean boolean56 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass57 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertNull(type11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(type16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test0757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0757");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        java.lang.reflect.Type type11 = typeCircularBuffer10.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean14 = typeCircularBuffer13.isFull();
        boolean boolean15 = typeCircularBuffer13.isEmpty();
        boolean boolean16 = typeCircularBuffer13.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean19 = typeCircularBuffer18.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer21.getClass();
        boolean boolean23 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass22);
        java.lang.reflect.Type type24 = typeCircularBuffer18.get();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        boolean boolean27 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass26);
        boolean boolean28 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass26);
        boolean boolean29 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass26);
        java.lang.Class<?> wildcardClass30 = typeCircularBuffer10.getClass();
        boolean boolean31 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass30);
        boolean boolean32 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass33 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNull(type11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test0758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0758");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean4 = typeCircularBuffer3.isFull();
        boolean boolean5 = typeCircularBuffer3.isEmpty();
        java.lang.reflect.Type type6 = typeCircularBuffer3.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer10.get();
        boolean boolean17 = typeCircularBuffer8.put(type16);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer8.getClass();
        boolean boolean19 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass18);
        boolean boolean20 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass18);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type23 = typeCircularBuffer22.get();
        boolean boolean24 = typeCircularBuffer22.isFull();
        boolean boolean25 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean28 = typeCircularBuffer27.isEmpty();
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        boolean boolean31 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass30);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer27.getClass();
        boolean boolean33 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean37 = typeCircularBuffer36.isFull();
        boolean boolean38 = typeCircularBuffer36.isEmpty();
        java.lang.reflect.Type type39 = typeCircularBuffer36.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer46.getClass();
        boolean boolean48 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass47);
        java.lang.reflect.Type type49 = typeCircularBuffer43.get();
        boolean boolean50 = typeCircularBuffer41.put(type49);
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer41.getClass();
        boolean boolean52 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean53 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass51);
        java.lang.Class<?> wildcardClass54 = typeCircularBuffer22.getClass();
        boolean boolean55 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean56 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer58 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer60 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean61 = typeCircularBuffer60.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer63 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass64 = typeCircularBuffer63.getClass();
        boolean boolean65 = typeCircularBuffer60.put((java.lang.reflect.Type) wildcardClass64);
        java.lang.reflect.Type type66 = typeCircularBuffer60.get();
        boolean boolean67 = typeCircularBuffer58.put(type66);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer69 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer71 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean72 = typeCircularBuffer71.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer74 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass75 = typeCircularBuffer74.getClass();
        boolean boolean76 = typeCircularBuffer71.put((java.lang.reflect.Type) wildcardClass75);
        java.lang.reflect.Type type77 = typeCircularBuffer71.get();
        boolean boolean78 = typeCircularBuffer69.put(type77);
        java.lang.Class<?> wildcardClass79 = typeCircularBuffer69.getClass();
        boolean boolean80 = typeCircularBuffer58.put((java.lang.reflect.Type) wildcardClass79);
        boolean boolean81 = typeCircularBuffer58.isFull();
        java.lang.reflect.Type type82 = typeCircularBuffer58.get();
        java.lang.Class<?> wildcardClass83 = typeCircularBuffer58.getClass();
        boolean boolean84 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass83);
        java.lang.reflect.Type type85 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass86 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(type39);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(type85);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test0759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0759");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.Class<?>> wildcardClassCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.Class<?>>((int) '4');
    }

    @Test
    public void test0760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0760");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) ' ');
        java.lang.reflect.Type type10 = typeCircularBuffer9.get();
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer9.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0761");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.Comparable<java.lang.String>> strComparableCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.Comparable<java.lang.String>>((int) '#');
    }

    @Test
    public void test0762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0762");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean9 = typeCircularBuffer8.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass12 = typeCircularBuffer11.getClass();
        boolean boolean13 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass12);
        java.lang.reflect.Type type14 = typeCircularBuffer8.get();
        boolean boolean15 = typeCircularBuffer6.put(type14);
        java.lang.Class<?> wildcardClass16 = typeCircularBuffer6.getClass();
        boolean boolean17 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass16);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type20 = typeCircularBuffer19.get();
        boolean boolean21 = typeCircularBuffer19.isFull();
        boolean boolean22 = typeCircularBuffer19.isFull();
        boolean boolean23 = typeCircularBuffer19.isFull();
        java.lang.reflect.Type type24 = typeCircularBuffer19.get();
        boolean boolean25 = typeCircularBuffer19.isEmpty();
        java.lang.reflect.Type type26 = typeCircularBuffer19.get();
        java.lang.reflect.Type type27 = typeCircularBuffer19.get();
        boolean boolean28 = typeCircularBuffer19.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean33 = typeCircularBuffer32.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer35.getClass();
        boolean boolean37 = typeCircularBuffer32.put((java.lang.reflect.Type) wildcardClass36);
        java.lang.reflect.Type type38 = typeCircularBuffer32.get();
        boolean boolean39 = typeCircularBuffer30.put(type38);
        boolean boolean40 = typeCircularBuffer30.isFull();
        java.lang.reflect.Type type41 = typeCircularBuffer30.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        boolean boolean47 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass46);
        boolean boolean48 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass46);
        boolean boolean49 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass46);
        java.lang.Class<?> wildcardClass50 = typeCircularBuffer19.getClass();
        boolean boolean51 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass50);
        boolean boolean52 = typeCircularBuffer1.isFull();
        boolean boolean53 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(type20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(type26);
        org.junit.Assert.assertNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
    }

    @Test
    public void test0763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0763");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.String> strCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.String>(100);
    }

    @Test
    public void test0764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0764");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        boolean boolean8 = typeCircularBuffer6.isEmpty();
        java.lang.reflect.Type type9 = typeCircularBuffer6.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean12 = typeCircularBuffer11.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass15 = typeCircularBuffer14.getClass();
        boolean boolean16 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass15);
        boolean boolean17 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass15);
        boolean boolean18 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass26 = typeCircularBuffer25.getClass();
        boolean boolean27 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass26);
        java.lang.reflect.Type type28 = typeCircularBuffer22.get();
        boolean boolean29 = typeCircularBuffer20.put(type28);
        boolean boolean30 = typeCircularBuffer20.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean33 = typeCircularBuffer32.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer35.getClass();
        boolean boolean37 = typeCircularBuffer32.put((java.lang.reflect.Type) wildcardClass36);
        java.lang.reflect.Type type38 = typeCircularBuffer32.get();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        boolean boolean41 = typeCircularBuffer32.put((java.lang.reflect.Type) wildcardClass40);
        boolean boolean42 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass40);
        java.lang.reflect.Type type43 = typeCircularBuffer20.get();
        boolean boolean44 = typeCircularBuffer6.put(type43);
        boolean boolean45 = typeCircularBuffer1.put(type43);
        java.lang.reflect.Type type46 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(type46);
    }

    @Test
    public void test0765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0765");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type12 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer17.getClass();
        boolean boolean19 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass18);
        boolean boolean20 = typeCircularBuffer14.isFull();
        java.lang.reflect.Type type21 = typeCircularBuffer14.get();
        boolean boolean22 = typeCircularBuffer1.put(type21);
        java.lang.reflect.Type type23 = typeCircularBuffer1.get();
        boolean boolean24 = typeCircularBuffer1.isFull();
        boolean boolean25 = typeCircularBuffer1.isEmpty();
        boolean boolean26 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test0766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0766");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean7 = typeCircularBuffer6.isFull();
        boolean boolean8 = typeCircularBuffer6.isEmpty();
        java.lang.reflect.Type type9 = typeCircularBuffer6.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        boolean boolean20 = typeCircularBuffer11.put(type19);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer11.getClass();
        boolean boolean22 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass21);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type26 = typeCircularBuffer25.get();
        boolean boolean27 = typeCircularBuffer25.isFull();
        boolean boolean28 = typeCircularBuffer25.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean31 = typeCircularBuffer30.isEmpty();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        boolean boolean34 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass33);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer30.getClass();
        boolean boolean36 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass35);
        boolean boolean37 = typeCircularBuffer25.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean40 = typeCircularBuffer39.isFull();
        boolean boolean41 = typeCircularBuffer39.isEmpty();
        java.lang.reflect.Type type42 = typeCircularBuffer39.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean47 = typeCircularBuffer46.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer49 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass50 = typeCircularBuffer49.getClass();
        boolean boolean51 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass50);
        java.lang.reflect.Type type52 = typeCircularBuffer46.get();
        boolean boolean53 = typeCircularBuffer44.put(type52);
        java.lang.Class<?> wildcardClass54 = typeCircularBuffer44.getClass();
        boolean boolean55 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean56 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass54);
        java.lang.Class<?> wildcardClass57 = typeCircularBuffer25.getClass();
        boolean boolean58 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass57);
        boolean boolean59 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass57);
        boolean boolean60 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type61 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(type26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(type42);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(type61);
    }

    @Test
    public void test0767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0767");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type12 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        boolean boolean19 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type20 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass26 = typeCircularBuffer25.getClass();
        boolean boolean27 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass26);
        boolean boolean28 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean31 = typeCircularBuffer30.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass34 = typeCircularBuffer33.getClass();
        boolean boolean35 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass34);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean40 = typeCircularBuffer39.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass43 = typeCircularBuffer42.getClass();
        boolean boolean44 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass43);
        java.lang.reflect.Type type45 = typeCircularBuffer39.get();
        boolean boolean46 = typeCircularBuffer37.put(type45);
        boolean boolean47 = typeCircularBuffer37.isFull();
        java.lang.reflect.Type type48 = typeCircularBuffer37.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean51 = typeCircularBuffer50.isEmpty();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        boolean boolean54 = typeCircularBuffer50.put((java.lang.reflect.Type) wildcardClass53);
        boolean boolean55 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass53);
        boolean boolean56 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass53);
        boolean boolean57 = typeCircularBuffer30.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer59 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean60 = typeCircularBuffer59.isFull();
        boolean boolean61 = typeCircularBuffer59.isEmpty();
        boolean boolean62 = typeCircularBuffer59.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer64 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean65 = typeCircularBuffer64.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer67 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass68 = typeCircularBuffer67.getClass();
        boolean boolean69 = typeCircularBuffer64.put((java.lang.reflect.Type) wildcardClass68);
        java.lang.reflect.Type type70 = typeCircularBuffer64.get();
        java.lang.Object obj71 = new java.lang.Object();
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        boolean boolean73 = typeCircularBuffer64.put((java.lang.reflect.Type) wildcardClass72);
        boolean boolean74 = typeCircularBuffer59.put((java.lang.reflect.Type) wildcardClass72);
        boolean boolean75 = typeCircularBuffer59.isFull();
        java.lang.reflect.Type type76 = typeCircularBuffer59.get();
        boolean boolean77 = typeCircularBuffer30.put(type76);
        java.lang.Class<?> wildcardClass78 = type76.getClass();
        boolean boolean79 = typeCircularBuffer22.put(type76);
        java.lang.reflect.Type type80 = typeCircularBuffer22.get();
        boolean boolean81 = typeCircularBuffer1.put(type80);
        boolean boolean82 = typeCircularBuffer1.isFull();
        boolean boolean83 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
    }

    @Test
    public void test0768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0768");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        boolean boolean9 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer13.getClass();
        boolean boolean21 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean22 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean23 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean26 = typeCircularBuffer25.isEmpty();
        java.lang.reflect.Type type27 = typeCircularBuffer25.get();
        java.lang.reflect.Type type28 = typeCircularBuffer25.get();
        java.lang.reflect.Type type29 = typeCircularBuffer25.get();
        boolean boolean30 = typeCircularBuffer25.isFull();
        java.lang.reflect.Type type31 = typeCircularBuffer25.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean34 = typeCircularBuffer33.isEmpty();
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer33.getClass();
        boolean boolean36 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass35);
        java.lang.Class<?> wildcardClass37 = typeCircularBuffer25.getClass();
        boolean boolean38 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass37);
        java.lang.reflect.Type type39 = typeCircularBuffer1.get();
        java.lang.reflect.Type type40 = typeCircularBuffer1.get();
        java.lang.reflect.Type type41 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(type27);
        org.junit.Assert.assertNull(type28);
        org.junit.Assert.assertNull(type29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(type31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNull(type40);
        org.junit.Assert.assertNull(type41);
    }

    @Test
    public void test0769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0769");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer9.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        boolean boolean13 = typeCircularBuffer1.isFull();
        boolean boolean14 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer19.getClass();
        boolean boolean21 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean22 = typeCircularBuffer16.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean25 = typeCircularBuffer24.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer27.getClass();
        boolean boolean29 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass28);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean34 = typeCircularBuffer33.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass37 = typeCircularBuffer36.getClass();
        boolean boolean38 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass37);
        java.lang.reflect.Type type39 = typeCircularBuffer33.get();
        boolean boolean40 = typeCircularBuffer31.put(type39);
        boolean boolean41 = typeCircularBuffer31.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer46.getClass();
        boolean boolean48 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass47);
        java.lang.reflect.Type type49 = typeCircularBuffer43.get();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        boolean boolean52 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean53 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean54 = typeCircularBuffer31.isEmpty();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        boolean boolean57 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass56);
        boolean boolean58 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass56);
        boolean boolean59 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass56);
        java.lang.reflect.Type type60 = typeCircularBuffer16.get();
        boolean boolean61 = typeCircularBuffer1.put(type60);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test0770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0770");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        boolean boolean5 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass8 = typeCircularBuffer7.getClass();
        boolean boolean9 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass8);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean12 = typeCircularBuffer11.isFull();
        boolean boolean13 = typeCircularBuffer11.isEmpty();
        boolean boolean14 = typeCircularBuffer11.isFull();
        java.lang.Class<?> wildcardClass15 = typeCircularBuffer11.getClass();
        boolean boolean16 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass15);
        java.lang.reflect.Type type17 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean22 = typeCircularBuffer21.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass25 = typeCircularBuffer24.getClass();
        boolean boolean26 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.reflect.Type type27 = typeCircularBuffer21.get();
        boolean boolean28 = typeCircularBuffer19.put(type27);
        boolean boolean29 = typeCircularBuffer19.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer34.getClass();
        boolean boolean36 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass35);
        java.lang.reflect.Type type37 = typeCircularBuffer31.get();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        boolean boolean40 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass39);
        boolean boolean41 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass39);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer46.getClass();
        boolean boolean48 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass47);
        java.lang.reflect.Type type49 = typeCircularBuffer43.get();
        boolean boolean50 = typeCircularBuffer19.put(type49);
        java.lang.reflect.Type type51 = typeCircularBuffer19.get();
        boolean boolean52 = typeCircularBuffer1.put(type51);
        boolean boolean53 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer55 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean56 = typeCircularBuffer55.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer58 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass59 = typeCircularBuffer58.getClass();
        boolean boolean60 = typeCircularBuffer55.put((java.lang.reflect.Type) wildcardClass59);
        java.lang.reflect.Type type61 = typeCircularBuffer55.get();
        java.lang.Class<?> wildcardClass62 = typeCircularBuffer55.getClass();
        boolean boolean63 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass62);
        boolean boolean64 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass65 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test0771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0771");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) 'a');
        boolean boolean7 = typeCircularBuffer6.isFull();
        java.lang.Class<?> wildcardClass8 = typeCircularBuffer6.getClass();
        boolean boolean9 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass8);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean12 = typeCircularBuffer11.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass15 = typeCircularBuffer14.getClass();
        boolean boolean16 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass15);
        boolean boolean17 = typeCircularBuffer11.isFull();
        java.lang.reflect.Type type18 = typeCircularBuffer11.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer20.getClass();
        boolean boolean22 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = typeCircularBuffer11.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean26 = typeCircularBuffer25.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass29 = typeCircularBuffer28.getClass();
        boolean boolean30 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass29);
        java.lang.Class<?> wildcardClass31 = typeCircularBuffer25.getClass();
        boolean boolean32 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass31);
        boolean boolean33 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass31);
        java.lang.Class<?> wildcardClass34 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test0772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0772");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 0);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test0773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0773");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        boolean boolean7 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer10.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        boolean boolean13 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean16 = typeCircularBuffer15.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer18.getClass();
        boolean boolean20 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass19);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer15.getClass();
        boolean boolean22 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type24 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer31.getClass();
        boolean boolean33 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass32);
        java.lang.reflect.Type type34 = typeCircularBuffer28.get();
        boolean boolean35 = typeCircularBuffer26.put(type34);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean38 = typeCircularBuffer37.isFull();
        boolean boolean39 = typeCircularBuffer37.isEmpty();
        boolean boolean40 = typeCircularBuffer37.isFull();
        java.lang.Class<?> wildcardClass41 = typeCircularBuffer37.getClass();
        boolean boolean42 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass41);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type45 = typeCircularBuffer44.get();
        boolean boolean46 = typeCircularBuffer44.isFull();
        boolean boolean47 = typeCircularBuffer44.isFull();
        boolean boolean48 = typeCircularBuffer44.isEmpty();
        java.lang.reflect.Type type49 = typeCircularBuffer44.get();
        boolean boolean50 = typeCircularBuffer44.isEmpty();
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer44.getClass();
        boolean boolean52 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass51);
        java.lang.reflect.Type type53 = typeCircularBuffer26.get();
        boolean boolean54 = typeCircularBuffer1.put(type53);
        java.lang.Class<?> wildcardClass55 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(type45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(type49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test0774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0774");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type12 = typeCircularBuffer1.get();
        boolean boolean13 = typeCircularBuffer1.isFull();
        boolean boolean14 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type15 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(type15);
    }

    @Test
    public void test0775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0775");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type12 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean17 = typeCircularBuffer16.isFull();
        boolean boolean18 = typeCircularBuffer16.isEmpty();
        java.lang.reflect.Type type19 = typeCircularBuffer16.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean24 = typeCircularBuffer23.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer26.getClass();
        boolean boolean28 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass27);
        java.lang.reflect.Type type29 = typeCircularBuffer23.get();
        boolean boolean30 = typeCircularBuffer21.put(type29);
        java.lang.Class<?> wildcardClass31 = typeCircularBuffer21.getClass();
        boolean boolean32 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass31);
        boolean boolean33 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass31);
        boolean boolean34 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass31);
        boolean boolean35 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type36 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass37 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(type19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test0776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0776");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        java.lang.reflect.Type type11 = typeCircularBuffer1.get();
        java.lang.reflect.Type type12 = null;
        boolean boolean13 = typeCircularBuffer1.put(type12);
        boolean boolean14 = typeCircularBuffer1.isEmpty();
        boolean boolean15 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 10);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type20 = typeCircularBuffer19.get();
        boolean boolean21 = typeCircularBuffer19.isFull();
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer19.getClass();
        boolean boolean23 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass22);
        boolean boolean24 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass22);
        boolean boolean25 = typeCircularBuffer1.isFull();
        boolean boolean26 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type27 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(type20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(type27);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0777");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        boolean boolean6 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        java.lang.reflect.Type type11 = typeCircularBuffer9.get();
        java.lang.reflect.Type type12 = typeCircularBuffer9.get();
        java.lang.reflect.Type type13 = typeCircularBuffer9.get();
        java.lang.reflect.Type type14 = typeCircularBuffer9.get();
        boolean boolean15 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer20.getClass();
        boolean boolean22 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass21);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean27 = typeCircularBuffer26.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass30 = typeCircularBuffer29.getClass();
        boolean boolean31 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass30);
        java.lang.reflect.Type type32 = typeCircularBuffer26.get();
        boolean boolean33 = typeCircularBuffer24.put(type32);
        boolean boolean34 = typeCircularBuffer24.isFull();
        java.lang.reflect.Type type35 = typeCircularBuffer24.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean38 = typeCircularBuffer37.isEmpty();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        boolean boolean41 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass40);
        boolean boolean42 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass40);
        boolean boolean43 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass40);
        boolean boolean44 = typeCircularBuffer17.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean47 = typeCircularBuffer46.isFull();
        boolean boolean48 = typeCircularBuffer46.isEmpty();
        boolean boolean49 = typeCircularBuffer46.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean52 = typeCircularBuffer51.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer54 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass55 = typeCircularBuffer54.getClass();
        boolean boolean56 = typeCircularBuffer51.put((java.lang.reflect.Type) wildcardClass55);
        java.lang.reflect.Type type57 = typeCircularBuffer51.get();
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        boolean boolean60 = typeCircularBuffer51.put((java.lang.reflect.Type) wildcardClass59);
        boolean boolean61 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass59);
        boolean boolean62 = typeCircularBuffer46.isFull();
        java.lang.reflect.Type type63 = typeCircularBuffer46.get();
        boolean boolean64 = typeCircularBuffer17.put(type63);
        boolean boolean65 = typeCircularBuffer9.put(type63);
        java.lang.Class<?> wildcardClass66 = typeCircularBuffer9.getClass();
        boolean boolean67 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass66);
        boolean boolean68 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(type11);
        org.junit.Assert.assertNull(type12);
        org.junit.Assert.assertNull(type13);
        org.junit.Assert.assertNull(type14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
    }

    @Test
    public void test0778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0778");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer6.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer14.getClass();
        boolean boolean20 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass19);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean25 = typeCircularBuffer24.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer27.getClass();
        boolean boolean29 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.reflect.Type type30 = typeCircularBuffer24.get();
        boolean boolean31 = typeCircularBuffer22.put(type30);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer22.getClass();
        boolean boolean33 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type37 = typeCircularBuffer36.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean42 = typeCircularBuffer41.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass45 = typeCircularBuffer44.getClass();
        boolean boolean46 = typeCircularBuffer41.put((java.lang.reflect.Type) wildcardClass45);
        java.lang.reflect.Type type47 = typeCircularBuffer41.get();
        boolean boolean48 = typeCircularBuffer39.put(type47);
        boolean boolean49 = typeCircularBuffer39.isFull();
        java.lang.reflect.Type type50 = typeCircularBuffer39.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer52 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean53 = typeCircularBuffer52.isEmpty();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        boolean boolean56 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass55);
        boolean boolean57 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass55);
        boolean boolean58 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass55);
        java.lang.reflect.Type type59 = typeCircularBuffer36.get();
        boolean boolean60 = typeCircularBuffer36.isEmpty();
        java.lang.reflect.Type type61 = typeCircularBuffer36.get();
        java.lang.Class<?> wildcardClass62 = typeCircularBuffer36.getClass();
        boolean boolean63 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass62);
        boolean boolean64 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type65 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass66 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(type37);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(type61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test0779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0779");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer5 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean6 = typeCircularBuffer5.isEmpty();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = typeCircularBuffer5.put((java.lang.reflect.Type) wildcardClass8);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer5.getClass();
        boolean boolean11 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass10);
        boolean boolean12 = typeCircularBuffer1.isEmpty();
        boolean boolean13 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type14 = typeCircularBuffer1.get();
        java.lang.reflect.Type type15 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        java.lang.reflect.Type type19 = typeCircularBuffer17.get();
        java.lang.reflect.Type type20 = typeCircularBuffer17.get();
        java.lang.reflect.Type type21 = typeCircularBuffer17.get();
        boolean boolean22 = typeCircularBuffer17.isFull();
        boolean boolean23 = typeCircularBuffer17.isFull();
        java.lang.reflect.Type type24 = typeCircularBuffer17.get();
        boolean boolean25 = typeCircularBuffer17.isFull();
        java.lang.Class<?> wildcardClass26 = typeCircularBuffer17.getClass();
        boolean boolean27 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass26);
        java.lang.reflect.Type type28 = typeCircularBuffer1.get();
        boolean boolean29 = typeCircularBuffer1.isFull();
        boolean boolean30 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNull(type15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(type19);
        org.junit.Assert.assertNull(type20);
        org.junit.Assert.assertNull(type21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test0780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0780");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        boolean boolean8 = typeCircularBuffer1.isFull();
        boolean boolean9 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type10 = typeCircularBuffer1.get();
        boolean boolean11 = typeCircularBuffer1.isFull();
        boolean boolean12 = typeCircularBuffer1.isEmpty();
        boolean boolean13 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean18 = typeCircularBuffer17.isFull();
        boolean boolean19 = typeCircularBuffer17.isEmpty();
        java.lang.reflect.Type type20 = typeCircularBuffer17.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean25 = typeCircularBuffer24.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer27.getClass();
        boolean boolean29 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.reflect.Type type30 = typeCircularBuffer24.get();
        boolean boolean31 = typeCircularBuffer22.put(type30);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer22.getClass();
        boolean boolean33 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass32);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type37 = typeCircularBuffer36.get();
        boolean boolean38 = typeCircularBuffer36.isFull();
        boolean boolean39 = typeCircularBuffer36.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean42 = typeCircularBuffer41.isEmpty();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        boolean boolean45 = typeCircularBuffer41.put((java.lang.reflect.Type) wildcardClass44);
        java.lang.Class<?> wildcardClass46 = typeCircularBuffer41.getClass();
        boolean boolean47 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass46);
        boolean boolean48 = typeCircularBuffer36.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean51 = typeCircularBuffer50.isFull();
        boolean boolean52 = typeCircularBuffer50.isEmpty();
        java.lang.reflect.Type type53 = typeCircularBuffer50.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer55 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer57 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean58 = typeCircularBuffer57.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer60 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass61 = typeCircularBuffer60.getClass();
        boolean boolean62 = typeCircularBuffer57.put((java.lang.reflect.Type) wildcardClass61);
        java.lang.reflect.Type type63 = typeCircularBuffer57.get();
        boolean boolean64 = typeCircularBuffer55.put(type63);
        java.lang.Class<?> wildcardClass65 = typeCircularBuffer55.getClass();
        boolean boolean66 = typeCircularBuffer50.put((java.lang.reflect.Type) wildcardClass65);
        boolean boolean67 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass65);
        java.lang.Class<?> wildcardClass68 = typeCircularBuffer36.getClass();
        boolean boolean69 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass68);
        boolean boolean70 = typeCircularBuffer15.isEmpty();
        boolean boolean71 = typeCircularBuffer15.isFull();
        boolean boolean72 = typeCircularBuffer15.isFull();
        boolean boolean73 = typeCircularBuffer15.isEmpty();
        java.lang.reflect.Type type74 = typeCircularBuffer15.get();
        boolean boolean75 = typeCircularBuffer15.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer77 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) 'a');
        boolean boolean78 = typeCircularBuffer77.isFull();
        java.lang.reflect.Type type79 = typeCircularBuffer77.get();
        boolean boolean80 = typeCircularBuffer77.isFull();
        java.lang.Class<?> wildcardClass81 = typeCircularBuffer77.getClass();
        boolean boolean82 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass81);
        boolean boolean83 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass81);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(type20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(type37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(type53);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNull(type79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
    }

    @Test
    public void test0781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0781");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        boolean boolean8 = typeCircularBuffer1.isEmpty();
        boolean boolean9 = typeCircularBuffer1.isFull();
        boolean boolean10 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean13 = typeCircularBuffer12.isFull();
        java.lang.reflect.Type type14 = typeCircularBuffer12.get();
        boolean boolean15 = typeCircularBuffer12.isEmpty();
        boolean boolean16 = typeCircularBuffer12.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        boolean boolean19 = typeCircularBuffer18.isEmpty();
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer18.getClass();
        boolean boolean21 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass20);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean24 = typeCircularBuffer23.isFull();
        boolean boolean25 = typeCircularBuffer23.isEmpty();
        boolean boolean26 = typeCircularBuffer23.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer31.getClass();
        boolean boolean33 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass32);
        java.lang.reflect.Type type34 = typeCircularBuffer28.get();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        boolean boolean37 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean38 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean39 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean40 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean41 = typeCircularBuffer1.isFull();
        boolean boolean42 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(type14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test0782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0782");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean13 = typeCircularBuffer12.isFull();
        boolean boolean14 = typeCircularBuffer12.isEmpty();
        boolean boolean15 = typeCircularBuffer12.isFull();
        java.lang.Class<?> wildcardClass16 = typeCircularBuffer12.getClass();
        boolean boolean17 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass16);
        boolean boolean18 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean21 = typeCircularBuffer20.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer23.getClass();
        boolean boolean25 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass24);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean30 = typeCircularBuffer29.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass33 = typeCircularBuffer32.getClass();
        boolean boolean34 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass33);
        java.lang.reflect.Type type35 = typeCircularBuffer29.get();
        boolean boolean36 = typeCircularBuffer27.put(type35);
        boolean boolean37 = typeCircularBuffer27.isFull();
        java.lang.reflect.Type type38 = typeCircularBuffer27.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean41 = typeCircularBuffer40.isEmpty();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        boolean boolean44 = typeCircularBuffer40.put((java.lang.reflect.Type) wildcardClass43);
        boolean boolean45 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass43);
        boolean boolean46 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass43);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean49 = typeCircularBuffer48.isFull();
        boolean boolean50 = typeCircularBuffer48.isEmpty();
        java.lang.reflect.Type type51 = typeCircularBuffer48.get();
        boolean boolean52 = typeCircularBuffer48.isEmpty();
        boolean boolean53 = typeCircularBuffer48.isEmpty();
        java.lang.Class<?> wildcardClass54 = typeCircularBuffer48.getClass();
        boolean boolean55 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean56 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(type51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test0783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0783");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean5 = typeCircularBuffer4.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass8 = typeCircularBuffer7.getClass();
        boolean boolean9 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass8);
        java.lang.reflect.Type type10 = typeCircularBuffer4.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type13 = typeCircularBuffer12.get();
        boolean boolean14 = typeCircularBuffer12.isFull();
        boolean boolean15 = typeCircularBuffer12.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        boolean boolean21 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer17.getClass();
        boolean boolean23 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass22);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean26 = typeCircularBuffer25.isEmpty();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        boolean boolean29 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.Class<?> wildcardClass30 = typeCircularBuffer25.getClass();
        boolean boolean31 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass30);
        boolean boolean32 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass30);
        java.lang.Class<?> wildcardClass33 = typeCircularBuffer4.getClass();
        boolean boolean34 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass33);
        boolean boolean35 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean38 = typeCircularBuffer37.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass41 = typeCircularBuffer40.getClass();
        boolean boolean42 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean43 = typeCircularBuffer37.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean46 = typeCircularBuffer45.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass49 = typeCircularBuffer48.getClass();
        boolean boolean50 = typeCircularBuffer45.put((java.lang.reflect.Type) wildcardClass49);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer52 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer54 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean55 = typeCircularBuffer54.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer57 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass58 = typeCircularBuffer57.getClass();
        boolean boolean59 = typeCircularBuffer54.put((java.lang.reflect.Type) wildcardClass58);
        java.lang.reflect.Type type60 = typeCircularBuffer54.get();
        boolean boolean61 = typeCircularBuffer52.put(type60);
        boolean boolean62 = typeCircularBuffer52.isFull();
        java.lang.reflect.Type type63 = typeCircularBuffer52.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer65 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean66 = typeCircularBuffer65.isEmpty();
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        boolean boolean69 = typeCircularBuffer65.put((java.lang.reflect.Type) wildcardClass68);
        boolean boolean70 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass68);
        boolean boolean71 = typeCircularBuffer45.put((java.lang.reflect.Type) wildcardClass68);
        boolean boolean72 = typeCircularBuffer45.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer74 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean75 = typeCircularBuffer74.isFull();
        boolean boolean76 = typeCircularBuffer74.isEmpty();
        boolean boolean77 = typeCircularBuffer74.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer79 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean80 = typeCircularBuffer79.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer82 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass83 = typeCircularBuffer82.getClass();
        boolean boolean84 = typeCircularBuffer79.put((java.lang.reflect.Type) wildcardClass83);
        java.lang.reflect.Type type85 = typeCircularBuffer79.get();
        java.lang.Object obj86 = new java.lang.Object();
        java.lang.Class<?> wildcardClass87 = obj86.getClass();
        boolean boolean88 = typeCircularBuffer79.put((java.lang.reflect.Type) wildcardClass87);
        boolean boolean89 = typeCircularBuffer74.put((java.lang.reflect.Type) wildcardClass87);
        boolean boolean90 = typeCircularBuffer74.isFull();
        java.lang.reflect.Type type91 = typeCircularBuffer74.get();
        boolean boolean92 = typeCircularBuffer45.put(type91);
        java.lang.Class<?> wildcardClass93 = type91.getClass();
        boolean boolean94 = typeCircularBuffer37.put(type91);
        java.lang.reflect.Type type95 = typeCircularBuffer37.get();
        boolean boolean96 = typeCircularBuffer1.put(type95);
        boolean boolean97 = typeCircularBuffer1.isFull();
        boolean boolean98 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNull(type13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(type85);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(type91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(type95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test0784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0784");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        java.lang.reflect.Type type11 = typeCircularBuffer1.get();
        java.lang.reflect.Type type12 = typeCircularBuffer1.get();
        boolean boolean13 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type14 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean17 = typeCircularBuffer16.isFull();
        java.lang.reflect.Type type18 = typeCircularBuffer16.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean21 = typeCircularBuffer20.isEmpty();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        boolean boolean24 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass23);
        java.lang.Class<?> wildcardClass25 = typeCircularBuffer20.getClass();
        boolean boolean26 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass25);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer31.getClass();
        boolean boolean33 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer28.isEmpty();
        java.lang.reflect.Type type35 = typeCircularBuffer28.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        java.lang.reflect.Type type38 = typeCircularBuffer37.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean41 = typeCircularBuffer40.isFull();
        boolean boolean42 = typeCircularBuffer40.isEmpty();
        boolean boolean43 = typeCircularBuffer40.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean46 = typeCircularBuffer45.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass49 = typeCircularBuffer48.getClass();
        boolean boolean50 = typeCircularBuffer45.put((java.lang.reflect.Type) wildcardClass49);
        java.lang.reflect.Type type51 = typeCircularBuffer45.get();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        boolean boolean54 = typeCircularBuffer45.put((java.lang.reflect.Type) wildcardClass53);
        boolean boolean55 = typeCircularBuffer40.put((java.lang.reflect.Type) wildcardClass53);
        boolean boolean56 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass53);
        java.lang.Class<?> wildcardClass57 = typeCircularBuffer37.getClass();
        boolean boolean58 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass57);
        boolean boolean59 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass57);
        boolean boolean60 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(type14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(type18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNull(type38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
    }

    @Test
    public void test0785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0785");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type7 = typeCircularBuffer6.get();
        boolean boolean8 = typeCircularBuffer6.isFull();
        boolean boolean9 = typeCircularBuffer6.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean12 = typeCircularBuffer11.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass15 = typeCircularBuffer14.getClass();
        boolean boolean16 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass15);
        boolean boolean17 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass15);
        boolean boolean18 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass26 = typeCircularBuffer25.getClass();
        boolean boolean27 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass26);
        java.lang.reflect.Type type28 = typeCircularBuffer22.get();
        boolean boolean29 = typeCircularBuffer20.put(type28);
        boolean boolean30 = typeCircularBuffer20.isFull();
        java.lang.reflect.Type type31 = typeCircularBuffer20.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean34 = typeCircularBuffer33.isEmpty();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        boolean boolean37 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean38 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass36);
        java.lang.reflect.Type type39 = typeCircularBuffer20.get();
        boolean boolean40 = typeCircularBuffer6.put(type39);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean45 = typeCircularBuffer44.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass48 = typeCircularBuffer47.getClass();
        boolean boolean49 = typeCircularBuffer44.put((java.lang.reflect.Type) wildcardClass48);
        java.lang.reflect.Type type50 = typeCircularBuffer44.get();
        boolean boolean51 = typeCircularBuffer42.put(type50);
        boolean boolean52 = typeCircularBuffer42.isFull();
        java.lang.reflect.Type type53 = typeCircularBuffer42.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer55 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean56 = typeCircularBuffer55.isEmpty();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        boolean boolean59 = typeCircularBuffer55.put((java.lang.reflect.Type) wildcardClass58);
        boolean boolean60 = typeCircularBuffer42.put((java.lang.reflect.Type) wildcardClass58);
        java.lang.reflect.Type type61 = typeCircularBuffer42.get();
        boolean boolean62 = typeCircularBuffer6.put(type61);
        boolean boolean63 = typeCircularBuffer1.put(type61);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer65 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean66 = typeCircularBuffer65.isEmpty();
        boolean boolean67 = typeCircularBuffer65.isEmpty();
        java.lang.reflect.Type type68 = typeCircularBuffer65.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer70 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean71 = typeCircularBuffer70.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer73 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass74 = typeCircularBuffer73.getClass();
        boolean boolean75 = typeCircularBuffer70.put((java.lang.reflect.Type) wildcardClass74);
        boolean boolean76 = typeCircularBuffer65.put((java.lang.reflect.Type) wildcardClass74);
        boolean boolean77 = typeCircularBuffer65.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.invoke.TypeDescriptor> typeDescriptorCircularBuffer79 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.invoke.TypeDescriptor>(100);
        java.lang.Class<?> wildcardClass80 = typeDescriptorCircularBuffer79.getClass();
        boolean boolean81 = typeCircularBuffer65.put((java.lang.reflect.Type) wildcardClass80);
        boolean boolean82 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass80);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer84 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type85 = typeCircularBuffer84.get();
        boolean boolean86 = typeCircularBuffer84.isFull();
        java.lang.reflect.Type type87 = typeCircularBuffer84.get();
        java.lang.Class<?> wildcardClass88 = typeCircularBuffer84.getClass();
        boolean boolean89 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass88);
        java.lang.Class<?> wildcardClass90 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNull(type68);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNull(type85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNull(type87);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0786");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        boolean boolean6 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        boolean boolean8 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type11 = typeCircularBuffer10.get();
        boolean boolean12 = typeCircularBuffer10.isFull();
        boolean boolean13 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean16 = typeCircularBuffer15.isEmpty();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        boolean boolean19 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass18);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer15.getClass();
        boolean boolean21 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type22 = typeCircularBuffer10.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean27 = typeCircularBuffer26.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass30 = typeCircularBuffer29.getClass();
        boolean boolean31 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass30);
        java.lang.reflect.Type type32 = typeCircularBuffer26.get();
        boolean boolean33 = typeCircularBuffer24.put(type32);
        boolean boolean34 = typeCircularBuffer10.put(type32);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer10.getClass();
        boolean boolean36 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass35);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type39 = typeCircularBuffer38.get();
        boolean boolean40 = typeCircularBuffer38.isFull();
        boolean boolean41 = typeCircularBuffer38.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer46.getClass();
        boolean boolean48 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass47);
        boolean boolean49 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass47);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer53 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean54 = typeCircularBuffer53.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer56 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass57 = typeCircularBuffer56.getClass();
        boolean boolean58 = typeCircularBuffer53.put((java.lang.reflect.Type) wildcardClass57);
        java.lang.reflect.Type type59 = typeCircularBuffer53.get();
        java.lang.Class<?> wildcardClass60 = typeCircularBuffer53.getClass();
        boolean boolean61 = typeCircularBuffer51.put((java.lang.reflect.Type) wildcardClass60);
        boolean boolean62 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass60);
        boolean boolean63 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass60);
        boolean boolean64 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer66 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type67 = typeCircularBuffer66.get();
        boolean boolean68 = typeCircularBuffer66.isFull();
        boolean boolean69 = typeCircularBuffer66.isFull();
        boolean boolean70 = typeCircularBuffer66.isFull();
        java.lang.reflect.Type type71 = typeCircularBuffer66.get();
        boolean boolean72 = typeCircularBuffer66.isFull();
        boolean boolean73 = typeCircularBuffer66.isFull();
        java.lang.Class<?> wildcardClass74 = typeCircularBuffer66.getClass();
        boolean boolean75 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass74);
        java.lang.reflect.Type type76 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass77 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(type11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(type39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(type67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(type71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test0787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0787");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        boolean boolean9 = typeCircularBuffer1.isEmpty();
        boolean boolean10 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0788");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) ' ');
        java.lang.reflect.Type type10 = typeCircularBuffer9.get();
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer9.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean17 = typeCircularBuffer16.isFull();
        boolean boolean18 = typeCircularBuffer16.isEmpty();
        java.lang.reflect.Type type19 = typeCircularBuffer16.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean24 = typeCircularBuffer23.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer26.getClass();
        boolean boolean28 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass27);
        java.lang.reflect.Type type29 = typeCircularBuffer23.get();
        boolean boolean30 = typeCircularBuffer21.put(type29);
        java.lang.Class<?> wildcardClass31 = typeCircularBuffer21.getClass();
        boolean boolean32 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass31);
        boolean boolean33 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass31);
        boolean boolean34 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass31);
        boolean boolean35 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type36 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass37 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(type19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test0789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0789");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type12 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        boolean boolean19 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type20 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass26 = typeCircularBuffer25.getClass();
        boolean boolean27 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass26);
        boolean boolean28 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean31 = typeCircularBuffer30.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass34 = typeCircularBuffer33.getClass();
        boolean boolean35 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass34);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean40 = typeCircularBuffer39.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass43 = typeCircularBuffer42.getClass();
        boolean boolean44 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass43);
        java.lang.reflect.Type type45 = typeCircularBuffer39.get();
        boolean boolean46 = typeCircularBuffer37.put(type45);
        boolean boolean47 = typeCircularBuffer37.isFull();
        java.lang.reflect.Type type48 = typeCircularBuffer37.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean51 = typeCircularBuffer50.isEmpty();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        boolean boolean54 = typeCircularBuffer50.put((java.lang.reflect.Type) wildcardClass53);
        boolean boolean55 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass53);
        boolean boolean56 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass53);
        boolean boolean57 = typeCircularBuffer30.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer59 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean60 = typeCircularBuffer59.isFull();
        boolean boolean61 = typeCircularBuffer59.isEmpty();
        boolean boolean62 = typeCircularBuffer59.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer64 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean65 = typeCircularBuffer64.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer67 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass68 = typeCircularBuffer67.getClass();
        boolean boolean69 = typeCircularBuffer64.put((java.lang.reflect.Type) wildcardClass68);
        java.lang.reflect.Type type70 = typeCircularBuffer64.get();
        java.lang.Object obj71 = new java.lang.Object();
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        boolean boolean73 = typeCircularBuffer64.put((java.lang.reflect.Type) wildcardClass72);
        boolean boolean74 = typeCircularBuffer59.put((java.lang.reflect.Type) wildcardClass72);
        boolean boolean75 = typeCircularBuffer59.isFull();
        java.lang.reflect.Type type76 = typeCircularBuffer59.get();
        boolean boolean77 = typeCircularBuffer30.put(type76);
        java.lang.Class<?> wildcardClass78 = type76.getClass();
        boolean boolean79 = typeCircularBuffer22.put(type76);
        java.lang.reflect.Type type80 = typeCircularBuffer22.get();
        boolean boolean81 = typeCircularBuffer1.put(type80);
        boolean boolean82 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test0790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0790");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass9 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0791");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer10.get();
        boolean boolean17 = typeCircularBuffer8.put(type16);
        boolean boolean18 = typeCircularBuffer8.isFull();
        java.lang.reflect.Type type19 = typeCircularBuffer8.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean22 = typeCircularBuffer21.isEmpty();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean26 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean27 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean28 = typeCircularBuffer1.isFull();
        boolean boolean29 = typeCircularBuffer1.isFull();
        boolean boolean30 = typeCircularBuffer1.isEmpty();
        boolean boolean31 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type32 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean37 = typeCircularBuffer36.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass40 = typeCircularBuffer39.getClass();
        boolean boolean41 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass40);
        java.lang.reflect.Type type42 = typeCircularBuffer36.get();
        boolean boolean43 = typeCircularBuffer34.put(type42);
        boolean boolean44 = typeCircularBuffer34.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean47 = typeCircularBuffer46.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer49 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass50 = typeCircularBuffer49.getClass();
        boolean boolean51 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass50);
        java.lang.reflect.Type type52 = typeCircularBuffer46.get();
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        boolean boolean55 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean56 = typeCircularBuffer34.put((java.lang.reflect.Type) wildcardClass54);
        java.lang.reflect.Type type57 = typeCircularBuffer34.get();
        boolean boolean58 = typeCircularBuffer1.put(type57);
        boolean boolean59 = typeCircularBuffer1.isEmpty();
        boolean boolean60 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass61 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test0792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0792");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type12 = typeCircularBuffer1.get();
        boolean boolean13 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type14 = typeCircularBuffer1.get();
        java.lang.reflect.Type type15 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean20 = typeCircularBuffer19.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass23 = typeCircularBuffer22.getClass();
        boolean boolean24 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass23);
        java.lang.reflect.Type type25 = typeCircularBuffer19.get();
        boolean boolean26 = typeCircularBuffer17.put(type25);
        boolean boolean27 = typeCircularBuffer17.isEmpty();
        boolean boolean28 = typeCircularBuffer17.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean31 = typeCircularBuffer30.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass34 = typeCircularBuffer33.getClass();
        boolean boolean35 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass34);
        java.lang.reflect.Type type36 = typeCircularBuffer30.get();
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        boolean boolean39 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass38);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean42 = typeCircularBuffer41.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass45 = typeCircularBuffer44.getClass();
        boolean boolean46 = typeCircularBuffer41.put((java.lang.reflect.Type) wildcardClass45);
        java.lang.reflect.Type type47 = typeCircularBuffer41.get();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        boolean boolean50 = typeCircularBuffer41.put((java.lang.reflect.Type) wildcardClass49);
        java.lang.reflect.Type type51 = typeCircularBuffer41.get();
        boolean boolean52 = typeCircularBuffer30.put(type51);
        boolean boolean53 = typeCircularBuffer17.put(type51);
        boolean boolean54 = typeCircularBuffer17.isEmpty();
        java.lang.reflect.Type type55 = typeCircularBuffer17.get();
        boolean boolean56 = typeCircularBuffer1.put(type55);
        boolean boolean57 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type58 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass59 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(type14);
        org.junit.Assert.assertNull(type15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test0793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0793");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        boolean boolean7 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean19 = typeCircularBuffer18.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer21.getClass();
        boolean boolean23 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass22);
        java.lang.reflect.Type type24 = typeCircularBuffer18.get();
        boolean boolean25 = typeCircularBuffer16.put(type24);
        boolean boolean26 = typeCircularBuffer16.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer31.getClass();
        boolean boolean33 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass32);
        java.lang.reflect.Type type34 = typeCircularBuffer28.get();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        boolean boolean37 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean38 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean39 = typeCircularBuffer16.isEmpty();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        boolean boolean42 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean43 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean44 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass41);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean47 = typeCircularBuffer46.isEmpty();
        boolean boolean48 = typeCircularBuffer46.isFull();
        java.lang.reflect.Type type49 = typeCircularBuffer46.get();
        boolean boolean50 = typeCircularBuffer46.isFull();
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer46.getClass();
        boolean boolean52 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean53 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(type49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test0794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0794");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertNull(type9);
    }

    @Test
    public void test0795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0795");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isFull();
        boolean boolean8 = typeCircularBuffer1.isFull();
        boolean boolean9 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type12 = typeCircularBuffer11.get();
        boolean boolean13 = typeCircularBuffer11.isFull();
        boolean boolean14 = typeCircularBuffer11.isFull();
        boolean boolean15 = typeCircularBuffer11.isFull();
        java.lang.reflect.Type type16 = typeCircularBuffer11.get();
        boolean boolean17 = typeCircularBuffer11.isEmpty();
        boolean boolean18 = typeCircularBuffer11.isEmpty();
        boolean boolean19 = typeCircularBuffer11.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type22 = typeCircularBuffer21.get();
        boolean boolean23 = typeCircularBuffer21.isFull();
        boolean boolean24 = typeCircularBuffer21.isFull();
        boolean boolean25 = typeCircularBuffer21.isFull();
        boolean boolean26 = typeCircularBuffer21.isFull();
        boolean boolean27 = typeCircularBuffer21.isFull();
        boolean boolean28 = typeCircularBuffer21.isEmpty();
        java.lang.reflect.Type type29 = typeCircularBuffer21.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        java.lang.reflect.Type type33 = typeCircularBuffer31.get();
        boolean boolean34 = typeCircularBuffer31.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type37 = typeCircularBuffer36.get();
        boolean boolean38 = typeCircularBuffer36.isFull();
        boolean boolean39 = typeCircularBuffer36.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean42 = typeCircularBuffer41.isEmpty();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        boolean boolean45 = typeCircularBuffer41.put((java.lang.reflect.Type) wildcardClass44);
        java.lang.Class<?> wildcardClass46 = typeCircularBuffer41.getClass();
        boolean boolean47 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass46);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer49 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean50 = typeCircularBuffer49.isEmpty();
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        boolean boolean53 = typeCircularBuffer49.put((java.lang.reflect.Type) wildcardClass52);
        java.lang.Class<?> wildcardClass54 = typeCircularBuffer49.getClass();
        boolean boolean55 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean56 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean57 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean58 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean59 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass54);
        java.lang.reflect.Type type60 = typeCircularBuffer1.get();
        java.lang.reflect.Type type61 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass62 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(type22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(type29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(type33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(type37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNull(type61);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test0796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0796");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type12 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        boolean boolean19 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass17);
        boolean boolean20 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type21 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean24 = typeCircularBuffer23.isFull();
        boolean boolean25 = typeCircularBuffer23.isEmpty();
        boolean boolean26 = typeCircularBuffer23.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer31.getClass();
        boolean boolean33 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass32);
        java.lang.reflect.Type type34 = typeCircularBuffer28.get();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        boolean boolean37 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean38 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean39 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean40 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
    }

    @Test
    public void test0797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0797");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean4 = typeCircularBuffer3.isFull();
        java.lang.reflect.Type type5 = typeCircularBuffer3.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean8 = typeCircularBuffer7.isEmpty();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        boolean boolean11 = typeCircularBuffer7.put((java.lang.reflect.Type) wildcardClass10);
        java.lang.Class<?> wildcardClass12 = typeCircularBuffer7.getClass();
        boolean boolean13 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass12);
        boolean boolean14 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass12);
        boolean boolean15 = typeCircularBuffer1.isEmpty();
        boolean boolean16 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean19 = typeCircularBuffer18.isEmpty();
        boolean boolean20 = typeCircularBuffer18.isFull();
        java.lang.reflect.Type type21 = typeCircularBuffer18.get();
        boolean boolean22 = typeCircularBuffer18.isFull();
        boolean boolean23 = typeCircularBuffer18.isEmpty();
        boolean boolean24 = typeCircularBuffer18.isFull();
        boolean boolean25 = typeCircularBuffer18.isEmpty();
        java.lang.Class<?> wildcardClass26 = typeCircularBuffer18.getClass();
        boolean boolean27 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass26);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(type21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0798");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer10.get();
        boolean boolean17 = typeCircularBuffer8.put(type16);
        boolean boolean18 = typeCircularBuffer8.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean21 = typeCircularBuffer20.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer23.getClass();
        boolean boolean25 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass24);
        java.lang.reflect.Type type26 = typeCircularBuffer20.get();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        boolean boolean29 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass28);
        boolean boolean30 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass28);
        boolean boolean31 = typeCircularBuffer8.isEmpty();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        boolean boolean34 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass33);
        boolean boolean35 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass33);
        boolean boolean36 = typeCircularBuffer1.isEmpty();
        boolean boolean37 = typeCircularBuffer1.isEmpty();
        boolean boolean38 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean41 = typeCircularBuffer40.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer43.getClass();
        boolean boolean45 = typeCircularBuffer40.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean46 = typeCircularBuffer40.isFull();
        java.lang.reflect.Type type47 = typeCircularBuffer40.get();
        boolean boolean48 = typeCircularBuffer1.put(type47);
        java.lang.reflect.Type type49 = typeCircularBuffer1.get();
        boolean boolean50 = typeCircularBuffer1.isFull();
        boolean boolean51 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass52 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test0799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0799");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean10 = typeCircularBuffer9.isFull();
        boolean boolean11 = typeCircularBuffer9.isEmpty();
        java.lang.reflect.Type type12 = typeCircularBuffer9.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer19.getClass();
        boolean boolean21 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type22 = typeCircularBuffer16.get();
        boolean boolean23 = typeCircularBuffer14.put(type22);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer14.getClass();
        boolean boolean25 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean26 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass24);
        java.lang.reflect.Type type27 = typeCircularBuffer1.get();
        boolean boolean28 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type29 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean34 = typeCircularBuffer33.isFull();
        boolean boolean35 = typeCircularBuffer33.isEmpty();
        java.lang.reflect.Type type36 = typeCircularBuffer33.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean41 = typeCircularBuffer40.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer43.getClass();
        boolean boolean45 = typeCircularBuffer40.put((java.lang.reflect.Type) wildcardClass44);
        java.lang.reflect.Type type46 = typeCircularBuffer40.get();
        boolean boolean47 = typeCircularBuffer38.put(type46);
        java.lang.Class<?> wildcardClass48 = typeCircularBuffer38.getClass();
        boolean boolean49 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass48);
        boolean boolean50 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass48);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer52 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type53 = typeCircularBuffer52.get();
        boolean boolean54 = typeCircularBuffer52.isFull();
        boolean boolean55 = typeCircularBuffer52.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer57 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean58 = typeCircularBuffer57.isEmpty();
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        boolean boolean61 = typeCircularBuffer57.put((java.lang.reflect.Type) wildcardClass60);
        java.lang.Class<?> wildcardClass62 = typeCircularBuffer57.getClass();
        boolean boolean63 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass62);
        boolean boolean64 = typeCircularBuffer52.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer66 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean67 = typeCircularBuffer66.isFull();
        boolean boolean68 = typeCircularBuffer66.isEmpty();
        java.lang.reflect.Type type69 = typeCircularBuffer66.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer71 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer73 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean74 = typeCircularBuffer73.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer76 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass77 = typeCircularBuffer76.getClass();
        boolean boolean78 = typeCircularBuffer73.put((java.lang.reflect.Type) wildcardClass77);
        java.lang.reflect.Type type79 = typeCircularBuffer73.get();
        boolean boolean80 = typeCircularBuffer71.put(type79);
        java.lang.Class<?> wildcardClass81 = typeCircularBuffer71.getClass();
        boolean boolean82 = typeCircularBuffer66.put((java.lang.reflect.Type) wildcardClass81);
        boolean boolean83 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass81);
        java.lang.Class<?> wildcardClass84 = typeCircularBuffer52.getClass();
        boolean boolean85 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass84);
        boolean boolean86 = typeCircularBuffer31.isEmpty();
        boolean boolean87 = typeCircularBuffer31.isFull();
        boolean boolean88 = typeCircularBuffer31.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer90 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean91 = typeCircularBuffer90.isFull();
        java.lang.reflect.Type type92 = typeCircularBuffer90.get();
        java.lang.Class<?> wildcardClass93 = typeCircularBuffer90.getClass();
        boolean boolean94 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass93);
        boolean boolean95 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass93);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(type12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(type29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(type36);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(type53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNull(type69);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNull(type92);
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
    }

    @Test
    public void test0800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0800");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        boolean boolean7 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer10.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer19.getClass();
        boolean boolean21 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type22 = typeCircularBuffer16.get();
        boolean boolean23 = typeCircularBuffer14.put(type22);
        java.lang.reflect.Type type24 = typeCircularBuffer14.get();
        boolean boolean25 = typeCircularBuffer14.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean28 = typeCircularBuffer27.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass31 = typeCircularBuffer30.getClass();
        boolean boolean32 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass31);
        java.lang.reflect.Type type33 = typeCircularBuffer27.get();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        boolean boolean36 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass35);
        java.lang.reflect.Type type37 = typeCircularBuffer27.get();
        boolean boolean38 = typeCircularBuffer14.put(type37);
        boolean boolean39 = typeCircularBuffer1.put(type37);
        boolean boolean40 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) 'a');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass45 = typeCircularBuffer44.getClass();
        boolean boolean46 = typeCircularBuffer42.put((java.lang.reflect.Type) wildcardClass45);
        java.lang.reflect.Type type47 = typeCircularBuffer42.get();
        java.lang.reflect.Type type48 = typeCircularBuffer42.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type51 = typeCircularBuffer50.get();
        boolean boolean52 = typeCircularBuffer50.isFull();
        boolean boolean53 = typeCircularBuffer50.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer55 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean56 = typeCircularBuffer55.isEmpty();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        boolean boolean59 = typeCircularBuffer55.put((java.lang.reflect.Type) wildcardClass58);
        java.lang.Class<?> wildcardClass60 = typeCircularBuffer55.getClass();
        boolean boolean61 = typeCircularBuffer50.put((java.lang.reflect.Type) wildcardClass60);
        java.lang.reflect.Type type62 = typeCircularBuffer50.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer64 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer66 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean67 = typeCircularBuffer66.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer69 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass70 = typeCircularBuffer69.getClass();
        boolean boolean71 = typeCircularBuffer66.put((java.lang.reflect.Type) wildcardClass70);
        java.lang.reflect.Type type72 = typeCircularBuffer66.get();
        boolean boolean73 = typeCircularBuffer64.put(type72);
        boolean boolean74 = typeCircularBuffer50.put(type72);
        java.lang.Class<?> wildcardClass75 = typeCircularBuffer50.getClass();
        boolean boolean76 = typeCircularBuffer42.put((java.lang.reflect.Type) wildcardClass75);
        java.lang.reflect.Type type77 = typeCircularBuffer42.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer79 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean80 = typeCircularBuffer79.isFull();
        java.lang.reflect.Type type81 = typeCircularBuffer79.get();
        boolean boolean82 = typeCircularBuffer79.isFull();
        java.lang.Class<?> wildcardClass83 = typeCircularBuffer79.getClass();
        boolean boolean84 = typeCircularBuffer42.put((java.lang.reflect.Type) wildcardClass83);
        boolean boolean85 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass83);
        java.lang.Class<?> wildcardClass86 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNull(type48);
        org.junit.Assert.assertNull(type51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNull(type81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test0801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0801");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer6.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.reflect.Type type13 = typeCircularBuffer1.get();
        boolean boolean14 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type17 = typeCircularBuffer16.get();
        boolean boolean18 = typeCircularBuffer16.isFull();
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer16.getClass();
        boolean boolean20 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass19);
        boolean boolean21 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(type17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0802");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        java.lang.Class<?> wildcardClass8 = typeCircularBuffer6.getClass();
        boolean boolean9 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass8);
        java.lang.reflect.Type type10 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean13 = typeCircularBuffer12.isFull();
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer12.getClass();
        boolean boolean15 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass14);
        boolean boolean16 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test0803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0803");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type12 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer17.getClass();
        boolean boolean19 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass18);
        boolean boolean20 = typeCircularBuffer14.isFull();
        java.lang.reflect.Type type21 = typeCircularBuffer14.get();
        boolean boolean22 = typeCircularBuffer1.put(type21);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean25 = typeCircularBuffer24.isEmpty();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        boolean boolean28 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer24.isFull();
        java.lang.reflect.Type type30 = typeCircularBuffer24.get();
        boolean boolean31 = typeCircularBuffer1.put(type30);
        java.lang.Class<?> wildcardClass32 = type30.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test0804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0804");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) ' ');
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean5 = typeCircularBuffer4.isEmpty();
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        boolean boolean8 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.Class<?> wildcardClass9 = typeCircularBuffer4.getClass();
        boolean boolean10 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass9);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean13 = typeCircularBuffer12.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type16 = typeCircularBuffer15.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean21 = typeCircularBuffer20.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer23.getClass();
        boolean boolean25 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass24);
        java.lang.reflect.Type type26 = typeCircularBuffer20.get();
        boolean boolean27 = typeCircularBuffer18.put(type26);
        boolean boolean28 = typeCircularBuffer18.isFull();
        java.lang.reflect.Type type29 = typeCircularBuffer18.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        boolean boolean35 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass34);
        boolean boolean36 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass34);
        boolean boolean37 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass34);
        boolean boolean38 = typeCircularBuffer15.isEmpty();
        java.lang.Class<?> wildcardClass39 = typeCircularBuffer15.getClass();
        boolean boolean40 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass39);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean43 = typeCircularBuffer42.isFull();
        boolean boolean44 = typeCircularBuffer42.isEmpty();
        boolean boolean45 = typeCircularBuffer42.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean48 = typeCircularBuffer47.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer50.getClass();
        boolean boolean52 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass51);
        java.lang.reflect.Type type53 = typeCircularBuffer47.get();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        boolean boolean56 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass55);
        boolean boolean57 = typeCircularBuffer42.put((java.lang.reflect.Type) wildcardClass55);
        boolean boolean58 = typeCircularBuffer42.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer60 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer62 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean63 = typeCircularBuffer62.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer65 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass66 = typeCircularBuffer65.getClass();
        boolean boolean67 = typeCircularBuffer62.put((java.lang.reflect.Type) wildcardClass66);
        java.lang.reflect.Type type68 = typeCircularBuffer62.get();
        boolean boolean69 = typeCircularBuffer60.put(type68);
        boolean boolean70 = typeCircularBuffer60.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer72 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean73 = typeCircularBuffer72.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer75 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass76 = typeCircularBuffer75.getClass();
        boolean boolean77 = typeCircularBuffer72.put((java.lang.reflect.Type) wildcardClass76);
        java.lang.reflect.Type type78 = typeCircularBuffer72.get();
        java.lang.Object obj79 = new java.lang.Object();
        java.lang.Class<?> wildcardClass80 = obj79.getClass();
        boolean boolean81 = typeCircularBuffer72.put((java.lang.reflect.Type) wildcardClass80);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer83 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean84 = typeCircularBuffer83.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer86 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass87 = typeCircularBuffer86.getClass();
        boolean boolean88 = typeCircularBuffer83.put((java.lang.reflect.Type) wildcardClass87);
        java.lang.Class<?> wildcardClass89 = typeCircularBuffer83.getClass();
        boolean boolean90 = typeCircularBuffer72.put((java.lang.reflect.Type) wildcardClass89);
        boolean boolean91 = typeCircularBuffer60.put((java.lang.reflect.Type) wildcardClass89);
        boolean boolean92 = typeCircularBuffer42.put((java.lang.reflect.Type) wildcardClass89);
        boolean boolean93 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass89);
        boolean boolean94 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass89);
        boolean boolean95 = typeCircularBuffer1.isFull();
        boolean boolean96 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type97 = typeCircularBuffer1.get();
        boolean boolean98 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass99 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(type16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertNotNull(type97);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0805");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.String> strCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.String>((int) (byte) 1);
        java.lang.Class<?> wildcardClass2 = strCircularBuffer1.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test0806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0806");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type10 = typeCircularBuffer9.get();
        boolean boolean11 = typeCircularBuffer9.isFull();
        boolean boolean12 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer14.getClass();
        boolean boolean20 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass19);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        boolean boolean26 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer22.getClass();
        boolean boolean28 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass27);
        java.lang.reflect.Type type30 = typeCircularBuffer1.get();
        boolean boolean31 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type32 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass33 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(type32);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test0807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0807");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean10 = typeCircularBuffer9.isFull();
        boolean boolean11 = typeCircularBuffer9.isEmpty();
        java.lang.reflect.Type type12 = typeCircularBuffer9.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer19.getClass();
        boolean boolean21 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type22 = typeCircularBuffer16.get();
        boolean boolean23 = typeCircularBuffer14.put(type22);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer14.getClass();
        boolean boolean25 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean26 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean27 = typeCircularBuffer1.isEmpty();
        boolean boolean28 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type31 = typeCircularBuffer30.get();
        boolean boolean32 = typeCircularBuffer30.isFull();
        boolean boolean33 = typeCircularBuffer30.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean36 = typeCircularBuffer35.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass39 = typeCircularBuffer38.getClass();
        boolean boolean40 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass39);
        boolean boolean41 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass39);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean46 = typeCircularBuffer45.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass49 = typeCircularBuffer48.getClass();
        boolean boolean50 = typeCircularBuffer45.put((java.lang.reflect.Type) wildcardClass49);
        java.lang.reflect.Type type51 = typeCircularBuffer45.get();
        java.lang.Class<?> wildcardClass52 = typeCircularBuffer45.getClass();
        boolean boolean53 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass52);
        boolean boolean54 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass52);
        boolean boolean55 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass52);
        boolean boolean56 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type57 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(type12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(type31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(type57);
    }

    @Test
    public void test0808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0808");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer5 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean6 = typeCircularBuffer5.isEmpty();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = typeCircularBuffer5.put((java.lang.reflect.Type) wildcardClass8);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer5.getClass();
        boolean boolean11 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass10);
        boolean boolean12 = typeCircularBuffer1.isEmpty();
        boolean boolean13 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type14 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type17 = typeCircularBuffer16.get();
        boolean boolean18 = typeCircularBuffer16.isFull();
        boolean boolean19 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean22 = typeCircularBuffer21.isEmpty();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass24);
        java.lang.Class<?> wildcardClass26 = typeCircularBuffer21.getClass();
        boolean boolean27 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass26);
        boolean boolean28 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass26);
        boolean boolean29 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type30 = typeCircularBuffer1.get();
        java.lang.reflect.Type type31 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNull(type17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNull(type31);
    }

    @Test
    public void test0809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0809");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type9 = typeCircularBuffer8.get();
        boolean boolean10 = typeCircularBuffer8.isFull();
        boolean boolean11 = typeCircularBuffer8.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass16);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer13.getClass();
        boolean boolean19 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass18);
        java.lang.reflect.Type type20 = typeCircularBuffer8.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean25 = typeCircularBuffer24.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer27.getClass();
        boolean boolean29 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.reflect.Type type30 = typeCircularBuffer24.get();
        boolean boolean31 = typeCircularBuffer22.put(type30);
        boolean boolean32 = typeCircularBuffer8.put(type30);
        java.lang.reflect.Type type33 = null;
        boolean boolean34 = typeCircularBuffer8.put(type33);
        java.lang.reflect.Type type35 = typeCircularBuffer8.get();
        boolean boolean36 = typeCircularBuffer1.put(type35);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean41 = typeCircularBuffer40.isFull();
        boolean boolean42 = typeCircularBuffer40.isEmpty();
        java.lang.reflect.Type type43 = typeCircularBuffer40.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean48 = typeCircularBuffer47.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer50.getClass();
        boolean boolean52 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass51);
        java.lang.reflect.Type type53 = typeCircularBuffer47.get();
        boolean boolean54 = typeCircularBuffer45.put(type53);
        java.lang.Class<?> wildcardClass55 = typeCircularBuffer45.getClass();
        boolean boolean56 = typeCircularBuffer40.put((java.lang.reflect.Type) wildcardClass55);
        boolean boolean57 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass55);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer59 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type60 = typeCircularBuffer59.get();
        boolean boolean61 = typeCircularBuffer59.isFull();
        boolean boolean62 = typeCircularBuffer59.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer64 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean65 = typeCircularBuffer64.isEmpty();
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        boolean boolean68 = typeCircularBuffer64.put((java.lang.reflect.Type) wildcardClass67);
        java.lang.Class<?> wildcardClass69 = typeCircularBuffer64.getClass();
        boolean boolean70 = typeCircularBuffer59.put((java.lang.reflect.Type) wildcardClass69);
        boolean boolean71 = typeCircularBuffer59.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer73 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean74 = typeCircularBuffer73.isFull();
        boolean boolean75 = typeCircularBuffer73.isEmpty();
        java.lang.reflect.Type type76 = typeCircularBuffer73.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer78 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer80 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean81 = typeCircularBuffer80.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer83 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass84 = typeCircularBuffer83.getClass();
        boolean boolean85 = typeCircularBuffer80.put((java.lang.reflect.Type) wildcardClass84);
        java.lang.reflect.Type type86 = typeCircularBuffer80.get();
        boolean boolean87 = typeCircularBuffer78.put(type86);
        java.lang.Class<?> wildcardClass88 = typeCircularBuffer78.getClass();
        boolean boolean89 = typeCircularBuffer73.put((java.lang.reflect.Type) wildcardClass88);
        boolean boolean90 = typeCircularBuffer59.put((java.lang.reflect.Type) wildcardClass88);
        java.lang.Class<?> wildcardClass91 = typeCircularBuffer59.getClass();
        boolean boolean92 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass91);
        boolean boolean93 = typeCircularBuffer38.isEmpty();
        boolean boolean94 = typeCircularBuffer38.isFull();
        java.lang.Class<?> wildcardClass95 = typeCircularBuffer38.getClass();
        boolean boolean96 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass95);
        boolean boolean97 = typeCircularBuffer1.isEmpty();
        boolean boolean98 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(type43);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(type60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNull(type76);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(type86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(wildcardClass95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
    }

    @Test
    public void test0810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0810");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean4 = typeCircularBuffer3.isFull();
        java.lang.reflect.Type type5 = typeCircularBuffer3.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean8 = typeCircularBuffer7.isEmpty();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        boolean boolean11 = typeCircularBuffer7.put((java.lang.reflect.Type) wildcardClass10);
        java.lang.Class<?> wildcardClass12 = typeCircularBuffer7.getClass();
        boolean boolean13 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass12);
        boolean boolean14 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass12);
        boolean boolean15 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass16 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0811");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean19 = typeCircularBuffer18.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer21.getClass();
        boolean boolean23 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass22);
        java.lang.reflect.Type type24 = typeCircularBuffer18.get();
        boolean boolean25 = typeCircularBuffer16.put(type24);
        boolean boolean26 = typeCircularBuffer16.isFull();
        java.lang.reflect.Type type27 = typeCircularBuffer16.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean30 = typeCircularBuffer29.isEmpty();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        boolean boolean33 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean35 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean36 = typeCircularBuffer9.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean39 = typeCircularBuffer38.isFull();
        boolean boolean40 = typeCircularBuffer38.isEmpty();
        boolean boolean41 = typeCircularBuffer38.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer46.getClass();
        boolean boolean48 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass47);
        java.lang.reflect.Type type49 = typeCircularBuffer43.get();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        boolean boolean52 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean53 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean54 = typeCircularBuffer38.isFull();
        java.lang.reflect.Type type55 = typeCircularBuffer38.get();
        boolean boolean56 = typeCircularBuffer9.put(type55);
        java.lang.Class<?> wildcardClass57 = type55.getClass();
        boolean boolean58 = typeCircularBuffer1.put(type55);
        boolean boolean59 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass60 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test0812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0812");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isFull();
        boolean boolean8 = typeCircularBuffer1.isFull();
        boolean boolean9 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test0813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0813");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        java.lang.reflect.Type type12 = typeCircularBuffer6.get();
        boolean boolean13 = typeCircularBuffer4.put(type12);
        boolean boolean14 = typeCircularBuffer4.isFull();
        java.lang.reflect.Type type15 = typeCircularBuffer4.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        boolean boolean21 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean22 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean24 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type25 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.String> strCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.String>((int) (short) 100);
        java.lang.Class<?> wildcardClass28 = strCircularBuffer27.getClass();
        boolean boolean29 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass28);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type34 = typeCircularBuffer33.get();
        boolean boolean35 = typeCircularBuffer33.isFull();
        boolean boolean36 = typeCircularBuffer33.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean39 = typeCircularBuffer38.isEmpty();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        boolean boolean42 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass41);
        java.lang.Class<?> wildcardClass43 = typeCircularBuffer38.getClass();
        boolean boolean44 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass43);
        boolean boolean45 = typeCircularBuffer33.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean48 = typeCircularBuffer47.isFull();
        boolean boolean49 = typeCircularBuffer47.isEmpty();
        java.lang.reflect.Type type50 = typeCircularBuffer47.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer52 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer54 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean55 = typeCircularBuffer54.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer57 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass58 = typeCircularBuffer57.getClass();
        boolean boolean59 = typeCircularBuffer54.put((java.lang.reflect.Type) wildcardClass58);
        java.lang.reflect.Type type60 = typeCircularBuffer54.get();
        boolean boolean61 = typeCircularBuffer52.put(type60);
        java.lang.Class<?> wildcardClass62 = typeCircularBuffer52.getClass();
        boolean boolean63 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass62);
        boolean boolean64 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass62);
        boolean boolean65 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass62);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer67 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean68 = typeCircularBuffer67.isFull();
        java.lang.reflect.Type type69 = typeCircularBuffer67.get();
        boolean boolean70 = typeCircularBuffer67.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer72 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean73 = typeCircularBuffer72.isEmpty();
        java.lang.Class<?> wildcardClass74 = typeCircularBuffer72.getClass();
        boolean boolean75 = typeCircularBuffer67.put((java.lang.reflect.Type) wildcardClass74);
        java.lang.Class<?> wildcardClass76 = typeCircularBuffer67.getClass();
        boolean boolean77 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass76);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer79 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean80 = typeCircularBuffer79.isFull();
        boolean boolean81 = typeCircularBuffer79.isEmpty();
        boolean boolean82 = typeCircularBuffer79.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer84 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean85 = typeCircularBuffer84.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer87 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass88 = typeCircularBuffer87.getClass();
        boolean boolean89 = typeCircularBuffer84.put((java.lang.reflect.Type) wildcardClass88);
        java.lang.reflect.Type type90 = typeCircularBuffer84.get();
        java.lang.Object obj91 = new java.lang.Object();
        java.lang.Class<?> wildcardClass92 = obj91.getClass();
        boolean boolean93 = typeCircularBuffer84.put((java.lang.reflect.Type) wildcardClass92);
        boolean boolean94 = typeCircularBuffer79.put((java.lang.reflect.Type) wildcardClass92);
        boolean boolean95 = typeCircularBuffer79.isFull();
        java.lang.reflect.Type type96 = typeCircularBuffer79.get();
        boolean boolean97 = typeCircularBuffer31.put(type96);
        boolean boolean98 = typeCircularBuffer1.put(type96);
        java.lang.Class<?> wildcardClass99 = type96.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(type34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(type50);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(type69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(type90);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertNotNull(type96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0814");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer5 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean6 = typeCircularBuffer5.isEmpty();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = typeCircularBuffer5.put((java.lang.reflect.Type) wildcardClass8);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer5.getClass();
        boolean boolean11 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass10);
        boolean boolean12 = typeCircularBuffer1.isEmpty();
        boolean boolean13 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type14 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass15 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0815");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        boolean boolean8 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean13 = typeCircularBuffer12.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass16 = typeCircularBuffer15.getClass();
        boolean boolean17 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass16);
        java.lang.reflect.Type type18 = typeCircularBuffer12.get();
        boolean boolean19 = typeCircularBuffer10.put(type18);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean24 = typeCircularBuffer23.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer26.getClass();
        boolean boolean28 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass27);
        java.lang.reflect.Type type29 = typeCircularBuffer23.get();
        boolean boolean30 = typeCircularBuffer21.put(type29);
        java.lang.Class<?> wildcardClass31 = typeCircularBuffer21.getClass();
        boolean boolean32 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass31);
        boolean boolean33 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass31);
        java.lang.Class<?> wildcardClass34 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test0816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0816");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer6.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        boolean boolean13 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean16 = typeCircularBuffer15.isFull();
        boolean boolean17 = typeCircularBuffer15.isEmpty();
        java.lang.reflect.Type type18 = typeCircularBuffer15.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass26 = typeCircularBuffer25.getClass();
        boolean boolean27 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass26);
        java.lang.reflect.Type type28 = typeCircularBuffer22.get();
        boolean boolean29 = typeCircularBuffer20.put(type28);
        java.lang.Class<?> wildcardClass30 = typeCircularBuffer20.getClass();
        boolean boolean31 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass30);
        boolean boolean32 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass30);
        boolean boolean33 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type34 = typeCircularBuffer1.get();
        java.lang.reflect.Type type35 = typeCircularBuffer1.get();
        boolean boolean36 = typeCircularBuffer1.isEmpty();
        boolean boolean37 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(type18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNull(type35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
    }

    @Test
    public void test0817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0817");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer10.get();
        boolean boolean17 = typeCircularBuffer8.put(type16);
        boolean boolean18 = typeCircularBuffer8.isFull();
        java.lang.reflect.Type type19 = typeCircularBuffer8.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean22 = typeCircularBuffer21.isEmpty();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean26 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean27 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass24);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean30 = typeCircularBuffer29.isFull();
        boolean boolean31 = typeCircularBuffer29.isEmpty();
        java.lang.reflect.Type type32 = typeCircularBuffer29.get();
        boolean boolean33 = typeCircularBuffer29.isEmpty();
        boolean boolean34 = typeCircularBuffer29.isEmpty();
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer29.getClass();
        boolean boolean36 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass35);
        java.lang.reflect.Type type37 = typeCircularBuffer1.get();
        boolean boolean38 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(type32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test0818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0818");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        java.lang.reflect.Type type12 = typeCircularBuffer6.get();
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        boolean boolean15 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass14);
        boolean boolean16 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass14);
        boolean boolean17 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type18 = typeCircularBuffer1.get();
        java.lang.reflect.Type type19 = null;
        boolean boolean20 = typeCircularBuffer1.put(type19);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0819");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type9 = typeCircularBuffer8.get();
        boolean boolean10 = typeCircularBuffer8.isFull();
        boolean boolean11 = typeCircularBuffer8.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass16);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer13.getClass();
        boolean boolean19 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass18);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean22 = typeCircularBuffer21.isEmpty();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass24);
        java.lang.Class<?> wildcardClass26 = typeCircularBuffer21.getClass();
        boolean boolean27 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass26);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer34.getClass();
        boolean boolean36 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass35);
        java.lang.reflect.Type type37 = typeCircularBuffer31.get();
        boolean boolean38 = typeCircularBuffer29.put(type37);
        java.lang.Class<?> wildcardClass39 = typeCircularBuffer29.getClass();
        boolean boolean40 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass39);
        java.lang.Class<?> wildcardClass41 = typeCircularBuffer8.getClass();
        boolean boolean42 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean43 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type44 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass45 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test0820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0820");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer6.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.reflect.Type type13 = typeCircularBuffer1.get();
        boolean boolean14 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer19.getClass();
        boolean boolean21 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean22 = typeCircularBuffer16.isEmpty();
        java.lang.reflect.Type type23 = typeCircularBuffer16.get();
        boolean boolean24 = typeCircularBuffer1.put(type23);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type27 = typeCircularBuffer26.get();
        boolean boolean28 = typeCircularBuffer26.isFull();
        boolean boolean29 = typeCircularBuffer26.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        boolean boolean35 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass34);
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer31.getClass();
        boolean boolean37 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass36);
        java.lang.reflect.Type type38 = typeCircularBuffer26.get();
        boolean boolean39 = typeCircularBuffer26.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type42 = typeCircularBuffer41.get();
        boolean boolean43 = typeCircularBuffer41.isFull();
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer41.getClass();
        boolean boolean45 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean46 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean47 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass48 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(type42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test0821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0821");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        boolean boolean12 = typeCircularBuffer6.isFull();
        java.lang.reflect.Type type13 = typeCircularBuffer6.get();
        boolean boolean14 = typeCircularBuffer1.put(type13);
        java.lang.reflect.Type type15 = typeCircularBuffer1.get();
        java.lang.reflect.Type type16 = typeCircularBuffer1.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass17 = type16.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNull(type16);
    }

    @Test
    public void test0822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0822");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type10 = typeCircularBuffer9.get();
        boolean boolean11 = typeCircularBuffer9.isFull();
        boolean boolean12 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer14.getClass();
        boolean boolean20 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass19);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        boolean boolean26 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer22.getClass();
        boolean boolean28 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean30 = typeCircularBuffer1.isEmpty();
        boolean boolean31 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean36 = typeCircularBuffer35.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass39 = typeCircularBuffer38.getClass();
        boolean boolean40 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass39);
        java.lang.reflect.Type type41 = typeCircularBuffer35.get();
        boolean boolean42 = typeCircularBuffer33.put(type41);
        boolean boolean43 = typeCircularBuffer33.isEmpty();
        boolean boolean44 = typeCircularBuffer33.isFull();
        boolean boolean45 = typeCircularBuffer33.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer49 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean50 = typeCircularBuffer49.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer52 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass53 = typeCircularBuffer52.getClass();
        boolean boolean54 = typeCircularBuffer49.put((java.lang.reflect.Type) wildcardClass53);
        java.lang.reflect.Type type55 = typeCircularBuffer49.get();
        boolean boolean56 = typeCircularBuffer47.put(type55);
        boolean boolean57 = typeCircularBuffer47.isFull();
        java.lang.reflect.Type type58 = typeCircularBuffer47.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer60 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean61 = typeCircularBuffer60.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer63 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass64 = typeCircularBuffer63.getClass();
        boolean boolean65 = typeCircularBuffer60.put((java.lang.reflect.Type) wildcardClass64);
        boolean boolean66 = typeCircularBuffer60.isFull();
        java.lang.reflect.Type type67 = typeCircularBuffer60.get();
        boolean boolean68 = typeCircularBuffer47.put(type67);
        boolean boolean69 = typeCircularBuffer33.put(type67);
        boolean boolean70 = typeCircularBuffer1.put(type67);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer72 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 1);
        boolean boolean73 = typeCircularBuffer72.isEmpty();
        boolean boolean74 = typeCircularBuffer72.isFull();
        java.lang.reflect.Type type75 = typeCircularBuffer72.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer77 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean78 = typeCircularBuffer77.isEmpty();
        java.lang.reflect.Type type79 = typeCircularBuffer77.get();
        java.lang.reflect.Type type80 = typeCircularBuffer77.get();
        java.lang.reflect.Type type81 = typeCircularBuffer77.get();
        boolean boolean82 = typeCircularBuffer77.isFull();
        boolean boolean83 = typeCircularBuffer77.isFull();
        boolean boolean84 = typeCircularBuffer77.isFull();
        boolean boolean85 = typeCircularBuffer77.isEmpty();
        boolean boolean86 = typeCircularBuffer77.isFull();
        boolean boolean87 = typeCircularBuffer77.isFull();
        java.lang.Class<?> wildcardClass88 = typeCircularBuffer77.getClass();
        boolean boolean89 = typeCircularBuffer72.put((java.lang.reflect.Type) wildcardClass88);
        boolean boolean90 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass88);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNull(type75);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNull(type79);
        org.junit.Assert.assertNull(type80);
        org.junit.Assert.assertNull(type81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test0823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0823");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 10);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) 'a');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer5 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass6 = typeCircularBuffer5.getClass();
        boolean boolean7 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass6);
        java.lang.reflect.Type type8 = typeCircularBuffer3.get();
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type12 = typeCircularBuffer11.get();
        boolean boolean13 = typeCircularBuffer11.isFull();
        boolean boolean14 = typeCircularBuffer11.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        boolean boolean20 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass19);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer16.getClass();
        boolean boolean22 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type23 = typeCircularBuffer11.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean28 = typeCircularBuffer27.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass31 = typeCircularBuffer30.getClass();
        boolean boolean32 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass31);
        java.lang.reflect.Type type33 = typeCircularBuffer27.get();
        boolean boolean34 = typeCircularBuffer25.put(type33);
        boolean boolean35 = typeCircularBuffer11.put(type33);
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer11.getClass();
        boolean boolean37 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass36);
        java.lang.Class<?> wildcardClass38 = typeCircularBuffer3.getClass();
        boolean boolean39 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass38);
        boolean boolean40 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type41 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean46 = typeCircularBuffer45.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass49 = typeCircularBuffer48.getClass();
        boolean boolean50 = typeCircularBuffer45.put((java.lang.reflect.Type) wildcardClass49);
        java.lang.reflect.Type type51 = typeCircularBuffer45.get();
        boolean boolean52 = typeCircularBuffer43.put(type51);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer54 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer56 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean57 = typeCircularBuffer56.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer59 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass60 = typeCircularBuffer59.getClass();
        boolean boolean61 = typeCircularBuffer56.put((java.lang.reflect.Type) wildcardClass60);
        java.lang.reflect.Type type62 = typeCircularBuffer56.get();
        boolean boolean63 = typeCircularBuffer54.put(type62);
        java.lang.Class<?> wildcardClass64 = typeCircularBuffer54.getClass();
        boolean boolean65 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass64);
        boolean boolean66 = typeCircularBuffer43.isFull();
        boolean boolean67 = typeCircularBuffer43.isFull();
        java.lang.reflect.Type type68 = typeCircularBuffer43.get();
        java.lang.Class<?> wildcardClass69 = type68.getClass();
        boolean boolean70 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
    }

    @Test
    public void test0824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0824");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>((int) (short) 100);
        java.lang.Class<?> wildcardClass2 = wildcardClassOfFieldCircularBuffer1.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test0825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0825");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type12 = typeCircularBuffer1.get();
        java.lang.reflect.Type type13 = typeCircularBuffer1.get();
        java.lang.reflect.Type type14 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean19 = typeCircularBuffer18.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer21.getClass();
        boolean boolean23 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass22);
        java.lang.reflect.Type type24 = typeCircularBuffer18.get();
        boolean boolean25 = typeCircularBuffer16.put(type24);
        java.lang.reflect.Type type26 = typeCircularBuffer16.get();
        java.lang.reflect.Type type27 = null;
        boolean boolean28 = typeCircularBuffer16.put(type27);
        boolean boolean29 = typeCircularBuffer16.isFull();
        boolean boolean30 = typeCircularBuffer16.isFull();
        java.lang.Class<?> wildcardClass31 = typeCircularBuffer16.getClass();
        boolean boolean32 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass31);
        java.lang.Class<?> wildcardClass33 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNull(type13);
        org.junit.Assert.assertNull(type14);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test0826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0826");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test0827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0827");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        boolean boolean8 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(type9);
    }

    @Test
    public void test0828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0828");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean9 = typeCircularBuffer8.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass12 = typeCircularBuffer11.getClass();
        boolean boolean13 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass12);
        java.lang.reflect.Type type14 = typeCircularBuffer8.get();
        boolean boolean15 = typeCircularBuffer6.put(type14);
        java.lang.Class<?> wildcardClass16 = typeCircularBuffer6.getClass();
        boolean boolean17 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass16);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type20 = typeCircularBuffer19.get();
        boolean boolean21 = typeCircularBuffer19.isFull();
        boolean boolean22 = typeCircularBuffer19.isFull();
        boolean boolean23 = typeCircularBuffer19.isFull();
        java.lang.reflect.Type type24 = typeCircularBuffer19.get();
        boolean boolean25 = typeCircularBuffer19.isEmpty();
        java.lang.reflect.Type type26 = typeCircularBuffer19.get();
        java.lang.reflect.Type type27 = typeCircularBuffer19.get();
        boolean boolean28 = typeCircularBuffer19.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean33 = typeCircularBuffer32.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer35.getClass();
        boolean boolean37 = typeCircularBuffer32.put((java.lang.reflect.Type) wildcardClass36);
        java.lang.reflect.Type type38 = typeCircularBuffer32.get();
        boolean boolean39 = typeCircularBuffer30.put(type38);
        boolean boolean40 = typeCircularBuffer30.isFull();
        java.lang.reflect.Type type41 = typeCircularBuffer30.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        boolean boolean47 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass46);
        boolean boolean48 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass46);
        boolean boolean49 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass46);
        java.lang.Class<?> wildcardClass50 = typeCircularBuffer19.getClass();
        boolean boolean51 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass50);
        boolean boolean52 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type53 = typeCircularBuffer1.get();
        boolean boolean54 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type55 = typeCircularBuffer1.get();
        boolean boolean56 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(type20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(type26);
        org.junit.Assert.assertNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(type53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNull(type55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
    }

    @Test
    public void test0829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0829");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type10 = typeCircularBuffer9.get();
        boolean boolean11 = typeCircularBuffer9.isFull();
        boolean boolean12 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer14.getClass();
        boolean boolean20 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass19);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        boolean boolean26 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer22.getClass();
        boolean boolean28 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean30 = typeCircularBuffer1.isEmpty();
        boolean boolean31 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean36 = typeCircularBuffer35.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass39 = typeCircularBuffer38.getClass();
        boolean boolean40 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass39);
        java.lang.reflect.Type type41 = typeCircularBuffer35.get();
        boolean boolean42 = typeCircularBuffer33.put(type41);
        boolean boolean43 = typeCircularBuffer33.isEmpty();
        boolean boolean44 = typeCircularBuffer33.isFull();
        boolean boolean45 = typeCircularBuffer33.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer49 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean50 = typeCircularBuffer49.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer52 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass53 = typeCircularBuffer52.getClass();
        boolean boolean54 = typeCircularBuffer49.put((java.lang.reflect.Type) wildcardClass53);
        java.lang.reflect.Type type55 = typeCircularBuffer49.get();
        boolean boolean56 = typeCircularBuffer47.put(type55);
        boolean boolean57 = typeCircularBuffer47.isFull();
        java.lang.reflect.Type type58 = typeCircularBuffer47.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer60 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean61 = typeCircularBuffer60.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer63 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass64 = typeCircularBuffer63.getClass();
        boolean boolean65 = typeCircularBuffer60.put((java.lang.reflect.Type) wildcardClass64);
        boolean boolean66 = typeCircularBuffer60.isFull();
        java.lang.reflect.Type type67 = typeCircularBuffer60.get();
        boolean boolean68 = typeCircularBuffer47.put(type67);
        boolean boolean69 = typeCircularBuffer33.put(type67);
        boolean boolean70 = typeCircularBuffer1.put(type67);
        java.lang.reflect.Type type71 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass72 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test0830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0830");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isEmpty();
        boolean boolean12 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer17.getClass();
        boolean boolean19 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass18);
        java.lang.reflect.Type type20 = typeCircularBuffer14.get();
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        boolean boolean23 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass22);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean26 = typeCircularBuffer25.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass29 = typeCircularBuffer28.getClass();
        boolean boolean30 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass29);
        java.lang.reflect.Type type31 = typeCircularBuffer25.get();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        boolean boolean34 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass33);
        java.lang.reflect.Type type35 = typeCircularBuffer25.get();
        boolean boolean36 = typeCircularBuffer14.put(type35);
        boolean boolean37 = typeCircularBuffer1.put(type35);
        boolean boolean38 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type41 = typeCircularBuffer40.get();
        boolean boolean42 = typeCircularBuffer40.isFull();
        boolean boolean43 = typeCircularBuffer40.isFull();
        boolean boolean44 = typeCircularBuffer40.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean49 = typeCircularBuffer48.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass52 = typeCircularBuffer51.getClass();
        boolean boolean53 = typeCircularBuffer48.put((java.lang.reflect.Type) wildcardClass52);
        java.lang.reflect.Type type54 = typeCircularBuffer48.get();
        boolean boolean55 = typeCircularBuffer46.put(type54);
        boolean boolean56 = typeCircularBuffer46.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer58 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean59 = typeCircularBuffer58.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer61 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass62 = typeCircularBuffer61.getClass();
        boolean boolean63 = typeCircularBuffer58.put((java.lang.reflect.Type) wildcardClass62);
        java.lang.reflect.Type type64 = typeCircularBuffer58.get();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        boolean boolean67 = typeCircularBuffer58.put((java.lang.reflect.Type) wildcardClass66);
        boolean boolean68 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass66);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer70 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean71 = typeCircularBuffer70.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer73 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass74 = typeCircularBuffer73.getClass();
        boolean boolean75 = typeCircularBuffer70.put((java.lang.reflect.Type) wildcardClass74);
        java.lang.reflect.Type type76 = typeCircularBuffer70.get();
        boolean boolean77 = typeCircularBuffer46.put(type76);
        java.lang.reflect.Type type78 = typeCircularBuffer46.get();
        boolean boolean79 = typeCircularBuffer40.put(type78);
        boolean boolean80 = typeCircularBuffer1.put(type78);
        java.lang.Class<?> wildcardClass81 = type78.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(type41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test0831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0831");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '#');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean9 = typeCircularBuffer8.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass12 = typeCircularBuffer11.getClass();
        boolean boolean13 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass12);
        java.lang.reflect.Type type14 = typeCircularBuffer8.get();
        boolean boolean15 = typeCircularBuffer6.put(type14);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean20 = typeCircularBuffer19.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass23 = typeCircularBuffer22.getClass();
        boolean boolean24 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass23);
        java.lang.reflect.Type type25 = typeCircularBuffer19.get();
        boolean boolean26 = typeCircularBuffer17.put(type25);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer17.getClass();
        boolean boolean28 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean30 = typeCircularBuffer4.isEmpty();
        java.lang.Class<?> wildcardClass31 = typeCircularBuffer4.getClass();
        boolean boolean32 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass31);
        java.lang.reflect.Type type33 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass34 = type33.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test0832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0832");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) 'a');
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0833");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type12 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type15 = typeCircularBuffer14.get();
        boolean boolean16 = typeCircularBuffer14.isFull();
        java.lang.reflect.Type type17 = typeCircularBuffer14.get();
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer14.getClass();
        boolean boolean19 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass18);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNull(type15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(type17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0834");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean9 = typeCircularBuffer8.isFull();
        java.lang.reflect.Type type10 = typeCircularBuffer8.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean13 = typeCircularBuffer12.isEmpty();
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        boolean boolean16 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass15);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer12.getClass();
        boolean boolean18 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass17);
        boolean boolean19 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass17);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type24 = typeCircularBuffer23.get();
        boolean boolean25 = typeCircularBuffer23.isFull();
        boolean boolean26 = typeCircularBuffer23.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        boolean boolean32 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass31);
        java.lang.Class<?> wildcardClass33 = typeCircularBuffer28.getClass();
        boolean boolean34 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass33);
        boolean boolean35 = typeCircularBuffer23.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean38 = typeCircularBuffer37.isFull();
        boolean boolean39 = typeCircularBuffer37.isEmpty();
        java.lang.reflect.Type type40 = typeCircularBuffer37.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean45 = typeCircularBuffer44.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass48 = typeCircularBuffer47.getClass();
        boolean boolean49 = typeCircularBuffer44.put((java.lang.reflect.Type) wildcardClass48);
        java.lang.reflect.Type type50 = typeCircularBuffer44.get();
        boolean boolean51 = typeCircularBuffer42.put(type50);
        java.lang.Class<?> wildcardClass52 = typeCircularBuffer42.getClass();
        boolean boolean53 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass52);
        boolean boolean54 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass52);
        boolean boolean55 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass52);
        boolean boolean56 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass52);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer58 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean59 = typeCircularBuffer58.isFull();
        java.lang.reflect.Type type60 = typeCircularBuffer58.get();
        boolean boolean61 = typeCircularBuffer58.isEmpty();
        boolean boolean62 = typeCircularBuffer58.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer64 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        boolean boolean65 = typeCircularBuffer64.isEmpty();
        java.lang.Class<?> wildcardClass66 = typeCircularBuffer64.getClass();
        boolean boolean67 = typeCircularBuffer58.put((java.lang.reflect.Type) wildcardClass66);
        boolean boolean68 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass66);
        java.lang.reflect.Type type69 = typeCircularBuffer1.get();
        boolean boolean70 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer72 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer74 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean75 = typeCircularBuffer74.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer77 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass78 = typeCircularBuffer77.getClass();
        boolean boolean79 = typeCircularBuffer74.put((java.lang.reflect.Type) wildcardClass78);
        java.lang.reflect.Type type80 = typeCircularBuffer74.get();
        boolean boolean81 = typeCircularBuffer72.put(type80);
        java.lang.reflect.Type type82 = typeCircularBuffer72.get();
        boolean boolean83 = typeCircularBuffer72.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer85 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean86 = typeCircularBuffer85.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer88 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass89 = typeCircularBuffer88.getClass();
        boolean boolean90 = typeCircularBuffer85.put((java.lang.reflect.Type) wildcardClass89);
        java.lang.reflect.Type type91 = typeCircularBuffer85.get();
        java.lang.Object obj92 = new java.lang.Object();
        java.lang.Class<?> wildcardClass93 = obj92.getClass();
        boolean boolean94 = typeCircularBuffer85.put((java.lang.reflect.Type) wildcardClass93);
        java.lang.reflect.Type type95 = typeCircularBuffer85.get();
        boolean boolean96 = typeCircularBuffer72.put(type95);
        boolean boolean97 = typeCircularBuffer72.isEmpty();
        java.lang.reflect.Type type98 = typeCircularBuffer72.get();
        boolean boolean99 = typeCircularBuffer1.put(type98);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(type40);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(type60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(type91);
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNotNull(type95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertNotNull(type98);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + true + "'", boolean99 == true);
    }

    @Test
    public void test0835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0835");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        boolean boolean8 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test0836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0836");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test0837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0837");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        boolean boolean8 = typeCircularBuffer1.isFull();
        boolean boolean9 = typeCircularBuffer1.isFull();
        boolean boolean10 = typeCircularBuffer1.isEmpty();
        boolean boolean11 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0838");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type9 = typeCircularBuffer8.get();
        boolean boolean10 = typeCircularBuffer8.isFull();
        boolean boolean11 = typeCircularBuffer8.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass16);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer13.getClass();
        boolean boolean19 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass18);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean22 = typeCircularBuffer21.isEmpty();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass24);
        java.lang.Class<?> wildcardClass26 = typeCircularBuffer21.getClass();
        boolean boolean27 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass26);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer34.getClass();
        boolean boolean36 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass35);
        java.lang.reflect.Type type37 = typeCircularBuffer31.get();
        boolean boolean38 = typeCircularBuffer29.put(type37);
        java.lang.Class<?> wildcardClass39 = typeCircularBuffer29.getClass();
        boolean boolean40 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass39);
        java.lang.Class<?> wildcardClass41 = typeCircularBuffer8.getClass();
        boolean boolean42 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean43 = typeCircularBuffer1.isEmpty();
        boolean boolean44 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass45 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test0839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0839");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        boolean boolean10 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type11 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass12 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(type11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0840");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer10.get();
        boolean boolean17 = typeCircularBuffer8.put(type16);
        boolean boolean18 = typeCircularBuffer8.isFull();
        java.lang.reflect.Type type19 = typeCircularBuffer8.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean22 = typeCircularBuffer21.isEmpty();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean26 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean27 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean28 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean31 = typeCircularBuffer30.isFull();
        boolean boolean32 = typeCircularBuffer30.isEmpty();
        boolean boolean33 = typeCircularBuffer30.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean36 = typeCircularBuffer35.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass39 = typeCircularBuffer38.getClass();
        boolean boolean40 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass39);
        java.lang.reflect.Type type41 = typeCircularBuffer35.get();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        boolean boolean44 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass43);
        boolean boolean45 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass43);
        boolean boolean46 = typeCircularBuffer30.isFull();
        java.lang.reflect.Type type47 = typeCircularBuffer30.get();
        boolean boolean48 = typeCircularBuffer1.put(type47);
        boolean boolean49 = typeCircularBuffer1.isEmpty();
        boolean boolean50 = typeCircularBuffer1.isFull();
        boolean boolean51 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type52 = typeCircularBuffer1.get();
        boolean boolean53 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
    }

    @Test
    public void test0841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0841");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = null;
        boolean boolean8 = typeCircularBuffer1.put(type7);
        boolean boolean9 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0842");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer6.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        boolean boolean13 = typeCircularBuffer1.isFull();
        boolean boolean14 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type15 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass16 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0843");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        java.lang.reflect.Type type12 = typeCircularBuffer6.get();
        boolean boolean13 = typeCircularBuffer4.put(type12);
        boolean boolean14 = typeCircularBuffer4.isFull();
        java.lang.reflect.Type type15 = typeCircularBuffer4.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        boolean boolean21 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean22 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type24 = typeCircularBuffer1.get();
        boolean boolean25 = typeCircularBuffer1.isEmpty();
        boolean boolean26 = typeCircularBuffer1.isEmpty();
        boolean boolean27 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type28 = typeCircularBuffer1.get();
        java.lang.reflect.Type type29 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(type28);
        org.junit.Assert.assertNull(type29);
    }

    @Test
    public void test0844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0844");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test0845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0845");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean9 = typeCircularBuffer8.isFull();
        java.lang.reflect.Type type10 = typeCircularBuffer8.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean13 = typeCircularBuffer12.isEmpty();
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        boolean boolean16 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass15);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer12.getClass();
        boolean boolean18 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass17);
        boolean boolean19 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass17);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type24 = typeCircularBuffer23.get();
        boolean boolean25 = typeCircularBuffer23.isFull();
        boolean boolean26 = typeCircularBuffer23.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        boolean boolean32 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass31);
        java.lang.Class<?> wildcardClass33 = typeCircularBuffer28.getClass();
        boolean boolean34 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass33);
        boolean boolean35 = typeCircularBuffer23.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean38 = typeCircularBuffer37.isFull();
        boolean boolean39 = typeCircularBuffer37.isEmpty();
        java.lang.reflect.Type type40 = typeCircularBuffer37.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean45 = typeCircularBuffer44.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass48 = typeCircularBuffer47.getClass();
        boolean boolean49 = typeCircularBuffer44.put((java.lang.reflect.Type) wildcardClass48);
        java.lang.reflect.Type type50 = typeCircularBuffer44.get();
        boolean boolean51 = typeCircularBuffer42.put(type50);
        java.lang.Class<?> wildcardClass52 = typeCircularBuffer42.getClass();
        boolean boolean53 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass52);
        boolean boolean54 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass52);
        boolean boolean55 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass52);
        boolean boolean56 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass52);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer58 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean59 = typeCircularBuffer58.isFull();
        java.lang.reflect.Type type60 = typeCircularBuffer58.get();
        boolean boolean61 = typeCircularBuffer58.isEmpty();
        boolean boolean62 = typeCircularBuffer58.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer64 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        boolean boolean65 = typeCircularBuffer64.isEmpty();
        java.lang.Class<?> wildcardClass66 = typeCircularBuffer64.getClass();
        boolean boolean67 = typeCircularBuffer58.put((java.lang.reflect.Type) wildcardClass66);
        boolean boolean68 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass66);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer70 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass71 = typeCircularBuffer70.getClass();
        boolean boolean72 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass71);
        boolean boolean73 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(type40);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(type60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
    }

    @Test
    public void test0846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0846");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean24 = typeCircularBuffer1.isEmpty();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        boolean boolean27 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass26);
        java.lang.reflect.Type type28 = typeCircularBuffer1.get();
        java.lang.reflect.Type type29 = typeCircularBuffer1.get();
        boolean boolean30 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNull(type29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    }

    @Test
    public void test0847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0847");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass10);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer19.getClass();
        boolean boolean21 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type22 = typeCircularBuffer16.get();
        java.lang.Class<?> wildcardClass23 = typeCircularBuffer16.getClass();
        boolean boolean24 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass23);
        boolean boolean25 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass23);
        boolean boolean26 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type27 = typeCircularBuffer1.get();
        boolean boolean28 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type29 = null;
        boolean boolean30 = typeCircularBuffer1.put(type29);
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test0848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0848");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isFull();
        boolean boolean8 = typeCircularBuffer1.isFull();
        boolean boolean9 = typeCircularBuffer1.isEmpty();
        boolean boolean10 = typeCircularBuffer1.isFull();
        boolean boolean11 = typeCircularBuffer1.isFull();
        boolean boolean12 = typeCircularBuffer1.isFull();
        boolean boolean13 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type14 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        java.lang.reflect.Type type18 = typeCircularBuffer16.get();
        java.lang.reflect.Type type19 = typeCircularBuffer16.get();
        java.lang.reflect.Type type20 = typeCircularBuffer16.get();
        boolean boolean21 = typeCircularBuffer16.isFull();
        boolean boolean22 = typeCircularBuffer16.isFull();
        java.lang.reflect.Type type23 = typeCircularBuffer16.get();
        boolean boolean24 = typeCircularBuffer16.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer31.getClass();
        boolean boolean33 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass32);
        java.lang.reflect.Type type34 = typeCircularBuffer28.get();
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer28.getClass();
        boolean boolean36 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass35);
        boolean boolean37 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass35);
        java.lang.reflect.Type type38 = typeCircularBuffer16.get();
        boolean boolean39 = typeCircularBuffer1.put(type38);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(type14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(type18);
        org.junit.Assert.assertNull(type19);
        org.junit.Assert.assertNull(type20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
    }

    @Test
    public void test0849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0849");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer6.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.reflect.Type type13 = typeCircularBuffer1.get();
        boolean boolean14 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer19.getClass();
        boolean boolean21 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean22 = typeCircularBuffer16.isEmpty();
        java.lang.reflect.Type type23 = typeCircularBuffer16.get();
        boolean boolean24 = typeCircularBuffer1.put(type23);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type27 = typeCircularBuffer26.get();
        boolean boolean28 = typeCircularBuffer26.isFull();
        boolean boolean29 = typeCircularBuffer26.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        boolean boolean35 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass34);
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer31.getClass();
        boolean boolean37 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass36);
        java.lang.reflect.Type type38 = typeCircularBuffer26.get();
        boolean boolean39 = typeCircularBuffer26.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type42 = typeCircularBuffer41.get();
        boolean boolean43 = typeCircularBuffer41.isFull();
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer41.getClass();
        boolean boolean45 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean46 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass44);
        java.lang.reflect.Type type47 = typeCircularBuffer1.get();
        boolean boolean48 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type49 = typeCircularBuffer1.get();
        boolean boolean50 = typeCircularBuffer1.isFull();
        boolean boolean51 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(type42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(type49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
    }

    @Test
    public void test0850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0850");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        java.lang.reflect.Type type12 = typeCircularBuffer6.get();
        boolean boolean13 = typeCircularBuffer4.put(type12);
        boolean boolean14 = typeCircularBuffer4.isFull();
        java.lang.reflect.Type type15 = typeCircularBuffer4.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        boolean boolean21 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean22 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type24 = typeCircularBuffer1.get();
        boolean boolean25 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type26 = typeCircularBuffer1.get();
        boolean boolean27 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type28 = typeCircularBuffer1.get();
        boolean boolean29 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type30 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(type26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(type28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(type30);
    }

    @Test
    public void test0851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0851");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass21);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean25 = typeCircularBuffer24.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer27.getClass();
        boolean boolean29 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.Class<?> wildcardClass30 = typeCircularBuffer24.getClass();
        boolean boolean31 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass30);
        boolean boolean32 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass30);
        boolean boolean33 = typeCircularBuffer1.isEmpty();
        boolean boolean34 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test0852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0852");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type10 = typeCircularBuffer9.get();
        boolean boolean11 = typeCircularBuffer9.isFull();
        boolean boolean12 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer14.getClass();
        boolean boolean20 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass19);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        boolean boolean26 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer22.getClass();
        boolean boolean28 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean30 = typeCircularBuffer1.isEmpty();
        boolean boolean31 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type32 = typeCircularBuffer1.get();
        boolean boolean33 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test0853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0853");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean10 = typeCircularBuffer9.isFull();
        boolean boolean11 = typeCircularBuffer9.isEmpty();
        boolean boolean12 = typeCircularBuffer9.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer17.getClass();
        boolean boolean19 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass18);
        java.lang.reflect.Type type20 = typeCircularBuffer14.get();
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        boolean boolean23 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass22);
        boolean boolean24 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass22);
        boolean boolean25 = typeCircularBuffer9.isFull();
        java.lang.reflect.Type type26 = typeCircularBuffer9.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean29 = typeCircularBuffer28.isFull();
        boolean boolean30 = typeCircularBuffer28.isEmpty();
        boolean boolean31 = typeCircularBuffer28.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean34 = typeCircularBuffer33.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass37 = typeCircularBuffer36.getClass();
        boolean boolean38 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass37);
        java.lang.reflect.Type type39 = typeCircularBuffer33.get();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        boolean boolean42 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean43 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean44 = typeCircularBuffer28.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean49 = typeCircularBuffer48.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass52 = typeCircularBuffer51.getClass();
        boolean boolean53 = typeCircularBuffer48.put((java.lang.reflect.Type) wildcardClass52);
        java.lang.reflect.Type type54 = typeCircularBuffer48.get();
        boolean boolean55 = typeCircularBuffer46.put(type54);
        boolean boolean56 = typeCircularBuffer46.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer58 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean59 = typeCircularBuffer58.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer61 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass62 = typeCircularBuffer61.getClass();
        boolean boolean63 = typeCircularBuffer58.put((java.lang.reflect.Type) wildcardClass62);
        java.lang.reflect.Type type64 = typeCircularBuffer58.get();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        boolean boolean67 = typeCircularBuffer58.put((java.lang.reflect.Type) wildcardClass66);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer69 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean70 = typeCircularBuffer69.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer72 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass73 = typeCircularBuffer72.getClass();
        boolean boolean74 = typeCircularBuffer69.put((java.lang.reflect.Type) wildcardClass73);
        java.lang.Class<?> wildcardClass75 = typeCircularBuffer69.getClass();
        boolean boolean76 = typeCircularBuffer58.put((java.lang.reflect.Type) wildcardClass75);
        boolean boolean77 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass75);
        boolean boolean78 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass75);
        boolean boolean79 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass75);
        java.lang.reflect.Type type80 = typeCircularBuffer9.get();
        java.lang.Class<?> wildcardClass81 = type80.getClass();
        boolean boolean82 = typeCircularBuffer1.put(type80);
        java.lang.reflect.Type type83 = typeCircularBuffer1.get();
        boolean boolean84 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type85 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(type83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNull(type85);
    }

    @Test
    public void test0854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0854");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        boolean boolean6 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        boolean boolean8 = typeCircularBuffer1.isEmpty();
        boolean boolean9 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type10 = typeCircularBuffer1.get();
        boolean boolean11 = typeCircularBuffer1.isEmpty();
        boolean boolean12 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test0855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0855");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer6.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer14.getClass();
        boolean boolean20 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass19);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean25 = typeCircularBuffer24.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer27.getClass();
        boolean boolean29 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.reflect.Type type30 = typeCircularBuffer24.get();
        boolean boolean31 = typeCircularBuffer22.put(type30);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer22.getClass();
        boolean boolean33 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass32);
        java.lang.reflect.Type type34 = typeCircularBuffer1.get();
        boolean boolean35 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type36 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(type36);
    }

    @Test
    public void test0856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0856");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean4 = typeCircularBuffer3.isFull();
        boolean boolean5 = typeCircularBuffer3.isEmpty();
        java.lang.reflect.Type type6 = typeCircularBuffer3.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer10.get();
        boolean boolean17 = typeCircularBuffer8.put(type16);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer8.getClass();
        boolean boolean19 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass18);
        boolean boolean20 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass18);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type23 = typeCircularBuffer22.get();
        boolean boolean24 = typeCircularBuffer22.isFull();
        boolean boolean25 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean28 = typeCircularBuffer27.isEmpty();
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        boolean boolean31 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass30);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer27.getClass();
        boolean boolean33 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean37 = typeCircularBuffer36.isFull();
        boolean boolean38 = typeCircularBuffer36.isEmpty();
        java.lang.reflect.Type type39 = typeCircularBuffer36.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer46.getClass();
        boolean boolean48 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass47);
        java.lang.reflect.Type type49 = typeCircularBuffer43.get();
        boolean boolean50 = typeCircularBuffer41.put(type49);
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer41.getClass();
        boolean boolean52 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean53 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass51);
        java.lang.Class<?> wildcardClass54 = typeCircularBuffer22.getClass();
        boolean boolean55 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean56 = typeCircularBuffer1.isEmpty();
        boolean boolean57 = typeCircularBuffer1.isFull();
        boolean boolean58 = typeCircularBuffer1.isEmpty();
        boolean boolean59 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type60 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass61 = type60.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(type39);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test0857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0857");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean4 = typeCircularBuffer3.isFull();
        boolean boolean5 = typeCircularBuffer3.isEmpty();
        java.lang.reflect.Type type6 = typeCircularBuffer3.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer10.get();
        boolean boolean17 = typeCircularBuffer8.put(type16);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer8.getClass();
        boolean boolean19 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass18);
        boolean boolean20 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass18);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type23 = typeCircularBuffer22.get();
        boolean boolean24 = typeCircularBuffer22.isFull();
        boolean boolean25 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean28 = typeCircularBuffer27.isEmpty();
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        boolean boolean31 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass30);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer27.getClass();
        boolean boolean33 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean37 = typeCircularBuffer36.isFull();
        boolean boolean38 = typeCircularBuffer36.isEmpty();
        java.lang.reflect.Type type39 = typeCircularBuffer36.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer46.getClass();
        boolean boolean48 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass47);
        java.lang.reflect.Type type49 = typeCircularBuffer43.get();
        boolean boolean50 = typeCircularBuffer41.put(type49);
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer41.getClass();
        boolean boolean52 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean53 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass51);
        java.lang.Class<?> wildcardClass54 = typeCircularBuffer22.getClass();
        boolean boolean55 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean56 = typeCircularBuffer1.isEmpty();
        boolean boolean57 = typeCircularBuffer1.isFull();
        boolean boolean58 = typeCircularBuffer1.isFull();
        boolean boolean59 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer61 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean62 = typeCircularBuffer61.isEmpty();
        boolean boolean63 = typeCircularBuffer61.isEmpty();
        java.lang.Class<?> wildcardClass64 = typeCircularBuffer61.getClass();
        boolean boolean65 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass64);
        boolean boolean66 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(type39);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test0858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0858");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass21);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean26 = typeCircularBuffer25.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass29 = typeCircularBuffer28.getClass();
        boolean boolean30 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass29);
        java.lang.reflect.Type type31 = typeCircularBuffer25.get();
        boolean boolean32 = typeCircularBuffer1.put(type31);
        boolean boolean33 = typeCircularBuffer1.isEmpty();
        boolean boolean34 = typeCircularBuffer1.isEmpty();
        boolean boolean35 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0859");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer6.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        boolean boolean13 = typeCircularBuffer1.isFull();
        boolean boolean14 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        boolean boolean20 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass19);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean23 = typeCircularBuffer22.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type26 = typeCircularBuffer25.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean31 = typeCircularBuffer30.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass34 = typeCircularBuffer33.getClass();
        boolean boolean35 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass34);
        java.lang.reflect.Type type36 = typeCircularBuffer30.get();
        boolean boolean37 = typeCircularBuffer28.put(type36);
        boolean boolean38 = typeCircularBuffer28.isFull();
        java.lang.reflect.Type type39 = typeCircularBuffer28.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean42 = typeCircularBuffer41.isEmpty();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        boolean boolean45 = typeCircularBuffer41.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean46 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean47 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean48 = typeCircularBuffer25.isEmpty();
        java.lang.Class<?> wildcardClass49 = typeCircularBuffer25.getClass();
        boolean boolean50 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass49);
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer22.getClass();
        boolean boolean52 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass51);
        java.lang.Class<?> wildcardClass53 = typeCircularBuffer16.getClass();
        boolean boolean54 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass53);
        boolean boolean55 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(type26);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test0860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0860");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 10);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type5 = typeCircularBuffer4.get();
        boolean boolean6 = typeCircularBuffer4.isFull();
        boolean boolean7 = typeCircularBuffer4.isFull();
        boolean boolean8 = typeCircularBuffer4.isEmpty();
        boolean boolean9 = typeCircularBuffer4.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean12 = typeCircularBuffer11.isEmpty();
        boolean boolean13 = typeCircularBuffer11.isEmpty();
        boolean boolean14 = typeCircularBuffer11.isEmpty();
        boolean boolean15 = typeCircularBuffer11.isEmpty();
        java.lang.Class<?> wildcardClass16 = typeCircularBuffer11.getClass();
        boolean boolean17 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass16);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean20 = typeCircularBuffer19.isEmpty();
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        boolean boolean23 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass22);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean26 = typeCircularBuffer25.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type29 = typeCircularBuffer28.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean34 = typeCircularBuffer33.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass37 = typeCircularBuffer36.getClass();
        boolean boolean38 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass37);
        java.lang.reflect.Type type39 = typeCircularBuffer33.get();
        boolean boolean40 = typeCircularBuffer31.put(type39);
        boolean boolean41 = typeCircularBuffer31.isFull();
        java.lang.reflect.Type type42 = typeCircularBuffer31.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean45 = typeCircularBuffer44.isEmpty();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        boolean boolean48 = typeCircularBuffer44.put((java.lang.reflect.Type) wildcardClass47);
        boolean boolean49 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass47);
        boolean boolean50 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass47);
        boolean boolean51 = typeCircularBuffer28.isEmpty();
        java.lang.Class<?> wildcardClass52 = typeCircularBuffer28.getClass();
        boolean boolean53 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass52);
        java.lang.Class<?> wildcardClass54 = typeCircularBuffer25.getClass();
        boolean boolean55 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass54);
        java.lang.Class<?> wildcardClass56 = typeCircularBuffer19.getClass();
        boolean boolean57 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass56);
        boolean boolean58 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(type29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
    }

    @Test
    public void test0861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0861");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.CharSequence> charSequenceCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.CharSequence>(100);
    }

    @Test
    public void test0862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0862");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        java.lang.reflect.Type type11 = typeCircularBuffer1.get();
        java.lang.reflect.Type type12 = null;
        boolean boolean13 = typeCircularBuffer1.put(type12);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type16 = typeCircularBuffer15.get();
        boolean boolean17 = typeCircularBuffer15.isFull();
        boolean boolean18 = typeCircularBuffer15.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean21 = typeCircularBuffer20.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer23.getClass();
        boolean boolean25 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean26 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean27 = typeCircularBuffer15.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) ' ');
        java.lang.reflect.Type type30 = typeCircularBuffer29.get();
        java.lang.Class<?> wildcardClass31 = typeCircularBuffer29.getClass();
        boolean boolean32 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass31);
        boolean boolean33 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass31);
        java.lang.reflect.Type type34 = typeCircularBuffer1.get();
        boolean boolean35 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type36 = typeCircularBuffer1.get();
        boolean boolean37 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(type30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(type34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(type36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
    }

    @Test
    public void test0863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0863");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        boolean boolean5 = typeCircularBuffer1.isFull();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass9 = type8.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(type8);
    }

    @Test
    public void test0864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0864");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean24 = typeCircularBuffer1.isEmpty();
        boolean boolean25 = typeCircularBuffer1.isEmpty();
        boolean boolean26 = typeCircularBuffer1.isFull();
        boolean boolean27 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0865");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type11 = typeCircularBuffer10.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean16 = typeCircularBuffer15.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer18.getClass();
        boolean boolean20 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass19);
        java.lang.reflect.Type type21 = typeCircularBuffer15.get();
        boolean boolean22 = typeCircularBuffer13.put(type21);
        boolean boolean23 = typeCircularBuffer13.isFull();
        java.lang.reflect.Type type24 = typeCircularBuffer13.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean27 = typeCircularBuffer26.isEmpty();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        boolean boolean30 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass29);
        boolean boolean31 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass29);
        boolean boolean32 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass29);
        boolean boolean33 = typeCircularBuffer10.isEmpty();
        boolean boolean34 = typeCircularBuffer10.isFull();
        boolean boolean35 = typeCircularBuffer10.isEmpty();
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer10.getClass();
        boolean boolean37 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass36);
        java.lang.Class<?> wildcardClass38 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertNull(type11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test0866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0866");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type4 = typeCircularBuffer3.get();
        boolean boolean5 = typeCircularBuffer3.isFull();
        boolean boolean6 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean9 = typeCircularBuffer8.isEmpty();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer8.getClass();
        boolean boolean14 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass13);
        boolean boolean15 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean18 = typeCircularBuffer17.isFull();
        boolean boolean19 = typeCircularBuffer17.isEmpty();
        java.lang.reflect.Type type20 = typeCircularBuffer17.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean25 = typeCircularBuffer24.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer27.getClass();
        boolean boolean29 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.reflect.Type type30 = typeCircularBuffer24.get();
        boolean boolean31 = typeCircularBuffer22.put(type30);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer22.getClass();
        boolean boolean33 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean35 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean36 = typeCircularBuffer1.isFull();
        boolean boolean37 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean40 = typeCircularBuffer39.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass43 = typeCircularBuffer42.getClass();
        boolean boolean44 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass43);
        java.lang.reflect.Type type45 = typeCircularBuffer39.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type48 = typeCircularBuffer47.get();
        boolean boolean49 = typeCircularBuffer47.isFull();
        boolean boolean50 = typeCircularBuffer47.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer52 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean53 = typeCircularBuffer52.isEmpty();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        boolean boolean56 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass55);
        java.lang.Class<?> wildcardClass57 = typeCircularBuffer52.getClass();
        boolean boolean58 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass57);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer60 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean61 = typeCircularBuffer60.isEmpty();
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        boolean boolean64 = typeCircularBuffer60.put((java.lang.reflect.Type) wildcardClass63);
        java.lang.Class<?> wildcardClass65 = typeCircularBuffer60.getClass();
        boolean boolean66 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass65);
        boolean boolean67 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass65);
        java.lang.reflect.Type type68 = typeCircularBuffer39.get();
        boolean boolean69 = typeCircularBuffer1.put(type68);
        java.lang.reflect.Type type70 = typeCircularBuffer1.get();
        boolean boolean71 = typeCircularBuffer1.isFull();
        boolean boolean72 = typeCircularBuffer1.isFull();
        boolean boolean73 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(type20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNull(type48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(type70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
    }

    @Test
    public void test0867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0867");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '#');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer5 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean6 = typeCircularBuffer5.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass9 = typeCircularBuffer8.getClass();
        boolean boolean10 = typeCircularBuffer5.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.reflect.Type type11 = typeCircularBuffer5.get();
        boolean boolean12 = typeCircularBuffer3.put(type11);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer19.getClass();
        boolean boolean21 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type22 = typeCircularBuffer16.get();
        boolean boolean23 = typeCircularBuffer14.put(type22);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer14.getClass();
        boolean boolean25 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean26 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean27 = typeCircularBuffer1.isEmpty();
        boolean boolean28 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type29 = typeCircularBuffer1.get();
        boolean boolean30 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type31 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type34 = typeCircularBuffer33.get();
        boolean boolean35 = typeCircularBuffer33.isFull();
        boolean boolean36 = typeCircularBuffer33.isFull();
        boolean boolean37 = typeCircularBuffer33.isEmpty();
        boolean boolean38 = typeCircularBuffer33.isEmpty();
        boolean boolean39 = typeCircularBuffer33.isEmpty();
        java.lang.Class<?> wildcardClass40 = typeCircularBuffer33.getClass();
        boolean boolean41 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass40);
        java.lang.Class<?> wildcardClass42 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(type31);
        org.junit.Assert.assertNull(type34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test0868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0868");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) ' ');
        java.lang.reflect.Type type10 = typeCircularBuffer9.get();
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer9.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.reflect.Type type13 = typeCircularBuffer1.get();
        boolean boolean14 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean19 = typeCircularBuffer18.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer21.getClass();
        boolean boolean23 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass22);
        java.lang.reflect.Type type24 = typeCircularBuffer18.get();
        boolean boolean25 = typeCircularBuffer16.put(type24);
        java.lang.reflect.Type type26 = typeCircularBuffer16.get();
        java.lang.reflect.Type type27 = null;
        boolean boolean28 = typeCircularBuffer16.put(type27);
        boolean boolean29 = typeCircularBuffer16.isFull();
        boolean boolean30 = typeCircularBuffer16.isFull();
        boolean boolean31 = typeCircularBuffer16.isFull();
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer16.getClass();
        boolean boolean33 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    }

    @Test
    public void test0869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0869");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean13 = typeCircularBuffer12.isFull();
        boolean boolean14 = typeCircularBuffer12.isEmpty();
        boolean boolean15 = typeCircularBuffer12.isFull();
        java.lang.Class<?> wildcardClass16 = typeCircularBuffer12.getClass();
        boolean boolean17 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass16);
        java.lang.reflect.Type type18 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0870");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        java.lang.reflect.Type type12 = typeCircularBuffer6.get();
        boolean boolean13 = typeCircularBuffer4.put(type12);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer20.getClass();
        boolean boolean22 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type23 = typeCircularBuffer17.get();
        boolean boolean24 = typeCircularBuffer15.put(type23);
        java.lang.Class<?> wildcardClass25 = typeCircularBuffer15.getClass();
        boolean boolean26 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass25);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer31.getClass();
        boolean boolean33 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass32);
        java.lang.reflect.Type type34 = typeCircularBuffer28.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type37 = typeCircularBuffer36.get();
        boolean boolean38 = typeCircularBuffer36.isFull();
        boolean boolean39 = typeCircularBuffer36.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean42 = typeCircularBuffer41.isEmpty();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        boolean boolean45 = typeCircularBuffer41.put((java.lang.reflect.Type) wildcardClass44);
        java.lang.Class<?> wildcardClass46 = typeCircularBuffer41.getClass();
        boolean boolean47 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass46);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer49 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean50 = typeCircularBuffer49.isEmpty();
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        boolean boolean53 = typeCircularBuffer49.put((java.lang.reflect.Type) wildcardClass52);
        java.lang.Class<?> wildcardClass54 = typeCircularBuffer49.getClass();
        boolean boolean55 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean56 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass54);
        java.lang.reflect.Type type57 = typeCircularBuffer28.get();
        boolean boolean58 = typeCircularBuffer4.put(type57);
        boolean boolean59 = typeCircularBuffer1.put(type57);
        java.lang.reflect.Type type60 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass61 = type60.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNull(type37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test0871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0871");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type12 = null;
        boolean boolean13 = typeCircularBuffer1.put(type12);
        boolean boolean14 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test0872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0872");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type12 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        boolean boolean19 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass17);
        boolean boolean20 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0873");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        java.lang.reflect.Type type12 = typeCircularBuffer6.get();
        boolean boolean13 = typeCircularBuffer4.put(type12);
        boolean boolean14 = typeCircularBuffer4.isFull();
        java.lang.reflect.Type type15 = typeCircularBuffer4.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        boolean boolean21 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean22 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type24 = typeCircularBuffer1.get();
        boolean boolean25 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type26 = typeCircularBuffer1.get();
        boolean boolean27 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type28 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(type26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(type28);
    }

    @Test
    public void test0874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0874");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        boolean boolean7 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean19 = typeCircularBuffer18.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer21.getClass();
        boolean boolean23 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass22);
        java.lang.reflect.Type type24 = typeCircularBuffer18.get();
        boolean boolean25 = typeCircularBuffer16.put(type24);
        boolean boolean26 = typeCircularBuffer16.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer31.getClass();
        boolean boolean33 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass32);
        java.lang.reflect.Type type34 = typeCircularBuffer28.get();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        boolean boolean37 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean38 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean39 = typeCircularBuffer16.isEmpty();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        boolean boolean42 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean43 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean44 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass41);
        java.lang.reflect.Type type45 = typeCircularBuffer1.get();
        java.lang.reflect.Type type46 = typeCircularBuffer1.get();
        java.lang.reflect.Type type47 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNull(type46);
        org.junit.Assert.assertNull(type47);
    }

    @Test
    public void test0875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0875");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        boolean boolean15 = typeCircularBuffer9.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer20.getClass();
        boolean boolean22 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass21);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean27 = typeCircularBuffer26.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass30 = typeCircularBuffer29.getClass();
        boolean boolean31 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass30);
        java.lang.reflect.Type type32 = typeCircularBuffer26.get();
        boolean boolean33 = typeCircularBuffer24.put(type32);
        boolean boolean34 = typeCircularBuffer24.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean37 = typeCircularBuffer36.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass40 = typeCircularBuffer39.getClass();
        boolean boolean41 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass40);
        java.lang.reflect.Type type42 = typeCircularBuffer36.get();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        boolean boolean45 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean46 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean47 = typeCircularBuffer24.isEmpty();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        boolean boolean50 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass49);
        boolean boolean51 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass49);
        boolean boolean52 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass49);
        java.lang.reflect.Type type53 = typeCircularBuffer9.get();
        boolean boolean54 = typeCircularBuffer9.isEmpty();
        java.lang.Class<?> wildcardClass55 = typeCircularBuffer9.getClass();
        boolean boolean56 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
    }

    @Test
    public void test0876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0876");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        java.lang.reflect.Type type12 = typeCircularBuffer6.get();
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        boolean boolean15 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass14);
        boolean boolean16 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass14);
        boolean boolean17 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean20 = typeCircularBuffer19.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass23 = typeCircularBuffer22.getClass();
        boolean boolean24 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass23);
        boolean boolean25 = typeCircularBuffer19.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.GenericDeclaration> genericDeclarationCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.GenericDeclaration>((int) (short) 100);
        java.lang.Class<?> wildcardClass28 = genericDeclarationCircularBuffer27.getClass();
        boolean boolean29 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass28);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean32 = typeCircularBuffer31.isFull();
        java.lang.reflect.Type type33 = typeCircularBuffer31.get();
        boolean boolean34 = typeCircularBuffer31.isFull();
        java.lang.reflect.Type type35 = typeCircularBuffer31.get();
        boolean boolean36 = typeCircularBuffer31.isFull();
        boolean boolean37 = typeCircularBuffer31.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean40 = typeCircularBuffer39.isFull();
        boolean boolean41 = typeCircularBuffer39.isEmpty();
        java.lang.reflect.Type type42 = typeCircularBuffer39.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean47 = typeCircularBuffer46.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer49 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass50 = typeCircularBuffer49.getClass();
        boolean boolean51 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass50);
        java.lang.reflect.Type type52 = typeCircularBuffer46.get();
        boolean boolean53 = typeCircularBuffer44.put(type52);
        java.lang.Class<?> wildcardClass54 = typeCircularBuffer44.getClass();
        boolean boolean55 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean56 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean57 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean58 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass54);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer60 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type61 = typeCircularBuffer60.get();
        boolean boolean62 = typeCircularBuffer60.isFull();
        boolean boolean63 = typeCircularBuffer60.isEmpty();
        boolean boolean64 = typeCircularBuffer60.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer66 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass67 = typeCircularBuffer66.getClass();
        boolean boolean68 = typeCircularBuffer60.put((java.lang.reflect.Type) wildcardClass67);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer70 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean71 = typeCircularBuffer70.isFull();
        boolean boolean72 = typeCircularBuffer70.isEmpty();
        boolean boolean73 = typeCircularBuffer70.isFull();
        java.lang.Class<?> wildcardClass74 = typeCircularBuffer70.getClass();
        boolean boolean75 = typeCircularBuffer60.put((java.lang.reflect.Type) wildcardClass74);
        boolean boolean76 = typeCircularBuffer60.isFull();
        java.lang.reflect.Type type77 = typeCircularBuffer60.get();
        java.lang.Class<?> wildcardClass78 = type77.getClass();
        boolean boolean79 = typeCircularBuffer1.put(type77);
        boolean boolean80 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(type33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(type35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(type42);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(type61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test0877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0877");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        boolean boolean10 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type11 = typeCircularBuffer1.get();
        boolean boolean12 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(type11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0878");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        boolean boolean8 = typeCircularBuffer1.isEmpty();
        boolean boolean9 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0879");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean4 = typeCircularBuffer3.isFull();
        boolean boolean5 = typeCircularBuffer3.isEmpty();
        java.lang.reflect.Type type6 = typeCircularBuffer3.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer10.get();
        boolean boolean17 = typeCircularBuffer8.put(type16);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer8.getClass();
        boolean boolean19 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass18);
        boolean boolean20 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass18);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type23 = typeCircularBuffer22.get();
        boolean boolean24 = typeCircularBuffer22.isFull();
        boolean boolean25 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean28 = typeCircularBuffer27.isEmpty();
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        boolean boolean31 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass30);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer27.getClass();
        boolean boolean33 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean37 = typeCircularBuffer36.isFull();
        boolean boolean38 = typeCircularBuffer36.isEmpty();
        java.lang.reflect.Type type39 = typeCircularBuffer36.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer46.getClass();
        boolean boolean48 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass47);
        java.lang.reflect.Type type49 = typeCircularBuffer43.get();
        boolean boolean50 = typeCircularBuffer41.put(type49);
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer41.getClass();
        boolean boolean52 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean53 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass51);
        java.lang.Class<?> wildcardClass54 = typeCircularBuffer22.getClass();
        boolean boolean55 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean56 = typeCircularBuffer1.isEmpty();
        boolean boolean57 = typeCircularBuffer1.isEmpty();
        boolean boolean58 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer60 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type61 = typeCircularBuffer60.get();
        boolean boolean62 = typeCircularBuffer60.isFull();
        boolean boolean63 = typeCircularBuffer60.isEmpty();
        boolean boolean64 = typeCircularBuffer60.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer66 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass67 = typeCircularBuffer66.getClass();
        boolean boolean68 = typeCircularBuffer60.put((java.lang.reflect.Type) wildcardClass67);
        boolean boolean69 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass67);
        java.lang.reflect.Type type70 = typeCircularBuffer1.get();
        boolean boolean71 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass72 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(type39);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(type61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test0880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0880");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer10.get();
        boolean boolean17 = typeCircularBuffer8.put(type16);
        boolean boolean18 = typeCircularBuffer8.isFull();
        java.lang.reflect.Type type19 = typeCircularBuffer8.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean22 = typeCircularBuffer21.isEmpty();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean26 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean27 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean28 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean31 = typeCircularBuffer30.isFull();
        boolean boolean32 = typeCircularBuffer30.isEmpty();
        boolean boolean33 = typeCircularBuffer30.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean36 = typeCircularBuffer35.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass39 = typeCircularBuffer38.getClass();
        boolean boolean40 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass39);
        java.lang.reflect.Type type41 = typeCircularBuffer35.get();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        boolean boolean44 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass43);
        boolean boolean45 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass43);
        boolean boolean46 = typeCircularBuffer30.isFull();
        java.lang.reflect.Type type47 = typeCircularBuffer30.get();
        boolean boolean48 = typeCircularBuffer1.put(type47);
        boolean boolean49 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass50 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test0881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0881");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        java.lang.reflect.Type type11 = typeCircularBuffer1.get();
        java.lang.reflect.Type type12 = null;
        boolean boolean13 = typeCircularBuffer1.put(type12);
        boolean boolean14 = typeCircularBuffer1.isFull();
        boolean boolean15 = typeCircularBuffer1.isFull();
        boolean boolean16 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type19 = typeCircularBuffer18.get();
        boolean boolean20 = typeCircularBuffer18.isFull();
        boolean boolean21 = typeCircularBuffer18.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean24 = typeCircularBuffer23.isEmpty();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        boolean boolean27 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass26);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer23.getClass();
        boolean boolean29 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.reflect.Type type30 = typeCircularBuffer18.get();
        boolean boolean31 = typeCircularBuffer18.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean34 = typeCircularBuffer33.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass37 = typeCircularBuffer36.getClass();
        boolean boolean38 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass37);
        boolean boolean39 = typeCircularBuffer33.isEmpty();
        java.lang.reflect.Type type40 = typeCircularBuffer33.get();
        boolean boolean41 = typeCircularBuffer18.put(type40);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type44 = typeCircularBuffer43.get();
        boolean boolean45 = typeCircularBuffer43.isFull();
        boolean boolean46 = typeCircularBuffer43.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean49 = typeCircularBuffer48.isEmpty();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        boolean boolean52 = typeCircularBuffer48.put((java.lang.reflect.Type) wildcardClass51);
        java.lang.Class<?> wildcardClass53 = typeCircularBuffer48.getClass();
        boolean boolean54 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass53);
        java.lang.reflect.Type type55 = typeCircularBuffer43.get();
        boolean boolean56 = typeCircularBuffer43.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer58 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type59 = typeCircularBuffer58.get();
        boolean boolean60 = typeCircularBuffer58.isFull();
        java.lang.Class<?> wildcardClass61 = typeCircularBuffer58.getClass();
        boolean boolean62 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass61);
        boolean boolean63 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass61);
        boolean boolean64 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass61);
        boolean boolean65 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(type19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(type44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(type59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
    }

    @Test
    public void test0882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0882");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test0883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0883");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) 'a');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass4 = typeCircularBuffer3.getClass();
        boolean boolean5 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass4);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        java.lang.reflect.Type type15 = typeCircularBuffer9.get();
        boolean boolean16 = typeCircularBuffer7.put(type15);
        boolean boolean17 = typeCircularBuffer7.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean20 = typeCircularBuffer19.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass23 = typeCircularBuffer22.getClass();
        boolean boolean24 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass23);
        java.lang.reflect.Type type25 = typeCircularBuffer19.get();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        boolean boolean28 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer7.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean30 = typeCircularBuffer7.isEmpty();
        java.lang.reflect.Type type31 = typeCircularBuffer7.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean34 = typeCircularBuffer33.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass37 = typeCircularBuffer36.getClass();
        boolean boolean38 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass37);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean43 = typeCircularBuffer42.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass46 = typeCircularBuffer45.getClass();
        boolean boolean47 = typeCircularBuffer42.put((java.lang.reflect.Type) wildcardClass46);
        java.lang.reflect.Type type48 = typeCircularBuffer42.get();
        boolean boolean49 = typeCircularBuffer40.put(type48);
        boolean boolean50 = typeCircularBuffer40.isFull();
        java.lang.reflect.Type type51 = typeCircularBuffer40.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer53 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean54 = typeCircularBuffer53.isEmpty();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        boolean boolean57 = typeCircularBuffer53.put((java.lang.reflect.Type) wildcardClass56);
        boolean boolean58 = typeCircularBuffer40.put((java.lang.reflect.Type) wildcardClass56);
        boolean boolean59 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass56);
        boolean boolean60 = typeCircularBuffer33.isFull();
        boolean boolean61 = typeCircularBuffer33.isFull();
        java.lang.Class<?> wildcardClass62 = typeCircularBuffer33.getClass();
        boolean boolean63 = typeCircularBuffer7.put((java.lang.reflect.Type) wildcardClass62);
        java.lang.reflect.Type type64 = typeCircularBuffer7.get();
        java.lang.Class<?> wildcardClass65 = type64.getClass();
        boolean boolean66 = typeCircularBuffer1.put(type64);
        boolean boolean67 = typeCircularBuffer1.isFull();
        boolean boolean68 = typeCircularBuffer1.isFull();
        boolean boolean69 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    }

    @Test
    public void test0884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0884");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean4 = typeCircularBuffer3.isFull();
        boolean boolean5 = typeCircularBuffer3.isEmpty();
        java.lang.reflect.Type type6 = typeCircularBuffer3.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer10.get();
        boolean boolean17 = typeCircularBuffer8.put(type16);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer8.getClass();
        boolean boolean19 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass18);
        boolean boolean20 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass18);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type23 = typeCircularBuffer22.get();
        boolean boolean24 = typeCircularBuffer22.isFull();
        boolean boolean25 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean28 = typeCircularBuffer27.isEmpty();
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        boolean boolean31 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass30);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer27.getClass();
        boolean boolean33 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean37 = typeCircularBuffer36.isFull();
        boolean boolean38 = typeCircularBuffer36.isEmpty();
        java.lang.reflect.Type type39 = typeCircularBuffer36.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer46.getClass();
        boolean boolean48 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass47);
        java.lang.reflect.Type type49 = typeCircularBuffer43.get();
        boolean boolean50 = typeCircularBuffer41.put(type49);
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer41.getClass();
        boolean boolean52 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean53 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass51);
        java.lang.Class<?> wildcardClass54 = typeCircularBuffer22.getClass();
        boolean boolean55 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean56 = typeCircularBuffer1.isFull();
        boolean boolean57 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass58 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(type39);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test0885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0885");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) 'a');
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type4 = null;
        boolean boolean5 = typeCircularBuffer1.put(type4);
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test0886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0886");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type10 = typeCircularBuffer9.get();
        boolean boolean11 = typeCircularBuffer9.isFull();
        boolean boolean12 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer14.getClass();
        boolean boolean20 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass19);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        boolean boolean26 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer22.getClass();
        boolean boolean28 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean30 = typeCircularBuffer1.isEmpty();
        boolean boolean31 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type34 = typeCircularBuffer33.get();
        java.lang.reflect.Type type35 = typeCircularBuffer33.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean40 = typeCircularBuffer39.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass43 = typeCircularBuffer42.getClass();
        boolean boolean44 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass43);
        java.lang.reflect.Type type45 = typeCircularBuffer39.get();
        boolean boolean46 = typeCircularBuffer37.put(type45);
        java.lang.reflect.Type type47 = typeCircularBuffer37.get();
        java.lang.reflect.Type type48 = null;
        boolean boolean49 = typeCircularBuffer37.put(type48);
        boolean boolean50 = typeCircularBuffer37.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer52 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 10);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer54 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type55 = typeCircularBuffer54.get();
        boolean boolean56 = typeCircularBuffer54.isFull();
        java.lang.Class<?> wildcardClass57 = typeCircularBuffer54.getClass();
        boolean boolean58 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass57);
        boolean boolean59 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass57);
        boolean boolean60 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass57);
        boolean boolean61 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(type34);
        org.junit.Assert.assertNull(type35);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(type55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test0887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0887");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        boolean boolean9 = typeCircularBuffer1.isFull();
        boolean boolean10 = typeCircularBuffer1.isEmpty();
        boolean boolean11 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type22 = typeCircularBuffer21.get();
        boolean boolean23 = typeCircularBuffer21.isFull();
        boolean boolean24 = typeCircularBuffer21.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean27 = typeCircularBuffer26.isEmpty();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        boolean boolean30 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass29);
        java.lang.Class<?> wildcardClass31 = typeCircularBuffer26.getClass();
        boolean boolean32 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass31);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean35 = typeCircularBuffer34.isEmpty();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        boolean boolean38 = typeCircularBuffer34.put((java.lang.reflect.Type) wildcardClass37);
        java.lang.Class<?> wildcardClass39 = typeCircularBuffer34.getClass();
        boolean boolean40 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass39);
        boolean boolean41 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass39);
        boolean boolean42 = typeCircularBuffer13.isEmpty();
        boolean boolean43 = typeCircularBuffer13.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean48 = typeCircularBuffer47.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer50.getClass();
        boolean boolean52 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass51);
        java.lang.reflect.Type type53 = typeCircularBuffer47.get();
        boolean boolean54 = typeCircularBuffer45.put(type53);
        boolean boolean55 = typeCircularBuffer45.isEmpty();
        boolean boolean56 = typeCircularBuffer45.isFull();
        boolean boolean57 = typeCircularBuffer45.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer59 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer61 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean62 = typeCircularBuffer61.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer64 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass65 = typeCircularBuffer64.getClass();
        boolean boolean66 = typeCircularBuffer61.put((java.lang.reflect.Type) wildcardClass65);
        java.lang.reflect.Type type67 = typeCircularBuffer61.get();
        boolean boolean68 = typeCircularBuffer59.put(type67);
        boolean boolean69 = typeCircularBuffer59.isFull();
        java.lang.reflect.Type type70 = typeCircularBuffer59.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer72 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean73 = typeCircularBuffer72.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer75 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass76 = typeCircularBuffer75.getClass();
        boolean boolean77 = typeCircularBuffer72.put((java.lang.reflect.Type) wildcardClass76);
        boolean boolean78 = typeCircularBuffer72.isFull();
        java.lang.reflect.Type type79 = typeCircularBuffer72.get();
        boolean boolean80 = typeCircularBuffer59.put(type79);
        boolean boolean81 = typeCircularBuffer45.put(type79);
        boolean boolean82 = typeCircularBuffer13.put(type79);
        boolean boolean83 = typeCircularBuffer1.put(type79);
        boolean boolean84 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass85 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNull(type22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0888");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        boolean boolean7 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.GenericDeclaration> genericDeclarationCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.GenericDeclaration>((int) (short) 100);
        java.lang.Class<?> wildcardClass10 = genericDeclarationCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass10);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean14 = typeCircularBuffer13.isFull();
        java.lang.reflect.Type type15 = typeCircularBuffer13.get();
        boolean boolean16 = typeCircularBuffer13.isFull();
        java.lang.reflect.Type type17 = typeCircularBuffer13.get();
        boolean boolean18 = typeCircularBuffer13.isFull();
        boolean boolean19 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean22 = typeCircularBuffer21.isFull();
        boolean boolean23 = typeCircularBuffer21.isEmpty();
        java.lang.reflect.Type type24 = typeCircularBuffer21.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer31.getClass();
        boolean boolean33 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass32);
        java.lang.reflect.Type type34 = typeCircularBuffer28.get();
        boolean boolean35 = typeCircularBuffer26.put(type34);
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer26.getClass();
        boolean boolean37 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean38 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean39 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass36);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean42 = typeCircularBuffer41.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass45 = typeCircularBuffer44.getClass();
        boolean boolean46 = typeCircularBuffer41.put((java.lang.reflect.Type) wildcardClass45);
        java.lang.reflect.Type type47 = typeCircularBuffer41.get();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        boolean boolean50 = typeCircularBuffer41.put((java.lang.reflect.Type) wildcardClass49);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer52 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean53 = typeCircularBuffer52.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer55 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass56 = typeCircularBuffer55.getClass();
        boolean boolean57 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass56);
        java.lang.Class<?> wildcardClass58 = typeCircularBuffer52.getClass();
        boolean boolean59 = typeCircularBuffer41.put((java.lang.reflect.Type) wildcardClass58);
        java.lang.reflect.Type type60 = typeCircularBuffer41.get();
        boolean boolean61 = typeCircularBuffer1.put(type60);
        boolean boolean62 = typeCircularBuffer1.isEmpty();
        boolean boolean63 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type64 = typeCircularBuffer1.get();
        java.lang.reflect.Type type65 = typeCircularBuffer1.get();
        java.lang.reflect.Type type66 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(type15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(type17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(type24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNull(type65);
        org.junit.Assert.assertNull(type66);
    }

    @Test
    public void test0889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0889");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer5 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean6 = typeCircularBuffer5.isEmpty();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = typeCircularBuffer5.put((java.lang.reflect.Type) wildcardClass8);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer5.getClass();
        boolean boolean11 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass10);
        boolean boolean12 = typeCircularBuffer1.isEmpty();
        boolean boolean13 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type14 = typeCircularBuffer1.get();
        java.lang.reflect.Type type15 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        java.lang.reflect.Type type19 = typeCircularBuffer17.get();
        java.lang.reflect.Type type20 = typeCircularBuffer17.get();
        java.lang.reflect.Type type21 = typeCircularBuffer17.get();
        boolean boolean22 = typeCircularBuffer17.isFull();
        boolean boolean23 = typeCircularBuffer17.isFull();
        java.lang.reflect.Type type24 = typeCircularBuffer17.get();
        boolean boolean25 = typeCircularBuffer17.isFull();
        java.lang.Class<?> wildcardClass26 = typeCircularBuffer17.getClass();
        boolean boolean27 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass26);
        java.lang.reflect.Type type28 = typeCircularBuffer1.get();
        boolean boolean29 = typeCircularBuffer1.isFull();
        boolean boolean30 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNull(type15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(type19);
        org.junit.Assert.assertNull(type20);
        org.junit.Assert.assertNull(type21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    }

    @Test
    public void test0890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0890");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) ' ');
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        java.lang.reflect.Type type12 = typeCircularBuffer6.get();
        boolean boolean13 = typeCircularBuffer4.put(type12);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer20.getClass();
        boolean boolean22 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type23 = typeCircularBuffer17.get();
        boolean boolean24 = typeCircularBuffer15.put(type23);
        java.lang.Class<?> wildcardClass25 = typeCircularBuffer15.getClass();
        boolean boolean26 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass25);
        boolean boolean27 = typeCircularBuffer4.isFull();
        java.lang.reflect.Type type28 = typeCircularBuffer4.get();
        boolean boolean29 = typeCircularBuffer1.put(type28);
        boolean boolean30 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass31 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0891");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.Comparable<java.lang.String>> strComparableCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.Comparable<java.lang.String>>((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0892");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type24 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer31.getClass();
        boolean boolean33 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass32);
        java.lang.reflect.Type type34 = typeCircularBuffer28.get();
        boolean boolean35 = typeCircularBuffer26.put(type34);
        boolean boolean36 = typeCircularBuffer26.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean39 = typeCircularBuffer38.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass42 = typeCircularBuffer41.getClass();
        boolean boolean43 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass42);
        java.lang.reflect.Type type44 = typeCircularBuffer38.get();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        boolean boolean47 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass46);
        boolean boolean48 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass46);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean51 = typeCircularBuffer50.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer53 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass54 = typeCircularBuffer53.getClass();
        boolean boolean55 = typeCircularBuffer50.put((java.lang.reflect.Type) wildcardClass54);
        java.lang.reflect.Type type56 = typeCircularBuffer50.get();
        boolean boolean57 = typeCircularBuffer26.put(type56);
        boolean boolean58 = typeCircularBuffer26.isEmpty();
        java.lang.reflect.Type type59 = typeCircularBuffer26.get();
        boolean boolean60 = typeCircularBuffer1.put(type59);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer62 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type63 = typeCircularBuffer62.get();
        boolean boolean64 = typeCircularBuffer62.isFull();
        boolean boolean65 = typeCircularBuffer62.isEmpty();
        boolean boolean66 = typeCircularBuffer62.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer68 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass69 = typeCircularBuffer68.getClass();
        boolean boolean70 = typeCircularBuffer62.put((java.lang.reflect.Type) wildcardClass69);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer72 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean73 = typeCircularBuffer72.isFull();
        boolean boolean74 = typeCircularBuffer72.isEmpty();
        boolean boolean75 = typeCircularBuffer72.isFull();
        java.lang.Class<?> wildcardClass76 = typeCircularBuffer72.getClass();
        boolean boolean77 = typeCircularBuffer62.put((java.lang.reflect.Type) wildcardClass76);
        java.lang.reflect.Type type78 = typeCircularBuffer62.get();
        boolean boolean79 = typeCircularBuffer62.isFull();
        java.lang.Class<?> wildcardClass80 = typeCircularBuffer62.getClass();
        boolean boolean81 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass80);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(type63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test0893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0893");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer10.get();
        boolean boolean17 = typeCircularBuffer8.put(type16);
        boolean boolean18 = typeCircularBuffer8.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean21 = typeCircularBuffer20.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer23.getClass();
        boolean boolean25 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass24);
        java.lang.reflect.Type type26 = typeCircularBuffer20.get();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        boolean boolean29 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass28);
        boolean boolean30 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass28);
        boolean boolean31 = typeCircularBuffer8.isEmpty();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        boolean boolean34 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass33);
        boolean boolean35 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass33);
        boolean boolean36 = typeCircularBuffer1.isEmpty();
        boolean boolean37 = typeCircularBuffer1.isEmpty();
        boolean boolean38 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type41 = typeCircularBuffer40.get();
        boolean boolean42 = typeCircularBuffer40.isFull();
        boolean boolean43 = typeCircularBuffer40.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean46 = typeCircularBuffer45.isEmpty();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        boolean boolean49 = typeCircularBuffer45.put((java.lang.reflect.Type) wildcardClass48);
        java.lang.Class<?> wildcardClass50 = typeCircularBuffer45.getClass();
        boolean boolean51 = typeCircularBuffer40.put((java.lang.reflect.Type) wildcardClass50);
        java.lang.reflect.Type type52 = typeCircularBuffer40.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer54 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer56 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean57 = typeCircularBuffer56.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer59 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass60 = typeCircularBuffer59.getClass();
        boolean boolean61 = typeCircularBuffer56.put((java.lang.reflect.Type) wildcardClass60);
        java.lang.reflect.Type type62 = typeCircularBuffer56.get();
        boolean boolean63 = typeCircularBuffer54.put(type62);
        boolean boolean64 = typeCircularBuffer40.put(type62);
        java.lang.reflect.Type type65 = typeCircularBuffer40.get();
        boolean boolean66 = typeCircularBuffer1.put(type65);
        boolean boolean67 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(type41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
    }

    @Test
    public void test0894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0894");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean4 = typeCircularBuffer3.isFull();
        boolean boolean5 = typeCircularBuffer3.isEmpty();
        java.lang.reflect.Type type6 = typeCircularBuffer3.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer10.get();
        boolean boolean17 = typeCircularBuffer8.put(type16);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer8.getClass();
        boolean boolean19 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass18);
        boolean boolean20 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass18);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type23 = typeCircularBuffer22.get();
        boolean boolean24 = typeCircularBuffer22.isFull();
        boolean boolean25 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean28 = typeCircularBuffer27.isEmpty();
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        boolean boolean31 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass30);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer27.getClass();
        boolean boolean33 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean37 = typeCircularBuffer36.isFull();
        boolean boolean38 = typeCircularBuffer36.isEmpty();
        java.lang.reflect.Type type39 = typeCircularBuffer36.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer46.getClass();
        boolean boolean48 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass47);
        java.lang.reflect.Type type49 = typeCircularBuffer43.get();
        boolean boolean50 = typeCircularBuffer41.put(type49);
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer41.getClass();
        boolean boolean52 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean53 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass51);
        java.lang.Class<?> wildcardClass54 = typeCircularBuffer22.getClass();
        boolean boolean55 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean56 = typeCircularBuffer1.isEmpty();
        boolean boolean57 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type58 = typeCircularBuffer1.get();
        java.lang.reflect.Type type59 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer61 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean62 = typeCircularBuffer61.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer64 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass65 = typeCircularBuffer64.getClass();
        boolean boolean66 = typeCircularBuffer61.put((java.lang.reflect.Type) wildcardClass65);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer68 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer70 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean71 = typeCircularBuffer70.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer73 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass74 = typeCircularBuffer73.getClass();
        boolean boolean75 = typeCircularBuffer70.put((java.lang.reflect.Type) wildcardClass74);
        java.lang.reflect.Type type76 = typeCircularBuffer70.get();
        boolean boolean77 = typeCircularBuffer68.put(type76);
        boolean boolean78 = typeCircularBuffer68.isFull();
        java.lang.reflect.Type type79 = typeCircularBuffer68.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer81 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean82 = typeCircularBuffer81.isEmpty();
        java.lang.Object obj83 = new java.lang.Object();
        java.lang.Class<?> wildcardClass84 = obj83.getClass();
        boolean boolean85 = typeCircularBuffer81.put((java.lang.reflect.Type) wildcardClass84);
        boolean boolean86 = typeCircularBuffer68.put((java.lang.reflect.Type) wildcardClass84);
        boolean boolean87 = typeCircularBuffer61.put((java.lang.reflect.Type) wildcardClass84);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer89 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean90 = typeCircularBuffer89.isFull();
        boolean boolean91 = typeCircularBuffer89.isEmpty();
        java.lang.reflect.Type type92 = typeCircularBuffer89.get();
        boolean boolean93 = typeCircularBuffer89.isEmpty();
        boolean boolean94 = typeCircularBuffer89.isEmpty();
        java.lang.Class<?> wildcardClass95 = typeCircularBuffer89.getClass();
        boolean boolean96 = typeCircularBuffer61.put((java.lang.reflect.Type) wildcardClass95);
        boolean boolean97 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass95);
        boolean boolean98 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(type39);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNull(type92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNotNull(wildcardClass95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test0895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0895");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(type5);
    }

    @Test
    public void test0896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0896");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass4 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0897");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean24 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type25 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean28 = typeCircularBuffer27.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass31 = typeCircularBuffer30.getClass();
        boolean boolean32 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass31);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean37 = typeCircularBuffer36.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass40 = typeCircularBuffer39.getClass();
        boolean boolean41 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass40);
        java.lang.reflect.Type type42 = typeCircularBuffer36.get();
        boolean boolean43 = typeCircularBuffer34.put(type42);
        boolean boolean44 = typeCircularBuffer34.isFull();
        java.lang.reflect.Type type45 = typeCircularBuffer34.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean48 = typeCircularBuffer47.isEmpty();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        boolean boolean51 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass50);
        boolean boolean52 = typeCircularBuffer34.put((java.lang.reflect.Type) wildcardClass50);
        boolean boolean53 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass50);
        boolean boolean54 = typeCircularBuffer27.isFull();
        boolean boolean55 = typeCircularBuffer27.isFull();
        java.lang.Class<?> wildcardClass56 = typeCircularBuffer27.getClass();
        boolean boolean57 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass56);
        boolean boolean58 = typeCircularBuffer1.isEmpty();
        boolean boolean59 = typeCircularBuffer1.isFull();
        boolean boolean60 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
    }

    @Test
    public void test0898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0898");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type9 = typeCircularBuffer8.get();
        boolean boolean10 = typeCircularBuffer8.isFull();
        boolean boolean11 = typeCircularBuffer8.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass16);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer13.getClass();
        boolean boolean19 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass18);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean22 = typeCircularBuffer21.isEmpty();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass24);
        java.lang.Class<?> wildcardClass26 = typeCircularBuffer21.getClass();
        boolean boolean27 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass26);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer34.getClass();
        boolean boolean36 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass35);
        java.lang.reflect.Type type37 = typeCircularBuffer31.get();
        boolean boolean38 = typeCircularBuffer29.put(type37);
        java.lang.Class<?> wildcardClass39 = typeCircularBuffer29.getClass();
        boolean boolean40 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass39);
        java.lang.Class<?> wildcardClass41 = typeCircularBuffer8.getClass();
        boolean boolean42 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean43 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type44 = typeCircularBuffer1.get();
        boolean boolean45 = typeCircularBuffer1.isFull();
        boolean boolean46 = typeCircularBuffer1.isFull();
        boolean boolean47 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
    }

    @Test
    public void test0899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0899");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        boolean boolean7 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer10.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        boolean boolean13 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean16 = typeCircularBuffer15.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer18.getClass();
        boolean boolean20 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass19);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer15.getClass();
        boolean boolean22 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = typeCircularBuffer1.isEmpty();
        boolean boolean24 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
    }

    @Test
    public void test0900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0900");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        boolean boolean9 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type10 = typeCircularBuffer1.get();
        boolean boolean11 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0901");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        boolean boolean8 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass7);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type11 = typeCircularBuffer10.get();
        boolean boolean12 = typeCircularBuffer10.isFull();
        boolean boolean13 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean16 = typeCircularBuffer15.isEmpty();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        boolean boolean19 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass18);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer15.getClass();
        boolean boolean21 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean22 = typeCircularBuffer10.isEmpty();
        java.lang.Class<?> wildcardClass23 = typeCircularBuffer10.getClass();
        boolean boolean24 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass23);
        boolean boolean25 = typeCircularBuffer1.isEmpty();
        boolean boolean26 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(type11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test0902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0902");
        com.thealgorithms.datastructures.buffers.CircularBuffer<com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>> typeCircularBufferCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>>((int) 'a');
        java.lang.Class<?> wildcardClass2 = typeCircularBufferCircularBuffer1.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test0903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0903");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer5 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean6 = typeCircularBuffer5.isEmpty();
        boolean boolean7 = typeCircularBuffer5.isFull();
        java.lang.reflect.Type type8 = typeCircularBuffer5.get();
        boolean boolean9 = typeCircularBuffer5.isFull();
        boolean boolean10 = typeCircularBuffer5.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean13 = typeCircularBuffer12.isEmpty();
        java.lang.reflect.Type type14 = typeCircularBuffer12.get();
        java.lang.reflect.Type type15 = typeCircularBuffer12.get();
        java.lang.reflect.Type type16 = typeCircularBuffer12.get();
        java.lang.reflect.Type type17 = typeCircularBuffer12.get();
        boolean boolean18 = typeCircularBuffer12.isEmpty();
        java.lang.reflect.Type type19 = typeCircularBuffer12.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean24 = typeCircularBuffer23.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer26.getClass();
        boolean boolean28 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass27);
        java.lang.reflect.Type type29 = typeCircularBuffer23.get();
        boolean boolean30 = typeCircularBuffer21.put(type29);
        boolean boolean31 = typeCircularBuffer21.isEmpty();
        boolean boolean32 = typeCircularBuffer21.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean35 = typeCircularBuffer34.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass38 = typeCircularBuffer37.getClass();
        boolean boolean39 = typeCircularBuffer34.put((java.lang.reflect.Type) wildcardClass38);
        java.lang.reflect.Type type40 = typeCircularBuffer34.get();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        boolean boolean43 = typeCircularBuffer34.put((java.lang.reflect.Type) wildcardClass42);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean46 = typeCircularBuffer45.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass49 = typeCircularBuffer48.getClass();
        boolean boolean50 = typeCircularBuffer45.put((java.lang.reflect.Type) wildcardClass49);
        java.lang.reflect.Type type51 = typeCircularBuffer45.get();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        boolean boolean54 = typeCircularBuffer45.put((java.lang.reflect.Type) wildcardClass53);
        java.lang.reflect.Type type55 = typeCircularBuffer45.get();
        boolean boolean56 = typeCircularBuffer34.put(type55);
        boolean boolean57 = typeCircularBuffer21.put(type55);
        boolean boolean58 = typeCircularBuffer21.isEmpty();
        java.lang.reflect.Type type59 = typeCircularBuffer21.get();
        boolean boolean60 = typeCircularBuffer12.put(type59);
        boolean boolean61 = typeCircularBuffer12.isFull();
        java.lang.reflect.Type type62 = typeCircularBuffer12.get();
        boolean boolean63 = typeCircularBuffer5.put(type62);
        boolean boolean64 = typeCircularBuffer5.isFull();
        java.lang.Class<?> wildcardClass65 = typeCircularBuffer5.getClass();
        boolean boolean66 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass65);
        java.lang.Class<?> wildcardClass67 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(type14);
        org.junit.Assert.assertNull(type15);
        org.junit.Assert.assertNull(type16);
        org.junit.Assert.assertNull(type17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(type19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test0904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0904");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        boolean boolean10 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0905");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isEmpty();
        boolean boolean12 = typeCircularBuffer1.isFull();
        boolean boolean13 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer20.getClass();
        boolean boolean22 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type23 = typeCircularBuffer17.get();
        boolean boolean24 = typeCircularBuffer15.put(type23);
        boolean boolean25 = typeCircularBuffer15.isFull();
        java.lang.reflect.Type type26 = typeCircularBuffer15.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer31.getClass();
        boolean boolean33 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer28.isFull();
        java.lang.reflect.Type type35 = typeCircularBuffer28.get();
        boolean boolean36 = typeCircularBuffer15.put(type35);
        boolean boolean37 = typeCircularBuffer1.put(type35);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean40 = typeCircularBuffer39.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass43 = typeCircularBuffer42.getClass();
        boolean boolean44 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass43);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean49 = typeCircularBuffer48.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass52 = typeCircularBuffer51.getClass();
        boolean boolean53 = typeCircularBuffer48.put((java.lang.reflect.Type) wildcardClass52);
        java.lang.reflect.Type type54 = typeCircularBuffer48.get();
        boolean boolean55 = typeCircularBuffer46.put(type54);
        boolean boolean56 = typeCircularBuffer46.isFull();
        java.lang.reflect.Type type57 = typeCircularBuffer46.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer59 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean60 = typeCircularBuffer59.isEmpty();
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        boolean boolean63 = typeCircularBuffer59.put((java.lang.reflect.Type) wildcardClass62);
        boolean boolean64 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass62);
        boolean boolean65 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass62);
        boolean boolean66 = typeCircularBuffer39.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer68 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean69 = typeCircularBuffer68.isFull();
        boolean boolean70 = typeCircularBuffer68.isEmpty();
        boolean boolean71 = typeCircularBuffer68.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer73 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean74 = typeCircularBuffer73.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer76 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass77 = typeCircularBuffer76.getClass();
        boolean boolean78 = typeCircularBuffer73.put((java.lang.reflect.Type) wildcardClass77);
        java.lang.reflect.Type type79 = typeCircularBuffer73.get();
        java.lang.Object obj80 = new java.lang.Object();
        java.lang.Class<?> wildcardClass81 = obj80.getClass();
        boolean boolean82 = typeCircularBuffer73.put((java.lang.reflect.Type) wildcardClass81);
        boolean boolean83 = typeCircularBuffer68.put((java.lang.reflect.Type) wildcardClass81);
        boolean boolean84 = typeCircularBuffer68.isFull();
        java.lang.reflect.Type type85 = typeCircularBuffer68.get();
        boolean boolean86 = typeCircularBuffer39.put(type85);
        boolean boolean87 = typeCircularBuffer1.put(type85);
        boolean boolean88 = typeCircularBuffer1.isFull();
        boolean boolean89 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type90 = typeCircularBuffer1.get();
        boolean boolean91 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass92 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(type85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(type90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test0906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0906");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type5 = null;
        boolean boolean6 = typeCircularBuffer1.put(type5);
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        boolean boolean8 = typeCircularBuffer1.isFull();
        boolean boolean9 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test0907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0907");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        boolean boolean7 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        java.lang.reflect.Type type12 = typeCircularBuffer10.get();
        java.lang.reflect.Type type13 = typeCircularBuffer10.get();
        java.lang.reflect.Type type14 = typeCircularBuffer10.get();
        boolean boolean15 = typeCircularBuffer10.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean18 = typeCircularBuffer17.isFull();
        java.lang.reflect.Type type19 = typeCircularBuffer17.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean22 = typeCircularBuffer21.isEmpty();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass24);
        java.lang.Class<?> wildcardClass26 = typeCircularBuffer21.getClass();
        boolean boolean27 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass26);
        boolean boolean28 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass26);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '#');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean35 = typeCircularBuffer34.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass38 = typeCircularBuffer37.getClass();
        boolean boolean39 = typeCircularBuffer34.put((java.lang.reflect.Type) wildcardClass38);
        java.lang.reflect.Type type40 = typeCircularBuffer34.get();
        boolean boolean41 = typeCircularBuffer32.put(type40);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean46 = typeCircularBuffer45.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass49 = typeCircularBuffer48.getClass();
        boolean boolean50 = typeCircularBuffer45.put((java.lang.reflect.Type) wildcardClass49);
        java.lang.reflect.Type type51 = typeCircularBuffer45.get();
        boolean boolean52 = typeCircularBuffer43.put(type51);
        java.lang.Class<?> wildcardClass53 = typeCircularBuffer43.getClass();
        boolean boolean54 = typeCircularBuffer32.put((java.lang.reflect.Type) wildcardClass53);
        boolean boolean55 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass53);
        boolean boolean56 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass53);
        java.lang.reflect.Type type57 = typeCircularBuffer10.get();
        java.lang.reflect.Type type58 = typeCircularBuffer10.get();
        java.lang.reflect.Type type59 = typeCircularBuffer10.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer61 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean62 = typeCircularBuffer61.isFull();
        java.lang.reflect.Type type63 = typeCircularBuffer61.get();
        boolean boolean64 = typeCircularBuffer61.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer66 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean67 = typeCircularBuffer66.isEmpty();
        java.lang.Class<?> wildcardClass68 = typeCircularBuffer66.getClass();
        boolean boolean69 = typeCircularBuffer61.put((java.lang.reflect.Type) wildcardClass68);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer71 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 1);
        boolean boolean72 = typeCircularBuffer71.isEmpty();
        boolean boolean73 = typeCircularBuffer71.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer75 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type76 = typeCircularBuffer75.get();
        boolean boolean77 = typeCircularBuffer75.isFull();
        boolean boolean78 = typeCircularBuffer75.isFull();
        boolean boolean79 = typeCircularBuffer75.isEmpty();
        java.lang.reflect.Type type80 = typeCircularBuffer75.get();
        java.lang.Class<?> wildcardClass81 = typeCircularBuffer75.getClass();
        boolean boolean82 = typeCircularBuffer71.put((java.lang.reflect.Type) wildcardClass81);
        boolean boolean83 = typeCircularBuffer61.put((java.lang.reflect.Type) wildcardClass81);
        java.lang.Class<?> wildcardClass84 = typeCircularBuffer61.getClass();
        boolean boolean85 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass84);
        java.lang.reflect.Type type86 = typeCircularBuffer10.get();
        boolean boolean87 = typeCircularBuffer1.put(type86);
        java.lang.reflect.Type type88 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(type12);
        org.junit.Assert.assertNull(type13);
        org.junit.Assert.assertNull(type14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(type19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNull(type58);
        org.junit.Assert.assertNull(type59);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(type63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNull(type76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNull(type80);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(type86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(type88);
    }

    @Test
    public void test0908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0908");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type4 = typeCircularBuffer3.get();
        boolean boolean5 = typeCircularBuffer3.isFull();
        boolean boolean6 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean9 = typeCircularBuffer8.isEmpty();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer8.getClass();
        boolean boolean14 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass13);
        boolean boolean15 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean18 = typeCircularBuffer17.isFull();
        boolean boolean19 = typeCircularBuffer17.isEmpty();
        java.lang.reflect.Type type20 = typeCircularBuffer17.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean25 = typeCircularBuffer24.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer27.getClass();
        boolean boolean29 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.reflect.Type type30 = typeCircularBuffer24.get();
        boolean boolean31 = typeCircularBuffer22.put(type30);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer22.getClass();
        boolean boolean33 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean35 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass32);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean38 = typeCircularBuffer37.isFull();
        java.lang.reflect.Type type39 = typeCircularBuffer37.get();
        boolean boolean40 = typeCircularBuffer37.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean43 = typeCircularBuffer42.isEmpty();
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer42.getClass();
        boolean boolean45 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass44);
        java.lang.Class<?> wildcardClass46 = typeCircularBuffer37.getClass();
        boolean boolean47 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass46);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer49 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean50 = typeCircularBuffer49.isFull();
        boolean boolean51 = typeCircularBuffer49.isEmpty();
        boolean boolean52 = typeCircularBuffer49.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer54 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean55 = typeCircularBuffer54.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer57 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass58 = typeCircularBuffer57.getClass();
        boolean boolean59 = typeCircularBuffer54.put((java.lang.reflect.Type) wildcardClass58);
        java.lang.reflect.Type type60 = typeCircularBuffer54.get();
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        boolean boolean63 = typeCircularBuffer54.put((java.lang.reflect.Type) wildcardClass62);
        boolean boolean64 = typeCircularBuffer49.put((java.lang.reflect.Type) wildcardClass62);
        boolean boolean65 = typeCircularBuffer49.isFull();
        java.lang.reflect.Type type66 = typeCircularBuffer49.get();
        boolean boolean67 = typeCircularBuffer1.put(type66);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer69 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean70 = typeCircularBuffer69.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer72 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass73 = typeCircularBuffer72.getClass();
        boolean boolean74 = typeCircularBuffer69.put((java.lang.reflect.Type) wildcardClass73);
        java.lang.reflect.Type type75 = typeCircularBuffer69.get();
        java.lang.Object obj76 = new java.lang.Object();
        java.lang.Class<?> wildcardClass77 = obj76.getClass();
        boolean boolean78 = typeCircularBuffer69.put((java.lang.reflect.Type) wildcardClass77);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer80 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean81 = typeCircularBuffer80.isEmpty();
        java.lang.reflect.Type type82 = typeCircularBuffer80.get();
        java.lang.reflect.Type type83 = typeCircularBuffer80.get();
        java.lang.reflect.Type type84 = typeCircularBuffer80.get();
        boolean boolean85 = typeCircularBuffer80.isFull();
        java.lang.reflect.Type type86 = typeCircularBuffer80.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer88 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean89 = typeCircularBuffer88.isEmpty();
        java.lang.Class<?> wildcardClass90 = typeCircularBuffer88.getClass();
        boolean boolean91 = typeCircularBuffer80.put((java.lang.reflect.Type) wildcardClass90);
        boolean boolean92 = typeCircularBuffer69.put((java.lang.reflect.Type) wildcardClass90);
        java.lang.reflect.Type type93 = typeCircularBuffer69.get();
        boolean boolean94 = typeCircularBuffer1.put(type93);
        boolean boolean95 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(type20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(type39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNull(type82);
        org.junit.Assert.assertNull(type83);
        org.junit.Assert.assertNull(type84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNull(type86);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(type93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
    }

    @Test
    public void test0909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0909");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        boolean boolean7 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        java.lang.reflect.Type type12 = typeCircularBuffer10.get();
        java.lang.reflect.Type type13 = typeCircularBuffer10.get();
        java.lang.reflect.Type type14 = typeCircularBuffer10.get();
        boolean boolean15 = typeCircularBuffer10.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean18 = typeCircularBuffer17.isFull();
        java.lang.reflect.Type type19 = typeCircularBuffer17.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean22 = typeCircularBuffer21.isEmpty();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass24);
        java.lang.Class<?> wildcardClass26 = typeCircularBuffer21.getClass();
        boolean boolean27 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass26);
        boolean boolean28 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass26);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '#');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean35 = typeCircularBuffer34.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass38 = typeCircularBuffer37.getClass();
        boolean boolean39 = typeCircularBuffer34.put((java.lang.reflect.Type) wildcardClass38);
        java.lang.reflect.Type type40 = typeCircularBuffer34.get();
        boolean boolean41 = typeCircularBuffer32.put(type40);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean46 = typeCircularBuffer45.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass49 = typeCircularBuffer48.getClass();
        boolean boolean50 = typeCircularBuffer45.put((java.lang.reflect.Type) wildcardClass49);
        java.lang.reflect.Type type51 = typeCircularBuffer45.get();
        boolean boolean52 = typeCircularBuffer43.put(type51);
        java.lang.Class<?> wildcardClass53 = typeCircularBuffer43.getClass();
        boolean boolean54 = typeCircularBuffer32.put((java.lang.reflect.Type) wildcardClass53);
        boolean boolean55 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass53);
        boolean boolean56 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass53);
        java.lang.reflect.Type type57 = typeCircularBuffer10.get();
        java.lang.reflect.Type type58 = typeCircularBuffer10.get();
        java.lang.reflect.Type type59 = typeCircularBuffer10.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer61 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean62 = typeCircularBuffer61.isFull();
        java.lang.reflect.Type type63 = typeCircularBuffer61.get();
        boolean boolean64 = typeCircularBuffer61.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer66 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean67 = typeCircularBuffer66.isEmpty();
        java.lang.Class<?> wildcardClass68 = typeCircularBuffer66.getClass();
        boolean boolean69 = typeCircularBuffer61.put((java.lang.reflect.Type) wildcardClass68);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer71 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 1);
        boolean boolean72 = typeCircularBuffer71.isEmpty();
        boolean boolean73 = typeCircularBuffer71.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer75 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type76 = typeCircularBuffer75.get();
        boolean boolean77 = typeCircularBuffer75.isFull();
        boolean boolean78 = typeCircularBuffer75.isFull();
        boolean boolean79 = typeCircularBuffer75.isEmpty();
        java.lang.reflect.Type type80 = typeCircularBuffer75.get();
        java.lang.Class<?> wildcardClass81 = typeCircularBuffer75.getClass();
        boolean boolean82 = typeCircularBuffer71.put((java.lang.reflect.Type) wildcardClass81);
        boolean boolean83 = typeCircularBuffer61.put((java.lang.reflect.Type) wildcardClass81);
        java.lang.Class<?> wildcardClass84 = typeCircularBuffer61.getClass();
        boolean boolean85 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass84);
        java.lang.reflect.Type type86 = typeCircularBuffer10.get();
        boolean boolean87 = typeCircularBuffer1.put(type86);
        boolean boolean88 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(type12);
        org.junit.Assert.assertNull(type13);
        org.junit.Assert.assertNull(type14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(type19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNull(type58);
        org.junit.Assert.assertNull(type59);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(type63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNull(type76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNull(type80);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(type86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
    }

    @Test
    public void test0910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0910");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer17.getClass();
        boolean boolean19 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass18);
        java.lang.reflect.Type type20 = typeCircularBuffer14.get();
        boolean boolean21 = typeCircularBuffer12.put(type20);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer12.getClass();
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass22);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean26 = typeCircularBuffer25.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass29 = typeCircularBuffer28.getClass();
        boolean boolean30 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass29);
        java.lang.reflect.Type type31 = typeCircularBuffer25.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type34 = typeCircularBuffer33.get();
        boolean boolean35 = typeCircularBuffer33.isFull();
        boolean boolean36 = typeCircularBuffer33.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean39 = typeCircularBuffer38.isEmpty();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        boolean boolean42 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass41);
        java.lang.Class<?> wildcardClass43 = typeCircularBuffer38.getClass();
        boolean boolean44 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass43);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean47 = typeCircularBuffer46.isEmpty();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        boolean boolean50 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass49);
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer46.getClass();
        boolean boolean52 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean53 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass51);
        java.lang.reflect.Type type54 = typeCircularBuffer25.get();
        boolean boolean55 = typeCircularBuffer1.put(type54);
        java.lang.Class<?> wildcardClass56 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNull(type34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test0911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0911");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>((int) '4');
        java.lang.Class<?> wildcardClass9 = wildcardClassOfFieldCircularBuffer8.getClass();
        boolean boolean10 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.reflect.Type type11 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass12 = type11.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0912");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        java.lang.reflect.Type type11 = typeCircularBuffer1.get();
        java.lang.reflect.Type type12 = null;
        boolean boolean13 = typeCircularBuffer1.put(type12);
        boolean boolean14 = typeCircularBuffer1.isFull();
        boolean boolean15 = typeCircularBuffer1.isFull();
        boolean boolean16 = typeCircularBuffer1.isFull();
        boolean boolean17 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test0913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0913");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type24 = typeCircularBuffer1.get();
        boolean boolean25 = typeCircularBuffer1.isEmpty();
        boolean boolean26 = typeCircularBuffer1.isEmpty();
        boolean boolean27 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0914");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        boolean boolean6 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        boolean boolean8 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type11 = typeCircularBuffer10.get();
        boolean boolean12 = typeCircularBuffer10.isFull();
        boolean boolean13 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean16 = typeCircularBuffer15.isEmpty();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        boolean boolean19 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass18);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer15.getClass();
        boolean boolean21 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type22 = typeCircularBuffer10.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean27 = typeCircularBuffer26.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass30 = typeCircularBuffer29.getClass();
        boolean boolean31 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass30);
        java.lang.reflect.Type type32 = typeCircularBuffer26.get();
        boolean boolean33 = typeCircularBuffer24.put(type32);
        boolean boolean34 = typeCircularBuffer10.put(type32);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer10.getClass();
        boolean boolean36 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass35);
        java.lang.Class<?> wildcardClass37 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(type11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test0915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0915");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean16 = typeCircularBuffer15.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer18.getClass();
        boolean boolean20 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass19);
        java.lang.reflect.Type type21 = typeCircularBuffer15.get();
        boolean boolean22 = typeCircularBuffer13.put(type21);
        boolean boolean23 = typeCircularBuffer13.isFull();
        java.lang.reflect.Type type24 = typeCircularBuffer13.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean27 = typeCircularBuffer26.isEmpty();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        boolean boolean30 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass29);
        boolean boolean31 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass29);
        boolean boolean32 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass29);
        boolean boolean33 = typeCircularBuffer6.isFull();
        boolean boolean34 = typeCircularBuffer6.isFull();
        boolean boolean35 = typeCircularBuffer6.isEmpty();
        boolean boolean36 = typeCircularBuffer6.isFull();
        java.lang.reflect.Type type37 = typeCircularBuffer6.get();
        boolean boolean38 = typeCircularBuffer1.put(type37);
        boolean boolean39 = typeCircularBuffer1.isFull();
        boolean boolean40 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test0916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0916");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        boolean boolean7 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean19 = typeCircularBuffer18.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer21.getClass();
        boolean boolean23 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass22);
        java.lang.reflect.Type type24 = typeCircularBuffer18.get();
        boolean boolean25 = typeCircularBuffer16.put(type24);
        boolean boolean26 = typeCircularBuffer16.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer31.getClass();
        boolean boolean33 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass32);
        java.lang.reflect.Type type34 = typeCircularBuffer28.get();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        boolean boolean37 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean38 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean39 = typeCircularBuffer16.isEmpty();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        boolean boolean42 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean43 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean44 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass41);
        java.lang.reflect.Type type45 = typeCircularBuffer1.get();
        java.lang.reflect.Type type46 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNull(type46);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test0917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0917");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        java.lang.reflect.Type type10 = typeCircularBuffer1.get();
        boolean boolean11 = typeCircularBuffer1.isEmpty();
        boolean boolean12 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test0918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0918");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean9 = typeCircularBuffer8.isFull();
        java.lang.reflect.Type type10 = typeCircularBuffer8.get();
        boolean boolean11 = typeCircularBuffer8.isEmpty();
        boolean boolean12 = typeCircularBuffer8.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Class<?> wildcardClass16 = typeCircularBuffer14.getClass();
        boolean boolean17 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass16);
        boolean boolean18 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass16);
        java.lang.reflect.Type type19 = typeCircularBuffer1.get();
        java.lang.reflect.Type type20 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNull(type20);
    }

    @Test
    public void test0919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0919");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        java.lang.reflect.Type type12 = typeCircularBuffer6.get();
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        boolean boolean15 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass14);
        boolean boolean16 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass14);
        boolean boolean17 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean22 = typeCircularBuffer21.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass25 = typeCircularBuffer24.getClass();
        boolean boolean26 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.reflect.Type type27 = typeCircularBuffer21.get();
        boolean boolean28 = typeCircularBuffer19.put(type27);
        boolean boolean29 = typeCircularBuffer19.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer34.getClass();
        boolean boolean36 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass35);
        java.lang.reflect.Type type37 = typeCircularBuffer31.get();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        boolean boolean40 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass39);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean43 = typeCircularBuffer42.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass46 = typeCircularBuffer45.getClass();
        boolean boolean47 = typeCircularBuffer42.put((java.lang.reflect.Type) wildcardClass46);
        java.lang.Class<?> wildcardClass48 = typeCircularBuffer42.getClass();
        boolean boolean49 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass48);
        boolean boolean50 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass48);
        boolean boolean51 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass48);
        boolean boolean52 = typeCircularBuffer1.isFull();
        boolean boolean53 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
    }

    @Test
    public void test0920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0920");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean5 = typeCircularBuffer4.isFull();
        boolean boolean6 = typeCircularBuffer4.isEmpty();
        boolean boolean7 = typeCircularBuffer4.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        java.lang.reflect.Type type15 = typeCircularBuffer9.get();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass17);
        boolean boolean19 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass17);
        boolean boolean20 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass17);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass23 = typeCircularBuffer22.getClass();
        boolean boolean24 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass23);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean27 = typeCircularBuffer26.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer34.getClass();
        boolean boolean36 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass35);
        java.lang.reflect.Type type37 = typeCircularBuffer31.get();
        boolean boolean38 = typeCircularBuffer29.put(type37);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean43 = typeCircularBuffer42.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass46 = typeCircularBuffer45.getClass();
        boolean boolean47 = typeCircularBuffer42.put((java.lang.reflect.Type) wildcardClass46);
        java.lang.reflect.Type type48 = typeCircularBuffer42.get();
        boolean boolean49 = typeCircularBuffer40.put(type48);
        java.lang.Class<?> wildcardClass50 = typeCircularBuffer40.getClass();
        boolean boolean51 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass50);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer53 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean54 = typeCircularBuffer53.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer56 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass57 = typeCircularBuffer56.getClass();
        boolean boolean58 = typeCircularBuffer53.put((java.lang.reflect.Type) wildcardClass57);
        java.lang.reflect.Type type59 = typeCircularBuffer53.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer61 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type62 = typeCircularBuffer61.get();
        boolean boolean63 = typeCircularBuffer61.isFull();
        boolean boolean64 = typeCircularBuffer61.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer66 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean67 = typeCircularBuffer66.isEmpty();
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        boolean boolean70 = typeCircularBuffer66.put((java.lang.reflect.Type) wildcardClass69);
        java.lang.Class<?> wildcardClass71 = typeCircularBuffer66.getClass();
        boolean boolean72 = typeCircularBuffer61.put((java.lang.reflect.Type) wildcardClass71);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer74 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean75 = typeCircularBuffer74.isEmpty();
        java.lang.Object obj76 = new java.lang.Object();
        java.lang.Class<?> wildcardClass77 = obj76.getClass();
        boolean boolean78 = typeCircularBuffer74.put((java.lang.reflect.Type) wildcardClass77);
        java.lang.Class<?> wildcardClass79 = typeCircularBuffer74.getClass();
        boolean boolean80 = typeCircularBuffer61.put((java.lang.reflect.Type) wildcardClass79);
        boolean boolean81 = typeCircularBuffer53.put((java.lang.reflect.Type) wildcardClass79);
        java.lang.reflect.Type type82 = typeCircularBuffer53.get();
        boolean boolean83 = typeCircularBuffer29.put(type82);
        boolean boolean84 = typeCircularBuffer26.put(type82);
        boolean boolean85 = typeCircularBuffer1.put(type82);
        java.lang.Class<?> wildcardClass86 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNull(type62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test0921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0921");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        java.lang.reflect.Type type12 = typeCircularBuffer6.get();
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        boolean boolean15 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass14);
        boolean boolean16 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass14);
        boolean boolean17 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type18 = typeCircularBuffer1.get();
        java.lang.reflect.Type type19 = null;
        boolean boolean20 = typeCircularBuffer1.put(type19);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type23 = typeCircularBuffer22.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean28 = typeCircularBuffer27.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass31 = typeCircularBuffer30.getClass();
        boolean boolean32 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass31);
        java.lang.reflect.Type type33 = typeCircularBuffer27.get();
        boolean boolean34 = typeCircularBuffer25.put(type33);
        boolean boolean35 = typeCircularBuffer25.isFull();
        java.lang.reflect.Type type36 = typeCircularBuffer25.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean39 = typeCircularBuffer38.isEmpty();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        boolean boolean42 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean43 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean44 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean45 = typeCircularBuffer22.isEmpty();
        boolean boolean46 = typeCircularBuffer22.isFull();
        boolean boolean47 = typeCircularBuffer22.isEmpty();
        java.lang.Class<?> wildcardClass48 = typeCircularBuffer22.getClass();
        boolean boolean49 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass48);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean52 = typeCircularBuffer51.isEmpty();
        boolean boolean53 = typeCircularBuffer51.isFull();
        java.lang.reflect.Type type54 = typeCircularBuffer51.get();
        boolean boolean55 = typeCircularBuffer51.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer57 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer59 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean60 = typeCircularBuffer59.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer62 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass63 = typeCircularBuffer62.getClass();
        boolean boolean64 = typeCircularBuffer59.put((java.lang.reflect.Type) wildcardClass63);
        java.lang.reflect.Type type65 = typeCircularBuffer59.get();
        boolean boolean66 = typeCircularBuffer57.put(type65);
        boolean boolean67 = typeCircularBuffer57.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer69 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean70 = typeCircularBuffer69.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer72 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass73 = typeCircularBuffer72.getClass();
        boolean boolean74 = typeCircularBuffer69.put((java.lang.reflect.Type) wildcardClass73);
        java.lang.reflect.Type type75 = typeCircularBuffer69.get();
        java.lang.Object obj76 = new java.lang.Object();
        java.lang.Class<?> wildcardClass77 = obj76.getClass();
        boolean boolean78 = typeCircularBuffer69.put((java.lang.reflect.Type) wildcardClass77);
        boolean boolean79 = typeCircularBuffer57.put((java.lang.reflect.Type) wildcardClass77);
        boolean boolean80 = typeCircularBuffer57.isEmpty();
        java.lang.Object obj81 = new java.lang.Object();
        java.lang.Class<?> wildcardClass82 = obj81.getClass();
        boolean boolean83 = typeCircularBuffer57.put((java.lang.reflect.Type) wildcardClass82);
        boolean boolean84 = typeCircularBuffer51.put((java.lang.reflect.Type) wildcardClass82);
        java.lang.Class<?> wildcardClass85 = typeCircularBuffer51.getClass();
        boolean boolean86 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass85);
        boolean boolean87 = typeCircularBuffer1.isEmpty();
        boolean boolean88 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(type23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(type54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test0922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0922");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean9 = typeCircularBuffer8.isFull();
        java.lang.reflect.Type type10 = typeCircularBuffer8.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean13 = typeCircularBuffer12.isEmpty();
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        boolean boolean16 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass15);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer12.getClass();
        boolean boolean18 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass17);
        boolean boolean19 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type20 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass26 = typeCircularBuffer25.getClass();
        boolean boolean27 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass26);
        java.lang.reflect.Type type28 = typeCircularBuffer22.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type31 = typeCircularBuffer30.get();
        boolean boolean32 = typeCircularBuffer30.isFull();
        boolean boolean33 = typeCircularBuffer30.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean36 = typeCircularBuffer35.isEmpty();
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        boolean boolean39 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass38);
        java.lang.Class<?> wildcardClass40 = typeCircularBuffer35.getClass();
        boolean boolean41 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass40);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        boolean boolean47 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass46);
        java.lang.Class<?> wildcardClass48 = typeCircularBuffer43.getClass();
        boolean boolean49 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass48);
        boolean boolean50 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass48);
        java.lang.reflect.Type type51 = typeCircularBuffer22.get();
        java.lang.reflect.Type type52 = typeCircularBuffer22.get();
        boolean boolean53 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer55 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass56 = typeCircularBuffer55.getClass();
        boolean boolean57 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass56);
        boolean boolean58 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass56);
        boolean boolean59 = typeCircularBuffer1.isFull();
        boolean boolean60 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNull(type31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNull(type52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test0923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0923");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean9 = typeCircularBuffer8.isFull();
        java.lang.reflect.Type type10 = typeCircularBuffer8.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean13 = typeCircularBuffer12.isEmpty();
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        boolean boolean16 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass15);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer12.getClass();
        boolean boolean18 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass17);
        boolean boolean19 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass17);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '#');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean26 = typeCircularBuffer25.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass29 = typeCircularBuffer28.getClass();
        boolean boolean30 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass29);
        java.lang.reflect.Type type31 = typeCircularBuffer25.get();
        boolean boolean32 = typeCircularBuffer23.put(type31);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean37 = typeCircularBuffer36.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass40 = typeCircularBuffer39.getClass();
        boolean boolean41 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass40);
        java.lang.reflect.Type type42 = typeCircularBuffer36.get();
        boolean boolean43 = typeCircularBuffer34.put(type42);
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer34.getClass();
        boolean boolean45 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean46 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean47 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass44);
        java.lang.reflect.Type type48 = typeCircularBuffer1.get();
        java.lang.reflect.Type type49 = typeCircularBuffer1.get();
        java.lang.reflect.Type type50 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer52 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean53 = typeCircularBuffer52.isFull();
        java.lang.reflect.Type type54 = typeCircularBuffer52.get();
        boolean boolean55 = typeCircularBuffer52.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer57 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean58 = typeCircularBuffer57.isEmpty();
        java.lang.Class<?> wildcardClass59 = typeCircularBuffer57.getClass();
        boolean boolean60 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass59);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer62 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 1);
        boolean boolean63 = typeCircularBuffer62.isEmpty();
        boolean boolean64 = typeCircularBuffer62.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer66 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type67 = typeCircularBuffer66.get();
        boolean boolean68 = typeCircularBuffer66.isFull();
        boolean boolean69 = typeCircularBuffer66.isFull();
        boolean boolean70 = typeCircularBuffer66.isEmpty();
        java.lang.reflect.Type type71 = typeCircularBuffer66.get();
        java.lang.Class<?> wildcardClass72 = typeCircularBuffer66.getClass();
        boolean boolean73 = typeCircularBuffer62.put((java.lang.reflect.Type) wildcardClass72);
        boolean boolean74 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass72);
        java.lang.Class<?> wildcardClass75 = typeCircularBuffer52.getClass();
        boolean boolean76 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass75);
        java.lang.reflect.Type type77 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass78 = type77.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNull(type49);
        org.junit.Assert.assertNull(type50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(type54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(type67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(type71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test0924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0924");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        boolean boolean8 = typeCircularBuffer1.isEmpty();
        boolean boolean9 = typeCircularBuffer1.isFull();
        boolean boolean10 = typeCircularBuffer1.isEmpty();
        boolean boolean11 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass12 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0925");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isFull();
        boolean boolean8 = typeCircularBuffer1.isFull();
        boolean boolean9 = typeCircularBuffer1.isEmpty();
        boolean boolean10 = typeCircularBuffer1.isFull();
        boolean boolean11 = typeCircularBuffer1.isFull();
        boolean boolean12 = typeCircularBuffer1.isFull();
        boolean boolean13 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type14 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass15 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(type14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0926");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        boolean boolean6 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        boolean boolean8 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer10.get();
        boolean boolean17 = typeCircularBuffer10.isFull();
        java.lang.reflect.Type type18 = typeCircularBuffer10.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean21 = typeCircularBuffer20.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer23.getClass();
        boolean boolean25 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass24);
        java.lang.reflect.Type type26 = typeCircularBuffer20.get();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        boolean boolean29 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass28);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer34.getClass();
        boolean boolean36 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass35);
        java.lang.Class<?> wildcardClass37 = typeCircularBuffer31.getClass();
        boolean boolean38 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass37);
        boolean boolean39 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass37);
        boolean boolean40 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass37);
        boolean boolean41 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass42 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(type18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test0927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0927");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        java.lang.reflect.Type type12 = typeCircularBuffer6.get();
        boolean boolean13 = typeCircularBuffer4.put(type12);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer20.getClass();
        boolean boolean22 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type23 = typeCircularBuffer17.get();
        boolean boolean24 = typeCircularBuffer15.put(type23);
        java.lang.Class<?> wildcardClass25 = typeCircularBuffer15.getClass();
        boolean boolean26 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass25);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer31.getClass();
        boolean boolean33 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass32);
        java.lang.reflect.Type type34 = typeCircularBuffer28.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type37 = typeCircularBuffer36.get();
        boolean boolean38 = typeCircularBuffer36.isFull();
        boolean boolean39 = typeCircularBuffer36.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean42 = typeCircularBuffer41.isEmpty();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        boolean boolean45 = typeCircularBuffer41.put((java.lang.reflect.Type) wildcardClass44);
        java.lang.Class<?> wildcardClass46 = typeCircularBuffer41.getClass();
        boolean boolean47 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass46);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer49 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean50 = typeCircularBuffer49.isEmpty();
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        boolean boolean53 = typeCircularBuffer49.put((java.lang.reflect.Type) wildcardClass52);
        java.lang.Class<?> wildcardClass54 = typeCircularBuffer49.getClass();
        boolean boolean55 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean56 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass54);
        java.lang.reflect.Type type57 = typeCircularBuffer28.get();
        boolean boolean58 = typeCircularBuffer4.put(type57);
        boolean boolean59 = typeCircularBuffer1.put(type57);
        boolean boolean60 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass61 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNull(type37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test0928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0928");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type12 = typeCircularBuffer1.get();
        boolean boolean13 = typeCircularBuffer1.isEmpty();
        boolean boolean14 = typeCircularBuffer1.isEmpty();
        boolean boolean15 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type18 = typeCircularBuffer17.get();
        boolean boolean19 = typeCircularBuffer17.isFull();
        boolean boolean20 = typeCircularBuffer17.isFull();
        boolean boolean21 = typeCircularBuffer17.isFull();
        boolean boolean22 = typeCircularBuffer17.isEmpty();
        boolean boolean23 = typeCircularBuffer17.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type26 = typeCircularBuffer25.get();
        boolean boolean27 = typeCircularBuffer25.isFull();
        boolean boolean28 = typeCircularBuffer25.isFull();
        boolean boolean29 = typeCircularBuffer25.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean34 = typeCircularBuffer33.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass37 = typeCircularBuffer36.getClass();
        boolean boolean38 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass37);
        java.lang.reflect.Type type39 = typeCircularBuffer33.get();
        boolean boolean40 = typeCircularBuffer31.put(type39);
        boolean boolean41 = typeCircularBuffer31.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer46.getClass();
        boolean boolean48 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass47);
        java.lang.reflect.Type type49 = typeCircularBuffer43.get();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        boolean boolean52 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean53 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass51);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer55 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean56 = typeCircularBuffer55.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer58 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass59 = typeCircularBuffer58.getClass();
        boolean boolean60 = typeCircularBuffer55.put((java.lang.reflect.Type) wildcardClass59);
        java.lang.reflect.Type type61 = typeCircularBuffer55.get();
        boolean boolean62 = typeCircularBuffer31.put(type61);
        java.lang.reflect.Type type63 = typeCircularBuffer31.get();
        boolean boolean64 = typeCircularBuffer25.put(type63);
        boolean boolean65 = typeCircularBuffer17.put(type63);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.invoke.TypeDescriptor> typeDescriptorCircularBuffer67 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.invoke.TypeDescriptor>(10);
        java.lang.Class<?> wildcardClass68 = typeDescriptorCircularBuffer67.getClass();
        boolean boolean69 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass68);
        boolean boolean70 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(type18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(type26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
    }

    @Test
    public void test0929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0929");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        boolean boolean8 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean12 = typeCircularBuffer11.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass15 = typeCircularBuffer14.getClass();
        boolean boolean16 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass15);
        java.lang.reflect.Type type17 = typeCircularBuffer11.get();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        boolean boolean20 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass19);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass26 = typeCircularBuffer25.getClass();
        boolean boolean27 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass26);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer22.getClass();
        boolean boolean29 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass28);
        boolean boolean30 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.reflect.Type type31 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean34 = typeCircularBuffer33.isEmpty();
        java.lang.reflect.Type type35 = typeCircularBuffer33.get();
        java.lang.reflect.Type type36 = typeCircularBuffer33.get();
        java.lang.reflect.Type type37 = typeCircularBuffer33.get();
        boolean boolean38 = typeCircularBuffer33.isFull();
        java.lang.reflect.Type type39 = typeCircularBuffer33.get();
        boolean boolean40 = typeCircularBuffer33.isEmpty();
        java.lang.Class<?> wildcardClass41 = typeCircularBuffer33.getClass();
        boolean boolean42 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean43 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(type35);
        org.junit.Assert.assertNull(type36);
        org.junit.Assert.assertNull(type37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(type39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test0930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0930");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean7 = typeCircularBuffer6.isFull();
        java.lang.reflect.Type type8 = typeCircularBuffer6.get();
        boolean boolean9 = typeCircularBuffer6.isEmpty();
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer6.getClass();
        boolean boolean11 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass10);
        boolean boolean12 = typeCircularBuffer1.isEmpty();
        boolean boolean13 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test0931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0931");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        boolean boolean7 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.GenericDeclaration> genericDeclarationCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.GenericDeclaration>((int) (short) 100);
        java.lang.Class<?> wildcardClass10 = genericDeclarationCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass10);
        java.lang.reflect.Type type12 = typeCircularBuffer1.get();
        java.lang.reflect.Type type13 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNull(type13);
    }

    @Test
    public void test0932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0932");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type12 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        boolean boolean19 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass17);
        boolean boolean20 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type21 = typeCircularBuffer1.get();
        boolean boolean22 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type23 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(type23);
    }

    @Test
    public void test0933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0933");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        boolean boolean7 = typeCircularBuffer1.isFull();
        boolean boolean8 = typeCircularBuffer1.isFull();
        boolean boolean9 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean12 = typeCircularBuffer11.isEmpty();
        boolean boolean13 = typeCircularBuffer11.isFull();
        boolean boolean14 = typeCircularBuffer11.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer19.getClass();
        boolean boolean21 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type22 = typeCircularBuffer16.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type25 = typeCircularBuffer24.get();
        boolean boolean26 = typeCircularBuffer24.isFull();
        boolean boolean27 = typeCircularBuffer24.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean30 = typeCircularBuffer29.isEmpty();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        boolean boolean33 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass32);
        java.lang.Class<?> wildcardClass34 = typeCircularBuffer29.getClass();
        boolean boolean35 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass34);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean38 = typeCircularBuffer37.isEmpty();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        boolean boolean41 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass40);
        java.lang.Class<?> wildcardClass42 = typeCircularBuffer37.getClass();
        boolean boolean43 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass42);
        boolean boolean44 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass42);
        boolean boolean45 = typeCircularBuffer16.isEmpty();
        boolean boolean46 = typeCircularBuffer16.isFull();
        java.lang.reflect.Type type47 = typeCircularBuffer16.get();
        boolean boolean48 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean51 = typeCircularBuffer50.isFull();
        boolean boolean52 = typeCircularBuffer50.isEmpty();
        java.lang.reflect.Type type53 = typeCircularBuffer50.get();
        boolean boolean54 = typeCircularBuffer50.isEmpty();
        boolean boolean55 = typeCircularBuffer50.isEmpty();
        java.lang.Class<?> wildcardClass56 = typeCircularBuffer50.getClass();
        boolean boolean57 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass56);
        boolean boolean58 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass56);
        boolean boolean59 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass56);
        boolean boolean60 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNull(type25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(type53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test0934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0934");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean7 = typeCircularBuffer6.isFull();
        boolean boolean8 = typeCircularBuffer6.isEmpty();
        java.lang.reflect.Type type9 = typeCircularBuffer6.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        boolean boolean20 = typeCircularBuffer11.put(type19);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer11.getClass();
        boolean boolean22 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass21);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(10);
        java.lang.Class<?> wildcardClass25 = typeCircularBuffer24.getClass();
        boolean boolean26 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass25);
        boolean boolean27 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0935");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test0936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0936");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer17.getClass();
        boolean boolean19 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass18);
        java.lang.reflect.Type type20 = typeCircularBuffer14.get();
        boolean boolean21 = typeCircularBuffer12.put(type20);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer12.getClass();
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass22);
        boolean boolean24 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type25 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 0);
        boolean boolean28 = typeCircularBuffer27.isFull();
        java.lang.reflect.Type type29 = typeCircularBuffer27.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean32 = typeCircularBuffer31.isFull();
        java.lang.reflect.Type type33 = typeCircularBuffer31.get();
        boolean boolean34 = typeCircularBuffer31.isFull();
        java.lang.reflect.Type type35 = typeCircularBuffer31.get();
        boolean boolean36 = typeCircularBuffer31.isFull();
        boolean boolean37 = typeCircularBuffer31.isEmpty();
        boolean boolean38 = typeCircularBuffer31.isFull();
        java.lang.Class<?> wildcardClass39 = typeCircularBuffer31.getClass();
        boolean boolean40 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass39);
        boolean boolean41 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass39);
        java.lang.reflect.Type type42 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass43 = type42.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(type29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(type33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(type35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test0937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0937");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        boolean boolean6 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        java.lang.reflect.Type type11 = typeCircularBuffer9.get();
        java.lang.reflect.Type type12 = typeCircularBuffer9.get();
        java.lang.reflect.Type type13 = typeCircularBuffer9.get();
        java.lang.reflect.Type type14 = typeCircularBuffer9.get();
        boolean boolean15 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer20.getClass();
        boolean boolean22 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass21);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean27 = typeCircularBuffer26.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass30 = typeCircularBuffer29.getClass();
        boolean boolean31 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass30);
        java.lang.reflect.Type type32 = typeCircularBuffer26.get();
        boolean boolean33 = typeCircularBuffer24.put(type32);
        boolean boolean34 = typeCircularBuffer24.isFull();
        java.lang.reflect.Type type35 = typeCircularBuffer24.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean38 = typeCircularBuffer37.isEmpty();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        boolean boolean41 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass40);
        boolean boolean42 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass40);
        boolean boolean43 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass40);
        boolean boolean44 = typeCircularBuffer17.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean47 = typeCircularBuffer46.isFull();
        boolean boolean48 = typeCircularBuffer46.isEmpty();
        boolean boolean49 = typeCircularBuffer46.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean52 = typeCircularBuffer51.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer54 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass55 = typeCircularBuffer54.getClass();
        boolean boolean56 = typeCircularBuffer51.put((java.lang.reflect.Type) wildcardClass55);
        java.lang.reflect.Type type57 = typeCircularBuffer51.get();
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        boolean boolean60 = typeCircularBuffer51.put((java.lang.reflect.Type) wildcardClass59);
        boolean boolean61 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass59);
        boolean boolean62 = typeCircularBuffer46.isFull();
        java.lang.reflect.Type type63 = typeCircularBuffer46.get();
        boolean boolean64 = typeCircularBuffer17.put(type63);
        boolean boolean65 = typeCircularBuffer9.put(type63);
        java.lang.Class<?> wildcardClass66 = typeCircularBuffer9.getClass();
        boolean boolean67 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass66);
        java.lang.reflect.Type type68 = typeCircularBuffer1.get();
        boolean boolean69 = typeCircularBuffer1.isFull();
        boolean boolean70 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(type11);
        org.junit.Assert.assertNull(type12);
        org.junit.Assert.assertNull(type13);
        org.junit.Assert.assertNull(type14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
    }

    @Test
    public void test0938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0938");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type4 = typeCircularBuffer3.get();
        boolean boolean5 = typeCircularBuffer3.isFull();
        boolean boolean6 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean9 = typeCircularBuffer8.isEmpty();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer8.getClass();
        boolean boolean14 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass13);
        boolean boolean15 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean18 = typeCircularBuffer17.isFull();
        boolean boolean19 = typeCircularBuffer17.isEmpty();
        java.lang.reflect.Type type20 = typeCircularBuffer17.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean25 = typeCircularBuffer24.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer27.getClass();
        boolean boolean29 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.reflect.Type type30 = typeCircularBuffer24.get();
        boolean boolean31 = typeCircularBuffer22.put(type30);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer22.getClass();
        boolean boolean33 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean35 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean36 = typeCircularBuffer1.isFull();
        boolean boolean37 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean40 = typeCircularBuffer39.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass43 = typeCircularBuffer42.getClass();
        boolean boolean44 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass43);
        java.lang.reflect.Type type45 = typeCircularBuffer39.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type48 = typeCircularBuffer47.get();
        boolean boolean49 = typeCircularBuffer47.isFull();
        boolean boolean50 = typeCircularBuffer47.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer52 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean53 = typeCircularBuffer52.isEmpty();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        boolean boolean56 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass55);
        java.lang.Class<?> wildcardClass57 = typeCircularBuffer52.getClass();
        boolean boolean58 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass57);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer60 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean61 = typeCircularBuffer60.isEmpty();
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        boolean boolean64 = typeCircularBuffer60.put((java.lang.reflect.Type) wildcardClass63);
        java.lang.Class<?> wildcardClass65 = typeCircularBuffer60.getClass();
        boolean boolean66 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass65);
        boolean boolean67 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass65);
        java.lang.reflect.Type type68 = typeCircularBuffer39.get();
        boolean boolean69 = typeCircularBuffer1.put(type68);
        java.lang.reflect.Type type70 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer72 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer74 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean75 = typeCircularBuffer74.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer77 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass78 = typeCircularBuffer77.getClass();
        boolean boolean79 = typeCircularBuffer74.put((java.lang.reflect.Type) wildcardClass78);
        java.lang.reflect.Type type80 = typeCircularBuffer74.get();
        boolean boolean81 = typeCircularBuffer72.put(type80);
        boolean boolean82 = typeCircularBuffer72.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer84 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean85 = typeCircularBuffer84.isEmpty();
        boolean boolean86 = typeCircularBuffer84.isFull();
        java.lang.reflect.Type type87 = typeCircularBuffer84.get();
        boolean boolean88 = typeCircularBuffer84.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer90 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean91 = typeCircularBuffer90.isFull();
        java.lang.Class<?> wildcardClass92 = typeCircularBuffer90.getClass();
        boolean boolean93 = typeCircularBuffer84.put((java.lang.reflect.Type) wildcardClass92);
        boolean boolean94 = typeCircularBuffer72.put((java.lang.reflect.Type) wildcardClass92);
        java.lang.reflect.Type type95 = typeCircularBuffer72.get();
        java.lang.Class<?> wildcardClass96 = typeCircularBuffer72.getClass();
        boolean boolean97 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass96);
        boolean boolean98 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(type20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNull(type48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(type70);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNull(type87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(type95);
        org.junit.Assert.assertNotNull(wildcardClass96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
    }

    @Test
    public void test0939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0939");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        java.lang.reflect.Type type12 = typeCircularBuffer6.get();
        boolean boolean13 = typeCircularBuffer4.put(type12);
        boolean boolean14 = typeCircularBuffer4.isFull();
        java.lang.reflect.Type type15 = typeCircularBuffer4.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        boolean boolean21 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean22 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean24 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type25 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean30 = typeCircularBuffer29.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass33 = typeCircularBuffer32.getClass();
        boolean boolean34 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass33);
        java.lang.reflect.Type type35 = typeCircularBuffer29.get();
        boolean boolean36 = typeCircularBuffer27.put(type35);
        boolean boolean37 = typeCircularBuffer27.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean40 = typeCircularBuffer39.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass43 = typeCircularBuffer42.getClass();
        boolean boolean44 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass43);
        java.lang.reflect.Type type45 = typeCircularBuffer39.get();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        boolean boolean48 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass47);
        boolean boolean49 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass47);
        boolean boolean50 = typeCircularBuffer27.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer52 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type53 = typeCircularBuffer52.get();
        boolean boolean54 = typeCircularBuffer52.isFull();
        boolean boolean55 = typeCircularBuffer52.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer57 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean58 = typeCircularBuffer57.isEmpty();
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        boolean boolean61 = typeCircularBuffer57.put((java.lang.reflect.Type) wildcardClass60);
        java.lang.Class<?> wildcardClass62 = typeCircularBuffer57.getClass();
        boolean boolean63 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass62);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer65 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean66 = typeCircularBuffer65.isEmpty();
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        boolean boolean69 = typeCircularBuffer65.put((java.lang.reflect.Type) wildcardClass68);
        java.lang.Class<?> wildcardClass70 = typeCircularBuffer65.getClass();
        boolean boolean71 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass70);
        boolean boolean72 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass70);
        java.lang.reflect.Type type73 = typeCircularBuffer27.get();
        boolean boolean74 = typeCircularBuffer1.put(type73);
        boolean boolean75 = typeCircularBuffer1.isEmpty();
        boolean boolean76 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass77 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(type53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test0940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0940");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type5 = null;
        boolean boolean6 = typeCircularBuffer1.put(type5);
        boolean boolean7 = typeCircularBuffer1.isFull();
        boolean boolean8 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 10);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type13 = typeCircularBuffer12.get();
        boolean boolean14 = typeCircularBuffer12.isFull();
        java.lang.Class<?> wildcardClass15 = typeCircularBuffer12.getClass();
        boolean boolean16 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass15);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer10.getClass();
        boolean boolean18 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer1.get();
        java.lang.reflect.Type type20 = typeCircularBuffer1.get();
        java.lang.reflect.Type type21 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(type13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(type19);
        org.junit.Assert.assertNull(type20);
        org.junit.Assert.assertNull(type21);
    }

    @Test
    public void test0941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0941");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        java.lang.reflect.Type type11 = typeCircularBuffer1.get();
        java.lang.reflect.Type type12 = null;
        boolean boolean13 = typeCircularBuffer1.put(type12);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type16 = typeCircularBuffer15.get();
        boolean boolean17 = typeCircularBuffer15.isFull();
        boolean boolean18 = typeCircularBuffer15.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean21 = typeCircularBuffer20.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer23.getClass();
        boolean boolean25 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean26 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean27 = typeCircularBuffer15.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) ' ');
        java.lang.reflect.Type type30 = typeCircularBuffer29.get();
        java.lang.Class<?> wildcardClass31 = typeCircularBuffer29.getClass();
        boolean boolean32 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass31);
        boolean boolean33 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass31);
        java.lang.reflect.Type type34 = typeCircularBuffer1.get();
        java.lang.reflect.Type type35 = typeCircularBuffer1.get();
        boolean boolean36 = typeCircularBuffer1.isFull();
        boolean boolean37 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(type30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(type34);
        org.junit.Assert.assertNull(type35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test0942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0942");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean9 = typeCircularBuffer8.isEmpty();
        boolean boolean10 = typeCircularBuffer8.isEmpty();
        boolean boolean11 = typeCircularBuffer8.isEmpty();
        boolean boolean12 = typeCircularBuffer8.isEmpty();
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer8.getClass();
        boolean boolean14 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass13);
        boolean boolean15 = typeCircularBuffer1.isFull();
        boolean boolean16 = typeCircularBuffer1.isFull();
        boolean boolean17 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test0943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0943");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.constant.ConstantDesc> constantDescCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.constant.ConstantDesc>((int) (byte) 1);
    }

    @Test
    public void test0944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0944");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        java.lang.reflect.Type type11 = typeCircularBuffer1.get();
        java.lang.reflect.Type type12 = null;
        boolean boolean13 = typeCircularBuffer1.put(type12);
        boolean boolean14 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type15 = typeCircularBuffer1.get();
        java.lang.reflect.Type type16 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '#');
        boolean boolean19 = typeCircularBuffer18.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 10);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type24 = typeCircularBuffer23.get();
        boolean boolean25 = typeCircularBuffer23.isFull();
        java.lang.Class<?> wildcardClass26 = typeCircularBuffer23.getClass();
        boolean boolean27 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass26);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer21.getClass();
        boolean boolean29 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass28);
        boolean boolean30 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.Class<?> wildcardClass31 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(type15);
        org.junit.Assert.assertNull(type16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0945");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type12 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        boolean boolean19 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass17);
        boolean boolean20 = typeCircularBuffer1.isEmpty();
        boolean boolean21 = typeCircularBuffer1.isEmpty();
        boolean boolean22 = typeCircularBuffer1.isEmpty();
        boolean boolean23 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean28 = typeCircularBuffer27.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass31 = typeCircularBuffer30.getClass();
        boolean boolean32 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass31);
        java.lang.reflect.Type type33 = typeCircularBuffer27.get();
        boolean boolean34 = typeCircularBuffer25.put(type33);
        boolean boolean35 = typeCircularBuffer25.isEmpty();
        boolean boolean36 = typeCircularBuffer25.isFull();
        boolean boolean37 = typeCircularBuffer25.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean40 = typeCircularBuffer39.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass43 = typeCircularBuffer42.getClass();
        boolean boolean44 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass43);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean49 = typeCircularBuffer48.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass52 = typeCircularBuffer51.getClass();
        boolean boolean53 = typeCircularBuffer48.put((java.lang.reflect.Type) wildcardClass52);
        java.lang.reflect.Type type54 = typeCircularBuffer48.get();
        boolean boolean55 = typeCircularBuffer46.put(type54);
        boolean boolean56 = typeCircularBuffer46.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer58 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean59 = typeCircularBuffer58.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer61 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass62 = typeCircularBuffer61.getClass();
        boolean boolean63 = typeCircularBuffer58.put((java.lang.reflect.Type) wildcardClass62);
        java.lang.reflect.Type type64 = typeCircularBuffer58.get();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        boolean boolean67 = typeCircularBuffer58.put((java.lang.reflect.Type) wildcardClass66);
        boolean boolean68 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass66);
        boolean boolean69 = typeCircularBuffer46.isEmpty();
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        boolean boolean72 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass71);
        boolean boolean73 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass71);
        boolean boolean74 = typeCircularBuffer39.isEmpty();
        boolean boolean75 = typeCircularBuffer39.isEmpty();
        boolean boolean76 = typeCircularBuffer39.isEmpty();
        java.lang.Class<?> wildcardClass77 = typeCircularBuffer39.getClass();
        boolean boolean78 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass77);
        boolean boolean79 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass77);
        boolean boolean80 = typeCircularBuffer1.isEmpty();
        boolean boolean81 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test0946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0946");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) ' ');
        java.lang.reflect.Type type10 = typeCircularBuffer9.get();
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer9.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type15 = typeCircularBuffer14.get();
        boolean boolean16 = typeCircularBuffer14.isFull();
        boolean boolean17 = typeCircularBuffer14.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean20 = typeCircularBuffer19.isEmpty();
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        boolean boolean23 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass22);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer19.getClass();
        boolean boolean25 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass24);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean28 = typeCircularBuffer27.isEmpty();
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        boolean boolean31 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass30);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer27.getClass();
        boolean boolean33 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass32);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean38 = typeCircularBuffer37.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass41 = typeCircularBuffer40.getClass();
        boolean boolean42 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass41);
        java.lang.reflect.Type type43 = typeCircularBuffer37.get();
        boolean boolean44 = typeCircularBuffer35.put(type43);
        java.lang.Class<?> wildcardClass45 = typeCircularBuffer35.getClass();
        boolean boolean46 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass45);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type49 = typeCircularBuffer48.get();
        boolean boolean50 = typeCircularBuffer48.isFull();
        boolean boolean51 = typeCircularBuffer48.isFull();
        boolean boolean52 = typeCircularBuffer48.isEmpty();
        boolean boolean53 = typeCircularBuffer48.isEmpty();
        boolean boolean54 = typeCircularBuffer48.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer56 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean57 = typeCircularBuffer56.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer59 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass60 = typeCircularBuffer59.getClass();
        boolean boolean61 = typeCircularBuffer56.put((java.lang.reflect.Type) wildcardClass60);
        java.lang.reflect.Type type62 = null;
        boolean boolean63 = typeCircularBuffer56.put(type62);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer65 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer67 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean68 = typeCircularBuffer67.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer70 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass71 = typeCircularBuffer70.getClass();
        boolean boolean72 = typeCircularBuffer67.put((java.lang.reflect.Type) wildcardClass71);
        java.lang.reflect.Type type73 = typeCircularBuffer67.get();
        java.lang.Class<?> wildcardClass74 = typeCircularBuffer67.getClass();
        boolean boolean75 = typeCircularBuffer65.put((java.lang.reflect.Type) wildcardClass74);
        boolean boolean76 = typeCircularBuffer56.put((java.lang.reflect.Type) wildcardClass74);
        boolean boolean77 = typeCircularBuffer48.put((java.lang.reflect.Type) wildcardClass74);
        boolean boolean78 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass74);
        boolean boolean79 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass74);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer81 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean82 = typeCircularBuffer81.isFull();
        java.lang.reflect.Type type83 = typeCircularBuffer81.get();
        boolean boolean84 = typeCircularBuffer81.isEmpty();
        boolean boolean85 = typeCircularBuffer81.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer87 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        boolean boolean88 = typeCircularBuffer87.isEmpty();
        java.lang.Class<?> wildcardClass89 = typeCircularBuffer87.getClass();
        boolean boolean90 = typeCircularBuffer81.put((java.lang.reflect.Type) wildcardClass89);
        boolean boolean91 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass89);
        boolean boolean92 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(type15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(type49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNull(type83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test0947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0947");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type12 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        boolean boolean19 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass17);
        boolean boolean20 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type21 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        boolean boolean24 = typeCircularBuffer23.isEmpty();
        boolean boolean25 = typeCircularBuffer23.isEmpty();
        boolean boolean26 = typeCircularBuffer23.isFull();
        java.lang.reflect.Type type27 = typeCircularBuffer23.get();
        boolean boolean28 = typeCircularBuffer23.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean33 = typeCircularBuffer32.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer35.getClass();
        boolean boolean37 = typeCircularBuffer32.put((java.lang.reflect.Type) wildcardClass36);
        java.lang.reflect.Type type38 = typeCircularBuffer32.get();
        boolean boolean39 = typeCircularBuffer30.put(type38);
        boolean boolean40 = typeCircularBuffer30.isFull();
        java.lang.reflect.Type type41 = typeCircularBuffer30.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean46 = typeCircularBuffer45.isFull();
        boolean boolean47 = typeCircularBuffer45.isEmpty();
        java.lang.reflect.Type type48 = typeCircularBuffer45.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer52 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean53 = typeCircularBuffer52.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer55 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass56 = typeCircularBuffer55.getClass();
        boolean boolean57 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass56);
        java.lang.reflect.Type type58 = typeCircularBuffer52.get();
        boolean boolean59 = typeCircularBuffer50.put(type58);
        java.lang.Class<?> wildcardClass60 = typeCircularBuffer50.getClass();
        boolean boolean61 = typeCircularBuffer45.put((java.lang.reflect.Type) wildcardClass60);
        boolean boolean62 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass60);
        boolean boolean63 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass60);
        boolean boolean64 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass60);
        boolean boolean65 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass60);
        boolean boolean66 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type67 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(type48);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(type67);
    }

    @Test
    public void test0948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0948");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        boolean boolean5 = typeCircularBuffer1.isFull();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        boolean boolean8 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test0949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0949");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass9);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean13 = typeCircularBuffer12.isEmpty();
        java.lang.reflect.Type type14 = typeCircularBuffer12.get();
        java.lang.reflect.Type type15 = typeCircularBuffer12.get();
        java.lang.reflect.Type type16 = typeCircularBuffer12.get();
        boolean boolean17 = typeCircularBuffer12.isFull();
        java.lang.reflect.Type type18 = typeCircularBuffer12.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean21 = typeCircularBuffer20.isEmpty();
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer20.getClass();
        boolean boolean23 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass22);
        boolean boolean24 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass22);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer31.getClass();
        boolean boolean33 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass32);
        java.lang.reflect.Type type34 = typeCircularBuffer28.get();
        boolean boolean35 = typeCircularBuffer26.put(type34);
        boolean boolean36 = typeCircularBuffer26.isFull();
        java.lang.reflect.Type type37 = typeCircularBuffer26.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean40 = typeCircularBuffer39.isEmpty();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        boolean boolean43 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass42);
        boolean boolean44 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass42);
        java.lang.Class<?> wildcardClass45 = typeCircularBuffer26.getClass();
        boolean boolean46 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass45);
        java.lang.reflect.Type type47 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer49 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean50 = typeCircularBuffer49.isFull();
        java.lang.reflect.Type type51 = typeCircularBuffer49.get();
        boolean boolean52 = typeCircularBuffer49.isFull();
        java.lang.reflect.Type type53 = typeCircularBuffer49.get();
        boolean boolean54 = typeCircularBuffer49.isFull();
        boolean boolean55 = typeCircularBuffer49.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer57 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean58 = typeCircularBuffer57.isFull();
        boolean boolean59 = typeCircularBuffer57.isEmpty();
        java.lang.reflect.Type type60 = typeCircularBuffer57.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer62 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer64 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean65 = typeCircularBuffer64.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer67 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass68 = typeCircularBuffer67.getClass();
        boolean boolean69 = typeCircularBuffer64.put((java.lang.reflect.Type) wildcardClass68);
        java.lang.reflect.Type type70 = typeCircularBuffer64.get();
        boolean boolean71 = typeCircularBuffer62.put(type70);
        java.lang.Class<?> wildcardClass72 = typeCircularBuffer62.getClass();
        boolean boolean73 = typeCircularBuffer57.put((java.lang.reflect.Type) wildcardClass72);
        boolean boolean74 = typeCircularBuffer49.put((java.lang.reflect.Type) wildcardClass72);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer76 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) ' ');
        java.lang.Class<?> wildcardClass77 = typeCircularBuffer76.getClass();
        boolean boolean78 = typeCircularBuffer49.put((java.lang.reflect.Type) wildcardClass77);
        java.lang.reflect.Type type79 = typeCircularBuffer49.get();
        boolean boolean80 = typeCircularBuffer1.put(type79);
        java.lang.Class<?> wildcardClass81 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(type14);
        org.junit.Assert.assertNull(type15);
        org.junit.Assert.assertNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(type18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(type51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(type53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(type60);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test0950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0950");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isEmpty();
        boolean boolean12 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer17.getClass();
        boolean boolean19 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass18);
        java.lang.reflect.Type type20 = typeCircularBuffer14.get();
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        boolean boolean23 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass22);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean26 = typeCircularBuffer25.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass29 = typeCircularBuffer28.getClass();
        boolean boolean30 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass29);
        java.lang.reflect.Type type31 = typeCircularBuffer25.get();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        boolean boolean34 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass33);
        java.lang.reflect.Type type35 = typeCircularBuffer25.get();
        boolean boolean36 = typeCircularBuffer14.put(type35);
        boolean boolean37 = typeCircularBuffer1.put(type35);
        boolean boolean38 = typeCircularBuffer1.isEmpty();
        boolean boolean39 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type40 = typeCircularBuffer1.get();
        boolean boolean41 = typeCircularBuffer1.isEmpty();
        boolean boolean42 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean45 = typeCircularBuffer44.isEmpty();
        boolean boolean46 = typeCircularBuffer44.isEmpty();
        boolean boolean47 = typeCircularBuffer44.isEmpty();
        boolean boolean48 = typeCircularBuffer44.isFull();
        boolean boolean49 = typeCircularBuffer44.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type52 = typeCircularBuffer51.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer54 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer56 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean57 = typeCircularBuffer56.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer59 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass60 = typeCircularBuffer59.getClass();
        boolean boolean61 = typeCircularBuffer56.put((java.lang.reflect.Type) wildcardClass60);
        java.lang.reflect.Type type62 = typeCircularBuffer56.get();
        boolean boolean63 = typeCircularBuffer54.put(type62);
        boolean boolean64 = typeCircularBuffer54.isFull();
        java.lang.reflect.Type type65 = typeCircularBuffer54.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer67 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean68 = typeCircularBuffer67.isEmpty();
        java.lang.Object obj69 = new java.lang.Object();
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        boolean boolean71 = typeCircularBuffer67.put((java.lang.reflect.Type) wildcardClass70);
        boolean boolean72 = typeCircularBuffer54.put((java.lang.reflect.Type) wildcardClass70);
        boolean boolean73 = typeCircularBuffer51.put((java.lang.reflect.Type) wildcardClass70);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer75 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer77 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 0);
        java.lang.Class<?> wildcardClass78 = typeCircularBuffer77.getClass();
        boolean boolean79 = typeCircularBuffer75.put((java.lang.reflect.Type) wildcardClass78);
        boolean boolean80 = typeCircularBuffer51.put((java.lang.reflect.Type) wildcardClass78);
        boolean boolean81 = typeCircularBuffer44.put((java.lang.reflect.Type) wildcardClass78);
        java.lang.reflect.Type type82 = null;
        boolean boolean83 = typeCircularBuffer44.put(type82);
        java.lang.reflect.Type type84 = null;
        boolean boolean85 = typeCircularBuffer44.put(type84);
        java.lang.reflect.Type type86 = typeCircularBuffer44.get();
        boolean boolean87 = typeCircularBuffer1.put(type86);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(type52);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(type86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
    }

    @Test
    public void test0951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0951");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        boolean boolean5 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass8 = typeCircularBuffer7.getClass();
        boolean boolean9 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass8);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean12 = typeCircularBuffer11.isFull();
        boolean boolean13 = typeCircularBuffer11.isEmpty();
        boolean boolean14 = typeCircularBuffer11.isFull();
        java.lang.Class<?> wildcardClass15 = typeCircularBuffer11.getClass();
        boolean boolean16 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass15);
        boolean boolean17 = typeCircularBuffer1.isFull();
        boolean boolean18 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type19 = typeCircularBuffer1.get();
        boolean boolean20 = typeCircularBuffer1.isEmpty();
        boolean boolean21 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test0952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0952");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 0);
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
    }

    @Test
    public void test0953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0953");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) ' ');
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean5 = typeCircularBuffer4.isEmpty();
        java.lang.reflect.Type type6 = typeCircularBuffer4.get();
        java.lang.reflect.Type type7 = typeCircularBuffer4.get();
        java.lang.reflect.Type type8 = typeCircularBuffer4.get();
        boolean boolean9 = typeCircularBuffer4.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean12 = typeCircularBuffer11.isFull();
        java.lang.reflect.Type type13 = typeCircularBuffer11.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean16 = typeCircularBuffer15.isEmpty();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        boolean boolean19 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass18);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer15.getClass();
        boolean boolean21 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean22 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass20);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type27 = typeCircularBuffer26.get();
        boolean boolean28 = typeCircularBuffer26.isFull();
        boolean boolean29 = typeCircularBuffer26.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        boolean boolean35 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass34);
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer31.getClass();
        boolean boolean37 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean38 = typeCircularBuffer26.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean41 = typeCircularBuffer40.isFull();
        boolean boolean42 = typeCircularBuffer40.isEmpty();
        java.lang.reflect.Type type43 = typeCircularBuffer40.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean48 = typeCircularBuffer47.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer50.getClass();
        boolean boolean52 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass51);
        java.lang.reflect.Type type53 = typeCircularBuffer47.get();
        boolean boolean54 = typeCircularBuffer45.put(type53);
        java.lang.Class<?> wildcardClass55 = typeCircularBuffer45.getClass();
        boolean boolean56 = typeCircularBuffer40.put((java.lang.reflect.Type) wildcardClass55);
        boolean boolean57 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass55);
        boolean boolean58 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass55);
        boolean boolean59 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass55);
        java.lang.Class<?> wildcardClass60 = typeCircularBuffer4.getClass();
        boolean boolean61 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass60);
        java.lang.reflect.Type type62 = typeCircularBuffer1.get();
        java.lang.reflect.Type type63 = typeCircularBuffer1.get();
        boolean boolean64 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(type13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(type43);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNull(type63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test0954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0954");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean19 = typeCircularBuffer18.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer21.getClass();
        boolean boolean23 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass22);
        java.lang.reflect.Type type24 = typeCircularBuffer18.get();
        boolean boolean25 = typeCircularBuffer16.put(type24);
        boolean boolean26 = typeCircularBuffer16.isFull();
        java.lang.reflect.Type type27 = typeCircularBuffer16.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean30 = typeCircularBuffer29.isEmpty();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        boolean boolean33 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean35 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean36 = typeCircularBuffer9.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean39 = typeCircularBuffer38.isFull();
        boolean boolean40 = typeCircularBuffer38.isEmpty();
        boolean boolean41 = typeCircularBuffer38.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer46.getClass();
        boolean boolean48 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass47);
        java.lang.reflect.Type type49 = typeCircularBuffer43.get();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        boolean boolean52 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean53 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean54 = typeCircularBuffer38.isFull();
        java.lang.reflect.Type type55 = typeCircularBuffer38.get();
        boolean boolean56 = typeCircularBuffer9.put(type55);
        boolean boolean57 = typeCircularBuffer1.put(type55);
        boolean boolean58 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type59 = null;
        boolean boolean60 = typeCircularBuffer1.put(type59);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test0955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0955");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        boolean boolean8 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass9 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0956");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        boolean boolean6 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        boolean boolean8 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer10.get();
        boolean boolean17 = typeCircularBuffer10.isFull();
        java.lang.reflect.Type type18 = typeCircularBuffer10.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean21 = typeCircularBuffer20.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer23.getClass();
        boolean boolean25 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass24);
        java.lang.reflect.Type type26 = typeCircularBuffer20.get();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        boolean boolean29 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass28);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer34.getClass();
        boolean boolean36 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass35);
        java.lang.Class<?> wildcardClass37 = typeCircularBuffer31.getClass();
        boolean boolean38 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass37);
        boolean boolean39 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass37);
        boolean boolean40 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass37);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean43 = typeCircularBuffer42.isFull();
        java.lang.reflect.Type type44 = typeCircularBuffer42.get();
        boolean boolean45 = typeCircularBuffer42.isFull();
        java.lang.Class<?> wildcardClass46 = typeCircularBuffer42.getClass();
        boolean boolean47 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass46);
        boolean boolean48 = typeCircularBuffer1.isFull();
        boolean boolean49 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type50 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(type18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(type44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(type50);
    }

    @Test
    public void test0957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0957");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test0958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0958");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer6.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.reflect.Type type13 = typeCircularBuffer1.get();
        boolean boolean14 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer19.getClass();
        boolean boolean21 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean22 = typeCircularBuffer16.isEmpty();
        java.lang.reflect.Type type23 = typeCircularBuffer16.get();
        boolean boolean24 = typeCircularBuffer1.put(type23);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type27 = typeCircularBuffer26.get();
        boolean boolean28 = typeCircularBuffer26.isFull();
        boolean boolean29 = typeCircularBuffer26.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        boolean boolean35 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass34);
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer31.getClass();
        boolean boolean37 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass36);
        java.lang.reflect.Type type38 = typeCircularBuffer26.get();
        boolean boolean39 = typeCircularBuffer26.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type42 = typeCircularBuffer41.get();
        boolean boolean43 = typeCircularBuffer41.isFull();
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer41.getClass();
        boolean boolean45 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean46 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean47 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type48 = typeCircularBuffer1.get();
        boolean boolean49 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean52 = typeCircularBuffer51.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer54 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass55 = typeCircularBuffer54.getClass();
        boolean boolean56 = typeCircularBuffer51.put((java.lang.reflect.Type) wildcardClass55);
        java.lang.reflect.Type type57 = typeCircularBuffer51.get();
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        boolean boolean60 = typeCircularBuffer51.put((java.lang.reflect.Type) wildcardClass59);
        java.lang.reflect.Type type61 = typeCircularBuffer51.get();
        boolean boolean62 = typeCircularBuffer51.isFull();
        java.lang.Class<?> wildcardClass63 = typeCircularBuffer51.getClass();
        boolean boolean64 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass63);
        java.lang.Class<?> wildcardClass65 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(type42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test0959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0959");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type12 = typeCircularBuffer1.get();
        boolean boolean13 = typeCircularBuffer1.isFull();
        boolean boolean14 = typeCircularBuffer1.isFull();
        boolean boolean15 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass16 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0960");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) 'a');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass4 = typeCircularBuffer3.getClass();
        boolean boolean5 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass4);
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        java.lang.reflect.Type type15 = null;
        boolean boolean16 = typeCircularBuffer9.put(type15);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean21 = typeCircularBuffer20.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer23.getClass();
        boolean boolean25 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass24);
        java.lang.reflect.Type type26 = typeCircularBuffer20.get();
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer20.getClass();
        boolean boolean28 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean30 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean31 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test0961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0961");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer17.getClass();
        boolean boolean19 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass18);
        java.lang.reflect.Type type20 = typeCircularBuffer14.get();
        boolean boolean21 = typeCircularBuffer12.put(type20);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer12.getClass();
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass22);
        boolean boolean24 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type25 = typeCircularBuffer1.get();
        java.lang.reflect.Type type26 = typeCircularBuffer1.get();
        java.lang.reflect.Type type27 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNull(type26);
        org.junit.Assert.assertNull(type27);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0962");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        boolean boolean8 = typeCircularBuffer1.isFull();
        boolean boolean9 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type10 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type13 = typeCircularBuffer12.get();
        boolean boolean14 = typeCircularBuffer12.isFull();
        boolean boolean15 = typeCircularBuffer12.isFull();
        boolean boolean16 = typeCircularBuffer12.isFull();
        java.lang.reflect.Type type17 = typeCircularBuffer12.get();
        boolean boolean18 = typeCircularBuffer12.isEmpty();
        java.lang.reflect.Type type19 = typeCircularBuffer12.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean22 = typeCircularBuffer21.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass25 = typeCircularBuffer24.getClass();
        boolean boolean26 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.reflect.Type type27 = typeCircularBuffer21.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type30 = typeCircularBuffer29.get();
        boolean boolean31 = typeCircularBuffer29.isFull();
        boolean boolean32 = typeCircularBuffer29.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean35 = typeCircularBuffer34.isEmpty();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        boolean boolean38 = typeCircularBuffer34.put((java.lang.reflect.Type) wildcardClass37);
        java.lang.Class<?> wildcardClass39 = typeCircularBuffer34.getClass();
        boolean boolean40 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass39);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean43 = typeCircularBuffer42.isEmpty();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        boolean boolean46 = typeCircularBuffer42.put((java.lang.reflect.Type) wildcardClass45);
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer42.getClass();
        boolean boolean48 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass47);
        boolean boolean49 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass47);
        boolean boolean50 = typeCircularBuffer21.isEmpty();
        boolean boolean51 = typeCircularBuffer21.isFull();
        java.lang.Class<?> wildcardClass52 = typeCircularBuffer21.getClass();
        boolean boolean53 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass52);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer55 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer57 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean58 = typeCircularBuffer57.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer60 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass61 = typeCircularBuffer60.getClass();
        boolean boolean62 = typeCircularBuffer57.put((java.lang.reflect.Type) wildcardClass61);
        java.lang.reflect.Type type63 = typeCircularBuffer57.get();
        boolean boolean64 = typeCircularBuffer55.put(type63);
        boolean boolean65 = typeCircularBuffer55.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer67 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean68 = typeCircularBuffer67.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer70 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass71 = typeCircularBuffer70.getClass();
        boolean boolean72 = typeCircularBuffer67.put((java.lang.reflect.Type) wildcardClass71);
        java.lang.reflect.Type type73 = typeCircularBuffer67.get();
        java.lang.Object obj74 = new java.lang.Object();
        java.lang.Class<?> wildcardClass75 = obj74.getClass();
        boolean boolean76 = typeCircularBuffer67.put((java.lang.reflect.Type) wildcardClass75);
        boolean boolean77 = typeCircularBuffer55.put((java.lang.reflect.Type) wildcardClass75);
        boolean boolean78 = typeCircularBuffer55.isEmpty();
        java.lang.Object obj79 = new java.lang.Object();
        java.lang.Class<?> wildcardClass80 = obj79.getClass();
        boolean boolean81 = typeCircularBuffer55.put((java.lang.reflect.Type) wildcardClass80);
        java.lang.reflect.Type type82 = typeCircularBuffer55.get();
        java.lang.Class<?> wildcardClass83 = typeCircularBuffer55.getClass();
        boolean boolean84 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass83);
        boolean boolean85 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass83);
        java.lang.reflect.Type type86 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertNull(type13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(type17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(type19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(type86);
    }

    @Test
    public void test0963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0963");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer5 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean6 = typeCircularBuffer5.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass9 = typeCircularBuffer8.getClass();
        boolean boolean10 = typeCircularBuffer5.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.reflect.Type type11 = typeCircularBuffer5.get();
        boolean boolean12 = typeCircularBuffer3.put(type11);
        boolean boolean13 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean16 = typeCircularBuffer15.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer18.getClass();
        boolean boolean20 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass19);
        java.lang.reflect.Type type21 = typeCircularBuffer15.get();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        boolean boolean24 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass23);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean27 = typeCircularBuffer26.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass30 = typeCircularBuffer29.getClass();
        boolean boolean31 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass30);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer26.getClass();
        boolean boolean33 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean35 = typeCircularBuffer3.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        java.lang.reflect.Type type38 = typeCircularBuffer37.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean41 = typeCircularBuffer40.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer43.getClass();
        boolean boolean45 = typeCircularBuffer40.put((java.lang.reflect.Type) wildcardClass44);
        java.lang.reflect.Type type46 = typeCircularBuffer40.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type49 = typeCircularBuffer48.get();
        boolean boolean50 = typeCircularBuffer48.isFull();
        boolean boolean51 = typeCircularBuffer48.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer53 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean54 = typeCircularBuffer53.isEmpty();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        boolean boolean57 = typeCircularBuffer53.put((java.lang.reflect.Type) wildcardClass56);
        java.lang.Class<?> wildcardClass58 = typeCircularBuffer53.getClass();
        boolean boolean59 = typeCircularBuffer48.put((java.lang.reflect.Type) wildcardClass58);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer61 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean62 = typeCircularBuffer61.isEmpty();
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        boolean boolean65 = typeCircularBuffer61.put((java.lang.reflect.Type) wildcardClass64);
        java.lang.Class<?> wildcardClass66 = typeCircularBuffer61.getClass();
        boolean boolean67 = typeCircularBuffer48.put((java.lang.reflect.Type) wildcardClass66);
        boolean boolean68 = typeCircularBuffer40.put((java.lang.reflect.Type) wildcardClass66);
        java.lang.Class<?> wildcardClass69 = typeCircularBuffer40.getClass();
        boolean boolean70 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass69);
        boolean boolean71 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass69);
        boolean boolean72 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass69);
        boolean boolean73 = typeCircularBuffer1.isFull();
        boolean boolean74 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type75 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(type38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNull(type49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(type75);
    }

    @Test
    public void test0964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0964");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer5 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean6 = typeCircularBuffer5.isEmpty();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = typeCircularBuffer5.put((java.lang.reflect.Type) wildcardClass8);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer5.getClass();
        boolean boolean11 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass10);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        boolean boolean19 = typeCircularBuffer13.isEmpty();
        java.lang.reflect.Type type20 = typeCircularBuffer13.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        java.lang.reflect.Type type23 = typeCircularBuffer22.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean26 = typeCircularBuffer25.isFull();
        boolean boolean27 = typeCircularBuffer25.isEmpty();
        boolean boolean28 = typeCircularBuffer25.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean31 = typeCircularBuffer30.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass34 = typeCircularBuffer33.getClass();
        boolean boolean35 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass34);
        java.lang.reflect.Type type36 = typeCircularBuffer30.get();
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        boolean boolean39 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass38);
        boolean boolean40 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass38);
        boolean boolean41 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass38);
        java.lang.Class<?> wildcardClass42 = typeCircularBuffer22.getClass();
        boolean boolean43 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass42);
        boolean boolean44 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass42);
        java.lang.Class<?> wildcardClass45 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNull(type23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test0965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0965");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer10.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type19 = typeCircularBuffer18.get();
        boolean boolean20 = typeCircularBuffer18.isFull();
        boolean boolean21 = typeCircularBuffer18.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean24 = typeCircularBuffer23.isEmpty();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        boolean boolean27 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass26);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer23.getClass();
        boolean boolean29 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass28);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        boolean boolean35 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass34);
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer31.getClass();
        boolean boolean37 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean38 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean39 = typeCircularBuffer10.isEmpty();
        boolean boolean40 = typeCircularBuffer10.isFull();
        java.lang.Class<?> wildcardClass41 = typeCircularBuffer10.getClass();
        boolean boolean42 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass41);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean47 = typeCircularBuffer46.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer49 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass50 = typeCircularBuffer49.getClass();
        boolean boolean51 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass50);
        java.lang.reflect.Type type52 = typeCircularBuffer46.get();
        boolean boolean53 = typeCircularBuffer44.put(type52);
        boolean boolean54 = typeCircularBuffer44.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer56 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean57 = typeCircularBuffer56.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer59 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass60 = typeCircularBuffer59.getClass();
        boolean boolean61 = typeCircularBuffer56.put((java.lang.reflect.Type) wildcardClass60);
        java.lang.reflect.Type type62 = typeCircularBuffer56.get();
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        boolean boolean65 = typeCircularBuffer56.put((java.lang.reflect.Type) wildcardClass64);
        boolean boolean66 = typeCircularBuffer44.put((java.lang.reflect.Type) wildcardClass64);
        boolean boolean67 = typeCircularBuffer44.isEmpty();
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        boolean boolean70 = typeCircularBuffer44.put((java.lang.reflect.Type) wildcardClass69);
        java.lang.reflect.Type type71 = typeCircularBuffer44.get();
        java.lang.Class<?> wildcardClass72 = typeCircularBuffer44.getClass();
        boolean boolean73 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass72);
        boolean boolean74 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type75 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNull(type19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(type75);
    }

    @Test
    public void test0966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0966");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type10 = typeCircularBuffer9.get();
        boolean boolean11 = typeCircularBuffer9.isFull();
        boolean boolean12 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer14.getClass();
        boolean boolean20 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass19);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        boolean boolean26 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer22.getClass();
        boolean boolean28 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass27);
        java.lang.reflect.Type type30 = typeCircularBuffer1.get();
        java.lang.reflect.Type type31 = typeCircularBuffer1.get();
        boolean boolean32 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer34.getClass();
        boolean boolean36 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass35);
        boolean boolean37 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type40 = typeCircularBuffer39.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean45 = typeCircularBuffer44.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass48 = typeCircularBuffer47.getClass();
        boolean boolean49 = typeCircularBuffer44.put((java.lang.reflect.Type) wildcardClass48);
        java.lang.reflect.Type type50 = typeCircularBuffer44.get();
        boolean boolean51 = typeCircularBuffer42.put(type50);
        boolean boolean52 = typeCircularBuffer42.isFull();
        java.lang.reflect.Type type53 = typeCircularBuffer42.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer55 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean56 = typeCircularBuffer55.isEmpty();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        boolean boolean59 = typeCircularBuffer55.put((java.lang.reflect.Type) wildcardClass58);
        boolean boolean60 = typeCircularBuffer42.put((java.lang.reflect.Type) wildcardClass58);
        boolean boolean61 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass58);
        boolean boolean62 = typeCircularBuffer39.isEmpty();
        boolean boolean63 = typeCircularBuffer39.isFull();
        boolean boolean64 = typeCircularBuffer39.isFull();
        boolean boolean65 = typeCircularBuffer39.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer67 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean68 = typeCircularBuffer67.isEmpty();
        boolean boolean69 = typeCircularBuffer67.isEmpty();
        boolean boolean70 = typeCircularBuffer67.isEmpty();
        boolean boolean71 = typeCircularBuffer67.isFull();
        java.lang.Class<?> wildcardClass72 = typeCircularBuffer67.getClass();
        boolean boolean73 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass72);
        boolean boolean74 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass72);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNull(type31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(type40);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test0967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0967");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) ' ');
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean5 = typeCircularBuffer4.isEmpty();
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        boolean boolean8 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.Class<?> wildcardClass9 = typeCircularBuffer4.getClass();
        boolean boolean10 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass9);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean13 = typeCircularBuffer12.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type16 = typeCircularBuffer15.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean21 = typeCircularBuffer20.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer23.getClass();
        boolean boolean25 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass24);
        java.lang.reflect.Type type26 = typeCircularBuffer20.get();
        boolean boolean27 = typeCircularBuffer18.put(type26);
        boolean boolean28 = typeCircularBuffer18.isFull();
        java.lang.reflect.Type type29 = typeCircularBuffer18.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        boolean boolean35 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass34);
        boolean boolean36 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass34);
        boolean boolean37 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass34);
        boolean boolean38 = typeCircularBuffer15.isEmpty();
        java.lang.Class<?> wildcardClass39 = typeCircularBuffer15.getClass();
        boolean boolean40 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass39);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean43 = typeCircularBuffer42.isFull();
        boolean boolean44 = typeCircularBuffer42.isEmpty();
        boolean boolean45 = typeCircularBuffer42.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean48 = typeCircularBuffer47.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer50.getClass();
        boolean boolean52 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass51);
        java.lang.reflect.Type type53 = typeCircularBuffer47.get();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        boolean boolean56 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass55);
        boolean boolean57 = typeCircularBuffer42.put((java.lang.reflect.Type) wildcardClass55);
        boolean boolean58 = typeCircularBuffer42.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer60 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer62 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean63 = typeCircularBuffer62.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer65 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass66 = typeCircularBuffer65.getClass();
        boolean boolean67 = typeCircularBuffer62.put((java.lang.reflect.Type) wildcardClass66);
        java.lang.reflect.Type type68 = typeCircularBuffer62.get();
        boolean boolean69 = typeCircularBuffer60.put(type68);
        boolean boolean70 = typeCircularBuffer60.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer72 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean73 = typeCircularBuffer72.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer75 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass76 = typeCircularBuffer75.getClass();
        boolean boolean77 = typeCircularBuffer72.put((java.lang.reflect.Type) wildcardClass76);
        java.lang.reflect.Type type78 = typeCircularBuffer72.get();
        java.lang.Object obj79 = new java.lang.Object();
        java.lang.Class<?> wildcardClass80 = obj79.getClass();
        boolean boolean81 = typeCircularBuffer72.put((java.lang.reflect.Type) wildcardClass80);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer83 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean84 = typeCircularBuffer83.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer86 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass87 = typeCircularBuffer86.getClass();
        boolean boolean88 = typeCircularBuffer83.put((java.lang.reflect.Type) wildcardClass87);
        java.lang.Class<?> wildcardClass89 = typeCircularBuffer83.getClass();
        boolean boolean90 = typeCircularBuffer72.put((java.lang.reflect.Type) wildcardClass89);
        boolean boolean91 = typeCircularBuffer60.put((java.lang.reflect.Type) wildcardClass89);
        boolean boolean92 = typeCircularBuffer42.put((java.lang.reflect.Type) wildcardClass89);
        boolean boolean93 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass89);
        boolean boolean94 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass89);
        boolean boolean95 = typeCircularBuffer1.isFull();
        boolean boolean96 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type97 = typeCircularBuffer1.get();
        boolean boolean98 = typeCircularBuffer1.isEmpty();
        boolean boolean99 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(type16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertNotNull(type97);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test0968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0968");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type7 = typeCircularBuffer6.get();
        boolean boolean8 = typeCircularBuffer6.isFull();
        boolean boolean9 = typeCircularBuffer6.isEmpty();
        boolean boolean10 = typeCircularBuffer6.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass13);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean17 = typeCircularBuffer16.isFull();
        boolean boolean18 = typeCircularBuffer16.isEmpty();
        boolean boolean19 = typeCircularBuffer16.isFull();
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer16.getClass();
        boolean boolean21 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type22 = typeCircularBuffer6.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type25 = typeCircularBuffer24.get();
        boolean boolean26 = typeCircularBuffer24.isFull();
        boolean boolean27 = typeCircularBuffer24.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean30 = typeCircularBuffer29.isEmpty();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        boolean boolean33 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass32);
        java.lang.Class<?> wildcardClass34 = typeCircularBuffer29.getClass();
        boolean boolean35 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass34);
        java.lang.reflect.Type type36 = typeCircularBuffer24.get();
        boolean boolean37 = typeCircularBuffer24.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean40 = typeCircularBuffer39.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass43 = typeCircularBuffer42.getClass();
        boolean boolean44 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass43);
        boolean boolean45 = typeCircularBuffer39.isEmpty();
        java.lang.reflect.Type type46 = typeCircularBuffer39.get();
        boolean boolean47 = typeCircularBuffer24.put(type46);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer49 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type50 = typeCircularBuffer49.get();
        boolean boolean51 = typeCircularBuffer49.isFull();
        boolean boolean52 = typeCircularBuffer49.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer54 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean55 = typeCircularBuffer54.isEmpty();
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        boolean boolean58 = typeCircularBuffer54.put((java.lang.reflect.Type) wildcardClass57);
        java.lang.Class<?> wildcardClass59 = typeCircularBuffer54.getClass();
        boolean boolean60 = typeCircularBuffer49.put((java.lang.reflect.Type) wildcardClass59);
        java.lang.reflect.Type type61 = typeCircularBuffer49.get();
        boolean boolean62 = typeCircularBuffer49.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer64 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type65 = typeCircularBuffer64.get();
        boolean boolean66 = typeCircularBuffer64.isFull();
        java.lang.Class<?> wildcardClass67 = typeCircularBuffer64.getClass();
        boolean boolean68 = typeCircularBuffer49.put((java.lang.reflect.Type) wildcardClass67);
        boolean boolean69 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass67);
        java.lang.reflect.Type type70 = typeCircularBuffer24.get();
        boolean boolean71 = typeCircularBuffer6.put(type70);
        java.lang.Class<?> wildcardClass72 = type70.getClass();
        boolean boolean73 = typeCircularBuffer1.put(type70);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNull(type25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(type50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(type65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
    }

    @Test
    public void test0969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0969");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer5 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean8 = typeCircularBuffer7.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer10.getClass();
        boolean boolean12 = typeCircularBuffer7.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.reflect.Type type13 = typeCircularBuffer7.get();
        boolean boolean14 = typeCircularBuffer5.put(type13);
        java.lang.reflect.Type type15 = typeCircularBuffer5.get();
        java.lang.Class<?> wildcardClass16 = type15.getClass();
        boolean boolean17 = typeCircularBuffer1.put(type15);
        java.lang.reflect.Type type18 = typeCircularBuffer1.get();
        java.lang.reflect.Type type19 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNull(type19);
    }

    @Test
    public void test0970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0970");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        java.lang.reflect.Type type12 = typeCircularBuffer6.get();
        boolean boolean13 = typeCircularBuffer4.put(type12);
        boolean boolean14 = typeCircularBuffer4.isFull();
        java.lang.reflect.Type type15 = typeCircularBuffer4.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        boolean boolean21 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean22 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass20);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 0);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer27.getClass();
        boolean boolean29 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass28);
        boolean boolean30 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass28);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type33 = typeCircularBuffer32.get();
        boolean boolean34 = typeCircularBuffer32.isFull();
        boolean boolean35 = typeCircularBuffer32.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean38 = typeCircularBuffer37.isEmpty();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        boolean boolean41 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass40);
        java.lang.Class<?> wildcardClass42 = typeCircularBuffer37.getClass();
        boolean boolean43 = typeCircularBuffer32.put((java.lang.reflect.Type) wildcardClass42);
        boolean boolean44 = typeCircularBuffer32.isEmpty();
        java.lang.Class<?> wildcardClass45 = typeCircularBuffer32.getClass();
        boolean boolean46 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass45);
        boolean boolean47 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(type33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
    }

    @Test
    public void test0971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0971");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        java.lang.reflect.Type type12 = typeCircularBuffer6.get();
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        boolean boolean15 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer6.get();
        boolean boolean17 = typeCircularBuffer6.isFull();
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer6.getClass();
        boolean boolean19 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass18);
        boolean boolean20 = typeCircularBuffer1.isFull();
        boolean boolean21 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test0972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0972");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean13 = typeCircularBuffer12.isFull();
        boolean boolean14 = typeCircularBuffer12.isEmpty();
        boolean boolean15 = typeCircularBuffer12.isFull();
        java.lang.Class<?> wildcardClass16 = typeCircularBuffer12.getClass();
        boolean boolean17 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass16);
        java.lang.reflect.Type type18 = typeCircularBuffer1.get();
        java.lang.reflect.Type type19 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNull(type19);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0973");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer5 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type6 = typeCircularBuffer5.get();
        boolean boolean7 = typeCircularBuffer5.isFull();
        boolean boolean8 = typeCircularBuffer5.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        boolean boolean14 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass13);
        java.lang.Class<?> wildcardClass15 = typeCircularBuffer10.getClass();
        boolean boolean16 = typeCircularBuffer5.put((java.lang.reflect.Type) wildcardClass15);
        java.lang.reflect.Type type17 = typeCircularBuffer5.get();
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer5.getClass();
        boolean boolean19 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass18);
        boolean boolean20 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type21 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(type21);
    }

    @Test
    public void test0974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0974");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '#');
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(type8);
    }

    @Test
    public void test0975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0975");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        java.lang.reflect.Type type11 = typeCircularBuffer1.get();
        java.lang.reflect.Type type12 = null;
        boolean boolean13 = typeCircularBuffer1.put(type12);
        boolean boolean14 = typeCircularBuffer1.isFull();
        boolean boolean15 = typeCircularBuffer1.isFull();
        boolean boolean16 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type17 = typeCircularBuffer1.get();
        boolean boolean18 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '#');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean25 = typeCircularBuffer24.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer27.getClass();
        boolean boolean29 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.reflect.Type type30 = typeCircularBuffer24.get();
        boolean boolean31 = typeCircularBuffer22.put(type30);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean36 = typeCircularBuffer35.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass39 = typeCircularBuffer38.getClass();
        boolean boolean40 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass39);
        java.lang.reflect.Type type41 = typeCircularBuffer35.get();
        boolean boolean42 = typeCircularBuffer33.put(type41);
        java.lang.Class<?> wildcardClass43 = typeCircularBuffer33.getClass();
        boolean boolean44 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass43);
        boolean boolean45 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass43);
        boolean boolean46 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass43);
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(type17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test0976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0976");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.constant.Constable> constableCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.constant.Constable>((int) '4');
    }

    @Test
    public void test0977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0977");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean8 = typeCircularBuffer7.isEmpty();
        java.lang.reflect.Type type9 = typeCircularBuffer7.get();
        java.lang.reflect.Type type10 = typeCircularBuffer7.get();
        java.lang.reflect.Type type11 = typeCircularBuffer7.get();
        boolean boolean12 = typeCircularBuffer7.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean15 = typeCircularBuffer14.isFull();
        java.lang.reflect.Type type16 = typeCircularBuffer14.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean19 = typeCircularBuffer18.isEmpty();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.Class<?> wildcardClass23 = typeCircularBuffer18.getClass();
        boolean boolean24 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass23);
        boolean boolean25 = typeCircularBuffer7.put((java.lang.reflect.Type) wildcardClass23);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '#');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer34.getClass();
        boolean boolean36 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass35);
        java.lang.reflect.Type type37 = typeCircularBuffer31.get();
        boolean boolean38 = typeCircularBuffer29.put(type37);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean43 = typeCircularBuffer42.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass46 = typeCircularBuffer45.getClass();
        boolean boolean47 = typeCircularBuffer42.put((java.lang.reflect.Type) wildcardClass46);
        java.lang.reflect.Type type48 = typeCircularBuffer42.get();
        boolean boolean49 = typeCircularBuffer40.put(type48);
        java.lang.Class<?> wildcardClass50 = typeCircularBuffer40.getClass();
        boolean boolean51 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass50);
        boolean boolean52 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass50);
        boolean boolean53 = typeCircularBuffer7.put((java.lang.reflect.Type) wildcardClass50);
        boolean boolean54 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass50);
        java.lang.reflect.Type type55 = typeCircularBuffer1.get();
        boolean boolean56 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer58 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean59 = typeCircularBuffer58.isFull();
        java.lang.reflect.Type type60 = typeCircularBuffer58.get();
        boolean boolean61 = typeCircularBuffer58.isFull();
        java.lang.Class<?> wildcardClass62 = typeCircularBuffer58.getClass();
        boolean boolean63 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertNull(type11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(type16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(type60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
    }

    @Test
    public void test0978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0978");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean16 = typeCircularBuffer15.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer18.getClass();
        boolean boolean20 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass19);
        java.lang.reflect.Type type21 = typeCircularBuffer15.get();
        boolean boolean22 = typeCircularBuffer13.put(type21);
        boolean boolean23 = typeCircularBuffer13.isFull();
        java.lang.reflect.Type type24 = typeCircularBuffer13.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean27 = typeCircularBuffer26.isEmpty();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        boolean boolean30 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass29);
        boolean boolean31 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass29);
        boolean boolean32 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass29);
        boolean boolean33 = typeCircularBuffer6.isFull();
        boolean boolean34 = typeCircularBuffer6.isFull();
        boolean boolean35 = typeCircularBuffer6.isEmpty();
        boolean boolean36 = typeCircularBuffer6.isFull();
        java.lang.reflect.Type type37 = typeCircularBuffer6.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean42 = typeCircularBuffer41.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass45 = typeCircularBuffer44.getClass();
        boolean boolean46 = typeCircularBuffer41.put((java.lang.reflect.Type) wildcardClass45);
        java.lang.reflect.Type type47 = typeCircularBuffer41.get();
        boolean boolean48 = typeCircularBuffer39.put(type47);
        boolean boolean49 = typeCircularBuffer39.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean52 = typeCircularBuffer51.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer54 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass55 = typeCircularBuffer54.getClass();
        boolean boolean56 = typeCircularBuffer51.put((java.lang.reflect.Type) wildcardClass55);
        java.lang.reflect.Type type57 = typeCircularBuffer51.get();
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        boolean boolean60 = typeCircularBuffer51.put((java.lang.reflect.Type) wildcardClass59);
        boolean boolean61 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass59);
        java.lang.reflect.Type type62 = typeCircularBuffer39.get();
        boolean boolean63 = typeCircularBuffer6.put(type62);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer65 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean66 = typeCircularBuffer65.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer68 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass69 = typeCircularBuffer68.getClass();
        boolean boolean70 = typeCircularBuffer65.put((java.lang.reflect.Type) wildcardClass69);
        java.lang.reflect.Type type71 = typeCircularBuffer65.get();
        java.lang.Object obj72 = new java.lang.Object();
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        boolean boolean74 = typeCircularBuffer65.put((java.lang.reflect.Type) wildcardClass73);
        boolean boolean75 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass73);
        boolean boolean76 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass73);
        boolean boolean77 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
    }

    @Test
    public void test0979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0979");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean19 = typeCircularBuffer18.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer21.getClass();
        boolean boolean23 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass22);
        java.lang.reflect.Type type24 = typeCircularBuffer18.get();
        boolean boolean25 = typeCircularBuffer16.put(type24);
        boolean boolean26 = typeCircularBuffer16.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer31.getClass();
        boolean boolean33 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass32);
        java.lang.reflect.Type type34 = typeCircularBuffer28.get();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        boolean boolean37 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean38 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean39 = typeCircularBuffer16.isEmpty();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        boolean boolean42 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean43 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass41);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean46 = typeCircularBuffer45.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass49 = typeCircularBuffer48.getClass();
        boolean boolean50 = typeCircularBuffer45.put((java.lang.reflect.Type) wildcardClass49);
        java.lang.reflect.Type type51 = typeCircularBuffer45.get();
        java.lang.Class<?> wildcardClass52 = typeCircularBuffer45.getClass();
        boolean boolean53 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass52);
        boolean boolean54 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass52);
        java.lang.reflect.Type type55 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(type55);
    }

    @Test
    public void test0980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0980");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(100);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean5 = typeCircularBuffer4.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass8 = typeCircularBuffer7.getClass();
        boolean boolean9 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass8);
        java.lang.reflect.Type type10 = typeCircularBuffer4.get();
        java.lang.Object obj11 = new java.lang.Object();
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        boolean boolean13 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass12);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean16 = typeCircularBuffer15.isEmpty();
        java.lang.reflect.Type type17 = typeCircularBuffer15.get();
        java.lang.reflect.Type type18 = typeCircularBuffer15.get();
        java.lang.reflect.Type type19 = typeCircularBuffer15.get();
        boolean boolean20 = typeCircularBuffer15.isFull();
        java.lang.reflect.Type type21 = typeCircularBuffer15.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean24 = typeCircularBuffer23.isEmpty();
        java.lang.Class<?> wildcardClass25 = typeCircularBuffer23.getClass();
        boolean boolean26 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass25);
        boolean boolean27 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass25);
        boolean boolean28 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.Class<?> wildcardClass29 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(type17);
        org.junit.Assert.assertNull(type18);
        org.junit.Assert.assertNull(type19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(type21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test0981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0981");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isEmpty();
        boolean boolean12 = typeCircularBuffer1.isFull();
        boolean boolean13 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer20.getClass();
        boolean boolean22 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type23 = typeCircularBuffer17.get();
        boolean boolean24 = typeCircularBuffer15.put(type23);
        boolean boolean25 = typeCircularBuffer15.isFull();
        java.lang.reflect.Type type26 = typeCircularBuffer15.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer31.getClass();
        boolean boolean33 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer28.isFull();
        java.lang.reflect.Type type35 = typeCircularBuffer28.get();
        boolean boolean36 = typeCircularBuffer15.put(type35);
        boolean boolean37 = typeCircularBuffer1.put(type35);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean40 = typeCircularBuffer39.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass43 = typeCircularBuffer42.getClass();
        boolean boolean44 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass43);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean49 = typeCircularBuffer48.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass52 = typeCircularBuffer51.getClass();
        boolean boolean53 = typeCircularBuffer48.put((java.lang.reflect.Type) wildcardClass52);
        java.lang.reflect.Type type54 = typeCircularBuffer48.get();
        boolean boolean55 = typeCircularBuffer46.put(type54);
        boolean boolean56 = typeCircularBuffer46.isFull();
        java.lang.reflect.Type type57 = typeCircularBuffer46.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer59 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean60 = typeCircularBuffer59.isEmpty();
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        boolean boolean63 = typeCircularBuffer59.put((java.lang.reflect.Type) wildcardClass62);
        boolean boolean64 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass62);
        boolean boolean65 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass62);
        boolean boolean66 = typeCircularBuffer39.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer68 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean69 = typeCircularBuffer68.isFull();
        boolean boolean70 = typeCircularBuffer68.isEmpty();
        boolean boolean71 = typeCircularBuffer68.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer73 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean74 = typeCircularBuffer73.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer76 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass77 = typeCircularBuffer76.getClass();
        boolean boolean78 = typeCircularBuffer73.put((java.lang.reflect.Type) wildcardClass77);
        java.lang.reflect.Type type79 = typeCircularBuffer73.get();
        java.lang.Object obj80 = new java.lang.Object();
        java.lang.Class<?> wildcardClass81 = obj80.getClass();
        boolean boolean82 = typeCircularBuffer73.put((java.lang.reflect.Type) wildcardClass81);
        boolean boolean83 = typeCircularBuffer68.put((java.lang.reflect.Type) wildcardClass81);
        boolean boolean84 = typeCircularBuffer68.isFull();
        java.lang.reflect.Type type85 = typeCircularBuffer68.get();
        boolean boolean86 = typeCircularBuffer39.put(type85);
        boolean boolean87 = typeCircularBuffer1.put(type85);
        boolean boolean88 = typeCircularBuffer1.isFull();
        boolean boolean89 = typeCircularBuffer1.isFull();
        boolean boolean90 = typeCircularBuffer1.isFull();
        boolean boolean91 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(type85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test0982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0982");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass10);
        boolean boolean13 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) ' ');
        java.lang.reflect.Type type16 = typeCircularBuffer15.get();
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer15.getClass();
        boolean boolean18 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer1.get();
        boolean boolean20 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(type16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(type19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0983");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        boolean boolean15 = typeCircularBuffer13.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type18 = typeCircularBuffer17.get();
        boolean boolean19 = typeCircularBuffer17.isFull();
        boolean boolean20 = typeCircularBuffer17.isFull();
        boolean boolean21 = typeCircularBuffer17.isEmpty();
        java.lang.reflect.Type type22 = typeCircularBuffer17.get();
        java.lang.Class<?> wildcardClass23 = typeCircularBuffer17.getClass();
        boolean boolean24 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass23);
        boolean boolean25 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass23);
        java.lang.reflect.Type type26 = typeCircularBuffer1.get();
        boolean boolean27 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(type18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(type22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test0984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0984");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 10);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) 'a');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer5 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass6 = typeCircularBuffer5.getClass();
        boolean boolean7 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass6);
        java.lang.reflect.Type type8 = typeCircularBuffer3.get();
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type12 = typeCircularBuffer11.get();
        boolean boolean13 = typeCircularBuffer11.isFull();
        boolean boolean14 = typeCircularBuffer11.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        boolean boolean20 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass19);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer16.getClass();
        boolean boolean22 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type23 = typeCircularBuffer11.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean28 = typeCircularBuffer27.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass31 = typeCircularBuffer30.getClass();
        boolean boolean32 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass31);
        java.lang.reflect.Type type33 = typeCircularBuffer27.get();
        boolean boolean34 = typeCircularBuffer25.put(type33);
        boolean boolean35 = typeCircularBuffer11.put(type33);
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer11.getClass();
        boolean boolean37 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass36);
        java.lang.Class<?> wildcardClass38 = typeCircularBuffer3.getClass();
        boolean boolean39 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass38);
        java.lang.reflect.Type type40 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean43 = typeCircularBuffer42.isFull();
        java.lang.reflect.Type type44 = typeCircularBuffer42.get();
        java.lang.reflect.Type type45 = typeCircularBuffer42.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean48 = typeCircularBuffer47.isFull();
        java.lang.reflect.Type type49 = typeCircularBuffer47.get();
        boolean boolean50 = typeCircularBuffer47.isEmpty();
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer47.getClass();
        boolean boolean52 = typeCircularBuffer42.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean53 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass51);
        java.lang.reflect.Type type54 = typeCircularBuffer1.get();
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(type44);
        org.junit.Assert.assertNull(type45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(type49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(type54);
    }

    @Test
    public void test0985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0985");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass6 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0986");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type7 = typeCircularBuffer6.get();
        boolean boolean8 = typeCircularBuffer6.isFull();
        boolean boolean9 = typeCircularBuffer6.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean12 = typeCircularBuffer11.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass15 = typeCircularBuffer14.getClass();
        boolean boolean16 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass15);
        boolean boolean17 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass15);
        boolean boolean18 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass26 = typeCircularBuffer25.getClass();
        boolean boolean27 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass26);
        java.lang.reflect.Type type28 = typeCircularBuffer22.get();
        boolean boolean29 = typeCircularBuffer20.put(type28);
        boolean boolean30 = typeCircularBuffer20.isFull();
        java.lang.reflect.Type type31 = typeCircularBuffer20.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean34 = typeCircularBuffer33.isEmpty();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        boolean boolean37 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean38 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass36);
        java.lang.reflect.Type type39 = typeCircularBuffer20.get();
        boolean boolean40 = typeCircularBuffer6.put(type39);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean45 = typeCircularBuffer44.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass48 = typeCircularBuffer47.getClass();
        boolean boolean49 = typeCircularBuffer44.put((java.lang.reflect.Type) wildcardClass48);
        java.lang.reflect.Type type50 = typeCircularBuffer44.get();
        boolean boolean51 = typeCircularBuffer42.put(type50);
        boolean boolean52 = typeCircularBuffer42.isFull();
        java.lang.reflect.Type type53 = typeCircularBuffer42.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer55 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean56 = typeCircularBuffer55.isEmpty();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        boolean boolean59 = typeCircularBuffer55.put((java.lang.reflect.Type) wildcardClass58);
        boolean boolean60 = typeCircularBuffer42.put((java.lang.reflect.Type) wildcardClass58);
        java.lang.reflect.Type type61 = typeCircularBuffer42.get();
        boolean boolean62 = typeCircularBuffer6.put(type61);
        boolean boolean63 = typeCircularBuffer1.put(type61);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer65 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean66 = typeCircularBuffer65.isEmpty();
        boolean boolean67 = typeCircularBuffer65.isEmpty();
        java.lang.reflect.Type type68 = typeCircularBuffer65.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer70 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean71 = typeCircularBuffer70.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer73 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass74 = typeCircularBuffer73.getClass();
        boolean boolean75 = typeCircularBuffer70.put((java.lang.reflect.Type) wildcardClass74);
        boolean boolean76 = typeCircularBuffer65.put((java.lang.reflect.Type) wildcardClass74);
        boolean boolean77 = typeCircularBuffer65.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.invoke.TypeDescriptor> typeDescriptorCircularBuffer79 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.invoke.TypeDescriptor>(100);
        java.lang.Class<?> wildcardClass80 = typeDescriptorCircularBuffer79.getClass();
        boolean boolean81 = typeCircularBuffer65.put((java.lang.reflect.Type) wildcardClass80);
        boolean boolean82 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass80);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer84 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type85 = typeCircularBuffer84.get();
        boolean boolean86 = typeCircularBuffer84.isFull();
        java.lang.reflect.Type type87 = typeCircularBuffer84.get();
        java.lang.Class<?> wildcardClass88 = typeCircularBuffer84.getClass();
        boolean boolean89 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass88);
        boolean boolean90 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNull(type68);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNull(type85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNull(type87);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
    }

    @Test
    public void test0987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0987");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type10 = typeCircularBuffer9.get();
        boolean boolean11 = typeCircularBuffer9.isFull();
        boolean boolean12 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer14.getClass();
        boolean boolean20 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass19);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        boolean boolean26 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer22.getClass();
        boolean boolean28 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean30 = typeCircularBuffer1.isEmpty();
        boolean boolean31 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type32 = typeCircularBuffer1.get();
        boolean boolean33 = typeCircularBuffer1.isEmpty();
        boolean boolean34 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) 'a');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass39 = typeCircularBuffer38.getClass();
        boolean boolean40 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass39);
        java.lang.reflect.Type type41 = typeCircularBuffer36.get();
        java.lang.reflect.Type type42 = typeCircularBuffer36.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type45 = typeCircularBuffer44.get();
        boolean boolean46 = typeCircularBuffer44.isFull();
        boolean boolean47 = typeCircularBuffer44.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer49 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean50 = typeCircularBuffer49.isEmpty();
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        boolean boolean53 = typeCircularBuffer49.put((java.lang.reflect.Type) wildcardClass52);
        java.lang.Class<?> wildcardClass54 = typeCircularBuffer49.getClass();
        boolean boolean55 = typeCircularBuffer44.put((java.lang.reflect.Type) wildcardClass54);
        java.lang.reflect.Type type56 = typeCircularBuffer44.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer58 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer60 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean61 = typeCircularBuffer60.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer63 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass64 = typeCircularBuffer63.getClass();
        boolean boolean65 = typeCircularBuffer60.put((java.lang.reflect.Type) wildcardClass64);
        java.lang.reflect.Type type66 = typeCircularBuffer60.get();
        boolean boolean67 = typeCircularBuffer58.put(type66);
        boolean boolean68 = typeCircularBuffer44.put(type66);
        java.lang.Class<?> wildcardClass69 = typeCircularBuffer44.getClass();
        boolean boolean70 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass69);
        java.lang.reflect.Type type71 = typeCircularBuffer36.get();
        java.lang.reflect.Type type72 = typeCircularBuffer36.get();
        java.lang.reflect.Type type73 = typeCircularBuffer36.get();
        java.lang.reflect.Type type74 = typeCircularBuffer36.get();
        boolean boolean75 = typeCircularBuffer36.isEmpty();
        java.lang.Class<?> wildcardClass76 = typeCircularBuffer36.getClass();
        boolean boolean77 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNull(type42);
        org.junit.Assert.assertNull(type45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertNull(type72);
        org.junit.Assert.assertNull(type73);
        org.junit.Assert.assertNull(type74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
    }

    @Test
    public void test0988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0988");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        boolean boolean9 = typeCircularBuffer1.isEmpty();
        boolean boolean10 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean13 = typeCircularBuffer12.isEmpty();
        java.lang.reflect.Type type14 = typeCircularBuffer12.get();
        java.lang.reflect.Type type15 = typeCircularBuffer12.get();
        java.lang.reflect.Type type16 = typeCircularBuffer12.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean19 = typeCircularBuffer18.isFull();
        boolean boolean20 = typeCircularBuffer18.isEmpty();
        boolean boolean21 = typeCircularBuffer18.isFull();
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer18.getClass();
        boolean boolean23 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass22);
        boolean boolean24 = typeCircularBuffer12.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type29 = typeCircularBuffer28.get();
        boolean boolean30 = typeCircularBuffer28.isFull();
        boolean boolean31 = typeCircularBuffer28.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean34 = typeCircularBuffer33.isEmpty();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        boolean boolean37 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass36);
        java.lang.Class<?> wildcardClass38 = typeCircularBuffer33.getClass();
        boolean boolean39 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass38);
        boolean boolean40 = typeCircularBuffer28.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean43 = typeCircularBuffer42.isFull();
        boolean boolean44 = typeCircularBuffer42.isEmpty();
        java.lang.reflect.Type type45 = typeCircularBuffer42.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer49 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean50 = typeCircularBuffer49.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer52 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass53 = typeCircularBuffer52.getClass();
        boolean boolean54 = typeCircularBuffer49.put((java.lang.reflect.Type) wildcardClass53);
        java.lang.reflect.Type type55 = typeCircularBuffer49.get();
        boolean boolean56 = typeCircularBuffer47.put(type55);
        java.lang.Class<?> wildcardClass57 = typeCircularBuffer47.getClass();
        boolean boolean58 = typeCircularBuffer42.put((java.lang.reflect.Type) wildcardClass57);
        boolean boolean59 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass57);
        boolean boolean60 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass57);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer62 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean63 = typeCircularBuffer62.isFull();
        java.lang.reflect.Type type64 = typeCircularBuffer62.get();
        boolean boolean65 = typeCircularBuffer62.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer67 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean68 = typeCircularBuffer67.isEmpty();
        java.lang.Class<?> wildcardClass69 = typeCircularBuffer67.getClass();
        boolean boolean70 = typeCircularBuffer62.put((java.lang.reflect.Type) wildcardClass69);
        java.lang.Class<?> wildcardClass71 = typeCircularBuffer62.getClass();
        boolean boolean72 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass71);
        boolean boolean73 = typeCircularBuffer26.isFull();
        boolean boolean74 = typeCircularBuffer26.isEmpty();
        java.lang.Class<?> wildcardClass75 = typeCircularBuffer26.getClass();
        boolean boolean76 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass75);
        java.lang.reflect.Type type77 = typeCircularBuffer12.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer79 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        boolean boolean80 = typeCircularBuffer79.isFull();
        boolean boolean81 = typeCircularBuffer79.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer83 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type84 = typeCircularBuffer83.get();
        boolean boolean85 = typeCircularBuffer83.isFull();
        boolean boolean86 = typeCircularBuffer83.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer88 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean89 = typeCircularBuffer88.isEmpty();
        java.lang.Object obj90 = new java.lang.Object();
        java.lang.Class<?> wildcardClass91 = obj90.getClass();
        boolean boolean92 = typeCircularBuffer88.put((java.lang.reflect.Type) wildcardClass91);
        java.lang.Class<?> wildcardClass93 = typeCircularBuffer88.getClass();
        boolean boolean94 = typeCircularBuffer83.put((java.lang.reflect.Type) wildcardClass93);
        java.lang.reflect.Type type95 = typeCircularBuffer83.get();
        java.lang.Class<?> wildcardClass96 = typeCircularBuffer83.getClass();
        boolean boolean97 = typeCircularBuffer79.put((java.lang.reflect.Type) wildcardClass96);
        boolean boolean98 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass96);
        boolean boolean99 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass96);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(type14);
        org.junit.Assert.assertNull(type15);
        org.junit.Assert.assertNull(type16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(type29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(type45);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(type64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNull(type84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNotNull(type95);
        org.junit.Assert.assertNotNull(wildcardClass96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + true + "'", boolean99 == true);
    }

    @Test
    public void test0989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0989");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 100);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type5 = typeCircularBuffer4.get();
        boolean boolean6 = typeCircularBuffer4.isFull();
        boolean boolean7 = typeCircularBuffer4.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        java.lang.Object obj11 = new java.lang.Object();
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        boolean boolean13 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass12);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer9.getClass();
        boolean boolean15 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass14);
        boolean boolean16 = typeCircularBuffer4.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean19 = typeCircularBuffer18.isFull();
        boolean boolean20 = typeCircularBuffer18.isEmpty();
        java.lang.reflect.Type type21 = typeCircularBuffer18.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean26 = typeCircularBuffer25.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass29 = typeCircularBuffer28.getClass();
        boolean boolean30 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass29);
        java.lang.reflect.Type type31 = typeCircularBuffer25.get();
        boolean boolean32 = typeCircularBuffer23.put(type31);
        java.lang.Class<?> wildcardClass33 = typeCircularBuffer23.getClass();
        boolean boolean34 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass33);
        boolean boolean35 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass33);
        boolean boolean36 = typeCircularBuffer4.isFull();
        java.lang.reflect.Type type37 = typeCircularBuffer4.get();
        boolean boolean38 = typeCircularBuffer1.put(type37);
        java.lang.Class<?> wildcardClass39 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(type21);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test0990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0990");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean9 = typeCircularBuffer8.isFull();
        java.lang.reflect.Type type10 = typeCircularBuffer8.get();
        boolean boolean11 = typeCircularBuffer8.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        java.lang.Class<?> wildcardClass15 = typeCircularBuffer13.getClass();
        boolean boolean16 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass15);
        java.lang.reflect.Type type17 = typeCircularBuffer8.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean20 = typeCircularBuffer19.isFull();
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer19.getClass();
        boolean boolean22 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass21);
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    }

    @Test
    public void test0991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0991");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(type7);
    }

    @Test
    public void test0992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0992");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.invoke.TypeDescriptor> typeDescriptorCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.invoke.TypeDescriptor>((int) (short) 0);
    }

    @Test
    public void test0993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0993");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.Class<?>> wildcardClassCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.Class<?>>((int) ' ');
    }

    @Test
    public void test0994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0994");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        boolean boolean6 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        boolean boolean8 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type11 = typeCircularBuffer10.get();
        boolean boolean12 = typeCircularBuffer10.isFull();
        boolean boolean13 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean16 = typeCircularBuffer15.isEmpty();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        boolean boolean19 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass18);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer15.getClass();
        boolean boolean21 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type22 = typeCircularBuffer10.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean27 = typeCircularBuffer26.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass30 = typeCircularBuffer29.getClass();
        boolean boolean31 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass30);
        java.lang.reflect.Type type32 = typeCircularBuffer26.get();
        boolean boolean33 = typeCircularBuffer24.put(type32);
        boolean boolean34 = typeCircularBuffer10.put(type32);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer10.getClass();
        boolean boolean36 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass35);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type39 = typeCircularBuffer38.get();
        boolean boolean40 = typeCircularBuffer38.isFull();
        boolean boolean41 = typeCircularBuffer38.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer46.getClass();
        boolean boolean48 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass47);
        boolean boolean49 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass47);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer53 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean54 = typeCircularBuffer53.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer56 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass57 = typeCircularBuffer56.getClass();
        boolean boolean58 = typeCircularBuffer53.put((java.lang.reflect.Type) wildcardClass57);
        java.lang.reflect.Type type59 = typeCircularBuffer53.get();
        java.lang.Class<?> wildcardClass60 = typeCircularBuffer53.getClass();
        boolean boolean61 = typeCircularBuffer51.put((java.lang.reflect.Type) wildcardClass60);
        boolean boolean62 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass60);
        boolean boolean63 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass60);
        boolean boolean64 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer66 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type67 = typeCircularBuffer66.get();
        boolean boolean68 = typeCircularBuffer66.isFull();
        boolean boolean69 = typeCircularBuffer66.isFull();
        boolean boolean70 = typeCircularBuffer66.isFull();
        java.lang.reflect.Type type71 = typeCircularBuffer66.get();
        boolean boolean72 = typeCircularBuffer66.isFull();
        boolean boolean73 = typeCircularBuffer66.isFull();
        java.lang.Class<?> wildcardClass74 = typeCircularBuffer66.getClass();
        boolean boolean75 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass74);
        java.lang.reflect.Type type76 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass77 = type76.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(type11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(type39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(type67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(type71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test0995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0995");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.CharSequence> charSequenceCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.CharSequence>((int) (byte) 1);
    }

    @Test
    public void test0996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0996");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean10 = typeCircularBuffer9.isFull();
        boolean boolean11 = typeCircularBuffer9.isEmpty();
        java.lang.reflect.Type type12 = typeCircularBuffer9.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer19.getClass();
        boolean boolean21 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type22 = typeCircularBuffer16.get();
        boolean boolean23 = typeCircularBuffer14.put(type22);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer14.getClass();
        boolean boolean25 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean26 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean27 = typeCircularBuffer1.isEmpty();
        boolean boolean28 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type31 = typeCircularBuffer30.get();
        boolean boolean32 = typeCircularBuffer30.isFull();
        boolean boolean33 = typeCircularBuffer30.isFull();
        boolean boolean34 = typeCircularBuffer30.isEmpty();
        java.lang.reflect.Type type35 = typeCircularBuffer30.get();
        boolean boolean36 = typeCircularBuffer30.isEmpty();
        java.lang.reflect.Type type37 = typeCircularBuffer30.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean40 = typeCircularBuffer39.isEmpty();
        java.lang.reflect.Type type41 = typeCircularBuffer39.get();
        java.lang.reflect.Type type42 = typeCircularBuffer39.get();
        java.lang.reflect.Type type43 = typeCircularBuffer39.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean46 = typeCircularBuffer45.isFull();
        boolean boolean47 = typeCircularBuffer45.isEmpty();
        boolean boolean48 = typeCircularBuffer45.isFull();
        java.lang.Class<?> wildcardClass49 = typeCircularBuffer45.getClass();
        boolean boolean50 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass49);
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer39.getClass();
        boolean boolean52 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean53 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(type12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(type31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(type35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(type37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(type41);
        org.junit.Assert.assertNull(type42);
        org.junit.Assert.assertNull(type43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test0997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0997");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) 'a');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass4 = typeCircularBuffer3.getClass();
        boolean boolean5 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass4);
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type10 = typeCircularBuffer9.get();
        boolean boolean11 = typeCircularBuffer9.isFull();
        boolean boolean12 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer14.getClass();
        boolean boolean20 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass19);
        java.lang.reflect.Type type21 = typeCircularBuffer9.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean26 = typeCircularBuffer25.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass29 = typeCircularBuffer28.getClass();
        boolean boolean30 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass29);
        java.lang.reflect.Type type31 = typeCircularBuffer25.get();
        boolean boolean32 = typeCircularBuffer23.put(type31);
        boolean boolean33 = typeCircularBuffer9.put(type31);
        java.lang.Class<?> wildcardClass34 = typeCircularBuffer9.getClass();
        boolean boolean35 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass34);
        java.lang.reflect.Type type36 = typeCircularBuffer1.get();
        java.lang.reflect.Type type37 = typeCircularBuffer1.get();
        java.lang.reflect.Type type38 = typeCircularBuffer1.get();
        boolean boolean39 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer46.getClass();
        boolean boolean48 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass47);
        java.lang.reflect.Type type49 = typeCircularBuffer43.get();
        boolean boolean50 = typeCircularBuffer41.put(type49);
        boolean boolean51 = typeCircularBuffer41.isFull();
        java.lang.reflect.Type type52 = typeCircularBuffer41.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer54 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type55 = typeCircularBuffer54.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer57 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean58 = typeCircularBuffer57.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer60 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass61 = typeCircularBuffer60.getClass();
        boolean boolean62 = typeCircularBuffer57.put((java.lang.reflect.Type) wildcardClass61);
        java.lang.reflect.Type type63 = typeCircularBuffer57.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer65 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type66 = typeCircularBuffer65.get();
        boolean boolean67 = typeCircularBuffer65.isFull();
        boolean boolean68 = typeCircularBuffer65.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer70 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean71 = typeCircularBuffer70.isEmpty();
        java.lang.Object obj72 = new java.lang.Object();
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        boolean boolean74 = typeCircularBuffer70.put((java.lang.reflect.Type) wildcardClass73);
        java.lang.Class<?> wildcardClass75 = typeCircularBuffer70.getClass();
        boolean boolean76 = typeCircularBuffer65.put((java.lang.reflect.Type) wildcardClass75);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer78 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean79 = typeCircularBuffer78.isEmpty();
        java.lang.Object obj80 = new java.lang.Object();
        java.lang.Class<?> wildcardClass81 = obj80.getClass();
        boolean boolean82 = typeCircularBuffer78.put((java.lang.reflect.Type) wildcardClass81);
        java.lang.Class<?> wildcardClass83 = typeCircularBuffer78.getClass();
        boolean boolean84 = typeCircularBuffer65.put((java.lang.reflect.Type) wildcardClass83);
        boolean boolean85 = typeCircularBuffer57.put((java.lang.reflect.Type) wildcardClass83);
        boolean boolean86 = typeCircularBuffer54.put((java.lang.reflect.Type) wildcardClass83);
        boolean boolean87 = typeCircularBuffer41.put((java.lang.reflect.Type) wildcardClass83);
        boolean boolean88 = typeCircularBuffer41.isFull();
        java.lang.reflect.Type type89 = typeCircularBuffer41.get();
        boolean boolean90 = typeCircularBuffer1.put(type89);
        boolean boolean91 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNull(type37);
        org.junit.Assert.assertNull(type38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNull(type55);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNull(type66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(type89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test0998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0998");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean8 = typeCircularBuffer7.isFull();
        java.lang.reflect.Type type9 = typeCircularBuffer7.get();
        boolean boolean10 = typeCircularBuffer7.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean13 = typeCircularBuffer12.isEmpty();
        java.lang.reflect.Type type14 = typeCircularBuffer12.get();
        java.lang.reflect.Type type15 = typeCircularBuffer12.get();
        java.lang.reflect.Type type16 = typeCircularBuffer12.get();
        boolean boolean17 = typeCircularBuffer12.isFull();
        boolean boolean18 = typeCircularBuffer12.isFull();
        java.lang.reflect.Type type19 = typeCircularBuffer12.get();
        boolean boolean20 = typeCircularBuffer12.isFull();
        boolean boolean21 = typeCircularBuffer12.isEmpty();
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer12.getClass();
        boolean boolean23 = typeCircularBuffer7.put((java.lang.reflect.Type) wildcardClass22);
        boolean boolean24 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass22);
        boolean boolean25 = typeCircularBuffer1.isFull();
        boolean boolean26 = typeCircularBuffer1.isEmpty();
        boolean boolean27 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(type14);
        org.junit.Assert.assertNull(type15);
        org.junit.Assert.assertNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(type19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test0999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0999");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean8 = typeCircularBuffer7.isFull();
        boolean boolean9 = typeCircularBuffer7.isEmpty();
        boolean boolean10 = typeCircularBuffer7.isFull();
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer7.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        boolean boolean13 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type18 = typeCircularBuffer17.get();
        boolean boolean19 = typeCircularBuffer17.isFull();
        boolean boolean20 = typeCircularBuffer17.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        boolean boolean26 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer22.getClass();
        boolean boolean28 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer17.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean32 = typeCircularBuffer31.isFull();
        boolean boolean33 = typeCircularBuffer31.isEmpty();
        java.lang.reflect.Type type34 = typeCircularBuffer31.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean39 = typeCircularBuffer38.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass42 = typeCircularBuffer41.getClass();
        boolean boolean43 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass42);
        java.lang.reflect.Type type44 = typeCircularBuffer38.get();
        boolean boolean45 = typeCircularBuffer36.put(type44);
        java.lang.Class<?> wildcardClass46 = typeCircularBuffer36.getClass();
        boolean boolean47 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass46);
        boolean boolean48 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass46);
        boolean boolean49 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass46);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean52 = typeCircularBuffer51.isFull();
        java.lang.reflect.Type type53 = typeCircularBuffer51.get();
        boolean boolean54 = typeCircularBuffer51.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer56 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean57 = typeCircularBuffer56.isEmpty();
        java.lang.Class<?> wildcardClass58 = typeCircularBuffer56.getClass();
        boolean boolean59 = typeCircularBuffer51.put((java.lang.reflect.Type) wildcardClass58);
        java.lang.Class<?> wildcardClass60 = typeCircularBuffer51.getClass();
        boolean boolean61 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass60);
        boolean boolean62 = typeCircularBuffer15.isFull();
        boolean boolean63 = typeCircularBuffer15.isEmpty();
        java.lang.Class<?> wildcardClass64 = typeCircularBuffer15.getClass();
        boolean boolean65 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass64);
        java.lang.reflect.Type type66 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer68 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        boolean boolean69 = typeCircularBuffer68.isFull();
        boolean boolean70 = typeCircularBuffer68.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer72 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type73 = typeCircularBuffer72.get();
        boolean boolean74 = typeCircularBuffer72.isFull();
        boolean boolean75 = typeCircularBuffer72.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer77 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean78 = typeCircularBuffer77.isEmpty();
        java.lang.Object obj79 = new java.lang.Object();
        java.lang.Class<?> wildcardClass80 = obj79.getClass();
        boolean boolean81 = typeCircularBuffer77.put((java.lang.reflect.Type) wildcardClass80);
        java.lang.Class<?> wildcardClass82 = typeCircularBuffer77.getClass();
        boolean boolean83 = typeCircularBuffer72.put((java.lang.reflect.Type) wildcardClass82);
        java.lang.reflect.Type type84 = typeCircularBuffer72.get();
        java.lang.Class<?> wildcardClass85 = typeCircularBuffer72.getClass();
        boolean boolean86 = typeCircularBuffer68.put((java.lang.reflect.Type) wildcardClass85);
        boolean boolean87 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass85);
        java.lang.reflect.Type type88 = typeCircularBuffer1.get();
        boolean boolean89 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(type18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(type34);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(type53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(type73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(type84);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(type88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test1000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test1000");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        java.lang.reflect.Type type11 = typeCircularBuffer1.get();
        java.lang.reflect.Type type12 = null;
        boolean boolean13 = typeCircularBuffer1.put(type12);
        boolean boolean14 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        boolean boolean18 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean21 = typeCircularBuffer20.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer23.getClass();
        boolean boolean25 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass24);
        java.lang.reflect.Type type26 = typeCircularBuffer20.get();
        boolean boolean27 = typeCircularBuffer16.put(type26);
        boolean boolean28 = typeCircularBuffer1.put(type26);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }
}

