package buffers;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest4 {

    public static boolean debug = false;

    @Test
    public void test2001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2001");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type9 = typeCircularBuffer8.get();
        boolean boolean10 = typeCircularBuffer8.isFull();
        boolean boolean11 = typeCircularBuffer8.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass16);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer13.getClass();
        boolean boolean19 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass18);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean22 = typeCircularBuffer21.isEmpty();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass24);
        java.lang.Class<?> wildcardClass26 = typeCircularBuffer21.getClass();
        boolean boolean27 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass26);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer34.getClass();
        boolean boolean36 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass35);
        java.lang.reflect.Type type37 = typeCircularBuffer31.get();
        boolean boolean38 = typeCircularBuffer29.put(type37);
        java.lang.Class<?> wildcardClass39 = typeCircularBuffer29.getClass();
        boolean boolean40 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass39);
        java.lang.Class<?> wildcardClass41 = typeCircularBuffer8.getClass();
        boolean boolean42 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean43 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type46 = typeCircularBuffer45.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean51 = typeCircularBuffer50.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer53 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass54 = typeCircularBuffer53.getClass();
        boolean boolean55 = typeCircularBuffer50.put((java.lang.reflect.Type) wildcardClass54);
        java.lang.reflect.Type type56 = typeCircularBuffer50.get();
        boolean boolean57 = typeCircularBuffer48.put(type56);
        boolean boolean58 = typeCircularBuffer48.isFull();
        java.lang.reflect.Type type59 = typeCircularBuffer48.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer61 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean62 = typeCircularBuffer61.isEmpty();
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        boolean boolean65 = typeCircularBuffer61.put((java.lang.reflect.Type) wildcardClass64);
        boolean boolean66 = typeCircularBuffer48.put((java.lang.reflect.Type) wildcardClass64);
        boolean boolean67 = typeCircularBuffer45.put((java.lang.reflect.Type) wildcardClass64);
        java.lang.reflect.Type type68 = typeCircularBuffer45.get();
        boolean boolean69 = typeCircularBuffer45.isFull();
        java.lang.reflect.Type type70 = typeCircularBuffer45.get();
        java.lang.Class<?> wildcardClass71 = typeCircularBuffer45.getClass();
        boolean boolean72 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass71);
        boolean boolean73 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(type46);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(type70);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
    }

    @Test
    public void test2002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2002");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer10.get();
        boolean boolean17 = typeCircularBuffer8.put(type16);
        boolean boolean18 = typeCircularBuffer8.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean21 = typeCircularBuffer20.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer23.getClass();
        boolean boolean25 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass24);
        java.lang.reflect.Type type26 = typeCircularBuffer20.get();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        boolean boolean29 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass28);
        boolean boolean30 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass28);
        boolean boolean31 = typeCircularBuffer8.isEmpty();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        boolean boolean34 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass33);
        boolean boolean35 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass33);
        boolean boolean36 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type39 = typeCircularBuffer38.get();
        boolean boolean40 = typeCircularBuffer38.isFull();
        boolean boolean41 = typeCircularBuffer38.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        boolean boolean47 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass46);
        java.lang.Class<?> wildcardClass48 = typeCircularBuffer43.getClass();
        boolean boolean49 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass48);
        java.lang.reflect.Type type50 = typeCircularBuffer38.get();
        boolean boolean51 = typeCircularBuffer38.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer53 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type54 = typeCircularBuffer53.get();
        boolean boolean55 = typeCircularBuffer53.isFull();
        java.lang.Class<?> wildcardClass56 = typeCircularBuffer53.getClass();
        boolean boolean57 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass56);
        java.lang.reflect.Type type58 = typeCircularBuffer38.get();
        boolean boolean59 = typeCircularBuffer1.put(type58);
        java.lang.reflect.Type type60 = typeCircularBuffer1.get();
        java.lang.reflect.Type type61 = typeCircularBuffer1.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass62 = type61.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(type39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(type54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNull(type61);
    }

    @Test
    public void test2003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2003");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test2004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2004");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) ' ');
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer5 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type6 = typeCircularBuffer5.get();
        boolean boolean7 = typeCircularBuffer5.isFull();
        boolean boolean8 = typeCircularBuffer5.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        boolean boolean14 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass13);
        java.lang.Class<?> wildcardClass15 = typeCircularBuffer10.getClass();
        boolean boolean16 = typeCircularBuffer5.put((java.lang.reflect.Type) wildcardClass15);
        java.lang.reflect.Type type17 = typeCircularBuffer5.get();
        boolean boolean18 = typeCircularBuffer5.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean21 = typeCircularBuffer20.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer23.getClass();
        boolean boolean25 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean26 = typeCircularBuffer20.isEmpty();
        java.lang.reflect.Type type27 = typeCircularBuffer20.get();
        boolean boolean28 = typeCircularBuffer5.put(type27);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type31 = typeCircularBuffer30.get();
        boolean boolean32 = typeCircularBuffer30.isFull();
        boolean boolean33 = typeCircularBuffer30.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean36 = typeCircularBuffer35.isEmpty();
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        boolean boolean39 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass38);
        java.lang.Class<?> wildcardClass40 = typeCircularBuffer35.getClass();
        boolean boolean41 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass40);
        java.lang.reflect.Type type42 = typeCircularBuffer30.get();
        boolean boolean43 = typeCircularBuffer30.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type46 = typeCircularBuffer45.get();
        boolean boolean47 = typeCircularBuffer45.isFull();
        java.lang.Class<?> wildcardClass48 = typeCircularBuffer45.getClass();
        boolean boolean49 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass48);
        boolean boolean50 = typeCircularBuffer5.put((java.lang.reflect.Type) wildcardClass48);
        boolean boolean51 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass48);
        boolean boolean52 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type53 = typeCircularBuffer1.get();
        boolean boolean54 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type55 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(type31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(type46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNull(type55);
    }

    @Test
    public void test2005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2005");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        boolean boolean8 = typeCircularBuffer7.isEmpty();
        java.lang.Class<?> wildcardClass9 = typeCircularBuffer7.getClass();
        boolean boolean10 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test2006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2006");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        boolean boolean5 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass8 = typeCircularBuffer7.getClass();
        boolean boolean9 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass8);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean12 = typeCircularBuffer11.isFull();
        boolean boolean13 = typeCircularBuffer11.isEmpty();
        boolean boolean14 = typeCircularBuffer11.isFull();
        java.lang.Class<?> wildcardClass15 = typeCircularBuffer11.getClass();
        boolean boolean16 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass15);
        boolean boolean17 = typeCircularBuffer1.isFull();
        boolean boolean18 = typeCircularBuffer1.isFull();
        boolean boolean19 = typeCircularBuffer1.isEmpty();
        boolean boolean20 = typeCircularBuffer1.isFull();
        boolean boolean21 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test2007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2007");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean4 = typeCircularBuffer3.isFull();
        boolean boolean5 = typeCircularBuffer3.isEmpty();
        java.lang.reflect.Type type6 = typeCircularBuffer3.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer10.get();
        boolean boolean17 = typeCircularBuffer8.put(type16);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer8.getClass();
        boolean boolean19 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass18);
        boolean boolean20 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass18);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type23 = typeCircularBuffer22.get();
        boolean boolean24 = typeCircularBuffer22.isFull();
        boolean boolean25 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean28 = typeCircularBuffer27.isEmpty();
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        boolean boolean31 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass30);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer27.getClass();
        boolean boolean33 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean37 = typeCircularBuffer36.isFull();
        boolean boolean38 = typeCircularBuffer36.isEmpty();
        java.lang.reflect.Type type39 = typeCircularBuffer36.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer46.getClass();
        boolean boolean48 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass47);
        java.lang.reflect.Type type49 = typeCircularBuffer43.get();
        boolean boolean50 = typeCircularBuffer41.put(type49);
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer41.getClass();
        boolean boolean52 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean53 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass51);
        java.lang.Class<?> wildcardClass54 = typeCircularBuffer22.getClass();
        boolean boolean55 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean56 = typeCircularBuffer1.isEmpty();
        boolean boolean57 = typeCircularBuffer1.isFull();
        boolean boolean58 = typeCircularBuffer1.isFull();
        boolean boolean59 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type60 = typeCircularBuffer1.get();
        java.lang.reflect.Type type61 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass62 = type61.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(type39);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test2008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2008");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer6.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.reflect.Type type13 = typeCircularBuffer1.get();
        boolean boolean14 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer19.getClass();
        boolean boolean21 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean22 = typeCircularBuffer16.isEmpty();
        java.lang.reflect.Type type23 = typeCircularBuffer16.get();
        boolean boolean24 = typeCircularBuffer1.put(type23);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type27 = typeCircularBuffer26.get();
        boolean boolean28 = typeCircularBuffer26.isFull();
        boolean boolean29 = typeCircularBuffer26.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        boolean boolean35 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass34);
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer31.getClass();
        boolean boolean37 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass36);
        java.lang.reflect.Type type38 = typeCircularBuffer26.get();
        boolean boolean39 = typeCircularBuffer26.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type42 = typeCircularBuffer41.get();
        boolean boolean43 = typeCircularBuffer41.isFull();
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer41.getClass();
        boolean boolean45 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean46 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean47 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type48 = typeCircularBuffer1.get();
        boolean boolean49 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean52 = typeCircularBuffer51.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer54 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass55 = typeCircularBuffer54.getClass();
        boolean boolean56 = typeCircularBuffer51.put((java.lang.reflect.Type) wildcardClass55);
        java.lang.reflect.Type type57 = typeCircularBuffer51.get();
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        boolean boolean60 = typeCircularBuffer51.put((java.lang.reflect.Type) wildcardClass59);
        java.lang.reflect.Type type61 = typeCircularBuffer51.get();
        boolean boolean62 = typeCircularBuffer51.isFull();
        java.lang.Class<?> wildcardClass63 = typeCircularBuffer51.getClass();
        boolean boolean64 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass63);
        boolean boolean65 = typeCircularBuffer1.isEmpty();
        boolean boolean66 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(type42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
    }

    @Test
    public void test2009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2009");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isFull();
        boolean boolean8 = typeCircularBuffer1.isFull();
        boolean boolean9 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type10 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(type10);
    }

    @Test
    public void test2010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2010");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        java.lang.reflect.Type type11 = typeCircularBuffer1.get();
        java.lang.reflect.Type type12 = null;
        boolean boolean13 = typeCircularBuffer1.put(type12);
        boolean boolean14 = typeCircularBuffer1.isFull();
        boolean boolean15 = typeCircularBuffer1.isFull();
        boolean boolean16 = typeCircularBuffer1.isFull();
        boolean boolean17 = typeCircularBuffer1.isFull();
        boolean boolean18 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type19 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(type19);
    }

    @Test
    public void test2011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2011");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type5 = null;
        boolean boolean6 = typeCircularBuffer1.put(type5);
        boolean boolean7 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass9 = type8.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(type8);
    }

    @Test
    public void test2012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2012");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type12 = typeCircularBuffer1.get();
        boolean boolean13 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type14 = typeCircularBuffer1.get();
        java.lang.reflect.Type type15 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean20 = typeCircularBuffer19.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass23 = typeCircularBuffer22.getClass();
        boolean boolean24 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass23);
        java.lang.reflect.Type type25 = typeCircularBuffer19.get();
        boolean boolean26 = typeCircularBuffer17.put(type25);
        boolean boolean27 = typeCircularBuffer17.isEmpty();
        boolean boolean28 = typeCircularBuffer17.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean31 = typeCircularBuffer30.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass34 = typeCircularBuffer33.getClass();
        boolean boolean35 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass34);
        java.lang.reflect.Type type36 = typeCircularBuffer30.get();
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        boolean boolean39 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass38);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean42 = typeCircularBuffer41.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass45 = typeCircularBuffer44.getClass();
        boolean boolean46 = typeCircularBuffer41.put((java.lang.reflect.Type) wildcardClass45);
        java.lang.reflect.Type type47 = typeCircularBuffer41.get();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        boolean boolean50 = typeCircularBuffer41.put((java.lang.reflect.Type) wildcardClass49);
        java.lang.reflect.Type type51 = typeCircularBuffer41.get();
        boolean boolean52 = typeCircularBuffer30.put(type51);
        boolean boolean53 = typeCircularBuffer17.put(type51);
        boolean boolean54 = typeCircularBuffer17.isEmpty();
        java.lang.reflect.Type type55 = typeCircularBuffer17.get();
        boolean boolean56 = typeCircularBuffer1.put(type55);
        boolean boolean57 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type58 = typeCircularBuffer1.get();
        boolean boolean59 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass60 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(type14);
        org.junit.Assert.assertNull(type15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test2013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2013");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        boolean boolean6 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        boolean boolean9 = typeCircularBuffer1.isFull();
        boolean boolean10 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test2014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2014");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        boolean boolean8 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean12 = typeCircularBuffer11.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass15 = typeCircularBuffer14.getClass();
        boolean boolean16 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass15);
        java.lang.reflect.Type type17 = typeCircularBuffer11.get();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        boolean boolean20 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass19);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass26 = typeCircularBuffer25.getClass();
        boolean boolean27 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass26);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer22.getClass();
        boolean boolean29 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass28);
        boolean boolean30 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.reflect.Type type31 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean34 = typeCircularBuffer33.isEmpty();
        java.lang.reflect.Type type35 = typeCircularBuffer33.get();
        java.lang.reflect.Type type36 = typeCircularBuffer33.get();
        java.lang.reflect.Type type37 = typeCircularBuffer33.get();
        boolean boolean38 = typeCircularBuffer33.isFull();
        java.lang.reflect.Type type39 = typeCircularBuffer33.get();
        boolean boolean40 = typeCircularBuffer33.isEmpty();
        java.lang.Class<?> wildcardClass41 = typeCircularBuffer33.getClass();
        boolean boolean42 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass41);
        java.lang.reflect.Type type43 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(type35);
        org.junit.Assert.assertNull(type36);
        org.junit.Assert.assertNull(type37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(type39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test2015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2015");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        boolean boolean8 = typeCircularBuffer7.isEmpty();
        java.lang.Class<?> wildcardClass9 = typeCircularBuffer7.getClass();
        boolean boolean10 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type14 = typeCircularBuffer13.get();
        boolean boolean15 = typeCircularBuffer13.isFull();
        boolean boolean16 = typeCircularBuffer13.isFull();
        boolean boolean17 = typeCircularBuffer13.isFull();
        java.lang.reflect.Type type18 = typeCircularBuffer13.get();
        boolean boolean19 = typeCircularBuffer13.isEmpty();
        java.lang.reflect.Type type20 = typeCircularBuffer13.get();
        java.lang.reflect.Type type21 = typeCircularBuffer13.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean24 = typeCircularBuffer23.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer26.getClass();
        boolean boolean28 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass27);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean33 = typeCircularBuffer32.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer35.getClass();
        boolean boolean37 = typeCircularBuffer32.put((java.lang.reflect.Type) wildcardClass36);
        java.lang.reflect.Type type38 = typeCircularBuffer32.get();
        boolean boolean39 = typeCircularBuffer30.put(type38);
        boolean boolean40 = typeCircularBuffer30.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean43 = typeCircularBuffer42.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass46 = typeCircularBuffer45.getClass();
        boolean boolean47 = typeCircularBuffer42.put((java.lang.reflect.Type) wildcardClass46);
        java.lang.reflect.Type type48 = typeCircularBuffer42.get();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        boolean boolean51 = typeCircularBuffer42.put((java.lang.reflect.Type) wildcardClass50);
        boolean boolean52 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass50);
        boolean boolean53 = typeCircularBuffer30.isEmpty();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        boolean boolean56 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass55);
        boolean boolean57 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass55);
        boolean boolean58 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass55);
        boolean boolean59 = typeCircularBuffer13.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer61 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 1);
        java.lang.reflect.Type type62 = typeCircularBuffer61.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer64 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean65 = typeCircularBuffer64.isFull();
        boolean boolean66 = typeCircularBuffer64.isEmpty();
        java.lang.reflect.Type type67 = typeCircularBuffer64.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer69 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer71 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean72 = typeCircularBuffer71.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer74 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass75 = typeCircularBuffer74.getClass();
        boolean boolean76 = typeCircularBuffer71.put((java.lang.reflect.Type) wildcardClass75);
        java.lang.reflect.Type type77 = typeCircularBuffer71.get();
        boolean boolean78 = typeCircularBuffer69.put(type77);
        java.lang.Class<?> wildcardClass79 = typeCircularBuffer69.getClass();
        boolean boolean80 = typeCircularBuffer64.put((java.lang.reflect.Type) wildcardClass79);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer82 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(10);
        java.lang.Class<?> wildcardClass83 = typeCircularBuffer82.getClass();
        boolean boolean84 = typeCircularBuffer64.put((java.lang.reflect.Type) wildcardClass83);
        boolean boolean85 = typeCircularBuffer61.put((java.lang.reflect.Type) wildcardClass83);
        boolean boolean86 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass83);
        java.lang.reflect.Type type87 = typeCircularBuffer13.get();
        java.lang.Class<?> wildcardClass88 = type87.getClass();
        boolean boolean89 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass88);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(type14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(type18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(type20);
        org.junit.Assert.assertNull(type21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(type62);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNull(type67);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(type87);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
    }

    @Test
    public void test2016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2016");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        java.lang.reflect.Type type12 = typeCircularBuffer6.get();
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        boolean boolean15 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass14);
        boolean boolean16 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass14);
        boolean boolean17 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type18 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean21 = typeCircularBuffer20.isFull();
        boolean boolean22 = typeCircularBuffer20.isEmpty();
        boolean boolean23 = typeCircularBuffer20.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean26 = typeCircularBuffer25.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass29 = typeCircularBuffer28.getClass();
        boolean boolean30 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass29);
        java.lang.reflect.Type type31 = typeCircularBuffer25.get();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        boolean boolean34 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass33);
        boolean boolean35 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass33);
        boolean boolean36 = typeCircularBuffer20.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean41 = typeCircularBuffer40.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer43.getClass();
        boolean boolean45 = typeCircularBuffer40.put((java.lang.reflect.Type) wildcardClass44);
        java.lang.reflect.Type type46 = typeCircularBuffer40.get();
        boolean boolean47 = typeCircularBuffer38.put(type46);
        boolean boolean48 = typeCircularBuffer38.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean51 = typeCircularBuffer50.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer53 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass54 = typeCircularBuffer53.getClass();
        boolean boolean55 = typeCircularBuffer50.put((java.lang.reflect.Type) wildcardClass54);
        java.lang.reflect.Type type56 = typeCircularBuffer50.get();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        boolean boolean59 = typeCircularBuffer50.put((java.lang.reflect.Type) wildcardClass58);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer61 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean62 = typeCircularBuffer61.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer64 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass65 = typeCircularBuffer64.getClass();
        boolean boolean66 = typeCircularBuffer61.put((java.lang.reflect.Type) wildcardClass65);
        java.lang.Class<?> wildcardClass67 = typeCircularBuffer61.getClass();
        boolean boolean68 = typeCircularBuffer50.put((java.lang.reflect.Type) wildcardClass67);
        boolean boolean69 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass67);
        boolean boolean70 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass67);
        boolean boolean71 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass67);
        java.lang.reflect.Type type72 = typeCircularBuffer1.get();
        boolean boolean73 = typeCircularBuffer1.isEmpty();
        boolean boolean74 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass75 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test2017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2017");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertNull(type6);
    }

    @Test
    public void test2018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2018");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) 'a');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass4 = typeCircularBuffer3.getClass();
        boolean boolean5 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass4);
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        java.lang.reflect.Type type15 = null;
        boolean boolean16 = typeCircularBuffer9.put(type15);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean21 = typeCircularBuffer20.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer23.getClass();
        boolean boolean25 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass24);
        java.lang.reflect.Type type26 = typeCircularBuffer20.get();
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer20.getClass();
        boolean boolean28 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean30 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass27);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean33 = typeCircularBuffer32.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer35.getClass();
        boolean boolean37 = typeCircularBuffer32.put((java.lang.reflect.Type) wildcardClass36);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean42 = typeCircularBuffer41.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass45 = typeCircularBuffer44.getClass();
        boolean boolean46 = typeCircularBuffer41.put((java.lang.reflect.Type) wildcardClass45);
        java.lang.reflect.Type type47 = typeCircularBuffer41.get();
        boolean boolean48 = typeCircularBuffer39.put(type47);
        boolean boolean49 = typeCircularBuffer39.isFull();
        java.lang.reflect.Type type50 = typeCircularBuffer39.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer52 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean53 = typeCircularBuffer52.isEmpty();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        boolean boolean56 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass55);
        boolean boolean57 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass55);
        boolean boolean58 = typeCircularBuffer32.put((java.lang.reflect.Type) wildcardClass55);
        boolean boolean59 = typeCircularBuffer32.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer61 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean62 = typeCircularBuffer61.isFull();
        boolean boolean63 = typeCircularBuffer61.isEmpty();
        boolean boolean64 = typeCircularBuffer61.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer66 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean67 = typeCircularBuffer66.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer69 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass70 = typeCircularBuffer69.getClass();
        boolean boolean71 = typeCircularBuffer66.put((java.lang.reflect.Type) wildcardClass70);
        java.lang.reflect.Type type72 = typeCircularBuffer66.get();
        java.lang.Object obj73 = new java.lang.Object();
        java.lang.Class<?> wildcardClass74 = obj73.getClass();
        boolean boolean75 = typeCircularBuffer66.put((java.lang.reflect.Type) wildcardClass74);
        boolean boolean76 = typeCircularBuffer61.put((java.lang.reflect.Type) wildcardClass74);
        boolean boolean77 = typeCircularBuffer61.isFull();
        java.lang.reflect.Type type78 = typeCircularBuffer61.get();
        boolean boolean79 = typeCircularBuffer32.put(type78);
        boolean boolean80 = typeCircularBuffer32.isEmpty();
        boolean boolean81 = typeCircularBuffer32.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer83 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean84 = typeCircularBuffer83.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer86 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass87 = typeCircularBuffer86.getClass();
        boolean boolean88 = typeCircularBuffer83.put((java.lang.reflect.Type) wildcardClass87);
        boolean boolean89 = typeCircularBuffer83.isFull();
        java.lang.reflect.Type type90 = typeCircularBuffer83.get();
        java.lang.reflect.Type type91 = typeCircularBuffer83.get();
        boolean boolean92 = typeCircularBuffer83.isEmpty();
        java.lang.Class<?> wildcardClass93 = typeCircularBuffer83.getClass();
        boolean boolean94 = typeCircularBuffer32.put((java.lang.reflect.Type) wildcardClass93);
        boolean boolean95 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass93);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(type90);
        org.junit.Assert.assertNull(type91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
    }

    @Test
    public void test2019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2019");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean10 = typeCircularBuffer9.isFull();
        boolean boolean11 = typeCircularBuffer9.isEmpty();
        java.lang.reflect.Type type12 = typeCircularBuffer9.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer19.getClass();
        boolean boolean21 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type22 = typeCircularBuffer16.get();
        boolean boolean23 = typeCircularBuffer14.put(type22);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer14.getClass();
        boolean boolean25 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean26 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass24);
        java.lang.reflect.Type type27 = typeCircularBuffer1.get();
        boolean boolean28 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type29 = typeCircularBuffer1.get();
        boolean boolean30 = typeCircularBuffer1.isFull();
        boolean boolean31 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(type12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(type29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test2020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2020");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        java.lang.reflect.Type type15 = typeCircularBuffer9.get();
        boolean boolean16 = typeCircularBuffer7.put(type15);
        boolean boolean17 = typeCircularBuffer7.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean20 = typeCircularBuffer19.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass23 = typeCircularBuffer22.getClass();
        boolean boolean24 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass23);
        java.lang.reflect.Type type25 = typeCircularBuffer19.get();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        boolean boolean28 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer7.put((java.lang.reflect.Type) wildcardClass27);
        java.lang.reflect.Type type30 = typeCircularBuffer7.get();
        boolean boolean31 = typeCircularBuffer7.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type34 = typeCircularBuffer33.get();
        boolean boolean35 = typeCircularBuffer33.isFull();
        boolean boolean36 = typeCircularBuffer33.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean39 = typeCircularBuffer38.isEmpty();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        boolean boolean42 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass41);
        java.lang.Class<?> wildcardClass43 = typeCircularBuffer38.getClass();
        boolean boolean44 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass43);
        java.lang.reflect.Type type45 = typeCircularBuffer33.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer49 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean50 = typeCircularBuffer49.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer52 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass53 = typeCircularBuffer52.getClass();
        boolean boolean54 = typeCircularBuffer49.put((java.lang.reflect.Type) wildcardClass53);
        java.lang.reflect.Type type55 = typeCircularBuffer49.get();
        boolean boolean56 = typeCircularBuffer47.put(type55);
        boolean boolean57 = typeCircularBuffer33.put(type55);
        java.lang.reflect.Type type58 = typeCircularBuffer33.get();
        boolean boolean59 = typeCircularBuffer7.put(type58);
        boolean boolean60 = typeCircularBuffer1.put(type58);
        boolean boolean61 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(type34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test2021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2021");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
    }

    @Test
    public void test2022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2022");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        boolean boolean5 = typeCircularBuffer1.isFull();
        boolean boolean6 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type9 = typeCircularBuffer8.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        boolean boolean20 = typeCircularBuffer11.put(type19);
        boolean boolean21 = typeCircularBuffer11.isFull();
        java.lang.reflect.Type type22 = typeCircularBuffer11.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean25 = typeCircularBuffer24.isEmpty();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        boolean boolean28 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean30 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass27);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 0);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer34.getClass();
        boolean boolean36 = typeCircularBuffer32.put((java.lang.reflect.Type) wildcardClass35);
        boolean boolean37 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass35);
        boolean boolean38 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass35);
        java.lang.reflect.Type type39 = typeCircularBuffer1.get();
        boolean boolean40 = typeCircularBuffer1.isFull();
        boolean boolean41 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
    }

    @Test
    public void test2023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2023");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        java.lang.reflect.Type type11 = typeCircularBuffer1.get();
        java.lang.reflect.Type type12 = null;
        boolean boolean13 = typeCircularBuffer1.put(type12);
        boolean boolean14 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 10);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type19 = typeCircularBuffer18.get();
        boolean boolean20 = typeCircularBuffer18.isFull();
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer18.getClass();
        boolean boolean22 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass21);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type26 = typeCircularBuffer25.get();
        boolean boolean27 = typeCircularBuffer25.isFull();
        boolean boolean28 = typeCircularBuffer25.isFull();
        boolean boolean29 = typeCircularBuffer25.isFull();
        java.lang.reflect.Type type30 = typeCircularBuffer25.get();
        boolean boolean31 = typeCircularBuffer25.isEmpty();
        java.lang.reflect.Type type32 = typeCircularBuffer25.get();
        java.lang.reflect.Type type33 = typeCircularBuffer25.get();
        java.lang.Class<?> wildcardClass34 = typeCircularBuffer25.getClass();
        boolean boolean35 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass34);
        java.lang.reflect.Type type36 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(type19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(type26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(type32);
        org.junit.Assert.assertNull(type33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(type36);
    }

    @Test
    public void test2024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2024");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer6.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean15 = typeCircularBuffer14.isFull();
        java.lang.reflect.Type type16 = typeCircularBuffer14.get();
        boolean boolean17 = typeCircularBuffer14.isEmpty();
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer14.getClass();
        boolean boolean19 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass18);
        boolean boolean20 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type23 = typeCircularBuffer22.get();
        boolean boolean24 = typeCircularBuffer22.isFull();
        boolean boolean25 = typeCircularBuffer22.isFull();
        boolean boolean26 = typeCircularBuffer22.isFull();
        boolean boolean27 = typeCircularBuffer22.isFull();
        boolean boolean28 = typeCircularBuffer22.isFull();
        boolean boolean29 = typeCircularBuffer22.isEmpty();
        java.lang.reflect.Type type30 = typeCircularBuffer22.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean33 = typeCircularBuffer32.isEmpty();
        java.lang.reflect.Type type34 = typeCircularBuffer32.get();
        boolean boolean35 = typeCircularBuffer32.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type38 = typeCircularBuffer37.get();
        boolean boolean39 = typeCircularBuffer37.isFull();
        boolean boolean40 = typeCircularBuffer37.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean43 = typeCircularBuffer42.isEmpty();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        boolean boolean46 = typeCircularBuffer42.put((java.lang.reflect.Type) wildcardClass45);
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer42.getClass();
        boolean boolean48 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass47);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean51 = typeCircularBuffer50.isEmpty();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        boolean boolean54 = typeCircularBuffer50.put((java.lang.reflect.Type) wildcardClass53);
        java.lang.Class<?> wildcardClass55 = typeCircularBuffer50.getClass();
        boolean boolean56 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass55);
        boolean boolean57 = typeCircularBuffer32.put((java.lang.reflect.Type) wildcardClass55);
        boolean boolean58 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass55);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer60 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean61 = typeCircularBuffer60.isEmpty();
        java.lang.reflect.Type type62 = typeCircularBuffer60.get();
        java.lang.reflect.Type type63 = typeCircularBuffer60.get();
        java.lang.reflect.Type type64 = typeCircularBuffer60.get();
        boolean boolean65 = typeCircularBuffer60.isFull();
        boolean boolean66 = typeCircularBuffer60.isFull();
        java.lang.reflect.Type type67 = typeCircularBuffer60.get();
        boolean boolean68 = typeCircularBuffer60.isFull();
        boolean boolean69 = typeCircularBuffer60.isEmpty();
        boolean boolean70 = typeCircularBuffer60.isFull();
        java.lang.Class<?> wildcardClass71 = typeCircularBuffer60.getClass();
        boolean boolean72 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass71);
        boolean boolean73 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass71);
        boolean boolean74 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer76 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type77 = typeCircularBuffer76.get();
        boolean boolean78 = typeCircularBuffer76.isFull();
        boolean boolean79 = typeCircularBuffer76.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer81 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean82 = typeCircularBuffer81.isEmpty();
        java.lang.Object obj83 = new java.lang.Object();
        java.lang.Class<?> wildcardClass84 = obj83.getClass();
        boolean boolean85 = typeCircularBuffer81.put((java.lang.reflect.Type) wildcardClass84);
        java.lang.Class<?> wildcardClass86 = typeCircularBuffer81.getClass();
        boolean boolean87 = typeCircularBuffer76.put((java.lang.reflect.Type) wildcardClass86);
        java.lang.reflect.Type type88 = typeCircularBuffer76.get();
        boolean boolean89 = typeCircularBuffer1.put(type88);
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(type30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(type34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(type38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(type62);
        org.junit.Assert.assertNull(type63);
        org.junit.Assert.assertNull(type64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(type67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNull(type77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(type88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test2025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2025");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        boolean boolean12 = typeCircularBuffer6.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer17.getClass();
        boolean boolean19 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass18);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean24 = typeCircularBuffer23.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer26.getClass();
        boolean boolean28 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass27);
        java.lang.reflect.Type type29 = typeCircularBuffer23.get();
        boolean boolean30 = typeCircularBuffer21.put(type29);
        boolean boolean31 = typeCircularBuffer21.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean34 = typeCircularBuffer33.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass37 = typeCircularBuffer36.getClass();
        boolean boolean38 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass37);
        java.lang.reflect.Type type39 = typeCircularBuffer33.get();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        boolean boolean42 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean43 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean44 = typeCircularBuffer21.isEmpty();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        boolean boolean47 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass46);
        boolean boolean48 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass46);
        boolean boolean49 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass46);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean52 = typeCircularBuffer51.isEmpty();
        boolean boolean53 = typeCircularBuffer51.isFull();
        java.lang.reflect.Type type54 = typeCircularBuffer51.get();
        boolean boolean55 = typeCircularBuffer51.isFull();
        java.lang.Class<?> wildcardClass56 = typeCircularBuffer51.getClass();
        boolean boolean57 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass56);
        boolean boolean58 = typeCircularBuffer6.isFull();
        boolean boolean59 = typeCircularBuffer6.isEmpty();
        boolean boolean60 = typeCircularBuffer6.isEmpty();
        java.lang.Class<?> wildcardClass61 = typeCircularBuffer6.getClass();
        boolean boolean62 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass61);
        boolean boolean63 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type64 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(type54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(type64);
    }

    @Test
    public void test2026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2026");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        java.lang.reflect.Type type12 = typeCircularBuffer6.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type15 = typeCircularBuffer14.get();
        boolean boolean16 = typeCircularBuffer14.isFull();
        boolean boolean17 = typeCircularBuffer14.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean20 = typeCircularBuffer19.isEmpty();
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        boolean boolean23 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass22);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer19.getClass();
        boolean boolean25 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass24);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean28 = typeCircularBuffer27.isEmpty();
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        boolean boolean31 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass30);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer27.getClass();
        boolean boolean33 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean35 = typeCircularBuffer6.isEmpty();
        boolean boolean36 = typeCircularBuffer6.isFull();
        java.lang.reflect.Type type37 = typeCircularBuffer6.get();
        boolean boolean38 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean41 = typeCircularBuffer40.isFull();
        boolean boolean42 = typeCircularBuffer40.isEmpty();
        java.lang.reflect.Type type43 = typeCircularBuffer40.get();
        boolean boolean44 = typeCircularBuffer40.isEmpty();
        boolean boolean45 = typeCircularBuffer40.isEmpty();
        java.lang.Class<?> wildcardClass46 = typeCircularBuffer40.getClass();
        boolean boolean47 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass46);
        boolean boolean48 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass46);
        boolean boolean49 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type52 = typeCircularBuffer51.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer54 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer56 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean57 = typeCircularBuffer56.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer59 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass60 = typeCircularBuffer59.getClass();
        boolean boolean61 = typeCircularBuffer56.put((java.lang.reflect.Type) wildcardClass60);
        java.lang.reflect.Type type62 = typeCircularBuffer56.get();
        boolean boolean63 = typeCircularBuffer54.put(type62);
        boolean boolean64 = typeCircularBuffer54.isFull();
        java.lang.reflect.Type type65 = typeCircularBuffer54.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer67 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean68 = typeCircularBuffer67.isEmpty();
        java.lang.Object obj69 = new java.lang.Object();
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        boolean boolean71 = typeCircularBuffer67.put((java.lang.reflect.Type) wildcardClass70);
        boolean boolean72 = typeCircularBuffer54.put((java.lang.reflect.Type) wildcardClass70);
        boolean boolean73 = typeCircularBuffer51.put((java.lang.reflect.Type) wildcardClass70);
        boolean boolean74 = typeCircularBuffer51.isEmpty();
        java.lang.reflect.Type type75 = typeCircularBuffer51.get();
        boolean boolean76 = typeCircularBuffer51.isEmpty();
        java.lang.Class<?> wildcardClass77 = typeCircularBuffer51.getClass();
        boolean boolean78 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass77);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNull(type15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(type43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(type52);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
    }

    @Test
    public void test2027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2027");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test2028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2028");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type12 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        boolean boolean19 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass17);
        boolean boolean20 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type21 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean24 = typeCircularBuffer23.isFull();
        boolean boolean25 = typeCircularBuffer23.isEmpty();
        boolean boolean26 = typeCircularBuffer23.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer31.getClass();
        boolean boolean33 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass32);
        java.lang.reflect.Type type34 = typeCircularBuffer28.get();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        boolean boolean37 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean38 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean39 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass36);
        java.lang.reflect.Type type40 = typeCircularBuffer1.get();
        java.lang.reflect.Type type41 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        boolean boolean45 = typeCircularBuffer43.isEmpty();
        boolean boolean46 = typeCircularBuffer43.isEmpty();
        boolean boolean47 = typeCircularBuffer43.isFull();
        boolean boolean48 = typeCircularBuffer43.isFull();
        boolean boolean49 = typeCircularBuffer43.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean52 = typeCircularBuffer51.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer54 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass55 = typeCircularBuffer54.getClass();
        boolean boolean56 = typeCircularBuffer51.put((java.lang.reflect.Type) wildcardClass55);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer58 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer60 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean61 = typeCircularBuffer60.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer63 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass64 = typeCircularBuffer63.getClass();
        boolean boolean65 = typeCircularBuffer60.put((java.lang.reflect.Type) wildcardClass64);
        java.lang.reflect.Type type66 = typeCircularBuffer60.get();
        boolean boolean67 = typeCircularBuffer58.put(type66);
        boolean boolean68 = typeCircularBuffer58.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer70 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean71 = typeCircularBuffer70.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer73 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass74 = typeCircularBuffer73.getClass();
        boolean boolean75 = typeCircularBuffer70.put((java.lang.reflect.Type) wildcardClass74);
        java.lang.reflect.Type type76 = typeCircularBuffer70.get();
        java.lang.Object obj77 = new java.lang.Object();
        java.lang.Class<?> wildcardClass78 = obj77.getClass();
        boolean boolean79 = typeCircularBuffer70.put((java.lang.reflect.Type) wildcardClass78);
        boolean boolean80 = typeCircularBuffer58.put((java.lang.reflect.Type) wildcardClass78);
        boolean boolean81 = typeCircularBuffer58.isEmpty();
        java.lang.Object obj82 = new java.lang.Object();
        java.lang.Class<?> wildcardClass83 = obj82.getClass();
        boolean boolean84 = typeCircularBuffer58.put((java.lang.reflect.Type) wildcardClass83);
        boolean boolean85 = typeCircularBuffer51.put((java.lang.reflect.Type) wildcardClass83);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer87 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean88 = typeCircularBuffer87.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer90 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass91 = typeCircularBuffer90.getClass();
        boolean boolean92 = typeCircularBuffer87.put((java.lang.reflect.Type) wildcardClass91);
        java.lang.reflect.Type type93 = typeCircularBuffer87.get();
        java.lang.Class<?> wildcardClass94 = typeCircularBuffer87.getClass();
        boolean boolean95 = typeCircularBuffer51.put((java.lang.reflect.Type) wildcardClass94);
        boolean boolean96 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass94);
        boolean boolean97 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass94);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNull(type41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(type93);
        org.junit.Assert.assertNotNull(wildcardClass94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
    }

    @Test
    public void test2029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2029");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer17.getClass();
        boolean boolean19 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass18);
        java.lang.reflect.Type type20 = typeCircularBuffer14.get();
        boolean boolean21 = typeCircularBuffer12.put(type20);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer12.getClass();
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass22);
        boolean boolean24 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type25 = null;
        boolean boolean26 = typeCircularBuffer1.put(type25);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test2030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2030");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertNull(type9);
    }

    @Test
    public void test2031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2031");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        java.lang.reflect.Type type12 = typeCircularBuffer6.get();
        boolean boolean13 = typeCircularBuffer4.put(type12);
        boolean boolean14 = typeCircularBuffer4.isFull();
        java.lang.reflect.Type type15 = typeCircularBuffer4.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        boolean boolean21 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean22 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean24 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type25 = typeCircularBuffer1.get();
        boolean boolean26 = typeCircularBuffer1.isFull();
        boolean boolean27 = typeCircularBuffer1.isFull();
        boolean boolean28 = typeCircularBuffer1.isFull();
        boolean boolean29 = typeCircularBuffer1.isFull();
        boolean boolean30 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    }

    @Test
    public void test2032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2032");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type12 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        boolean boolean19 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass17);
        boolean boolean20 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type21 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean24 = typeCircularBuffer23.isFull();
        boolean boolean25 = typeCircularBuffer23.isEmpty();
        boolean boolean26 = typeCircularBuffer23.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer31.getClass();
        boolean boolean33 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass32);
        java.lang.reflect.Type type34 = typeCircularBuffer28.get();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        boolean boolean37 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean38 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean39 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass36);
        java.lang.reflect.Type type40 = typeCircularBuffer1.get();
        boolean boolean41 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type42 = typeCircularBuffer1.get();
        boolean boolean43 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(type42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
    }

    @Test
    public void test2033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2033");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean9 = typeCircularBuffer8.isFull();
        boolean boolean10 = typeCircularBuffer8.isEmpty();
        boolean boolean11 = typeCircularBuffer8.isFull();
        java.lang.Class<?> wildcardClass12 = typeCircularBuffer8.getClass();
        boolean boolean13 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass12);
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test2034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2034");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type12 = null;
        boolean boolean13 = typeCircularBuffer1.put(type12);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test2035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2035");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(type7);
    }

    @Test
    public void test2036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2036");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean10 = typeCircularBuffer9.isFull();
        boolean boolean11 = typeCircularBuffer9.isEmpty();
        java.lang.reflect.Type type12 = typeCircularBuffer9.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer19.getClass();
        boolean boolean21 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type22 = typeCircularBuffer16.get();
        boolean boolean23 = typeCircularBuffer14.put(type22);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer14.getClass();
        boolean boolean25 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean26 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass24);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) ' ');
        java.lang.Class<?> wildcardClass29 = typeCircularBuffer28.getClass();
        boolean boolean30 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass29);
        java.lang.reflect.Type type31 = typeCircularBuffer1.get();
        java.lang.reflect.Type type32 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(type12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNull(type32);
    }

    @Test
    public void test2037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2037");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type4 = typeCircularBuffer3.get();
        boolean boolean5 = typeCircularBuffer3.isFull();
        boolean boolean6 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean9 = typeCircularBuffer8.isEmpty();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer8.getClass();
        boolean boolean14 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass13);
        boolean boolean15 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean18 = typeCircularBuffer17.isFull();
        boolean boolean19 = typeCircularBuffer17.isEmpty();
        java.lang.reflect.Type type20 = typeCircularBuffer17.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean25 = typeCircularBuffer24.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer27.getClass();
        boolean boolean29 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.reflect.Type type30 = typeCircularBuffer24.get();
        boolean boolean31 = typeCircularBuffer22.put(type30);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer22.getClass();
        boolean boolean33 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean35 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass32);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean38 = typeCircularBuffer37.isFull();
        java.lang.reflect.Type type39 = typeCircularBuffer37.get();
        boolean boolean40 = typeCircularBuffer37.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean43 = typeCircularBuffer42.isEmpty();
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer42.getClass();
        boolean boolean45 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass44);
        java.lang.Class<?> wildcardClass46 = typeCircularBuffer37.getClass();
        boolean boolean47 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass46);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer49 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean50 = typeCircularBuffer49.isFull();
        boolean boolean51 = typeCircularBuffer49.isEmpty();
        boolean boolean52 = typeCircularBuffer49.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer54 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean55 = typeCircularBuffer54.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer57 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass58 = typeCircularBuffer57.getClass();
        boolean boolean59 = typeCircularBuffer54.put((java.lang.reflect.Type) wildcardClass58);
        java.lang.reflect.Type type60 = typeCircularBuffer54.get();
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        boolean boolean63 = typeCircularBuffer54.put((java.lang.reflect.Type) wildcardClass62);
        boolean boolean64 = typeCircularBuffer49.put((java.lang.reflect.Type) wildcardClass62);
        boolean boolean65 = typeCircularBuffer49.isFull();
        java.lang.reflect.Type type66 = typeCircularBuffer49.get();
        boolean boolean67 = typeCircularBuffer1.put(type66);
        java.lang.Class<?> wildcardClass68 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(type20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(type39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test2038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2038");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass10);
        boolean boolean13 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer20.getClass();
        boolean boolean22 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type23 = typeCircularBuffer17.get();
        boolean boolean24 = typeCircularBuffer15.put(type23);
        boolean boolean25 = typeCircularBuffer15.isFull();
        java.lang.reflect.Type type26 = typeCircularBuffer15.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        boolean boolean32 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass31);
        boolean boolean33 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass31);
        java.lang.reflect.Type type34 = typeCircularBuffer15.get();
        boolean boolean35 = typeCircularBuffer1.put(type34);
        java.lang.reflect.Type type36 = typeCircularBuffer1.get();
        boolean boolean37 = typeCircularBuffer1.isEmpty();
        boolean boolean38 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(type36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
    }

    @Test
    public void test2039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2039");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        java.lang.Class<?> wildcardClass8 = typeCircularBuffer6.getClass();
        boolean boolean9 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass8);
        boolean boolean10 = typeCircularBuffer1.isFull();
        boolean boolean11 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass12 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test2040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2040");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        boolean boolean7 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.GenericDeclaration> genericDeclarationCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.GenericDeclaration>((int) (short) 100);
        java.lang.Class<?> wildcardClass10 = genericDeclarationCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass10);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean14 = typeCircularBuffer13.isFull();
        java.lang.reflect.Type type15 = typeCircularBuffer13.get();
        boolean boolean16 = typeCircularBuffer13.isFull();
        java.lang.reflect.Type type17 = typeCircularBuffer13.get();
        boolean boolean18 = typeCircularBuffer13.isFull();
        boolean boolean19 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean22 = typeCircularBuffer21.isFull();
        boolean boolean23 = typeCircularBuffer21.isEmpty();
        java.lang.reflect.Type type24 = typeCircularBuffer21.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer31.getClass();
        boolean boolean33 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass32);
        java.lang.reflect.Type type34 = typeCircularBuffer28.get();
        boolean boolean35 = typeCircularBuffer26.put(type34);
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer26.getClass();
        boolean boolean37 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean38 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean39 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean40 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(type15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(type17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(type24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
    }

    @Test
    public void test2041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2041");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>((int) '4');
        java.lang.Class<?> wildcardClass9 = wildcardClassOfFieldCircularBuffer8.getClass();
        boolean boolean10 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.reflect.Type type11 = typeCircularBuffer1.get();
        java.lang.reflect.Type type12 = typeCircularBuffer1.get();
        boolean boolean13 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test2042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2042");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        boolean boolean8 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        boolean boolean12 = typeCircularBuffer10.isFull();
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer10.getClass();
        boolean boolean14 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test2043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2043");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        java.lang.reflect.Type type12 = typeCircularBuffer6.get();
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        boolean boolean15 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass14);
        boolean boolean16 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass14);
        boolean boolean17 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type18 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean21 = typeCircularBuffer20.isFull();
        boolean boolean22 = typeCircularBuffer20.isEmpty();
        boolean boolean23 = typeCircularBuffer20.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean26 = typeCircularBuffer25.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass29 = typeCircularBuffer28.getClass();
        boolean boolean30 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass29);
        java.lang.reflect.Type type31 = typeCircularBuffer25.get();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        boolean boolean34 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass33);
        boolean boolean35 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass33);
        boolean boolean36 = typeCircularBuffer20.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean41 = typeCircularBuffer40.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer43.getClass();
        boolean boolean45 = typeCircularBuffer40.put((java.lang.reflect.Type) wildcardClass44);
        java.lang.reflect.Type type46 = typeCircularBuffer40.get();
        boolean boolean47 = typeCircularBuffer38.put(type46);
        boolean boolean48 = typeCircularBuffer38.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean51 = typeCircularBuffer50.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer53 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass54 = typeCircularBuffer53.getClass();
        boolean boolean55 = typeCircularBuffer50.put((java.lang.reflect.Type) wildcardClass54);
        java.lang.reflect.Type type56 = typeCircularBuffer50.get();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        boolean boolean59 = typeCircularBuffer50.put((java.lang.reflect.Type) wildcardClass58);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer61 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean62 = typeCircularBuffer61.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer64 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass65 = typeCircularBuffer64.getClass();
        boolean boolean66 = typeCircularBuffer61.put((java.lang.reflect.Type) wildcardClass65);
        java.lang.Class<?> wildcardClass67 = typeCircularBuffer61.getClass();
        boolean boolean68 = typeCircularBuffer50.put((java.lang.reflect.Type) wildcardClass67);
        boolean boolean69 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass67);
        boolean boolean70 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass67);
        boolean boolean71 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass67);
        boolean boolean72 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type73 = typeCircularBuffer1.get();
        java.lang.reflect.Type type74 = typeCircularBuffer1.get();
        java.lang.reflect.Type type75 = typeCircularBuffer1.get();
        boolean boolean76 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertNull(type74);
        org.junit.Assert.assertNull(type75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
    }

    @Test
    public void test2044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2044");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass10);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer19.getClass();
        boolean boolean21 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type22 = typeCircularBuffer16.get();
        java.lang.Class<?> wildcardClass23 = typeCircularBuffer16.getClass();
        boolean boolean24 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass23);
        boolean boolean25 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass23);
        java.lang.reflect.Type type26 = typeCircularBuffer1.get();
        java.lang.reflect.Type type27 = typeCircularBuffer1.get();
        boolean boolean28 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type29 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type32 = typeCircularBuffer31.get();
        boolean boolean33 = typeCircularBuffer31.isFull();
        boolean boolean34 = typeCircularBuffer31.isFull();
        boolean boolean35 = typeCircularBuffer31.isFull();
        java.lang.reflect.Type type36 = typeCircularBuffer31.get();
        boolean boolean37 = typeCircularBuffer31.isEmpty();
        boolean boolean38 = typeCircularBuffer31.isEmpty();
        boolean boolean39 = typeCircularBuffer31.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type42 = typeCircularBuffer41.get();
        boolean boolean43 = typeCircularBuffer41.isFull();
        boolean boolean44 = typeCircularBuffer41.isFull();
        boolean boolean45 = typeCircularBuffer41.isFull();
        boolean boolean46 = typeCircularBuffer41.isFull();
        boolean boolean47 = typeCircularBuffer41.isFull();
        boolean boolean48 = typeCircularBuffer41.isEmpty();
        java.lang.reflect.Type type49 = typeCircularBuffer41.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean52 = typeCircularBuffer51.isEmpty();
        java.lang.reflect.Type type53 = typeCircularBuffer51.get();
        boolean boolean54 = typeCircularBuffer51.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer56 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type57 = typeCircularBuffer56.get();
        boolean boolean58 = typeCircularBuffer56.isFull();
        boolean boolean59 = typeCircularBuffer56.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer61 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean62 = typeCircularBuffer61.isEmpty();
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        boolean boolean65 = typeCircularBuffer61.put((java.lang.reflect.Type) wildcardClass64);
        java.lang.Class<?> wildcardClass66 = typeCircularBuffer61.getClass();
        boolean boolean67 = typeCircularBuffer56.put((java.lang.reflect.Type) wildcardClass66);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer69 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean70 = typeCircularBuffer69.isEmpty();
        java.lang.Object obj71 = new java.lang.Object();
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        boolean boolean73 = typeCircularBuffer69.put((java.lang.reflect.Type) wildcardClass72);
        java.lang.Class<?> wildcardClass74 = typeCircularBuffer69.getClass();
        boolean boolean75 = typeCircularBuffer56.put((java.lang.reflect.Type) wildcardClass74);
        boolean boolean76 = typeCircularBuffer51.put((java.lang.reflect.Type) wildcardClass74);
        boolean boolean77 = typeCircularBuffer41.put((java.lang.reflect.Type) wildcardClass74);
        boolean boolean78 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass74);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer80 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean81 = typeCircularBuffer80.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer83 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass84 = typeCircularBuffer83.getClass();
        boolean boolean85 = typeCircularBuffer80.put((java.lang.reflect.Type) wildcardClass84);
        java.lang.reflect.Type type86 = null;
        boolean boolean87 = typeCircularBuffer80.put(type86);
        java.lang.Class<?> wildcardClass88 = typeCircularBuffer80.getClass();
        boolean boolean89 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass88);
        boolean boolean90 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass88);
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(type26);
        org.junit.Assert.assertNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(type29);
        org.junit.Assert.assertNull(type32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(type36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(type42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(type49);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(type53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(type57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test2045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2045");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass10);
        boolean boolean13 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer20.getClass();
        boolean boolean22 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type23 = typeCircularBuffer17.get();
        boolean boolean24 = typeCircularBuffer15.put(type23);
        boolean boolean25 = typeCircularBuffer15.isFull();
        java.lang.reflect.Type type26 = typeCircularBuffer15.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        boolean boolean32 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass31);
        boolean boolean33 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass31);
        java.lang.reflect.Type type34 = typeCircularBuffer15.get();
        boolean boolean35 = typeCircularBuffer1.put(type34);
        boolean boolean36 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass37 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test2046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2046");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        boolean boolean5 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test2047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2047");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean24 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type27 = typeCircularBuffer26.get();
        boolean boolean28 = typeCircularBuffer26.isFull();
        boolean boolean29 = typeCircularBuffer26.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        boolean boolean35 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass34);
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer31.getClass();
        boolean boolean37 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass36);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean40 = typeCircularBuffer39.isEmpty();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        boolean boolean43 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass42);
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer39.getClass();
        boolean boolean45 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean46 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass44);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean49 = typeCircularBuffer48.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass52 = typeCircularBuffer51.getClass();
        boolean boolean53 = typeCircularBuffer48.put((java.lang.reflect.Type) wildcardClass52);
        java.lang.reflect.Type type54 = null;
        boolean boolean55 = typeCircularBuffer48.put(type54);
        java.lang.Class<?> wildcardClass56 = typeCircularBuffer48.getClass();
        boolean boolean57 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass56);
        boolean boolean58 = typeCircularBuffer1.isFull();
        boolean boolean59 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass60 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test2048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2048");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass9);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean13 = typeCircularBuffer12.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass16 = typeCircularBuffer15.getClass();
        boolean boolean17 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass16);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer12.getClass();
        boolean boolean19 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass18);
        java.lang.reflect.Type type20 = typeCircularBuffer1.get();
        java.lang.reflect.Type type21 = typeCircularBuffer1.get();
        boolean boolean22 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type25 = typeCircularBuffer24.get();
        boolean boolean26 = typeCircularBuffer24.isFull();
        boolean boolean27 = typeCircularBuffer24.isFull();
        boolean boolean28 = typeCircularBuffer24.isEmpty();
        java.lang.reflect.Type type29 = typeCircularBuffer24.get();
        boolean boolean30 = typeCircularBuffer24.isEmpty();
        java.lang.Class<?> wildcardClass31 = typeCircularBuffer24.getClass();
        boolean boolean32 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass31);
        boolean boolean33 = typeCircularBuffer1.isFull();
        boolean boolean34 = typeCircularBuffer1.isFull();
        boolean boolean35 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNull(type21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(type25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(type29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
    }

    @Test
    public void test2049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2049");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        boolean boolean8 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        java.lang.reflect.Type type10 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean13 = typeCircularBuffer12.isEmpty();
        java.lang.reflect.Type type14 = typeCircularBuffer12.get();
        java.lang.reflect.Type type15 = typeCircularBuffer12.get();
        java.lang.reflect.Type type16 = typeCircularBuffer12.get();
        java.lang.reflect.Type type17 = typeCircularBuffer12.get();
        boolean boolean18 = typeCircularBuffer12.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) ' ');
        java.lang.reflect.Type type21 = typeCircularBuffer20.get();
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer20.getClass();
        boolean boolean23 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass22);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean28 = typeCircularBuffer27.isFull();
        boolean boolean29 = typeCircularBuffer27.isEmpty();
        java.lang.reflect.Type type30 = typeCircularBuffer27.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean35 = typeCircularBuffer34.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass38 = typeCircularBuffer37.getClass();
        boolean boolean39 = typeCircularBuffer34.put((java.lang.reflect.Type) wildcardClass38);
        java.lang.reflect.Type type40 = typeCircularBuffer34.get();
        boolean boolean41 = typeCircularBuffer32.put(type40);
        java.lang.Class<?> wildcardClass42 = typeCircularBuffer32.getClass();
        boolean boolean43 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass42);
        boolean boolean44 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass42);
        boolean boolean45 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass42);
        java.lang.Class<?> wildcardClass46 = typeCircularBuffer12.getClass();
        boolean boolean47 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass46);
        java.lang.Class<?> wildcardClass48 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(type14);
        org.junit.Assert.assertNull(type15);
        org.junit.Assert.assertNull(type16);
        org.junit.Assert.assertNull(type17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(type21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(type30);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test2050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2050");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 0);
        java.lang.Class<?> wildcardClass4 = typeCircularBuffer3.getClass();
        boolean boolean5 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass4);
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        boolean boolean9 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test2051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2051");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type12 = typeCircularBuffer11.get();
        boolean boolean13 = typeCircularBuffer11.isFull();
        boolean boolean14 = typeCircularBuffer11.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        boolean boolean20 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass19);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer16.getClass();
        boolean boolean22 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = typeCircularBuffer11.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean26 = typeCircularBuffer25.isFull();
        boolean boolean27 = typeCircularBuffer25.isEmpty();
        java.lang.reflect.Type type28 = typeCircularBuffer25.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean33 = typeCircularBuffer32.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer35.getClass();
        boolean boolean37 = typeCircularBuffer32.put((java.lang.reflect.Type) wildcardClass36);
        java.lang.reflect.Type type38 = typeCircularBuffer32.get();
        boolean boolean39 = typeCircularBuffer30.put(type38);
        java.lang.Class<?> wildcardClass40 = typeCircularBuffer30.getClass();
        boolean boolean41 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass40);
        boolean boolean42 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass40);
        boolean boolean43 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass40);
        boolean boolean44 = typeCircularBuffer9.isFull();
        boolean boolean45 = typeCircularBuffer9.isEmpty();
        boolean boolean46 = typeCircularBuffer9.isEmpty();
        java.lang.reflect.Type type47 = null;
        boolean boolean48 = typeCircularBuffer9.put(type47);
        boolean boolean49 = typeCircularBuffer9.isEmpty();
        java.lang.Class<?> wildcardClass50 = typeCircularBuffer9.getClass();
        boolean boolean51 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass50);
        boolean boolean52 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type53 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(type28);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(type53);
    }

    @Test
    public void test2052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2052");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer10.get();
        boolean boolean17 = typeCircularBuffer8.put(type16);
        boolean boolean18 = typeCircularBuffer8.isFull();
        java.lang.reflect.Type type19 = typeCircularBuffer8.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean22 = typeCircularBuffer21.isEmpty();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean26 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean27 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass24);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean30 = typeCircularBuffer29.isFull();
        boolean boolean31 = typeCircularBuffer29.isEmpty();
        java.lang.reflect.Type type32 = typeCircularBuffer29.get();
        boolean boolean33 = typeCircularBuffer29.isEmpty();
        boolean boolean34 = typeCircularBuffer29.isEmpty();
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer29.getClass();
        boolean boolean36 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass35);
        boolean boolean37 = typeCircularBuffer1.isEmpty();
        boolean boolean38 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass39 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(type32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test2053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2053");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        boolean boolean9 = typeCircularBuffer8.isEmpty();
        boolean boolean10 = typeCircularBuffer8.isEmpty();
        boolean boolean11 = typeCircularBuffer8.isFull();
        java.lang.reflect.Type type12 = typeCircularBuffer8.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer19.getClass();
        boolean boolean21 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type22 = typeCircularBuffer16.get();
        boolean boolean23 = typeCircularBuffer14.put(type22);
        boolean boolean24 = typeCircularBuffer14.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean27 = typeCircularBuffer26.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass30 = typeCircularBuffer29.getClass();
        boolean boolean31 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass30);
        java.lang.reflect.Type type32 = typeCircularBuffer26.get();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        boolean boolean35 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass34);
        boolean boolean36 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass34);
        boolean boolean37 = typeCircularBuffer14.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type40 = typeCircularBuffer39.get();
        boolean boolean41 = typeCircularBuffer39.isFull();
        boolean boolean42 = typeCircularBuffer39.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean45 = typeCircularBuffer44.isEmpty();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        boolean boolean48 = typeCircularBuffer44.put((java.lang.reflect.Type) wildcardClass47);
        java.lang.Class<?> wildcardClass49 = typeCircularBuffer44.getClass();
        boolean boolean50 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass49);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer52 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean53 = typeCircularBuffer52.isEmpty();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        boolean boolean56 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass55);
        java.lang.Class<?> wildcardClass57 = typeCircularBuffer52.getClass();
        boolean boolean58 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass57);
        boolean boolean59 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass57);
        java.lang.Class<?> wildcardClass60 = typeCircularBuffer14.getClass();
        boolean boolean61 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass60);
        boolean boolean62 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass60);
        java.lang.reflect.Type type63 = typeCircularBuffer1.get();
        java.lang.reflect.Type type64 = typeCircularBuffer1.get();
        java.lang.reflect.Type type65 = typeCircularBuffer1.get();
        boolean boolean66 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(type12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(type40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNull(type64);
        org.junit.Assert.assertNull(type65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
    }

    @Test
    public void test2054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2054");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer17.getClass();
        boolean boolean19 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass18);
        java.lang.reflect.Type type20 = typeCircularBuffer14.get();
        boolean boolean21 = typeCircularBuffer12.put(type20);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer12.getClass();
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass22);
        boolean boolean24 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type25 = typeCircularBuffer1.get();
        boolean boolean26 = typeCircularBuffer1.isFull();
        boolean boolean27 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test2055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2055");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean7 = typeCircularBuffer6.isFull();
        boolean boolean8 = typeCircularBuffer6.isEmpty();
        java.lang.reflect.Type type9 = typeCircularBuffer6.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        boolean boolean20 = typeCircularBuffer11.put(type19);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer11.getClass();
        boolean boolean22 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass21);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(10);
        java.lang.Class<?> wildcardClass25 = typeCircularBuffer24.getClass();
        boolean boolean26 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.reflect.Type type27 = typeCircularBuffer6.get();
        java.lang.reflect.Type type28 = typeCircularBuffer6.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type31 = typeCircularBuffer30.get();
        boolean boolean32 = typeCircularBuffer30.isFull();
        boolean boolean33 = typeCircularBuffer30.isEmpty();
        boolean boolean34 = typeCircularBuffer30.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass37 = typeCircularBuffer36.getClass();
        boolean boolean38 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass37);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean41 = typeCircularBuffer40.isFull();
        boolean boolean42 = typeCircularBuffer40.isEmpty();
        boolean boolean43 = typeCircularBuffer40.isFull();
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer40.getClass();
        boolean boolean45 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass44);
        java.lang.reflect.Type type46 = typeCircularBuffer30.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean51 = typeCircularBuffer50.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer53 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass54 = typeCircularBuffer53.getClass();
        boolean boolean55 = typeCircularBuffer50.put((java.lang.reflect.Type) wildcardClass54);
        java.lang.reflect.Type type56 = typeCircularBuffer50.get();
        boolean boolean57 = typeCircularBuffer48.put(type56);
        boolean boolean58 = typeCircularBuffer48.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer60 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean61 = typeCircularBuffer60.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer63 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass64 = typeCircularBuffer63.getClass();
        boolean boolean65 = typeCircularBuffer60.put((java.lang.reflect.Type) wildcardClass64);
        java.lang.reflect.Type type66 = typeCircularBuffer60.get();
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        boolean boolean69 = typeCircularBuffer60.put((java.lang.reflect.Type) wildcardClass68);
        boolean boolean70 = typeCircularBuffer48.put((java.lang.reflect.Type) wildcardClass68);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer72 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean73 = typeCircularBuffer72.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer75 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass76 = typeCircularBuffer75.getClass();
        boolean boolean77 = typeCircularBuffer72.put((java.lang.reflect.Type) wildcardClass76);
        java.lang.reflect.Type type78 = typeCircularBuffer72.get();
        boolean boolean79 = typeCircularBuffer48.put(type78);
        java.lang.reflect.Type type80 = typeCircularBuffer48.get();
        boolean boolean81 = typeCircularBuffer30.put(type80);
        boolean boolean82 = typeCircularBuffer30.isFull();
        java.lang.reflect.Type type83 = typeCircularBuffer30.get();
        boolean boolean84 = typeCircularBuffer6.put(type83);
        java.lang.reflect.Type type85 = typeCircularBuffer6.get();
        boolean boolean86 = typeCircularBuffer1.put(type85);
        boolean boolean87 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass88 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNull(type28);
        org.junit.Assert.assertNull(type31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(type83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(type85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test2056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2056");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type12 = typeCircularBuffer1.get();
        boolean boolean13 = typeCircularBuffer1.isFull();
        boolean boolean14 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type15 = typeCircularBuffer1.get();
        java.lang.reflect.Type type16 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(type15);
        org.junit.Assert.assertNull(type16);
    }

    @Test
    public void test2057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2057");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        boolean boolean8 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass7);
        boolean boolean9 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean12 = typeCircularBuffer11.isFull();
        java.lang.reflect.Type type13 = typeCircularBuffer11.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer20.getClass();
        boolean boolean22 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type23 = typeCircularBuffer17.get();
        boolean boolean24 = typeCircularBuffer15.put(type23);
        java.lang.reflect.Type type25 = typeCircularBuffer15.get();
        java.lang.Class<?> wildcardClass26 = type25.getClass();
        boolean boolean27 = typeCircularBuffer11.put(type25);
        boolean boolean28 = typeCircularBuffer11.isFull();
        boolean boolean29 = typeCircularBuffer11.isFull();
        java.lang.Class<?> wildcardClass30 = typeCircularBuffer11.getClass();
        boolean boolean31 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass30);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean34 = typeCircularBuffer33.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass37 = typeCircularBuffer36.getClass();
        boolean boolean38 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass37);
        boolean boolean39 = typeCircularBuffer33.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.GenericDeclaration> genericDeclarationCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.GenericDeclaration>((int) (short) 100);
        java.lang.Class<?> wildcardClass42 = genericDeclarationCircularBuffer41.getClass();
        boolean boolean43 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass42);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean46 = typeCircularBuffer45.isFull();
        java.lang.reflect.Type type47 = typeCircularBuffer45.get();
        boolean boolean48 = typeCircularBuffer45.isFull();
        java.lang.reflect.Type type49 = typeCircularBuffer45.get();
        boolean boolean50 = typeCircularBuffer45.isFull();
        boolean boolean51 = typeCircularBuffer45.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer53 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean54 = typeCircularBuffer53.isFull();
        boolean boolean55 = typeCircularBuffer53.isEmpty();
        java.lang.reflect.Type type56 = typeCircularBuffer53.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer58 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer60 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean61 = typeCircularBuffer60.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer63 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass64 = typeCircularBuffer63.getClass();
        boolean boolean65 = typeCircularBuffer60.put((java.lang.reflect.Type) wildcardClass64);
        java.lang.reflect.Type type66 = typeCircularBuffer60.get();
        boolean boolean67 = typeCircularBuffer58.put(type66);
        java.lang.Class<?> wildcardClass68 = typeCircularBuffer58.getClass();
        boolean boolean69 = typeCircularBuffer53.put((java.lang.reflect.Type) wildcardClass68);
        boolean boolean70 = typeCircularBuffer45.put((java.lang.reflect.Type) wildcardClass68);
        boolean boolean71 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass68);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer73 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean74 = typeCircularBuffer73.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer76 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass77 = typeCircularBuffer76.getClass();
        boolean boolean78 = typeCircularBuffer73.put((java.lang.reflect.Type) wildcardClass77);
        java.lang.reflect.Type type79 = typeCircularBuffer73.get();
        java.lang.Object obj80 = new java.lang.Object();
        java.lang.Class<?> wildcardClass81 = obj80.getClass();
        boolean boolean82 = typeCircularBuffer73.put((java.lang.reflect.Type) wildcardClass81);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer84 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean85 = typeCircularBuffer84.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer87 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass88 = typeCircularBuffer87.getClass();
        boolean boolean89 = typeCircularBuffer84.put((java.lang.reflect.Type) wildcardClass88);
        java.lang.Class<?> wildcardClass90 = typeCircularBuffer84.getClass();
        boolean boolean91 = typeCircularBuffer73.put((java.lang.reflect.Type) wildcardClass90);
        java.lang.reflect.Type type92 = typeCircularBuffer73.get();
        boolean boolean93 = typeCircularBuffer33.put(type92);
        boolean boolean94 = typeCircularBuffer33.isFull();
        java.lang.reflect.Type type95 = typeCircularBuffer33.get();
        boolean boolean96 = typeCircularBuffer1.put(type95);
        boolean boolean97 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(type13);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(type47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(type49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(type56);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(type92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNotNull(type95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test2058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2058");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean7 = typeCircularBuffer6.isFull();
        boolean boolean8 = typeCircularBuffer6.isEmpty();
        boolean boolean9 = typeCircularBuffer6.isFull();
        java.lang.reflect.Type type10 = null;
        boolean boolean11 = typeCircularBuffer6.put(type10);
        boolean boolean12 = typeCircularBuffer6.isFull();
        boolean boolean13 = typeCircularBuffer6.isFull();
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer6.getClass();
        boolean boolean15 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass14);
        boolean boolean16 = typeCircularBuffer1.isFull();
        boolean boolean17 = typeCircularBuffer1.isEmpty();
        boolean boolean18 = typeCircularBuffer1.isFull();
        boolean boolean19 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test2059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2059");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.io.Serializable> serializableCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.io.Serializable>((int) (byte) 0);
    }

    @Test
    public void test2060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2060");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass10);
        boolean boolean13 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.invoke.TypeDescriptor> typeDescriptorCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.invoke.TypeDescriptor>(100);
        java.lang.Class<?> wildcardClass16 = typeDescriptorCircularBuffer15.getClass();
        boolean boolean17 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass16);
        java.lang.reflect.Type type18 = typeCircularBuffer1.get();
        boolean boolean19 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type20 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(type20);
    }

    @Test
    public void test2061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2061");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>((int) 'a');
    }

    @Test
    public void test2062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2062");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type12 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        boolean boolean19 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass17);
        boolean boolean20 = typeCircularBuffer1.isEmpty();
        boolean boolean21 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type22 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type25 = typeCircularBuffer24.get();
        boolean boolean26 = typeCircularBuffer24.isFull();
        boolean boolean27 = typeCircularBuffer24.isFull();
        boolean boolean28 = typeCircularBuffer24.isEmpty();
        java.lang.reflect.Type type29 = typeCircularBuffer24.get();
        java.lang.reflect.Type type30 = typeCircularBuffer24.get();
        java.lang.reflect.Type type31 = typeCircularBuffer24.get();
        boolean boolean32 = typeCircularBuffer24.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean35 = typeCircularBuffer34.isEmpty();
        java.lang.reflect.Type type36 = typeCircularBuffer34.get();
        java.lang.reflect.Type type37 = typeCircularBuffer34.get();
        java.lang.reflect.Type type38 = typeCircularBuffer34.get();
        boolean boolean39 = typeCircularBuffer34.isFull();
        boolean boolean40 = typeCircularBuffer34.isFull();
        boolean boolean41 = typeCircularBuffer34.isFull();
        boolean boolean42 = typeCircularBuffer34.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type45 = typeCircularBuffer44.get();
        boolean boolean46 = typeCircularBuffer44.isFull();
        boolean boolean47 = typeCircularBuffer44.isFull();
        boolean boolean48 = typeCircularBuffer44.isFull();
        java.lang.reflect.Type type49 = typeCircularBuffer44.get();
        boolean boolean50 = typeCircularBuffer44.isEmpty();
        boolean boolean51 = typeCircularBuffer44.isEmpty();
        boolean boolean52 = typeCircularBuffer44.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer54 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type55 = typeCircularBuffer54.get();
        boolean boolean56 = typeCircularBuffer54.isFull();
        boolean boolean57 = typeCircularBuffer54.isFull();
        boolean boolean58 = typeCircularBuffer54.isFull();
        boolean boolean59 = typeCircularBuffer54.isFull();
        boolean boolean60 = typeCircularBuffer54.isFull();
        boolean boolean61 = typeCircularBuffer54.isEmpty();
        java.lang.reflect.Type type62 = typeCircularBuffer54.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer64 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean65 = typeCircularBuffer64.isEmpty();
        java.lang.reflect.Type type66 = typeCircularBuffer64.get();
        boolean boolean67 = typeCircularBuffer64.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer69 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type70 = typeCircularBuffer69.get();
        boolean boolean71 = typeCircularBuffer69.isFull();
        boolean boolean72 = typeCircularBuffer69.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer74 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean75 = typeCircularBuffer74.isEmpty();
        java.lang.Object obj76 = new java.lang.Object();
        java.lang.Class<?> wildcardClass77 = obj76.getClass();
        boolean boolean78 = typeCircularBuffer74.put((java.lang.reflect.Type) wildcardClass77);
        java.lang.Class<?> wildcardClass79 = typeCircularBuffer74.getClass();
        boolean boolean80 = typeCircularBuffer69.put((java.lang.reflect.Type) wildcardClass79);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer82 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean83 = typeCircularBuffer82.isEmpty();
        java.lang.Object obj84 = new java.lang.Object();
        java.lang.Class<?> wildcardClass85 = obj84.getClass();
        boolean boolean86 = typeCircularBuffer82.put((java.lang.reflect.Type) wildcardClass85);
        java.lang.Class<?> wildcardClass87 = typeCircularBuffer82.getClass();
        boolean boolean88 = typeCircularBuffer69.put((java.lang.reflect.Type) wildcardClass87);
        boolean boolean89 = typeCircularBuffer64.put((java.lang.reflect.Type) wildcardClass87);
        boolean boolean90 = typeCircularBuffer54.put((java.lang.reflect.Type) wildcardClass87);
        boolean boolean91 = typeCircularBuffer44.put((java.lang.reflect.Type) wildcardClass87);
        boolean boolean92 = typeCircularBuffer34.put((java.lang.reflect.Type) wildcardClass87);
        boolean boolean93 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass87);
        boolean boolean94 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass87);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNull(type25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(type29);
        org.junit.Assert.assertNull(type30);
        org.junit.Assert.assertNull(type31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(type36);
        org.junit.Assert.assertNull(type37);
        org.junit.Assert.assertNull(type38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(type45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(type49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(type55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(type62);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(type66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNull(type70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
    }

    @Test
    public void test2063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2063");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type4 = typeCircularBuffer3.get();
        boolean boolean5 = typeCircularBuffer3.isFull();
        boolean boolean6 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean9 = typeCircularBuffer8.isEmpty();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer8.getClass();
        boolean boolean14 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass13);
        boolean boolean15 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean18 = typeCircularBuffer17.isFull();
        boolean boolean19 = typeCircularBuffer17.isEmpty();
        java.lang.reflect.Type type20 = typeCircularBuffer17.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean25 = typeCircularBuffer24.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer27.getClass();
        boolean boolean29 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.reflect.Type type30 = typeCircularBuffer24.get();
        boolean boolean31 = typeCircularBuffer22.put(type30);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer22.getClass();
        boolean boolean33 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean35 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean36 = typeCircularBuffer1.isFull();
        boolean boolean37 = typeCircularBuffer1.isEmpty();
        boolean boolean38 = typeCircularBuffer1.isFull();
        boolean boolean39 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type40 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean43 = typeCircularBuffer42.isFull();
        boolean boolean44 = typeCircularBuffer42.isEmpty();
        java.lang.reflect.Type type45 = typeCircularBuffer42.get();
        boolean boolean46 = typeCircularBuffer42.isEmpty();
        boolean boolean47 = typeCircularBuffer42.isEmpty();
        java.lang.Class<?> wildcardClass48 = typeCircularBuffer42.getClass();
        boolean boolean49 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass48);
        boolean boolean50 = typeCircularBuffer1.isFull();
        boolean boolean51 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer53 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer55 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type56 = typeCircularBuffer55.get();
        boolean boolean57 = typeCircularBuffer55.isFull();
        boolean boolean58 = typeCircularBuffer55.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer60 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean61 = typeCircularBuffer60.isEmpty();
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        boolean boolean64 = typeCircularBuffer60.put((java.lang.reflect.Type) wildcardClass63);
        java.lang.Class<?> wildcardClass65 = typeCircularBuffer60.getClass();
        boolean boolean66 = typeCircularBuffer55.put((java.lang.reflect.Type) wildcardClass65);
        boolean boolean67 = typeCircularBuffer55.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer69 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean70 = typeCircularBuffer69.isFull();
        boolean boolean71 = typeCircularBuffer69.isEmpty();
        java.lang.reflect.Type type72 = typeCircularBuffer69.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer74 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer76 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean77 = typeCircularBuffer76.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer79 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass80 = typeCircularBuffer79.getClass();
        boolean boolean81 = typeCircularBuffer76.put((java.lang.reflect.Type) wildcardClass80);
        java.lang.reflect.Type type82 = typeCircularBuffer76.get();
        boolean boolean83 = typeCircularBuffer74.put(type82);
        java.lang.Class<?> wildcardClass84 = typeCircularBuffer74.getClass();
        boolean boolean85 = typeCircularBuffer69.put((java.lang.reflect.Type) wildcardClass84);
        boolean boolean86 = typeCircularBuffer55.put((java.lang.reflect.Type) wildcardClass84);
        boolean boolean87 = typeCircularBuffer53.put((java.lang.reflect.Type) wildcardClass84);
        boolean boolean88 = typeCircularBuffer53.isFull();
        boolean boolean89 = typeCircularBuffer53.isEmpty();
        java.lang.reflect.Type type90 = typeCircularBuffer53.get();
        boolean boolean91 = typeCircularBuffer53.isEmpty();
        java.lang.Class<?> wildcardClass92 = typeCircularBuffer53.getClass();
        boolean boolean93 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass92);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(type20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(type40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(type45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNull(type56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNull(type72);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNull(type90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test2064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2064");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type5 = null;
        boolean boolean6 = typeCircularBuffer1.put(type5);
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        boolean boolean8 = typeCircularBuffer1.isFull();
        boolean boolean9 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test2065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2065");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        java.lang.reflect.Type type12 = typeCircularBuffer6.get();
        boolean boolean13 = typeCircularBuffer4.put(type12);
        boolean boolean14 = typeCircularBuffer4.isFull();
        java.lang.reflect.Type type15 = typeCircularBuffer4.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        boolean boolean21 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean22 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type24 = typeCircularBuffer1.get();
        boolean boolean25 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type26 = typeCircularBuffer1.get();
        boolean boolean27 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type28 = typeCircularBuffer1.get();
        boolean boolean29 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        boolean boolean33 = typeCircularBuffer31.isEmpty();
        boolean boolean34 = typeCircularBuffer31.isEmpty();
        boolean boolean35 = typeCircularBuffer31.isFull();
        boolean boolean36 = typeCircularBuffer31.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type39 = typeCircularBuffer38.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer46.getClass();
        boolean boolean48 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass47);
        java.lang.reflect.Type type49 = typeCircularBuffer43.get();
        boolean boolean50 = typeCircularBuffer41.put(type49);
        boolean boolean51 = typeCircularBuffer41.isFull();
        java.lang.reflect.Type type52 = typeCircularBuffer41.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer54 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean55 = typeCircularBuffer54.isEmpty();
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        boolean boolean58 = typeCircularBuffer54.put((java.lang.reflect.Type) wildcardClass57);
        boolean boolean59 = typeCircularBuffer41.put((java.lang.reflect.Type) wildcardClass57);
        boolean boolean60 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass57);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer62 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer64 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 0);
        java.lang.Class<?> wildcardClass65 = typeCircularBuffer64.getClass();
        boolean boolean66 = typeCircularBuffer62.put((java.lang.reflect.Type) wildcardClass65);
        boolean boolean67 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass65);
        boolean boolean68 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass65);
        java.lang.reflect.Type type69 = null;
        boolean boolean70 = typeCircularBuffer31.put(type69);
        java.lang.reflect.Type type71 = null;
        boolean boolean72 = typeCircularBuffer31.put(type71);
        java.lang.reflect.Type type73 = typeCircularBuffer31.get();
        boolean boolean74 = typeCircularBuffer1.put(type73);
        boolean boolean75 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type76 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(type26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(type28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(type39);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(type76);
    }

    @Test
    public void test2066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2066");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 10);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) 'a');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer5 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass6 = typeCircularBuffer5.getClass();
        boolean boolean7 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass6);
        java.lang.reflect.Type type8 = typeCircularBuffer3.get();
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type12 = typeCircularBuffer11.get();
        boolean boolean13 = typeCircularBuffer11.isFull();
        boolean boolean14 = typeCircularBuffer11.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        boolean boolean20 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass19);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer16.getClass();
        boolean boolean22 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type23 = typeCircularBuffer11.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean28 = typeCircularBuffer27.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass31 = typeCircularBuffer30.getClass();
        boolean boolean32 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass31);
        java.lang.reflect.Type type33 = typeCircularBuffer27.get();
        boolean boolean34 = typeCircularBuffer25.put(type33);
        boolean boolean35 = typeCircularBuffer11.put(type33);
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer11.getClass();
        boolean boolean37 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass36);
        java.lang.Class<?> wildcardClass38 = typeCircularBuffer3.getClass();
        boolean boolean39 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass38);
        boolean boolean40 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type41 = typeCircularBuffer1.get();
        boolean boolean42 = typeCircularBuffer1.isFull();
        boolean boolean43 = typeCircularBuffer1.isEmpty();
        boolean boolean44 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
    }

    @Test
    public void test2067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2067");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        boolean boolean12 = typeCircularBuffer6.isFull();
        boolean boolean13 = typeCircularBuffer6.isFull();
        boolean boolean14 = typeCircularBuffer6.isFull();
        java.lang.Class<?> wildcardClass15 = typeCircularBuffer6.getClass();
        boolean boolean16 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass15);
        boolean boolean17 = typeCircularBuffer1.isEmpty();
        boolean boolean18 = typeCircularBuffer1.isEmpty();
        boolean boolean19 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test2068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2068");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        boolean boolean5 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass8 = typeCircularBuffer7.getClass();
        boolean boolean9 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass8);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean12 = typeCircularBuffer11.isFull();
        boolean boolean13 = typeCircularBuffer11.isEmpty();
        boolean boolean14 = typeCircularBuffer11.isFull();
        java.lang.Class<?> wildcardClass15 = typeCircularBuffer11.getClass();
        boolean boolean16 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass15);
        boolean boolean17 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type18 = typeCircularBuffer1.get();
        boolean boolean19 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean24 = typeCircularBuffer23.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer26.getClass();
        boolean boolean28 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass27);
        java.lang.reflect.Type type29 = typeCircularBuffer23.get();
        boolean boolean30 = typeCircularBuffer21.put(type29);
        java.lang.reflect.Type type31 = typeCircularBuffer21.get();
        java.lang.reflect.Type type32 = null;
        boolean boolean33 = typeCircularBuffer21.put(type32);
        boolean boolean34 = typeCircularBuffer21.isFull();
        boolean boolean35 = typeCircularBuffer21.isFull();
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer21.getClass();
        boolean boolean37 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean38 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.String> strCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.String>((int) ' ');
        java.lang.Class<?> wildcardClass41 = strCircularBuffer40.getClass();
        boolean boolean42 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass41);
        java.lang.reflect.Type type43 = typeCircularBuffer1.get();
        boolean boolean44 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test2069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2069");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer6.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.reflect.Type type13 = typeCircularBuffer1.get();
        boolean boolean14 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer19.getClass();
        boolean boolean21 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean22 = typeCircularBuffer16.isEmpty();
        java.lang.reflect.Type type23 = typeCircularBuffer16.get();
        boolean boolean24 = typeCircularBuffer1.put(type23);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type27 = typeCircularBuffer26.get();
        boolean boolean28 = typeCircularBuffer26.isFull();
        boolean boolean29 = typeCircularBuffer26.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        boolean boolean35 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass34);
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer31.getClass();
        boolean boolean37 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass36);
        java.lang.reflect.Type type38 = typeCircularBuffer26.get();
        boolean boolean39 = typeCircularBuffer26.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type42 = typeCircularBuffer41.get();
        boolean boolean43 = typeCircularBuffer41.isFull();
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer41.getClass();
        boolean boolean45 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean46 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass44);
        java.lang.reflect.Type type47 = typeCircularBuffer1.get();
        java.lang.reflect.Type type48 = typeCircularBuffer1.get();
        boolean boolean49 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type50 = typeCircularBuffer1.get();
        boolean boolean51 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(type42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNull(type48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(type50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
    }

    @Test
    public void test2070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2070");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        java.lang.reflect.Type type12 = typeCircularBuffer10.get();
        java.lang.reflect.Type type13 = typeCircularBuffer10.get();
        java.lang.reflect.Type type14 = typeCircularBuffer10.get();
        boolean boolean15 = typeCircularBuffer10.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean18 = typeCircularBuffer17.isFull();
        boolean boolean19 = typeCircularBuffer17.isEmpty();
        boolean boolean20 = typeCircularBuffer17.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass26 = typeCircularBuffer25.getClass();
        boolean boolean27 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass26);
        java.lang.reflect.Type type28 = typeCircularBuffer22.get();
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        boolean boolean31 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass30);
        boolean boolean32 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass30);
        boolean boolean33 = typeCircularBuffer17.isFull();
        java.lang.Class<?> wildcardClass34 = typeCircularBuffer17.getClass();
        boolean boolean35 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass34);
        boolean boolean36 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass34);
        boolean boolean37 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type38 = null;
        boolean boolean39 = typeCircularBuffer1.put(type38);
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(type12);
        org.junit.Assert.assertNull(type13);
        org.junit.Assert.assertNull(type14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test2071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2071");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        boolean boolean7 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean19 = typeCircularBuffer18.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer21.getClass();
        boolean boolean23 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass22);
        java.lang.reflect.Type type24 = typeCircularBuffer18.get();
        boolean boolean25 = typeCircularBuffer16.put(type24);
        boolean boolean26 = typeCircularBuffer16.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer31.getClass();
        boolean boolean33 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass32);
        java.lang.reflect.Type type34 = typeCircularBuffer28.get();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        boolean boolean37 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean38 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean39 = typeCircularBuffer16.isEmpty();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        boolean boolean42 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean43 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean44 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass41);
        java.lang.reflect.Type type45 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean48 = typeCircularBuffer47.isEmpty();
        java.lang.reflect.Type type49 = typeCircularBuffer47.get();
        java.lang.reflect.Type type50 = typeCircularBuffer47.get();
        java.lang.reflect.Type type51 = typeCircularBuffer47.get();
        boolean boolean52 = typeCircularBuffer47.isFull();
        boolean boolean53 = typeCircularBuffer47.isFull();
        java.lang.reflect.Type type54 = typeCircularBuffer47.get();
        boolean boolean55 = typeCircularBuffer47.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer57 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer59 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean60 = typeCircularBuffer59.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer62 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass63 = typeCircularBuffer62.getClass();
        boolean boolean64 = typeCircularBuffer59.put((java.lang.reflect.Type) wildcardClass63);
        java.lang.reflect.Type type65 = typeCircularBuffer59.get();
        java.lang.Class<?> wildcardClass66 = typeCircularBuffer59.getClass();
        boolean boolean67 = typeCircularBuffer57.put((java.lang.reflect.Type) wildcardClass66);
        boolean boolean68 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass66);
        boolean boolean69 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass66);
        java.lang.reflect.Type type70 = typeCircularBuffer1.get();
        java.lang.reflect.Type type71 = typeCircularBuffer1.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass72 = type71.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(type49);
        org.junit.Assert.assertNull(type50);
        org.junit.Assert.assertNull(type51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(type54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNull(type71);
    }

    @Test
    public void test2072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2072");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        java.lang.reflect.Type type12 = typeCircularBuffer6.get();
        boolean boolean13 = typeCircularBuffer4.put(type12);
        boolean boolean14 = typeCircularBuffer4.isFull();
        java.lang.reflect.Type type15 = typeCircularBuffer4.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        boolean boolean21 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean22 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean24 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type25 = typeCircularBuffer1.get();
        boolean boolean26 = typeCircularBuffer1.isEmpty();
        boolean boolean27 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type28 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(type28);
    }

    @Test
    public void test2073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2073");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean8 = typeCircularBuffer7.isFull();
        boolean boolean9 = typeCircularBuffer7.isEmpty();
        java.lang.reflect.Type type10 = typeCircularBuffer7.get();
        boolean boolean11 = typeCircularBuffer7.isEmpty();
        java.lang.reflect.Type type12 = typeCircularBuffer7.get();
        java.lang.reflect.Type type13 = typeCircularBuffer7.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean16 = typeCircularBuffer15.isFull();
        boolean boolean17 = typeCircularBuffer15.isEmpty();
        boolean boolean18 = typeCircularBuffer15.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean21 = typeCircularBuffer20.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer23.getClass();
        boolean boolean25 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass24);
        java.lang.reflect.Type type26 = typeCircularBuffer20.get();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        boolean boolean29 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass28);
        boolean boolean30 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass28);
        boolean boolean31 = typeCircularBuffer15.isFull();
        java.lang.reflect.Type type32 = typeCircularBuffer15.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean35 = typeCircularBuffer34.isFull();
        boolean boolean36 = typeCircularBuffer34.isEmpty();
        boolean boolean37 = typeCircularBuffer34.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean40 = typeCircularBuffer39.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass43 = typeCircularBuffer42.getClass();
        boolean boolean44 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass43);
        java.lang.reflect.Type type45 = typeCircularBuffer39.get();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        boolean boolean48 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass47);
        boolean boolean49 = typeCircularBuffer34.put((java.lang.reflect.Type) wildcardClass47);
        boolean boolean50 = typeCircularBuffer34.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer52 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer54 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean55 = typeCircularBuffer54.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer57 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass58 = typeCircularBuffer57.getClass();
        boolean boolean59 = typeCircularBuffer54.put((java.lang.reflect.Type) wildcardClass58);
        java.lang.reflect.Type type60 = typeCircularBuffer54.get();
        boolean boolean61 = typeCircularBuffer52.put(type60);
        boolean boolean62 = typeCircularBuffer52.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer64 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean65 = typeCircularBuffer64.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer67 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass68 = typeCircularBuffer67.getClass();
        boolean boolean69 = typeCircularBuffer64.put((java.lang.reflect.Type) wildcardClass68);
        java.lang.reflect.Type type70 = typeCircularBuffer64.get();
        java.lang.Object obj71 = new java.lang.Object();
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        boolean boolean73 = typeCircularBuffer64.put((java.lang.reflect.Type) wildcardClass72);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer75 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean76 = typeCircularBuffer75.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer78 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass79 = typeCircularBuffer78.getClass();
        boolean boolean80 = typeCircularBuffer75.put((java.lang.reflect.Type) wildcardClass79);
        java.lang.Class<?> wildcardClass81 = typeCircularBuffer75.getClass();
        boolean boolean82 = typeCircularBuffer64.put((java.lang.reflect.Type) wildcardClass81);
        boolean boolean83 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass81);
        boolean boolean84 = typeCircularBuffer34.put((java.lang.reflect.Type) wildcardClass81);
        boolean boolean85 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass81);
        java.lang.reflect.Type type86 = typeCircularBuffer15.get();
        java.lang.Class<?> wildcardClass87 = type86.getClass();
        boolean boolean88 = typeCircularBuffer7.put(type86);
        java.lang.reflect.Type type89 = typeCircularBuffer7.get();
        boolean boolean90 = typeCircularBuffer1.put(type89);
        boolean boolean91 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type92 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(type12);
        org.junit.Assert.assertNull(type13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(type86);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(type89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(type92);
    }

    @Test
    public void test2074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2074");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type24 = typeCircularBuffer1.get();
        boolean boolean25 = typeCircularBuffer1.isFull();
        boolean boolean26 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test2075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2075");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        boolean boolean8 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test2076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2076");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        boolean boolean6 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        boolean boolean8 = typeCircularBuffer1.isEmpty();
        boolean boolean9 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test2077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2077");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean9 = typeCircularBuffer8.isFull();
        java.lang.reflect.Type type10 = typeCircularBuffer8.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean13 = typeCircularBuffer12.isEmpty();
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        boolean boolean16 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass15);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer12.getClass();
        boolean boolean18 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass17);
        boolean boolean19 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass17);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '#');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean26 = typeCircularBuffer25.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass29 = typeCircularBuffer28.getClass();
        boolean boolean30 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass29);
        java.lang.reflect.Type type31 = typeCircularBuffer25.get();
        boolean boolean32 = typeCircularBuffer23.put(type31);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean37 = typeCircularBuffer36.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass40 = typeCircularBuffer39.getClass();
        boolean boolean41 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass40);
        java.lang.reflect.Type type42 = typeCircularBuffer36.get();
        boolean boolean43 = typeCircularBuffer34.put(type42);
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer34.getClass();
        boolean boolean45 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean46 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean47 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean48 = typeCircularBuffer1.isEmpty();
        boolean boolean49 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test2078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2078");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test2079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2079");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        boolean boolean12 = typeCircularBuffer6.isFull();
        boolean boolean13 = typeCircularBuffer6.isFull();
        boolean boolean14 = typeCircularBuffer6.isFull();
        java.lang.Class<?> wildcardClass15 = typeCircularBuffer6.getClass();
        boolean boolean16 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass15);
        boolean boolean17 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type18 = typeCircularBuffer1.get();
        boolean boolean19 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type20 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(type20);
    }

    @Test
    public void test2080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2080");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        boolean boolean5 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test2081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2081");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean10 = typeCircularBuffer9.isFull();
        boolean boolean11 = typeCircularBuffer9.isEmpty();
        java.lang.reflect.Type type12 = typeCircularBuffer9.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer19.getClass();
        boolean boolean21 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type22 = typeCircularBuffer16.get();
        boolean boolean23 = typeCircularBuffer14.put(type22);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer14.getClass();
        boolean boolean25 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean26 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass24);
        java.lang.reflect.Type type27 = typeCircularBuffer1.get();
        boolean boolean28 = typeCircularBuffer1.isFull();
        boolean boolean29 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(type12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    }

    @Test
    public void test2082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2082");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.constant.ConstantDesc> constantDescCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.constant.ConstantDesc>((int) (short) 1);
    }

    @Test
    public void test2083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2083");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>((int) (short) 10);
        java.lang.Class<?> wildcardClass2 = wildcardClassOfFieldCircularBuffer1.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test2084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2084");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '#');
        boolean boolean2 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 10);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type7 = typeCircularBuffer6.get();
        boolean boolean8 = typeCircularBuffer6.isFull();
        java.lang.Class<?> wildcardClass9 = typeCircularBuffer6.getClass();
        boolean boolean10 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer4.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer19.getClass();
        boolean boolean21 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type22 = typeCircularBuffer16.get();
        boolean boolean23 = typeCircularBuffer14.put(type22);
        boolean boolean24 = typeCircularBuffer14.isFull();
        java.lang.reflect.Type type25 = typeCircularBuffer14.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean28 = typeCircularBuffer27.isEmpty();
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        boolean boolean31 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass30);
        boolean boolean32 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass30);
        boolean boolean33 = typeCircularBuffer14.isEmpty();
        java.lang.reflect.Type type34 = typeCircularBuffer14.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean37 = typeCircularBuffer36.isFull();
        boolean boolean38 = typeCircularBuffer36.isEmpty();
        boolean boolean39 = typeCircularBuffer36.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean42 = typeCircularBuffer41.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass45 = typeCircularBuffer44.getClass();
        boolean boolean46 = typeCircularBuffer41.put((java.lang.reflect.Type) wildcardClass45);
        java.lang.reflect.Type type47 = typeCircularBuffer41.get();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        boolean boolean50 = typeCircularBuffer41.put((java.lang.reflect.Type) wildcardClass49);
        boolean boolean51 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass49);
        boolean boolean52 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass49);
        java.lang.Class<?> wildcardClass53 = typeCircularBuffer14.getClass();
        boolean boolean54 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass53);
        java.lang.reflect.Type type55 = typeCircularBuffer1.get();
        java.lang.reflect.Type type56 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass57 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test2085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2085");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type9 = typeCircularBuffer8.get();
        boolean boolean10 = typeCircularBuffer8.isFull();
        boolean boolean11 = typeCircularBuffer8.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass16);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer13.getClass();
        boolean boolean19 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass18);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean22 = typeCircularBuffer21.isEmpty();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass24);
        java.lang.Class<?> wildcardClass26 = typeCircularBuffer21.getClass();
        boolean boolean27 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass26);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer34.getClass();
        boolean boolean36 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass35);
        java.lang.reflect.Type type37 = typeCircularBuffer31.get();
        boolean boolean38 = typeCircularBuffer29.put(type37);
        java.lang.Class<?> wildcardClass39 = typeCircularBuffer29.getClass();
        boolean boolean40 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass39);
        java.lang.Class<?> wildcardClass41 = typeCircularBuffer8.getClass();
        boolean boolean42 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean43 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type44 = typeCircularBuffer1.get();
        java.lang.reflect.Type type45 = typeCircularBuffer1.get();
        boolean boolean46 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNull(type45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test2086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2086");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type11 = typeCircularBuffer10.get();
        boolean boolean12 = typeCircularBuffer10.isFull();
        boolean boolean13 = typeCircularBuffer10.isFull();
        boolean boolean14 = typeCircularBuffer10.isFull();
        java.lang.reflect.Type type15 = typeCircularBuffer10.get();
        boolean boolean16 = typeCircularBuffer10.isEmpty();
        java.lang.reflect.Type type17 = typeCircularBuffer10.get();
        java.lang.reflect.Type type18 = typeCircularBuffer10.get();
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer10.getClass();
        boolean boolean20 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass19);
        boolean boolean21 = typeCircularBuffer1.isEmpty();
        boolean boolean22 = typeCircularBuffer1.isFull();
        boolean boolean23 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type24 = typeCircularBuffer1.get();
        boolean boolean25 = typeCircularBuffer1.isEmpty();
        boolean boolean26 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertNull(type11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(type15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(type17);
        org.junit.Assert.assertNull(type18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    }

    @Test
    public void test2087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2087");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.Object> objCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.Object>(10);
    }

    @Test
    public void test2088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2088");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type12 = typeCircularBuffer1.get();
        boolean boolean13 = typeCircularBuffer1.isEmpty();
        boolean boolean14 = typeCircularBuffer1.isEmpty();
        boolean boolean15 = typeCircularBuffer1.isEmpty();
        boolean boolean16 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type17 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type20 = typeCircularBuffer19.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean25 = typeCircularBuffer24.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer27.getClass();
        boolean boolean29 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.reflect.Type type30 = typeCircularBuffer24.get();
        boolean boolean31 = typeCircularBuffer22.put(type30);
        boolean boolean32 = typeCircularBuffer22.isFull();
        java.lang.reflect.Type type33 = typeCircularBuffer22.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean36 = typeCircularBuffer35.isEmpty();
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        boolean boolean39 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass38);
        boolean boolean40 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass38);
        boolean boolean41 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass38);
        boolean boolean42 = typeCircularBuffer19.isEmpty();
        java.lang.reflect.Type type43 = typeCircularBuffer19.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean48 = typeCircularBuffer47.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer50.getClass();
        boolean boolean52 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass51);
        java.lang.reflect.Type type53 = typeCircularBuffer47.get();
        boolean boolean54 = typeCircularBuffer45.put(type53);
        boolean boolean55 = typeCircularBuffer45.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer57 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean58 = typeCircularBuffer57.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer60 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass61 = typeCircularBuffer60.getClass();
        boolean boolean62 = typeCircularBuffer57.put((java.lang.reflect.Type) wildcardClass61);
        java.lang.reflect.Type type63 = typeCircularBuffer57.get();
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        boolean boolean66 = typeCircularBuffer57.put((java.lang.reflect.Type) wildcardClass65);
        boolean boolean67 = typeCircularBuffer45.put((java.lang.reflect.Type) wildcardClass65);
        boolean boolean68 = typeCircularBuffer45.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer70 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type71 = typeCircularBuffer70.get();
        boolean boolean72 = typeCircularBuffer70.isFull();
        boolean boolean73 = typeCircularBuffer70.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer75 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean76 = typeCircularBuffer75.isEmpty();
        java.lang.Object obj77 = new java.lang.Object();
        java.lang.Class<?> wildcardClass78 = obj77.getClass();
        boolean boolean79 = typeCircularBuffer75.put((java.lang.reflect.Type) wildcardClass78);
        java.lang.Class<?> wildcardClass80 = typeCircularBuffer75.getClass();
        boolean boolean81 = typeCircularBuffer70.put((java.lang.reflect.Type) wildcardClass80);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer83 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean84 = typeCircularBuffer83.isEmpty();
        java.lang.Object obj85 = new java.lang.Object();
        java.lang.Class<?> wildcardClass86 = obj85.getClass();
        boolean boolean87 = typeCircularBuffer83.put((java.lang.reflect.Type) wildcardClass86);
        java.lang.Class<?> wildcardClass88 = typeCircularBuffer83.getClass();
        boolean boolean89 = typeCircularBuffer70.put((java.lang.reflect.Type) wildcardClass88);
        boolean boolean90 = typeCircularBuffer45.put((java.lang.reflect.Type) wildcardClass88);
        java.lang.reflect.Type type91 = typeCircularBuffer45.get();
        boolean boolean92 = typeCircularBuffer19.put(type91);
        java.lang.reflect.Type type93 = typeCircularBuffer19.get();
        boolean boolean94 = typeCircularBuffer1.put(type93);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(type17);
        org.junit.Assert.assertNull(type20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(type71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(type91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(type93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
    }

    @Test
    public void test2089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2089");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer10.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type19 = typeCircularBuffer18.get();
        boolean boolean20 = typeCircularBuffer18.isFull();
        boolean boolean21 = typeCircularBuffer18.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean24 = typeCircularBuffer23.isEmpty();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        boolean boolean27 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass26);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer23.getClass();
        boolean boolean29 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass28);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        boolean boolean35 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass34);
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer31.getClass();
        boolean boolean37 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean38 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean39 = typeCircularBuffer10.isEmpty();
        boolean boolean40 = typeCircularBuffer10.isFull();
        java.lang.Class<?> wildcardClass41 = typeCircularBuffer10.getClass();
        boolean boolean42 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean43 = typeCircularBuffer1.isFull();
        boolean boolean44 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNull(type19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test2090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2090");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean13 = typeCircularBuffer12.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass16 = typeCircularBuffer15.getClass();
        boolean boolean17 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass16);
        java.lang.reflect.Type type18 = typeCircularBuffer12.get();
        boolean boolean19 = typeCircularBuffer10.put(type18);
        boolean boolean20 = typeCircularBuffer10.isEmpty();
        boolean boolean21 = typeCircularBuffer10.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean24 = typeCircularBuffer23.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer26.getClass();
        boolean boolean28 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass27);
        java.lang.reflect.Type type29 = typeCircularBuffer23.get();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        boolean boolean32 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass31);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean35 = typeCircularBuffer34.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass38 = typeCircularBuffer37.getClass();
        boolean boolean39 = typeCircularBuffer34.put((java.lang.reflect.Type) wildcardClass38);
        java.lang.reflect.Type type40 = typeCircularBuffer34.get();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        boolean boolean43 = typeCircularBuffer34.put((java.lang.reflect.Type) wildcardClass42);
        java.lang.reflect.Type type44 = typeCircularBuffer34.get();
        boolean boolean45 = typeCircularBuffer23.put(type44);
        boolean boolean46 = typeCircularBuffer10.put(type44);
        boolean boolean47 = typeCircularBuffer10.isEmpty();
        java.lang.reflect.Type type48 = typeCircularBuffer10.get();
        boolean boolean49 = typeCircularBuffer1.put(type48);
        boolean boolean50 = typeCircularBuffer1.isEmpty();
        boolean boolean51 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer53 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type54 = typeCircularBuffer53.get();
        boolean boolean55 = typeCircularBuffer53.isFull();
        boolean boolean56 = typeCircularBuffer53.isFull();
        boolean boolean57 = typeCircularBuffer53.isFull();
        boolean boolean58 = typeCircularBuffer53.isFull();
        java.lang.reflect.Type type59 = typeCircularBuffer53.get();
        boolean boolean60 = typeCircularBuffer53.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer62 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean63 = typeCircularBuffer62.isEmpty();
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        boolean boolean66 = typeCircularBuffer62.put((java.lang.reflect.Type) wildcardClass65);
        boolean boolean67 = typeCircularBuffer53.put((java.lang.reflect.Type) wildcardClass65);
        java.lang.Class<?> wildcardClass68 = typeCircularBuffer53.getClass();
        boolean boolean69 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass68);
        boolean boolean70 = typeCircularBuffer1.isEmpty();
        boolean boolean71 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(type54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(type59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
    }

    @Test
    public void test2091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2091");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type10 = typeCircularBuffer9.get();
        boolean boolean11 = typeCircularBuffer9.isFull();
        boolean boolean12 = typeCircularBuffer9.isFull();
        boolean boolean13 = typeCircularBuffer9.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer20.getClass();
        boolean boolean22 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type23 = typeCircularBuffer17.get();
        boolean boolean24 = typeCircularBuffer15.put(type23);
        boolean boolean25 = typeCircularBuffer15.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean28 = typeCircularBuffer27.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass31 = typeCircularBuffer30.getClass();
        boolean boolean32 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass31);
        java.lang.reflect.Type type33 = typeCircularBuffer27.get();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        boolean boolean36 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass35);
        boolean boolean37 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass35);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean40 = typeCircularBuffer39.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass43 = typeCircularBuffer42.getClass();
        boolean boolean44 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass43);
        java.lang.reflect.Type type45 = typeCircularBuffer39.get();
        boolean boolean46 = typeCircularBuffer15.put(type45);
        java.lang.reflect.Type type47 = typeCircularBuffer15.get();
        boolean boolean48 = typeCircularBuffer9.put(type47);
        boolean boolean49 = typeCircularBuffer1.put(type47);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.invoke.TypeDescriptor> typeDescriptorCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.invoke.TypeDescriptor>(10);
        java.lang.Class<?> wildcardClass52 = typeDescriptorCircularBuffer51.getClass();
        boolean boolean53 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass52);
        java.lang.reflect.Type type54 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(type54);
    }

    @Test
    public void test2092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2092");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer6.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.reflect.Type type13 = typeCircularBuffer1.get();
        boolean boolean14 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer19.getClass();
        boolean boolean21 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean22 = typeCircularBuffer16.isEmpty();
        java.lang.reflect.Type type23 = typeCircularBuffer16.get();
        boolean boolean24 = typeCircularBuffer1.put(type23);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type27 = typeCircularBuffer26.get();
        boolean boolean28 = typeCircularBuffer26.isFull();
        boolean boolean29 = typeCircularBuffer26.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        boolean boolean35 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass34);
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer31.getClass();
        boolean boolean37 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass36);
        java.lang.reflect.Type type38 = typeCircularBuffer26.get();
        boolean boolean39 = typeCircularBuffer26.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type42 = typeCircularBuffer41.get();
        boolean boolean43 = typeCircularBuffer41.isFull();
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer41.getClass();
        boolean boolean45 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean46 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass44);
        java.lang.reflect.Type type47 = typeCircularBuffer1.get();
        java.lang.reflect.Type type48 = typeCircularBuffer1.get();
        boolean boolean49 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type50 = typeCircularBuffer1.get();
        boolean boolean51 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(type42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNull(type48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(type50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test2093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2093");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(10);
        java.lang.reflect.Type type2 = null;
        boolean boolean3 = typeCircularBuffer1.put(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
    }

    @Test
    public void test2094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2094");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        boolean boolean5 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass8 = typeCircularBuffer7.getClass();
        boolean boolean9 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass8);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean12 = typeCircularBuffer11.isFull();
        boolean boolean13 = typeCircularBuffer11.isEmpty();
        boolean boolean14 = typeCircularBuffer11.isFull();
        java.lang.Class<?> wildcardClass15 = typeCircularBuffer11.getClass();
        boolean boolean16 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass15);
        boolean boolean17 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type18 = typeCircularBuffer1.get();
        boolean boolean19 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean24 = typeCircularBuffer23.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer26.getClass();
        boolean boolean28 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass27);
        java.lang.reflect.Type type29 = typeCircularBuffer23.get();
        boolean boolean30 = typeCircularBuffer21.put(type29);
        java.lang.reflect.Type type31 = typeCircularBuffer21.get();
        java.lang.reflect.Type type32 = null;
        boolean boolean33 = typeCircularBuffer21.put(type32);
        boolean boolean34 = typeCircularBuffer21.isFull();
        boolean boolean35 = typeCircularBuffer21.isFull();
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer21.getClass();
        boolean boolean37 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass36);
        java.lang.reflect.Type type38 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '#');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean45 = typeCircularBuffer44.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass48 = typeCircularBuffer47.getClass();
        boolean boolean49 = typeCircularBuffer44.put((java.lang.reflect.Type) wildcardClass48);
        java.lang.reflect.Type type50 = typeCircularBuffer44.get();
        boolean boolean51 = typeCircularBuffer42.put(type50);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer53 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer55 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean56 = typeCircularBuffer55.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer58 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass59 = typeCircularBuffer58.getClass();
        boolean boolean60 = typeCircularBuffer55.put((java.lang.reflect.Type) wildcardClass59);
        java.lang.reflect.Type type61 = typeCircularBuffer55.get();
        boolean boolean62 = typeCircularBuffer53.put(type61);
        java.lang.Class<?> wildcardClass63 = typeCircularBuffer53.getClass();
        boolean boolean64 = typeCircularBuffer42.put((java.lang.reflect.Type) wildcardClass63);
        boolean boolean65 = typeCircularBuffer40.put((java.lang.reflect.Type) wildcardClass63);
        boolean boolean66 = typeCircularBuffer40.isEmpty();
        java.lang.Class<?> wildcardClass67 = typeCircularBuffer40.getClass();
        boolean boolean68 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass67);
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
    }

    @Test
    public void test2095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2095");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isFull();
        boolean boolean8 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(type9);
    }

    @Test
    public void test2096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2096");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(100);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type4 = typeCircularBuffer3.get();
        boolean boolean5 = typeCircularBuffer3.isFull();
        boolean boolean6 = typeCircularBuffer3.isFull();
        boolean boolean7 = typeCircularBuffer3.isEmpty();
        java.lang.reflect.Type type8 = typeCircularBuffer3.get();
        boolean boolean9 = typeCircularBuffer3.isEmpty();
        boolean boolean10 = typeCircularBuffer3.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type13 = typeCircularBuffer12.get();
        boolean boolean14 = typeCircularBuffer12.isFull();
        boolean boolean15 = typeCircularBuffer12.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        boolean boolean21 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer17.getClass();
        boolean boolean23 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass22);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean26 = typeCircularBuffer25.isEmpty();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        boolean boolean29 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.Class<?> wildcardClass30 = typeCircularBuffer25.getClass();
        boolean boolean31 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass30);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean34 = typeCircularBuffer33.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass37 = typeCircularBuffer36.getClass();
        boolean boolean38 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass37);
        boolean boolean39 = typeCircularBuffer33.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.GenericDeclaration> genericDeclarationCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.GenericDeclaration>((int) (short) 100);
        java.lang.Class<?> wildcardClass42 = genericDeclarationCircularBuffer41.getClass();
        boolean boolean43 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass42);
        boolean boolean44 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass42);
        boolean boolean45 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass42);
        boolean boolean46 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass42);
        java.lang.reflect.Type type47 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass48 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(type13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test2097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2097");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type12 = typeCircularBuffer1.get();
        boolean boolean13 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type14 = typeCircularBuffer1.get();
        java.lang.reflect.Type type15 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean20 = typeCircularBuffer19.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass23 = typeCircularBuffer22.getClass();
        boolean boolean24 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass23);
        java.lang.reflect.Type type25 = typeCircularBuffer19.get();
        boolean boolean26 = typeCircularBuffer17.put(type25);
        boolean boolean27 = typeCircularBuffer17.isEmpty();
        boolean boolean28 = typeCircularBuffer17.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean31 = typeCircularBuffer30.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass34 = typeCircularBuffer33.getClass();
        boolean boolean35 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass34);
        java.lang.reflect.Type type36 = typeCircularBuffer30.get();
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        boolean boolean39 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass38);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean42 = typeCircularBuffer41.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass45 = typeCircularBuffer44.getClass();
        boolean boolean46 = typeCircularBuffer41.put((java.lang.reflect.Type) wildcardClass45);
        java.lang.reflect.Type type47 = typeCircularBuffer41.get();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        boolean boolean50 = typeCircularBuffer41.put((java.lang.reflect.Type) wildcardClass49);
        java.lang.reflect.Type type51 = typeCircularBuffer41.get();
        boolean boolean52 = typeCircularBuffer30.put(type51);
        boolean boolean53 = typeCircularBuffer17.put(type51);
        boolean boolean54 = typeCircularBuffer17.isEmpty();
        java.lang.reflect.Type type55 = typeCircularBuffer17.get();
        boolean boolean56 = typeCircularBuffer1.put(type55);
        boolean boolean57 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type58 = typeCircularBuffer1.get();
        java.lang.reflect.Type type59 = typeCircularBuffer1.get();
        boolean boolean60 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(type14);
        org.junit.Assert.assertNull(type15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNull(type59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test2098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2098");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        boolean boolean9 = typeCircularBuffer1.isFull();
        boolean boolean10 = typeCircularBuffer1.isEmpty();
        boolean boolean11 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type22 = typeCircularBuffer21.get();
        boolean boolean23 = typeCircularBuffer21.isFull();
        boolean boolean24 = typeCircularBuffer21.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean27 = typeCircularBuffer26.isEmpty();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        boolean boolean30 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass29);
        java.lang.Class<?> wildcardClass31 = typeCircularBuffer26.getClass();
        boolean boolean32 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass31);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean35 = typeCircularBuffer34.isEmpty();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        boolean boolean38 = typeCircularBuffer34.put((java.lang.reflect.Type) wildcardClass37);
        java.lang.Class<?> wildcardClass39 = typeCircularBuffer34.getClass();
        boolean boolean40 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass39);
        boolean boolean41 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass39);
        boolean boolean42 = typeCircularBuffer13.isEmpty();
        boolean boolean43 = typeCircularBuffer13.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean48 = typeCircularBuffer47.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer50.getClass();
        boolean boolean52 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass51);
        java.lang.reflect.Type type53 = typeCircularBuffer47.get();
        boolean boolean54 = typeCircularBuffer45.put(type53);
        boolean boolean55 = typeCircularBuffer45.isEmpty();
        boolean boolean56 = typeCircularBuffer45.isFull();
        boolean boolean57 = typeCircularBuffer45.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer59 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer61 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean62 = typeCircularBuffer61.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer64 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass65 = typeCircularBuffer64.getClass();
        boolean boolean66 = typeCircularBuffer61.put((java.lang.reflect.Type) wildcardClass65);
        java.lang.reflect.Type type67 = typeCircularBuffer61.get();
        boolean boolean68 = typeCircularBuffer59.put(type67);
        boolean boolean69 = typeCircularBuffer59.isFull();
        java.lang.reflect.Type type70 = typeCircularBuffer59.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer72 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean73 = typeCircularBuffer72.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer75 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass76 = typeCircularBuffer75.getClass();
        boolean boolean77 = typeCircularBuffer72.put((java.lang.reflect.Type) wildcardClass76);
        boolean boolean78 = typeCircularBuffer72.isFull();
        java.lang.reflect.Type type79 = typeCircularBuffer72.get();
        boolean boolean80 = typeCircularBuffer59.put(type79);
        boolean boolean81 = typeCircularBuffer45.put(type79);
        boolean boolean82 = typeCircularBuffer13.put(type79);
        boolean boolean83 = typeCircularBuffer1.put(type79);
        boolean boolean84 = typeCircularBuffer1.isFull();
        boolean boolean85 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type86 = null;
        boolean boolean87 = typeCircularBuffer1.put(type86);
        java.lang.reflect.Type type88 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNull(type22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(type88);
    }

    @Test
    public void test2099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2099");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = null;
        boolean boolean8 = typeCircularBuffer1.put(type7);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean13 = typeCircularBuffer12.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass16 = typeCircularBuffer15.getClass();
        boolean boolean17 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass16);
        java.lang.reflect.Type type18 = typeCircularBuffer12.get();
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer12.getClass();
        boolean boolean20 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass19);
        boolean boolean21 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass19);
        boolean boolean22 = typeCircularBuffer1.isFull();
        boolean boolean23 = typeCircularBuffer1.isEmpty();
        boolean boolean24 = typeCircularBuffer1.isFull();
        boolean boolean25 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type26 = typeCircularBuffer1.get();
        boolean boolean27 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type28 = null;
        boolean boolean29 = typeCircularBuffer1.put(type28);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer34.getClass();
        boolean boolean36 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass35);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean41 = typeCircularBuffer40.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer43.getClass();
        boolean boolean45 = typeCircularBuffer40.put((java.lang.reflect.Type) wildcardClass44);
        java.lang.reflect.Type type46 = typeCircularBuffer40.get();
        boolean boolean47 = typeCircularBuffer38.put(type46);
        boolean boolean48 = typeCircularBuffer38.isFull();
        java.lang.reflect.Type type49 = typeCircularBuffer38.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean52 = typeCircularBuffer51.isEmpty();
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        boolean boolean55 = typeCircularBuffer51.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean56 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean57 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean58 = typeCircularBuffer31.isFull();
        java.lang.reflect.Type type59 = typeCircularBuffer31.get();
        boolean boolean60 = typeCircularBuffer1.put(type59);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test2100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2100");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean9 = typeCircularBuffer8.isFull();
        boolean boolean10 = typeCircularBuffer8.isEmpty();
        boolean boolean11 = typeCircularBuffer8.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean24 = typeCircularBuffer8.isFull();
        java.lang.Class<?> wildcardClass25 = typeCircularBuffer8.getClass();
        boolean boolean26 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass25);
        boolean boolean27 = typeCircularBuffer1.isFull();
        boolean boolean28 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
    }

    @Test
    public void test2101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2101");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer6.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        boolean boolean13 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean16 = typeCircularBuffer15.isFull();
        boolean boolean17 = typeCircularBuffer15.isEmpty();
        java.lang.reflect.Type type18 = typeCircularBuffer15.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass26 = typeCircularBuffer25.getClass();
        boolean boolean27 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass26);
        java.lang.reflect.Type type28 = typeCircularBuffer22.get();
        boolean boolean29 = typeCircularBuffer20.put(type28);
        java.lang.Class<?> wildcardClass30 = typeCircularBuffer20.getClass();
        boolean boolean31 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass30);
        boolean boolean32 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass30);
        boolean boolean33 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type34 = typeCircularBuffer1.get();
        boolean boolean35 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type38 = typeCircularBuffer37.get();
        boolean boolean39 = typeCircularBuffer37.isFull();
        boolean boolean40 = typeCircularBuffer37.isFull();
        boolean boolean41 = typeCircularBuffer37.isFull();
        boolean boolean42 = typeCircularBuffer37.isFull();
        java.lang.reflect.Type type43 = typeCircularBuffer37.get();
        boolean boolean44 = typeCircularBuffer37.isEmpty();
        boolean boolean45 = typeCircularBuffer37.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean48 = typeCircularBuffer47.isFull();
        boolean boolean49 = typeCircularBuffer47.isEmpty();
        java.lang.reflect.Type type50 = typeCircularBuffer47.get();
        boolean boolean51 = typeCircularBuffer47.isEmpty();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        boolean boolean54 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass53);
        boolean boolean55 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass53);
        boolean boolean56 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass53);
        java.lang.Class<?> wildcardClass57 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(type18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(type38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(type43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(type50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test2102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2102");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type10 = typeCircularBuffer9.get();
        boolean boolean11 = typeCircularBuffer9.isFull();
        boolean boolean12 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer14.getClass();
        boolean boolean20 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass19);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        boolean boolean26 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer22.getClass();
        boolean boolean28 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean30 = typeCircularBuffer1.isEmpty();
        boolean boolean31 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type32 = typeCircularBuffer1.get();
        boolean boolean33 = typeCircularBuffer1.isEmpty();
        boolean boolean34 = typeCircularBuffer1.isFull();
        boolean boolean35 = typeCircularBuffer1.isFull();
        boolean boolean36 = typeCircularBuffer1.isEmpty();
        boolean boolean37 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type38 = null;
        boolean boolean39 = typeCircularBuffer1.put(type38);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type42 = typeCircularBuffer41.get();
        boolean boolean43 = typeCircularBuffer41.isFull();
        boolean boolean44 = typeCircularBuffer41.isFull();
        boolean boolean45 = typeCircularBuffer41.isEmpty();
        boolean boolean46 = typeCircularBuffer41.isEmpty();
        boolean boolean47 = typeCircularBuffer41.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer49 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean50 = typeCircularBuffer49.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer52 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass53 = typeCircularBuffer52.getClass();
        boolean boolean54 = typeCircularBuffer49.put((java.lang.reflect.Type) wildcardClass53);
        java.lang.reflect.Type type55 = null;
        boolean boolean56 = typeCircularBuffer49.put(type55);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer58 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer60 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean61 = typeCircularBuffer60.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer63 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass64 = typeCircularBuffer63.getClass();
        boolean boolean65 = typeCircularBuffer60.put((java.lang.reflect.Type) wildcardClass64);
        java.lang.reflect.Type type66 = typeCircularBuffer60.get();
        java.lang.Class<?> wildcardClass67 = typeCircularBuffer60.getClass();
        boolean boolean68 = typeCircularBuffer58.put((java.lang.reflect.Type) wildcardClass67);
        boolean boolean69 = typeCircularBuffer49.put((java.lang.reflect.Type) wildcardClass67);
        boolean boolean70 = typeCircularBuffer41.put((java.lang.reflect.Type) wildcardClass67);
        boolean boolean71 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass67);
        java.lang.Class<?> wildcardClass72 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(type42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test2103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2103");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertNull(type7);
    }

    @Test
    public void test2104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2104");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        java.lang.reflect.Type type12 = typeCircularBuffer6.get();
        boolean boolean13 = typeCircularBuffer4.put(type12);
        boolean boolean14 = typeCircularBuffer4.isFull();
        java.lang.reflect.Type type15 = typeCircularBuffer4.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        boolean boolean21 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean22 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean24 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type25 = typeCircularBuffer1.get();
        boolean boolean26 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean31 = typeCircularBuffer30.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass34 = typeCircularBuffer33.getClass();
        boolean boolean35 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass34);
        java.lang.reflect.Type type36 = typeCircularBuffer30.get();
        boolean boolean37 = typeCircularBuffer28.put(type36);
        boolean boolean38 = typeCircularBuffer28.isFull();
        java.lang.reflect.Type type39 = typeCircularBuffer28.get();
        boolean boolean40 = typeCircularBuffer28.isEmpty();
        java.lang.reflect.Type type41 = typeCircularBuffer28.get();
        java.lang.Class<?> wildcardClass42 = typeCircularBuffer28.getClass();
        boolean boolean43 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass42);
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(type41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test2105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2105");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        java.lang.reflect.Type type8 = typeCircularBuffer6.get();
        java.lang.reflect.Type type9 = typeCircularBuffer6.get();
        java.lang.reflect.Type type10 = typeCircularBuffer6.get();
        boolean boolean11 = typeCircularBuffer6.isFull();
        boolean boolean12 = typeCircularBuffer6.isFull();
        boolean boolean13 = typeCircularBuffer6.isFull();
        boolean boolean14 = typeCircularBuffer6.isEmpty();
        boolean boolean15 = typeCircularBuffer6.isFull();
        boolean boolean16 = typeCircularBuffer6.isFull();
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer6.getClass();
        boolean boolean18 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass17);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '#');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean25 = typeCircularBuffer24.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer27.getClass();
        boolean boolean29 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.reflect.Type type30 = typeCircularBuffer24.get();
        boolean boolean31 = typeCircularBuffer22.put(type30);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean36 = typeCircularBuffer35.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass39 = typeCircularBuffer38.getClass();
        boolean boolean40 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass39);
        java.lang.reflect.Type type41 = typeCircularBuffer35.get();
        boolean boolean42 = typeCircularBuffer33.put(type41);
        java.lang.Class<?> wildcardClass43 = typeCircularBuffer33.getClass();
        boolean boolean44 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass43);
        boolean boolean45 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass43);
        boolean boolean46 = typeCircularBuffer20.isEmpty();
        boolean boolean47 = typeCircularBuffer20.isFull();
        java.lang.reflect.Type type48 = typeCircularBuffer20.get();
        boolean boolean49 = typeCircularBuffer20.isEmpty();
        java.lang.reflect.Type type50 = typeCircularBuffer20.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer52 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type53 = typeCircularBuffer52.get();
        boolean boolean54 = typeCircularBuffer52.isFull();
        boolean boolean55 = typeCircularBuffer52.isFull();
        boolean boolean56 = typeCircularBuffer52.isEmpty();
        boolean boolean57 = typeCircularBuffer52.isEmpty();
        boolean boolean58 = typeCircularBuffer52.isEmpty();
        java.lang.Class<?> wildcardClass59 = typeCircularBuffer52.getClass();
        boolean boolean60 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass59);
        boolean boolean61 = typeCircularBuffer20.isFull();
        java.lang.Class<?> wildcardClass62 = typeCircularBuffer20.getClass();
        boolean boolean63 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(type50);
        org.junit.Assert.assertNull(type53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test2106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2106");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer10.get();
        boolean boolean17 = typeCircularBuffer8.put(type16);
        boolean boolean18 = typeCircularBuffer8.isFull();
        java.lang.reflect.Type type19 = typeCircularBuffer8.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean22 = typeCircularBuffer21.isEmpty();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean26 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean27 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean28 = typeCircularBuffer1.isFull();
        boolean boolean29 = typeCircularBuffer1.isFull();
        boolean boolean30 = typeCircularBuffer1.isEmpty();
        boolean boolean31 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type32 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean37 = typeCircularBuffer36.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass40 = typeCircularBuffer39.getClass();
        boolean boolean41 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass40);
        java.lang.reflect.Type type42 = typeCircularBuffer36.get();
        boolean boolean43 = typeCircularBuffer34.put(type42);
        boolean boolean44 = typeCircularBuffer34.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean47 = typeCircularBuffer46.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer49 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass50 = typeCircularBuffer49.getClass();
        boolean boolean51 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass50);
        java.lang.reflect.Type type52 = typeCircularBuffer46.get();
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        boolean boolean55 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean56 = typeCircularBuffer34.put((java.lang.reflect.Type) wildcardClass54);
        java.lang.reflect.Type type57 = typeCircularBuffer34.get();
        boolean boolean58 = typeCircularBuffer1.put(type57);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer60 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer62 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean63 = typeCircularBuffer62.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer65 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass66 = typeCircularBuffer65.getClass();
        boolean boolean67 = typeCircularBuffer62.put((java.lang.reflect.Type) wildcardClass66);
        java.lang.reflect.Type type68 = typeCircularBuffer62.get();
        boolean boolean69 = typeCircularBuffer60.put(type68);
        boolean boolean70 = typeCircularBuffer60.isFull();
        java.lang.reflect.Type type71 = typeCircularBuffer60.get();
        boolean boolean72 = typeCircularBuffer60.isEmpty();
        boolean boolean73 = typeCircularBuffer60.isEmpty();
        java.lang.Class<?> wildcardClass74 = typeCircularBuffer60.getClass();
        boolean boolean75 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass74);
        boolean boolean76 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass77 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test2107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2107");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer6.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.reflect.Type type13 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer20.getClass();
        boolean boolean22 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type23 = typeCircularBuffer17.get();
        boolean boolean24 = typeCircularBuffer15.put(type23);
        boolean boolean25 = typeCircularBuffer1.put(type23);
        java.lang.reflect.Type type26 = null;
        boolean boolean27 = typeCircularBuffer1.put(type26);
        java.lang.reflect.Type type28 = typeCircularBuffer1.get();
        boolean boolean29 = typeCircularBuffer1.isFull();
        boolean boolean30 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test2108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2108");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer6.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.reflect.Type type13 = typeCircularBuffer1.get();
        boolean boolean14 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type17 = typeCircularBuffer16.get();
        boolean boolean18 = typeCircularBuffer16.isFull();
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer16.getClass();
        boolean boolean20 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass19);
        java.lang.reflect.Type type21 = typeCircularBuffer1.get();
        boolean boolean22 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type23 = typeCircularBuffer1.get();
        java.lang.reflect.Type type24 = typeCircularBuffer1.get();
        boolean boolean25 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean30 = typeCircularBuffer29.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass33 = typeCircularBuffer32.getClass();
        boolean boolean34 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass33);
        java.lang.reflect.Type type35 = typeCircularBuffer29.get();
        boolean boolean36 = typeCircularBuffer27.put(type35);
        boolean boolean37 = typeCircularBuffer27.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 1);
        boolean boolean40 = typeCircularBuffer39.isEmpty();
        boolean boolean41 = typeCircularBuffer39.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type44 = typeCircularBuffer43.get();
        boolean boolean45 = typeCircularBuffer43.isFull();
        boolean boolean46 = typeCircularBuffer43.isFull();
        boolean boolean47 = typeCircularBuffer43.isEmpty();
        java.lang.reflect.Type type48 = typeCircularBuffer43.get();
        java.lang.Class<?> wildcardClass49 = typeCircularBuffer43.getClass();
        boolean boolean50 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass49);
        boolean boolean51 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass49);
        java.lang.reflect.Type type52 = typeCircularBuffer27.get();
        java.lang.reflect.Type type53 = typeCircularBuffer27.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer55 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type56 = typeCircularBuffer55.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer58 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer60 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean61 = typeCircularBuffer60.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer63 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass64 = typeCircularBuffer63.getClass();
        boolean boolean65 = typeCircularBuffer60.put((java.lang.reflect.Type) wildcardClass64);
        java.lang.reflect.Type type66 = typeCircularBuffer60.get();
        boolean boolean67 = typeCircularBuffer58.put(type66);
        boolean boolean68 = typeCircularBuffer58.isFull();
        java.lang.reflect.Type type69 = typeCircularBuffer58.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer71 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean72 = typeCircularBuffer71.isEmpty();
        java.lang.Object obj73 = new java.lang.Object();
        java.lang.Class<?> wildcardClass74 = obj73.getClass();
        boolean boolean75 = typeCircularBuffer71.put((java.lang.reflect.Type) wildcardClass74);
        boolean boolean76 = typeCircularBuffer58.put((java.lang.reflect.Type) wildcardClass74);
        boolean boolean77 = typeCircularBuffer55.put((java.lang.reflect.Type) wildcardClass74);
        java.lang.reflect.Type type78 = typeCircularBuffer55.get();
        boolean boolean79 = typeCircularBuffer27.put(type78);
        com.thealgorithms.datastructures.buffers.CircularBuffer<com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>> typeCircularBufferCircularBuffer81 = new com.thealgorithms.datastructures.buffers.CircularBuffer<com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>>((int) ' ');
        java.lang.Class<?> wildcardClass82 = typeCircularBufferCircularBuffer81.getClass();
        boolean boolean83 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass82);
        boolean boolean84 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass82);
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(type17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(type23);
        org.junit.Assert.assertNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(type44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(type48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNull(type53);
        org.junit.Assert.assertNull(type56);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
    }

    @Test
    public void test2109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2109");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean12 = typeCircularBuffer11.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass15 = typeCircularBuffer14.getClass();
        boolean boolean16 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass15);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean21 = typeCircularBuffer20.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer23.getClass();
        boolean boolean25 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass24);
        java.lang.reflect.Type type26 = typeCircularBuffer20.get();
        boolean boolean27 = typeCircularBuffer18.put(type26);
        boolean boolean28 = typeCircularBuffer18.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean31 = typeCircularBuffer30.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass34 = typeCircularBuffer33.getClass();
        boolean boolean35 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass34);
        java.lang.reflect.Type type36 = typeCircularBuffer30.get();
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        boolean boolean39 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass38);
        boolean boolean40 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass38);
        boolean boolean41 = typeCircularBuffer18.isEmpty();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        boolean boolean44 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass43);
        boolean boolean45 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass43);
        boolean boolean46 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass43);
        boolean boolean47 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer49 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 1);
        java.lang.reflect.Type type50 = typeCircularBuffer49.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer52 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean53 = typeCircularBuffer52.isFull();
        boolean boolean54 = typeCircularBuffer52.isEmpty();
        java.lang.reflect.Type type55 = typeCircularBuffer52.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer57 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer59 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean60 = typeCircularBuffer59.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer62 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass63 = typeCircularBuffer62.getClass();
        boolean boolean64 = typeCircularBuffer59.put((java.lang.reflect.Type) wildcardClass63);
        java.lang.reflect.Type type65 = typeCircularBuffer59.get();
        boolean boolean66 = typeCircularBuffer57.put(type65);
        java.lang.Class<?> wildcardClass67 = typeCircularBuffer57.getClass();
        boolean boolean68 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass67);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer70 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(10);
        java.lang.Class<?> wildcardClass71 = typeCircularBuffer70.getClass();
        boolean boolean72 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass71);
        boolean boolean73 = typeCircularBuffer49.put((java.lang.reflect.Type) wildcardClass71);
        boolean boolean74 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass71);
        boolean boolean75 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type76 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass77 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(type50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNull(type55);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test2110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2110");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 10);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) 'a');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer5 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass6 = typeCircularBuffer5.getClass();
        boolean boolean7 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass6);
        java.lang.reflect.Type type8 = typeCircularBuffer3.get();
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type12 = typeCircularBuffer11.get();
        boolean boolean13 = typeCircularBuffer11.isFull();
        boolean boolean14 = typeCircularBuffer11.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        boolean boolean20 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass19);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer16.getClass();
        boolean boolean22 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type23 = typeCircularBuffer11.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean28 = typeCircularBuffer27.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass31 = typeCircularBuffer30.getClass();
        boolean boolean32 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass31);
        java.lang.reflect.Type type33 = typeCircularBuffer27.get();
        boolean boolean34 = typeCircularBuffer25.put(type33);
        boolean boolean35 = typeCircularBuffer11.put(type33);
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer11.getClass();
        boolean boolean37 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass36);
        java.lang.Class<?> wildcardClass38 = typeCircularBuffer3.getClass();
        boolean boolean39 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass38);
        boolean boolean40 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test2111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2111");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean10 = typeCircularBuffer9.isFull();
        boolean boolean11 = typeCircularBuffer9.isEmpty();
        java.lang.reflect.Type type12 = typeCircularBuffer9.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer19.getClass();
        boolean boolean21 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type22 = typeCircularBuffer16.get();
        boolean boolean23 = typeCircularBuffer14.put(type22);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer14.getClass();
        boolean boolean25 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean26 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean27 = typeCircularBuffer1.isEmpty();
        boolean boolean28 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type29 = typeCircularBuffer1.get();
        java.lang.reflect.Type type30 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean35 = typeCircularBuffer34.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass38 = typeCircularBuffer37.getClass();
        boolean boolean39 = typeCircularBuffer34.put((java.lang.reflect.Type) wildcardClass38);
        java.lang.reflect.Type type40 = typeCircularBuffer34.get();
        boolean boolean41 = typeCircularBuffer32.put(type40);
        boolean boolean42 = typeCircularBuffer32.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean45 = typeCircularBuffer44.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass48 = typeCircularBuffer47.getClass();
        boolean boolean49 = typeCircularBuffer44.put((java.lang.reflect.Type) wildcardClass48);
        java.lang.reflect.Type type50 = typeCircularBuffer44.get();
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        boolean boolean53 = typeCircularBuffer44.put((java.lang.reflect.Type) wildcardClass52);
        boolean boolean54 = typeCircularBuffer32.put((java.lang.reflect.Type) wildcardClass52);
        java.lang.reflect.Type type55 = typeCircularBuffer32.get();
        boolean boolean56 = typeCircularBuffer1.put(type55);
        java.lang.Class<?> wildcardClass57 = type55.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(type12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNull(type30);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test2112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2112");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isEmpty();
        boolean boolean12 = typeCircularBuffer1.isFull();
        boolean boolean13 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer20.getClass();
        boolean boolean22 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type23 = typeCircularBuffer17.get();
        boolean boolean24 = typeCircularBuffer15.put(type23);
        boolean boolean25 = typeCircularBuffer15.isFull();
        java.lang.reflect.Type type26 = typeCircularBuffer15.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer31.getClass();
        boolean boolean33 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer28.isFull();
        java.lang.reflect.Type type35 = typeCircularBuffer28.get();
        boolean boolean36 = typeCircularBuffer15.put(type35);
        boolean boolean37 = typeCircularBuffer1.put(type35);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean40 = typeCircularBuffer39.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass43 = typeCircularBuffer42.getClass();
        boolean boolean44 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass43);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean49 = typeCircularBuffer48.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass52 = typeCircularBuffer51.getClass();
        boolean boolean53 = typeCircularBuffer48.put((java.lang.reflect.Type) wildcardClass52);
        java.lang.reflect.Type type54 = typeCircularBuffer48.get();
        boolean boolean55 = typeCircularBuffer46.put(type54);
        boolean boolean56 = typeCircularBuffer46.isFull();
        java.lang.reflect.Type type57 = typeCircularBuffer46.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer59 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean60 = typeCircularBuffer59.isEmpty();
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        boolean boolean63 = typeCircularBuffer59.put((java.lang.reflect.Type) wildcardClass62);
        boolean boolean64 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass62);
        boolean boolean65 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass62);
        boolean boolean66 = typeCircularBuffer39.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer68 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean69 = typeCircularBuffer68.isFull();
        boolean boolean70 = typeCircularBuffer68.isEmpty();
        boolean boolean71 = typeCircularBuffer68.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer73 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean74 = typeCircularBuffer73.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer76 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass77 = typeCircularBuffer76.getClass();
        boolean boolean78 = typeCircularBuffer73.put((java.lang.reflect.Type) wildcardClass77);
        java.lang.reflect.Type type79 = typeCircularBuffer73.get();
        java.lang.Object obj80 = new java.lang.Object();
        java.lang.Class<?> wildcardClass81 = obj80.getClass();
        boolean boolean82 = typeCircularBuffer73.put((java.lang.reflect.Type) wildcardClass81);
        boolean boolean83 = typeCircularBuffer68.put((java.lang.reflect.Type) wildcardClass81);
        boolean boolean84 = typeCircularBuffer68.isFull();
        java.lang.reflect.Type type85 = typeCircularBuffer68.get();
        boolean boolean86 = typeCircularBuffer39.put(type85);
        boolean boolean87 = typeCircularBuffer1.put(type85);
        boolean boolean88 = typeCircularBuffer1.isFull();
        boolean boolean89 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type90 = typeCircularBuffer1.get();
        boolean boolean91 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type92 = typeCircularBuffer1.get();
        boolean boolean93 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type94 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(type85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(type90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNull(type92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertNull(type94);
    }

    @Test
    public void test2113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2113");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        java.lang.reflect.Type type15 = typeCircularBuffer9.get();
        boolean boolean16 = typeCircularBuffer7.put(type15);
        boolean boolean17 = typeCircularBuffer7.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean20 = typeCircularBuffer19.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass23 = typeCircularBuffer22.getClass();
        boolean boolean24 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass23);
        java.lang.reflect.Type type25 = typeCircularBuffer19.get();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        boolean boolean28 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer7.put((java.lang.reflect.Type) wildcardClass27);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer34.getClass();
        boolean boolean36 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass35);
        java.lang.reflect.Type type37 = typeCircularBuffer31.get();
        boolean boolean38 = typeCircularBuffer7.put(type37);
        java.lang.reflect.Type type39 = typeCircularBuffer7.get();
        boolean boolean40 = typeCircularBuffer1.put(type39);
        boolean boolean41 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type42 = typeCircularBuffer1.get();
        boolean boolean43 = typeCircularBuffer1.isFull();
        boolean boolean44 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test2114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2114");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '#');
        boolean boolean2 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) 'a');
        boolean boolean5 = typeCircularBuffer4.isFull();
        java.lang.reflect.Type type6 = typeCircularBuffer4.get();
        boolean boolean7 = typeCircularBuffer4.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type10 = typeCircularBuffer9.get();
        boolean boolean11 = typeCircularBuffer9.isFull();
        boolean boolean12 = typeCircularBuffer9.isFull();
        boolean boolean13 = typeCircularBuffer9.isFull();
        java.lang.reflect.Type type14 = typeCircularBuffer9.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type17 = typeCircularBuffer16.get();
        boolean boolean18 = typeCircularBuffer16.isFull();
        boolean boolean19 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean22 = typeCircularBuffer21.isEmpty();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass24);
        java.lang.Class<?> wildcardClass26 = typeCircularBuffer21.getClass();
        boolean boolean27 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass26);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean30 = typeCircularBuffer29.isEmpty();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        boolean boolean33 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass32);
        java.lang.Class<?> wildcardClass34 = typeCircularBuffer29.getClass();
        boolean boolean35 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass34);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean40 = typeCircularBuffer39.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass43 = typeCircularBuffer42.getClass();
        boolean boolean44 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass43);
        java.lang.reflect.Type type45 = typeCircularBuffer39.get();
        boolean boolean46 = typeCircularBuffer37.put(type45);
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer37.getClass();
        boolean boolean48 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass47);
        java.lang.Class<?> wildcardClass49 = typeCircularBuffer16.getClass();
        boolean boolean50 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass49);
        boolean boolean51 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass49);
        boolean boolean52 = typeCircularBuffer4.isFull();
        boolean boolean53 = typeCircularBuffer4.isFull();
        java.lang.Class<?> wildcardClass54 = typeCircularBuffer4.getClass();
        boolean boolean55 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(type14);
        org.junit.Assert.assertNull(type17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
    }

    @Test
    public void test2115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2115");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass10);
        boolean boolean13 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer20.getClass();
        boolean boolean22 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type23 = typeCircularBuffer17.get();
        boolean boolean24 = typeCircularBuffer15.put(type23);
        boolean boolean25 = typeCircularBuffer15.isFull();
        java.lang.reflect.Type type26 = typeCircularBuffer15.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        boolean boolean32 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass31);
        boolean boolean33 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass31);
        java.lang.reflect.Type type34 = typeCircularBuffer15.get();
        boolean boolean35 = typeCircularBuffer1.put(type34);
        java.lang.reflect.Type type36 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 1);
        java.lang.Class<?> wildcardClass39 = typeCircularBuffer38.getClass();
        boolean boolean40 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass39);
        java.lang.reflect.Type type41 = typeCircularBuffer1.get();
        java.lang.reflect.Type type42 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(type36);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(type41);
        org.junit.Assert.assertNull(type42);
    }

    @Test
    public void test2116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2116");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test2117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2117");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        java.lang.reflect.Type type8 = typeCircularBuffer6.get();
        java.lang.reflect.Type type9 = typeCircularBuffer6.get();
        java.lang.reflect.Type type10 = typeCircularBuffer6.get();
        boolean boolean11 = typeCircularBuffer6.isFull();
        boolean boolean12 = typeCircularBuffer6.isFull();
        java.lang.reflect.Type type13 = typeCircularBuffer6.get();
        boolean boolean14 = typeCircularBuffer6.isFull();
        boolean boolean15 = typeCircularBuffer6.isEmpty();
        java.lang.Class<?> wildcardClass16 = typeCircularBuffer6.getClass();
        boolean boolean17 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass16);
        boolean boolean18 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(type13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test2118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2118");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type10 = typeCircularBuffer9.get();
        boolean boolean11 = typeCircularBuffer9.isFull();
        boolean boolean12 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer14.getClass();
        boolean boolean20 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass19);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        boolean boolean26 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer22.getClass();
        boolean boolean28 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass27);
        java.lang.reflect.Type type30 = typeCircularBuffer1.get();
        java.lang.reflect.Type type31 = typeCircularBuffer1.get();
        java.lang.reflect.Type type32 = typeCircularBuffer1.get();
        java.lang.reflect.Type type33 = typeCircularBuffer1.get();
        java.lang.reflect.Type type34 = typeCircularBuffer1.get();
        boolean boolean35 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNull(type31);
        org.junit.Assert.assertNull(type32);
        org.junit.Assert.assertNull(type33);
        org.junit.Assert.assertNull(type34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test2119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2119");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type12 = typeCircularBuffer1.get();
        boolean boolean13 = typeCircularBuffer1.isEmpty();
        boolean boolean14 = typeCircularBuffer1.isEmpty();
        boolean boolean15 = typeCircularBuffer1.isFull();
        boolean boolean16 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test2120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2120");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        boolean boolean5 = typeCircularBuffer1.isFull();
        boolean boolean6 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type9 = typeCircularBuffer8.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        boolean boolean20 = typeCircularBuffer11.put(type19);
        boolean boolean21 = typeCircularBuffer11.isFull();
        java.lang.reflect.Type type22 = typeCircularBuffer11.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean25 = typeCircularBuffer24.isEmpty();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        boolean boolean28 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean30 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass27);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 0);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer34.getClass();
        boolean boolean36 = typeCircularBuffer32.put((java.lang.reflect.Type) wildcardClass35);
        boolean boolean37 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass35);
        boolean boolean38 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass35);
        java.lang.reflect.Type type39 = null;
        boolean boolean40 = typeCircularBuffer1.put(type39);
        java.lang.reflect.Type type41 = null;
        boolean boolean42 = typeCircularBuffer1.put(type41);
        boolean boolean43 = typeCircularBuffer1.isFull();
        boolean boolean44 = typeCircularBuffer1.isEmpty();
        boolean boolean45 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type46 = typeCircularBuffer1.get();
        java.lang.reflect.Type type47 = typeCircularBuffer1.get();
        boolean boolean48 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass49 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNull(type47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test2121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2121");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 100);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(type5);
    }

    @Test
    public void test2122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2122");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.AnnotatedElement> annotatedElementCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.AnnotatedElement>((int) 'a');
    }

    @Test
    public void test2123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2123");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        java.lang.reflect.Type type11 = typeCircularBuffer1.get();
        boolean boolean12 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type13 = typeCircularBuffer1.get();
        java.lang.reflect.Type type14 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean19 = typeCircularBuffer18.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer21.getClass();
        boolean boolean23 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass22);
        java.lang.reflect.Type type24 = typeCircularBuffer18.get();
        boolean boolean25 = typeCircularBuffer16.put(type24);
        boolean boolean26 = typeCircularBuffer16.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer31.getClass();
        boolean boolean33 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass32);
        java.lang.reflect.Type type34 = typeCircularBuffer28.get();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        boolean boolean37 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean38 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass36);
        java.lang.reflect.Type type39 = typeCircularBuffer16.get();
        boolean boolean40 = typeCircularBuffer1.put(type39);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        java.lang.reflect.Type type43 = typeCircularBuffer42.get();
        boolean boolean44 = typeCircularBuffer42.isFull();
        java.lang.reflect.Type type45 = typeCircularBuffer42.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type48 = typeCircularBuffer47.get();
        boolean boolean49 = typeCircularBuffer47.isFull();
        boolean boolean50 = typeCircularBuffer47.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer52 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean53 = typeCircularBuffer52.isEmpty();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        boolean boolean56 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass55);
        java.lang.Class<?> wildcardClass57 = typeCircularBuffer52.getClass();
        boolean boolean58 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass57);
        java.lang.reflect.Type type59 = typeCircularBuffer47.get();
        java.lang.Class<?> wildcardClass60 = type59.getClass();
        boolean boolean61 = typeCircularBuffer42.put(type59);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer63 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        java.lang.reflect.Type type64 = typeCircularBuffer63.get();
        boolean boolean65 = typeCircularBuffer63.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldCircularBuffer67 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>((int) (short) 1);
        java.lang.Class<?> wildcardClass68 = wildcardClassOfFieldCircularBuffer67.getClass();
        boolean boolean69 = typeCircularBuffer63.put((java.lang.reflect.Type) wildcardClass68);
        java.lang.reflect.Type type70 = typeCircularBuffer63.get();
        boolean boolean71 = typeCircularBuffer42.put(type70);
        boolean boolean72 = typeCircularBuffer1.put(type70);
        boolean boolean73 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type74 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass75 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(type13);
        org.junit.Assert.assertNull(type14);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(type43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(type45);
        org.junit.Assert.assertNull(type48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(type64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test2124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2124");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer5 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type6 = typeCircularBuffer5.get();
        boolean boolean7 = typeCircularBuffer5.isFull();
        boolean boolean8 = typeCircularBuffer5.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        boolean boolean14 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass13);
        java.lang.Class<?> wildcardClass15 = typeCircularBuffer10.getClass();
        boolean boolean16 = typeCircularBuffer5.put((java.lang.reflect.Type) wildcardClass15);
        java.lang.reflect.Type type17 = typeCircularBuffer5.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean22 = typeCircularBuffer21.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass25 = typeCircularBuffer24.getClass();
        boolean boolean26 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.reflect.Type type27 = typeCircularBuffer21.get();
        boolean boolean28 = typeCircularBuffer19.put(type27);
        boolean boolean29 = typeCircularBuffer5.put(type27);
        boolean boolean30 = typeCircularBuffer1.put(type27);
        boolean boolean31 = typeCircularBuffer1.isEmpty();
        boolean boolean32 = typeCircularBuffer1.isFull();
        boolean boolean33 = typeCircularBuffer1.isEmpty();
        boolean boolean34 = typeCircularBuffer1.isEmpty();
        boolean boolean35 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
    }

    @Test
    public void test2125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2125");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        boolean boolean7 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer10.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer19.getClass();
        boolean boolean21 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type22 = typeCircularBuffer16.get();
        boolean boolean23 = typeCircularBuffer14.put(type22);
        java.lang.reflect.Type type24 = typeCircularBuffer14.get();
        boolean boolean25 = typeCircularBuffer14.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean28 = typeCircularBuffer27.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass31 = typeCircularBuffer30.getClass();
        boolean boolean32 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass31);
        java.lang.reflect.Type type33 = typeCircularBuffer27.get();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        boolean boolean36 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass35);
        java.lang.reflect.Type type37 = typeCircularBuffer27.get();
        boolean boolean38 = typeCircularBuffer14.put(type37);
        boolean boolean39 = typeCircularBuffer1.put(type37);
        boolean boolean40 = typeCircularBuffer1.isEmpty();
        boolean boolean41 = typeCircularBuffer1.isFull();
        boolean boolean42 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
    }

    @Test
    public void test2126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2126");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        boolean boolean8 = typeCircularBuffer1.isEmpty();
        boolean boolean9 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type10 = typeCircularBuffer1.get();
        boolean boolean11 = typeCircularBuffer1.isEmpty();
        boolean boolean12 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test2127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2127");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer10.get();
        boolean boolean17 = typeCircularBuffer8.put(type16);
        boolean boolean18 = typeCircularBuffer8.isFull();
        java.lang.reflect.Type type19 = typeCircularBuffer8.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean22 = typeCircularBuffer21.isEmpty();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean26 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean27 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean28 = typeCircularBuffer1.isFull();
        boolean boolean29 = typeCircularBuffer1.isFull();
        boolean boolean30 = typeCircularBuffer1.isEmpty();
        boolean boolean31 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type32 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean37 = typeCircularBuffer36.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass40 = typeCircularBuffer39.getClass();
        boolean boolean41 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass40);
        java.lang.reflect.Type type42 = typeCircularBuffer36.get();
        boolean boolean43 = typeCircularBuffer34.put(type42);
        boolean boolean44 = typeCircularBuffer34.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean47 = typeCircularBuffer46.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer49 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass50 = typeCircularBuffer49.getClass();
        boolean boolean51 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass50);
        java.lang.reflect.Type type52 = typeCircularBuffer46.get();
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        boolean boolean55 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean56 = typeCircularBuffer34.put((java.lang.reflect.Type) wildcardClass54);
        java.lang.reflect.Type type57 = typeCircularBuffer34.get();
        boolean boolean58 = typeCircularBuffer1.put(type57);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer60 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer62 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean63 = typeCircularBuffer62.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer65 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass66 = typeCircularBuffer65.getClass();
        boolean boolean67 = typeCircularBuffer62.put((java.lang.reflect.Type) wildcardClass66);
        java.lang.reflect.Type type68 = typeCircularBuffer62.get();
        boolean boolean69 = typeCircularBuffer60.put(type68);
        boolean boolean70 = typeCircularBuffer60.isFull();
        java.lang.reflect.Type type71 = typeCircularBuffer60.get();
        boolean boolean72 = typeCircularBuffer60.isEmpty();
        boolean boolean73 = typeCircularBuffer60.isEmpty();
        java.lang.Class<?> wildcardClass74 = typeCircularBuffer60.getClass();
        boolean boolean75 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass74);
        java.lang.reflect.Type type76 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(type76);
    }

    @Test
    public void test2128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2128");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        boolean boolean8 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        boolean boolean10 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test2129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2129");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        boolean boolean5 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type8 = typeCircularBuffer7.get();
        boolean boolean9 = typeCircularBuffer7.isFull();
        boolean boolean10 = typeCircularBuffer7.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean13 = typeCircularBuffer12.isEmpty();
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        boolean boolean16 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass15);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer12.getClass();
        boolean boolean18 = typeCircularBuffer7.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer7.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean24 = typeCircularBuffer23.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer26.getClass();
        boolean boolean28 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass27);
        java.lang.reflect.Type type29 = typeCircularBuffer23.get();
        boolean boolean30 = typeCircularBuffer21.put(type29);
        boolean boolean31 = typeCircularBuffer7.put(type29);
        boolean boolean32 = typeCircularBuffer3.put(type29);
        boolean boolean33 = typeCircularBuffer1.put(type29);
        java.lang.reflect.Type type34 = typeCircularBuffer1.get();
        boolean boolean35 = typeCircularBuffer1.isFull();
        boolean boolean36 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test2130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2130");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer17.getClass();
        boolean boolean19 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass18);
        java.lang.reflect.Type type20 = typeCircularBuffer14.get();
        boolean boolean21 = typeCircularBuffer12.put(type20);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer12.getClass();
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass22);
        boolean boolean24 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type25 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 0);
        boolean boolean28 = typeCircularBuffer27.isFull();
        java.lang.reflect.Type type29 = typeCircularBuffer27.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean32 = typeCircularBuffer31.isFull();
        java.lang.reflect.Type type33 = typeCircularBuffer31.get();
        boolean boolean34 = typeCircularBuffer31.isFull();
        java.lang.reflect.Type type35 = typeCircularBuffer31.get();
        boolean boolean36 = typeCircularBuffer31.isFull();
        boolean boolean37 = typeCircularBuffer31.isEmpty();
        boolean boolean38 = typeCircularBuffer31.isFull();
        java.lang.Class<?> wildcardClass39 = typeCircularBuffer31.getClass();
        boolean boolean40 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass39);
        boolean boolean41 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass39);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean46 = typeCircularBuffer45.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass49 = typeCircularBuffer48.getClass();
        boolean boolean50 = typeCircularBuffer45.put((java.lang.reflect.Type) wildcardClass49);
        java.lang.reflect.Type type51 = typeCircularBuffer45.get();
        boolean boolean52 = typeCircularBuffer43.put(type51);
        boolean boolean53 = typeCircularBuffer43.isFull();
        java.lang.reflect.Type type54 = typeCircularBuffer43.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer56 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type57 = typeCircularBuffer56.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer59 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean60 = typeCircularBuffer59.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer62 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass63 = typeCircularBuffer62.getClass();
        boolean boolean64 = typeCircularBuffer59.put((java.lang.reflect.Type) wildcardClass63);
        java.lang.reflect.Type type65 = typeCircularBuffer59.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer67 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type68 = typeCircularBuffer67.get();
        boolean boolean69 = typeCircularBuffer67.isFull();
        boolean boolean70 = typeCircularBuffer67.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer72 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean73 = typeCircularBuffer72.isEmpty();
        java.lang.Object obj74 = new java.lang.Object();
        java.lang.Class<?> wildcardClass75 = obj74.getClass();
        boolean boolean76 = typeCircularBuffer72.put((java.lang.reflect.Type) wildcardClass75);
        java.lang.Class<?> wildcardClass77 = typeCircularBuffer72.getClass();
        boolean boolean78 = typeCircularBuffer67.put((java.lang.reflect.Type) wildcardClass77);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer80 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean81 = typeCircularBuffer80.isEmpty();
        java.lang.Object obj82 = new java.lang.Object();
        java.lang.Class<?> wildcardClass83 = obj82.getClass();
        boolean boolean84 = typeCircularBuffer80.put((java.lang.reflect.Type) wildcardClass83);
        java.lang.Class<?> wildcardClass85 = typeCircularBuffer80.getClass();
        boolean boolean86 = typeCircularBuffer67.put((java.lang.reflect.Type) wildcardClass85);
        boolean boolean87 = typeCircularBuffer59.put((java.lang.reflect.Type) wildcardClass85);
        boolean boolean88 = typeCircularBuffer56.put((java.lang.reflect.Type) wildcardClass85);
        boolean boolean89 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass85);
        boolean boolean90 = typeCircularBuffer43.isEmpty();
        boolean boolean91 = typeCircularBuffer43.isFull();
        java.lang.Class<?> wildcardClass92 = typeCircularBuffer43.getClass();
        boolean boolean93 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass92);
        boolean boolean94 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(type29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(type33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(type35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNull(type57);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNull(type68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
    }

    @Test
    public void test2131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2131");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 10);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test2132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2132");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean24 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type25 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean28 = typeCircularBuffer27.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass31 = typeCircularBuffer30.getClass();
        boolean boolean32 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass31);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean37 = typeCircularBuffer36.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass40 = typeCircularBuffer39.getClass();
        boolean boolean41 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass40);
        java.lang.reflect.Type type42 = typeCircularBuffer36.get();
        boolean boolean43 = typeCircularBuffer34.put(type42);
        boolean boolean44 = typeCircularBuffer34.isFull();
        java.lang.reflect.Type type45 = typeCircularBuffer34.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean48 = typeCircularBuffer47.isEmpty();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        boolean boolean51 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass50);
        boolean boolean52 = typeCircularBuffer34.put((java.lang.reflect.Type) wildcardClass50);
        boolean boolean53 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass50);
        boolean boolean54 = typeCircularBuffer27.isFull();
        boolean boolean55 = typeCircularBuffer27.isFull();
        java.lang.Class<?> wildcardClass56 = typeCircularBuffer27.getClass();
        boolean boolean57 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass56);
        boolean boolean58 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
    }

    @Test
    public void test2133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2133");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type9 = typeCircularBuffer8.get();
        boolean boolean10 = typeCircularBuffer8.isFull();
        boolean boolean11 = typeCircularBuffer8.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass16);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer13.getClass();
        boolean boolean19 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass18);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean22 = typeCircularBuffer21.isEmpty();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass24);
        java.lang.Class<?> wildcardClass26 = typeCircularBuffer21.getClass();
        boolean boolean27 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass26);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer34.getClass();
        boolean boolean36 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass35);
        java.lang.reflect.Type type37 = typeCircularBuffer31.get();
        boolean boolean38 = typeCircularBuffer29.put(type37);
        java.lang.Class<?> wildcardClass39 = typeCircularBuffer29.getClass();
        boolean boolean40 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass39);
        java.lang.Class<?> wildcardClass41 = typeCircularBuffer8.getClass();
        boolean boolean42 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean43 = typeCircularBuffer1.isFull();
        boolean boolean44 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type45 = typeCircularBuffer1.get();
        boolean boolean46 = typeCircularBuffer1.isEmpty();
        boolean boolean47 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type48 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(type48);
    }

    @Test
    public void test2134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2134");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean4 = typeCircularBuffer3.isFull();
        boolean boolean5 = typeCircularBuffer3.isEmpty();
        java.lang.reflect.Type type6 = typeCircularBuffer3.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer10.get();
        boolean boolean17 = typeCircularBuffer8.put(type16);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer8.getClass();
        boolean boolean19 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass18);
        boolean boolean20 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass18);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type23 = typeCircularBuffer22.get();
        boolean boolean24 = typeCircularBuffer22.isFull();
        boolean boolean25 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean28 = typeCircularBuffer27.isEmpty();
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        boolean boolean31 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass30);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer27.getClass();
        boolean boolean33 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean37 = typeCircularBuffer36.isFull();
        boolean boolean38 = typeCircularBuffer36.isEmpty();
        java.lang.reflect.Type type39 = typeCircularBuffer36.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer46.getClass();
        boolean boolean48 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass47);
        java.lang.reflect.Type type49 = typeCircularBuffer43.get();
        boolean boolean50 = typeCircularBuffer41.put(type49);
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer41.getClass();
        boolean boolean52 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean53 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass51);
        java.lang.Class<?> wildcardClass54 = typeCircularBuffer22.getClass();
        boolean boolean55 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean56 = typeCircularBuffer1.isEmpty();
        boolean boolean57 = typeCircularBuffer1.isFull();
        boolean boolean58 = typeCircularBuffer1.isFull();
        boolean boolean59 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type60 = typeCircularBuffer1.get();
        boolean boolean61 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(type39);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test2135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2135");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) ' ');
        java.lang.reflect.Type type10 = typeCircularBuffer9.get();
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer9.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean17 = typeCircularBuffer16.isFull();
        boolean boolean18 = typeCircularBuffer16.isEmpty();
        java.lang.reflect.Type type19 = typeCircularBuffer16.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean24 = typeCircularBuffer23.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer26.getClass();
        boolean boolean28 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass27);
        java.lang.reflect.Type type29 = typeCircularBuffer23.get();
        boolean boolean30 = typeCircularBuffer21.put(type29);
        java.lang.Class<?> wildcardClass31 = typeCircularBuffer21.getClass();
        boolean boolean32 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass31);
        boolean boolean33 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass31);
        boolean boolean34 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass31);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.CharSequence> charSequenceCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.CharSequence>((int) (short) 100);
        java.lang.Class<?> wildcardClass37 = charSequenceCircularBuffer36.getClass();
        boolean boolean38 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass37);
        java.lang.Class<?> wildcardClass39 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(type19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test2136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2136");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer6.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer14.getClass();
        boolean boolean20 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass19);
        java.lang.reflect.Type type21 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.AnnotatedElement> annotatedElementCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.AnnotatedElement>((int) (byte) 10);
        java.lang.Class<?> wildcardClass24 = annotatedElementCircularBuffer23.getClass();
        boolean boolean25 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass24);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean28 = typeCircularBuffer27.isEmpty();
        java.lang.reflect.Type type29 = typeCircularBuffer27.get();
        java.lang.reflect.Type type30 = typeCircularBuffer27.get();
        java.lang.reflect.Type type31 = typeCircularBuffer27.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean34 = typeCircularBuffer33.isFull();
        boolean boolean35 = typeCircularBuffer33.isEmpty();
        boolean boolean36 = typeCircularBuffer33.isFull();
        java.lang.Class<?> wildcardClass37 = typeCircularBuffer33.getClass();
        boolean boolean38 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass37);
        boolean boolean39 = typeCircularBuffer27.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type44 = typeCircularBuffer43.get();
        boolean boolean45 = typeCircularBuffer43.isFull();
        boolean boolean46 = typeCircularBuffer43.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean49 = typeCircularBuffer48.isEmpty();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        boolean boolean52 = typeCircularBuffer48.put((java.lang.reflect.Type) wildcardClass51);
        java.lang.Class<?> wildcardClass53 = typeCircularBuffer48.getClass();
        boolean boolean54 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass53);
        boolean boolean55 = typeCircularBuffer43.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer57 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean58 = typeCircularBuffer57.isFull();
        boolean boolean59 = typeCircularBuffer57.isEmpty();
        java.lang.reflect.Type type60 = typeCircularBuffer57.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer62 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer64 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean65 = typeCircularBuffer64.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer67 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass68 = typeCircularBuffer67.getClass();
        boolean boolean69 = typeCircularBuffer64.put((java.lang.reflect.Type) wildcardClass68);
        java.lang.reflect.Type type70 = typeCircularBuffer64.get();
        boolean boolean71 = typeCircularBuffer62.put(type70);
        java.lang.Class<?> wildcardClass72 = typeCircularBuffer62.getClass();
        boolean boolean73 = typeCircularBuffer57.put((java.lang.reflect.Type) wildcardClass72);
        boolean boolean74 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass72);
        boolean boolean75 = typeCircularBuffer41.put((java.lang.reflect.Type) wildcardClass72);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer77 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean78 = typeCircularBuffer77.isFull();
        java.lang.reflect.Type type79 = typeCircularBuffer77.get();
        boolean boolean80 = typeCircularBuffer77.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer82 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean83 = typeCircularBuffer82.isEmpty();
        java.lang.Class<?> wildcardClass84 = typeCircularBuffer82.getClass();
        boolean boolean85 = typeCircularBuffer77.put((java.lang.reflect.Type) wildcardClass84);
        java.lang.Class<?> wildcardClass86 = typeCircularBuffer77.getClass();
        boolean boolean87 = typeCircularBuffer41.put((java.lang.reflect.Type) wildcardClass86);
        boolean boolean88 = typeCircularBuffer41.isFull();
        boolean boolean89 = typeCircularBuffer41.isEmpty();
        java.lang.Class<?> wildcardClass90 = typeCircularBuffer41.getClass();
        boolean boolean91 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass90);
        boolean boolean92 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass90);
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(type29);
        org.junit.Assert.assertNull(type30);
        org.junit.Assert.assertNull(type31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(type44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(type60);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNull(type79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test2137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2137");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean4 = typeCircularBuffer3.isFull();
        boolean boolean5 = typeCircularBuffer3.isEmpty();
        java.lang.reflect.Type type6 = typeCircularBuffer3.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer10.get();
        boolean boolean17 = typeCircularBuffer8.put(type16);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer8.getClass();
        boolean boolean19 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass18);
        boolean boolean20 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass18);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type23 = typeCircularBuffer22.get();
        boolean boolean24 = typeCircularBuffer22.isFull();
        boolean boolean25 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean28 = typeCircularBuffer27.isEmpty();
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        boolean boolean31 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass30);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer27.getClass();
        boolean boolean33 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean37 = typeCircularBuffer36.isFull();
        boolean boolean38 = typeCircularBuffer36.isEmpty();
        java.lang.reflect.Type type39 = typeCircularBuffer36.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer46.getClass();
        boolean boolean48 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass47);
        java.lang.reflect.Type type49 = typeCircularBuffer43.get();
        boolean boolean50 = typeCircularBuffer41.put(type49);
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer41.getClass();
        boolean boolean52 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean53 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass51);
        java.lang.Class<?> wildcardClass54 = typeCircularBuffer22.getClass();
        boolean boolean55 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean56 = typeCircularBuffer1.isEmpty();
        boolean boolean57 = typeCircularBuffer1.isFull();
        boolean boolean58 = typeCircularBuffer1.isFull();
        boolean boolean59 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type60 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer62 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean63 = typeCircularBuffer62.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer65 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass66 = typeCircularBuffer65.getClass();
        boolean boolean67 = typeCircularBuffer62.put((java.lang.reflect.Type) wildcardClass66);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer69 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer71 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean72 = typeCircularBuffer71.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer74 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass75 = typeCircularBuffer74.getClass();
        boolean boolean76 = typeCircularBuffer71.put((java.lang.reflect.Type) wildcardClass75);
        java.lang.reflect.Type type77 = typeCircularBuffer71.get();
        boolean boolean78 = typeCircularBuffer69.put(type77);
        boolean boolean79 = typeCircularBuffer69.isFull();
        java.lang.reflect.Type type80 = typeCircularBuffer69.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer82 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean83 = typeCircularBuffer82.isEmpty();
        java.lang.Object obj84 = new java.lang.Object();
        java.lang.Class<?> wildcardClass85 = obj84.getClass();
        boolean boolean86 = typeCircularBuffer82.put((java.lang.reflect.Type) wildcardClass85);
        boolean boolean87 = typeCircularBuffer69.put((java.lang.reflect.Type) wildcardClass85);
        boolean boolean88 = typeCircularBuffer62.put((java.lang.reflect.Type) wildcardClass85);
        boolean boolean89 = typeCircularBuffer62.isFull();
        boolean boolean90 = typeCircularBuffer62.isFull();
        boolean boolean91 = typeCircularBuffer62.isEmpty();
        boolean boolean92 = typeCircularBuffer62.isFull();
        java.lang.reflect.Type type93 = typeCircularBuffer62.get();
        boolean boolean94 = typeCircularBuffer1.put(type93);
        boolean boolean95 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(type39);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(type93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test2138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2138");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        java.lang.reflect.Type type11 = typeCircularBuffer1.get();
        java.lang.reflect.Type type12 = null;
        boolean boolean13 = typeCircularBuffer1.put(type12);
        boolean boolean14 = typeCircularBuffer1.isEmpty();
        boolean boolean15 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type18 = typeCircularBuffer17.get();
        boolean boolean19 = typeCircularBuffer17.isFull();
        boolean boolean20 = typeCircularBuffer17.isFull();
        boolean boolean21 = typeCircularBuffer17.isFull();
        boolean boolean22 = typeCircularBuffer17.isFull();
        java.lang.reflect.Type type23 = typeCircularBuffer17.get();
        boolean boolean24 = typeCircularBuffer17.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type27 = typeCircularBuffer26.get();
        boolean boolean28 = typeCircularBuffer26.isFull();
        boolean boolean29 = typeCircularBuffer26.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        boolean boolean35 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass34);
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer31.getClass();
        boolean boolean37 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass36);
        java.lang.reflect.Type type38 = typeCircularBuffer26.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean43 = typeCircularBuffer42.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass46 = typeCircularBuffer45.getClass();
        boolean boolean47 = typeCircularBuffer42.put((java.lang.reflect.Type) wildcardClass46);
        java.lang.reflect.Type type48 = typeCircularBuffer42.get();
        boolean boolean49 = typeCircularBuffer40.put(type48);
        boolean boolean50 = typeCircularBuffer26.put(type48);
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer26.getClass();
        boolean boolean52 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass51);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer54 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type55 = typeCircularBuffer54.get();
        boolean boolean56 = typeCircularBuffer54.isFull();
        boolean boolean57 = typeCircularBuffer54.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer59 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean60 = typeCircularBuffer59.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer62 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass63 = typeCircularBuffer62.getClass();
        boolean boolean64 = typeCircularBuffer59.put((java.lang.reflect.Type) wildcardClass63);
        boolean boolean65 = typeCircularBuffer54.put((java.lang.reflect.Type) wildcardClass63);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer67 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer69 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean70 = typeCircularBuffer69.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer72 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass73 = typeCircularBuffer72.getClass();
        boolean boolean74 = typeCircularBuffer69.put((java.lang.reflect.Type) wildcardClass73);
        java.lang.reflect.Type type75 = typeCircularBuffer69.get();
        java.lang.Class<?> wildcardClass76 = typeCircularBuffer69.getClass();
        boolean boolean77 = typeCircularBuffer67.put((java.lang.reflect.Type) wildcardClass76);
        boolean boolean78 = typeCircularBuffer54.put((java.lang.reflect.Type) wildcardClass76);
        boolean boolean79 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass76);
        java.lang.reflect.Type type80 = typeCircularBuffer17.get();
        boolean boolean81 = typeCircularBuffer1.put(type80);
        java.lang.reflect.Type type82 = null;
        boolean boolean83 = typeCircularBuffer1.put(type82);
        java.lang.Class<?> wildcardClass84 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(type18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(type55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test2139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2139");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '#');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer5 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean6 = typeCircularBuffer5.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass9 = typeCircularBuffer8.getClass();
        boolean boolean10 = typeCircularBuffer5.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.reflect.Type type11 = typeCircularBuffer5.get();
        boolean boolean12 = typeCircularBuffer3.put(type11);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer19.getClass();
        boolean boolean21 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type22 = typeCircularBuffer16.get();
        boolean boolean23 = typeCircularBuffer14.put(type22);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer14.getClass();
        boolean boolean25 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean26 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean27 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type32 = typeCircularBuffer31.get();
        boolean boolean33 = typeCircularBuffer31.isFull();
        boolean boolean34 = typeCircularBuffer31.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean37 = typeCircularBuffer36.isEmpty();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        boolean boolean40 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass39);
        java.lang.Class<?> wildcardClass41 = typeCircularBuffer36.getClass();
        boolean boolean42 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean43 = typeCircularBuffer31.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean46 = typeCircularBuffer45.isFull();
        boolean boolean47 = typeCircularBuffer45.isEmpty();
        java.lang.reflect.Type type48 = typeCircularBuffer45.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer52 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean53 = typeCircularBuffer52.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer55 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass56 = typeCircularBuffer55.getClass();
        boolean boolean57 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass56);
        java.lang.reflect.Type type58 = typeCircularBuffer52.get();
        boolean boolean59 = typeCircularBuffer50.put(type58);
        java.lang.Class<?> wildcardClass60 = typeCircularBuffer50.getClass();
        boolean boolean61 = typeCircularBuffer45.put((java.lang.reflect.Type) wildcardClass60);
        boolean boolean62 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass60);
        boolean boolean63 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass60);
        java.lang.Class<?> wildcardClass64 = typeCircularBuffer29.getClass();
        boolean boolean65 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass64);
        boolean boolean66 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(type32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(type48);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test2140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2140");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer5 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean6 = typeCircularBuffer5.isEmpty();
        java.lang.reflect.Type type7 = typeCircularBuffer5.get();
        java.lang.reflect.Type type8 = typeCircularBuffer5.get();
        java.lang.reflect.Type type9 = typeCircularBuffer5.get();
        boolean boolean10 = typeCircularBuffer5.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean13 = typeCircularBuffer12.isFull();
        java.lang.reflect.Type type14 = typeCircularBuffer12.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        boolean boolean20 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass19);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer16.getClass();
        boolean boolean22 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = typeCircularBuffer5.put((java.lang.reflect.Type) wildcardClass21);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type28 = typeCircularBuffer27.get();
        boolean boolean29 = typeCircularBuffer27.isFull();
        boolean boolean30 = typeCircularBuffer27.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean33 = typeCircularBuffer32.isEmpty();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        boolean boolean36 = typeCircularBuffer32.put((java.lang.reflect.Type) wildcardClass35);
        java.lang.Class<?> wildcardClass37 = typeCircularBuffer32.getClass();
        boolean boolean38 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass37);
        boolean boolean39 = typeCircularBuffer27.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean42 = typeCircularBuffer41.isFull();
        boolean boolean43 = typeCircularBuffer41.isEmpty();
        java.lang.reflect.Type type44 = typeCircularBuffer41.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean49 = typeCircularBuffer48.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass52 = typeCircularBuffer51.getClass();
        boolean boolean53 = typeCircularBuffer48.put((java.lang.reflect.Type) wildcardClass52);
        java.lang.reflect.Type type54 = typeCircularBuffer48.get();
        boolean boolean55 = typeCircularBuffer46.put(type54);
        java.lang.Class<?> wildcardClass56 = typeCircularBuffer46.getClass();
        boolean boolean57 = typeCircularBuffer41.put((java.lang.reflect.Type) wildcardClass56);
        boolean boolean58 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass56);
        boolean boolean59 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass56);
        boolean boolean60 = typeCircularBuffer5.put((java.lang.reflect.Type) wildcardClass56);
        boolean boolean61 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass56);
        java.lang.reflect.Type type62 = typeCircularBuffer1.get();
        boolean boolean63 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(type14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(type28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(type44);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(type62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
    }

    @Test
    public void test2141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2141");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) 'a');
        boolean boolean2 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean7 = typeCircularBuffer6.isFull();
        boolean boolean8 = typeCircularBuffer6.isEmpty();
        java.lang.reflect.Type type9 = typeCircularBuffer6.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        boolean boolean20 = typeCircularBuffer11.put(type19);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer11.getClass();
        boolean boolean22 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean24 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean25 = typeCircularBuffer1.isEmpty();
        boolean boolean26 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test2142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2142");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass10);
        java.lang.reflect.Type type13 = typeCircularBuffer1.get();
        java.lang.reflect.Type type14 = typeCircularBuffer1.get();
        java.lang.reflect.Type type15 = typeCircularBuffer1.get();
        java.lang.reflect.Type type16 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNull(type14);
        org.junit.Assert.assertNull(type15);
        org.junit.Assert.assertNull(type16);
    }

    @Test
    public void test2143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2143");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer6.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.reflect.Type type13 = typeCircularBuffer1.get();
        boolean boolean14 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer19.getClass();
        boolean boolean21 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean22 = typeCircularBuffer16.isEmpty();
        java.lang.reflect.Type type23 = typeCircularBuffer16.get();
        boolean boolean24 = typeCircularBuffer1.put(type23);
        boolean boolean25 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass26 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test2144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2144");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type10 = typeCircularBuffer9.get();
        boolean boolean11 = typeCircularBuffer9.isFull();
        boolean boolean12 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer14.getClass();
        boolean boolean20 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass19);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        boolean boolean26 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer22.getClass();
        boolean boolean28 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean30 = typeCircularBuffer1.isEmpty();
        boolean boolean31 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type32 = typeCircularBuffer1.get();
        boolean boolean33 = typeCircularBuffer1.isEmpty();
        boolean boolean34 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type35 = typeCircularBuffer1.get();
        boolean boolean36 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass37 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(type35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test2145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2145");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = null;
        boolean boolean8 = typeCircularBuffer1.put(type7);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean13 = typeCircularBuffer12.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass16 = typeCircularBuffer15.getClass();
        boolean boolean17 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass16);
        java.lang.reflect.Type type18 = typeCircularBuffer12.get();
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer12.getClass();
        boolean boolean20 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass19);
        boolean boolean21 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass19);
        boolean boolean22 = typeCircularBuffer1.isFull();
        boolean boolean23 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type24 = typeCircularBuffer1.get();
        boolean boolean25 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean28 = typeCircularBuffer27.isFull();
        java.lang.reflect.Type type29 = typeCircularBuffer27.get();
        boolean boolean30 = typeCircularBuffer27.isFull();
        boolean boolean31 = typeCircularBuffer27.isFull();
        boolean boolean32 = typeCircularBuffer27.isEmpty();
        boolean boolean33 = typeCircularBuffer27.isEmpty();
        java.lang.Class<?> wildcardClass34 = typeCircularBuffer27.getClass();
        boolean boolean35 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(type29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
    }

    @Test
    public void test2146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2146");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isEmpty();
        boolean boolean12 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer17.getClass();
        boolean boolean19 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass18);
        java.lang.reflect.Type type20 = typeCircularBuffer14.get();
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        boolean boolean23 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass22);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean26 = typeCircularBuffer25.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass29 = typeCircularBuffer28.getClass();
        boolean boolean30 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass29);
        java.lang.reflect.Type type31 = typeCircularBuffer25.get();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        boolean boolean34 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass33);
        java.lang.reflect.Type type35 = typeCircularBuffer25.get();
        boolean boolean36 = typeCircularBuffer14.put(type35);
        boolean boolean37 = typeCircularBuffer1.put(type35);
        boolean boolean38 = typeCircularBuffer1.isEmpty();
        boolean boolean39 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type40 = typeCircularBuffer1.get();
        boolean boolean41 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass42 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test2147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2147");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = null;
        boolean boolean8 = typeCircularBuffer1.put(type7);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean13 = typeCircularBuffer12.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass16 = typeCircularBuffer15.getClass();
        boolean boolean17 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass16);
        java.lang.reflect.Type type18 = typeCircularBuffer12.get();
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer12.getClass();
        boolean boolean20 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass19);
        boolean boolean21 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass19);
        boolean boolean22 = typeCircularBuffer1.isFull();
        boolean boolean23 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type24 = typeCircularBuffer1.get();
        boolean boolean25 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type26 = null;
        boolean boolean27 = typeCircularBuffer1.put(type26);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test2148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2148");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        java.lang.reflect.Type type12 = typeCircularBuffer6.get();
        boolean boolean13 = typeCircularBuffer4.put(type12);
        boolean boolean14 = typeCircularBuffer4.isFull();
        java.lang.reflect.Type type15 = typeCircularBuffer4.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        boolean boolean21 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean22 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean24 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type25 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean30 = typeCircularBuffer29.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass33 = typeCircularBuffer32.getClass();
        boolean boolean34 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass33);
        java.lang.reflect.Type type35 = typeCircularBuffer29.get();
        boolean boolean36 = typeCircularBuffer27.put(type35);
        boolean boolean37 = typeCircularBuffer27.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean40 = typeCircularBuffer39.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass43 = typeCircularBuffer42.getClass();
        boolean boolean44 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass43);
        java.lang.reflect.Type type45 = typeCircularBuffer39.get();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        boolean boolean48 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass47);
        boolean boolean49 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass47);
        boolean boolean50 = typeCircularBuffer27.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer52 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type53 = typeCircularBuffer52.get();
        boolean boolean54 = typeCircularBuffer52.isFull();
        boolean boolean55 = typeCircularBuffer52.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer57 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean58 = typeCircularBuffer57.isEmpty();
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        boolean boolean61 = typeCircularBuffer57.put((java.lang.reflect.Type) wildcardClass60);
        java.lang.Class<?> wildcardClass62 = typeCircularBuffer57.getClass();
        boolean boolean63 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass62);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer65 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean66 = typeCircularBuffer65.isEmpty();
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        boolean boolean69 = typeCircularBuffer65.put((java.lang.reflect.Type) wildcardClass68);
        java.lang.Class<?> wildcardClass70 = typeCircularBuffer65.getClass();
        boolean boolean71 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass70);
        boolean boolean72 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass70);
        java.lang.reflect.Type type73 = typeCircularBuffer27.get();
        boolean boolean74 = typeCircularBuffer1.put(type73);
        boolean boolean75 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type76 = typeCircularBuffer1.get();
        boolean boolean77 = typeCircularBuffer1.isEmpty();
        boolean boolean78 = typeCircularBuffer1.isFull();
        boolean boolean79 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(type53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
    }

    @Test
    public void test2149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2149");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type10 = typeCircularBuffer9.get();
        boolean boolean11 = typeCircularBuffer9.isFull();
        boolean boolean12 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer14.getClass();
        boolean boolean20 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass19);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        boolean boolean26 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer22.getClass();
        boolean boolean28 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean30 = typeCircularBuffer1.isEmpty();
        boolean boolean31 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type32 = typeCircularBuffer1.get();
        java.lang.reflect.Type type33 = typeCircularBuffer1.get();
        java.lang.reflect.Type type34 = typeCircularBuffer1.get();
        boolean boolean35 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNull(type33);
        org.junit.Assert.assertNull(type34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
    }

    @Test
    public void test2150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2150");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        boolean boolean8 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        boolean boolean10 = typeCircularBuffer1.isEmpty();
        boolean boolean11 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type14 = typeCircularBuffer13.get();
        boolean boolean15 = typeCircularBuffer13.isFull();
        boolean boolean16 = typeCircularBuffer13.isFull();
        boolean boolean17 = typeCircularBuffer13.isEmpty();
        java.lang.reflect.Type type18 = typeCircularBuffer13.get();
        boolean boolean19 = typeCircularBuffer13.isEmpty();
        boolean boolean20 = typeCircularBuffer13.isFull();
        java.lang.reflect.Type type21 = typeCircularBuffer13.get();
        java.lang.reflect.Type type22 = typeCircularBuffer13.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) 'a');
        boolean boolean25 = typeCircularBuffer24.isFull();
        java.lang.Class<?> wildcardClass26 = typeCircularBuffer24.getClass();
        boolean boolean27 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass26);
        boolean boolean28 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass26);
        boolean boolean29 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type30 = typeCircularBuffer1.get();
        boolean boolean31 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(type14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(type18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(type21);
        org.junit.Assert.assertNull(type22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
    }

    @Test
    public void test2151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2151");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer5 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean8 = typeCircularBuffer7.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer10.getClass();
        boolean boolean12 = typeCircularBuffer7.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.reflect.Type type13 = typeCircularBuffer7.get();
        boolean boolean14 = typeCircularBuffer5.put(type13);
        boolean boolean15 = typeCircularBuffer5.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer20.getClass();
        boolean boolean22 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type23 = typeCircularBuffer17.get();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        boolean boolean26 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass25);
        boolean boolean27 = typeCircularBuffer5.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.reflect.Type type28 = typeCircularBuffer5.get();
        boolean boolean29 = typeCircularBuffer5.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type32 = typeCircularBuffer31.get();
        boolean boolean33 = typeCircularBuffer31.isFull();
        boolean boolean34 = typeCircularBuffer31.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean37 = typeCircularBuffer36.isEmpty();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        boolean boolean40 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass39);
        java.lang.Class<?> wildcardClass41 = typeCircularBuffer36.getClass();
        boolean boolean42 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass41);
        java.lang.reflect.Type type43 = typeCircularBuffer31.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean48 = typeCircularBuffer47.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer50.getClass();
        boolean boolean52 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass51);
        java.lang.reflect.Type type53 = typeCircularBuffer47.get();
        boolean boolean54 = typeCircularBuffer45.put(type53);
        boolean boolean55 = typeCircularBuffer31.put(type53);
        java.lang.reflect.Type type56 = typeCircularBuffer31.get();
        boolean boolean57 = typeCircularBuffer5.put(type56);
        boolean boolean58 = typeCircularBuffer1.put(type56);
        java.lang.Class<?> wildcardClass59 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(type32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test2152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2152");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer9.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        boolean boolean13 = typeCircularBuffer1.isEmpty();
        boolean boolean14 = typeCircularBuffer1.isFull();
        boolean boolean15 = typeCircularBuffer1.isEmpty();
        boolean boolean16 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test2153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2153");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        java.lang.reflect.Type type12 = typeCircularBuffer6.get();
        boolean boolean13 = typeCircularBuffer4.put(type12);
        boolean boolean14 = typeCircularBuffer4.isFull();
        java.lang.reflect.Type type15 = typeCircularBuffer4.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        boolean boolean21 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean22 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type24 = typeCircularBuffer1.get();
        boolean boolean25 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type26 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type29 = typeCircularBuffer28.get();
        boolean boolean30 = typeCircularBuffer28.isFull();
        boolean boolean31 = typeCircularBuffer28.isFull();
        boolean boolean32 = typeCircularBuffer28.isFull();
        boolean boolean33 = typeCircularBuffer28.isFull();
        java.lang.reflect.Type type34 = typeCircularBuffer28.get();
        boolean boolean35 = typeCircularBuffer28.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean40 = typeCircularBuffer39.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass43 = typeCircularBuffer42.getClass();
        boolean boolean44 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass43);
        java.lang.reflect.Type type45 = typeCircularBuffer39.get();
        boolean boolean46 = typeCircularBuffer37.put(type45);
        boolean boolean47 = typeCircularBuffer37.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer49 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 1);
        boolean boolean50 = typeCircularBuffer49.isEmpty();
        boolean boolean51 = typeCircularBuffer49.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer53 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type54 = typeCircularBuffer53.get();
        boolean boolean55 = typeCircularBuffer53.isFull();
        boolean boolean56 = typeCircularBuffer53.isFull();
        boolean boolean57 = typeCircularBuffer53.isEmpty();
        java.lang.reflect.Type type58 = typeCircularBuffer53.get();
        java.lang.Class<?> wildcardClass59 = typeCircularBuffer53.getClass();
        boolean boolean60 = typeCircularBuffer49.put((java.lang.reflect.Type) wildcardClass59);
        boolean boolean61 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass59);
        java.lang.reflect.Type type62 = typeCircularBuffer37.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer64 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type65 = typeCircularBuffer64.get();
        boolean boolean66 = typeCircularBuffer64.isFull();
        boolean boolean67 = typeCircularBuffer64.isEmpty();
        java.lang.Class<?> wildcardClass68 = typeCircularBuffer64.getClass();
        boolean boolean69 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass68);
        boolean boolean70 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass68);
        boolean boolean71 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass68);
        boolean boolean72 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(type26);
        org.junit.Assert.assertNull(type29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(type34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(type54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(type58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNull(type65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
    }

    @Test
    public void test2154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2154");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        boolean boolean8 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass9 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test2155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2155");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        boolean boolean6 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        boolean boolean8 = typeCircularBuffer1.isEmpty();
        boolean boolean9 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type10 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) ' ');
        boolean boolean13 = typeCircularBuffer12.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean16 = typeCircularBuffer15.isEmpty();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        boolean boolean19 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass18);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer15.getClass();
        boolean boolean21 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer12.getClass();
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass22);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean26 = typeCircularBuffer25.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass29 = typeCircularBuffer28.getClass();
        boolean boolean30 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass29);
        boolean boolean31 = typeCircularBuffer25.isFull();
        java.lang.reflect.Type type32 = typeCircularBuffer25.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer34.getClass();
        boolean boolean36 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass35);
        boolean boolean37 = typeCircularBuffer25.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean40 = typeCircularBuffer39.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass43 = typeCircularBuffer42.getClass();
        boolean boolean44 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass43);
        java.lang.Class<?> wildcardClass45 = typeCircularBuffer39.getClass();
        boolean boolean46 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass45);
        boolean boolean47 = typeCircularBuffer25.isEmpty();
        java.lang.reflect.Type type48 = typeCircularBuffer25.get();
        boolean boolean49 = typeCircularBuffer1.put(type48);
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test2156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2156");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '#');
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        boolean boolean8 = typeCircularBuffer1.isEmpty();
        boolean boolean9 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test2157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2157");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) 'a');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass4 = typeCircularBuffer3.getClass();
        boolean boolean5 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass4);
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type10 = typeCircularBuffer9.get();
        boolean boolean11 = typeCircularBuffer9.isFull();
        boolean boolean12 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer14.getClass();
        boolean boolean20 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass19);
        java.lang.reflect.Type type21 = typeCircularBuffer9.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean26 = typeCircularBuffer25.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass29 = typeCircularBuffer28.getClass();
        boolean boolean30 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass29);
        java.lang.reflect.Type type31 = typeCircularBuffer25.get();
        boolean boolean32 = typeCircularBuffer23.put(type31);
        boolean boolean33 = typeCircularBuffer9.put(type31);
        java.lang.Class<?> wildcardClass34 = typeCircularBuffer9.getClass();
        boolean boolean35 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass34);
        java.lang.reflect.Type type36 = typeCircularBuffer1.get();
        java.lang.reflect.Type type37 = typeCircularBuffer1.get();
        java.lang.reflect.Type type38 = typeCircularBuffer1.get();
        boolean boolean39 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer46.getClass();
        boolean boolean48 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass47);
        java.lang.reflect.Type type49 = typeCircularBuffer43.get();
        boolean boolean50 = typeCircularBuffer41.put(type49);
        boolean boolean51 = typeCircularBuffer41.isFull();
        java.lang.reflect.Type type52 = typeCircularBuffer41.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer54 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type55 = typeCircularBuffer54.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer57 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean58 = typeCircularBuffer57.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer60 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass61 = typeCircularBuffer60.getClass();
        boolean boolean62 = typeCircularBuffer57.put((java.lang.reflect.Type) wildcardClass61);
        java.lang.reflect.Type type63 = typeCircularBuffer57.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer65 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type66 = typeCircularBuffer65.get();
        boolean boolean67 = typeCircularBuffer65.isFull();
        boolean boolean68 = typeCircularBuffer65.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer70 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean71 = typeCircularBuffer70.isEmpty();
        java.lang.Object obj72 = new java.lang.Object();
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        boolean boolean74 = typeCircularBuffer70.put((java.lang.reflect.Type) wildcardClass73);
        java.lang.Class<?> wildcardClass75 = typeCircularBuffer70.getClass();
        boolean boolean76 = typeCircularBuffer65.put((java.lang.reflect.Type) wildcardClass75);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer78 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean79 = typeCircularBuffer78.isEmpty();
        java.lang.Object obj80 = new java.lang.Object();
        java.lang.Class<?> wildcardClass81 = obj80.getClass();
        boolean boolean82 = typeCircularBuffer78.put((java.lang.reflect.Type) wildcardClass81);
        java.lang.Class<?> wildcardClass83 = typeCircularBuffer78.getClass();
        boolean boolean84 = typeCircularBuffer65.put((java.lang.reflect.Type) wildcardClass83);
        boolean boolean85 = typeCircularBuffer57.put((java.lang.reflect.Type) wildcardClass83);
        boolean boolean86 = typeCircularBuffer54.put((java.lang.reflect.Type) wildcardClass83);
        boolean boolean87 = typeCircularBuffer41.put((java.lang.reflect.Type) wildcardClass83);
        boolean boolean88 = typeCircularBuffer41.isFull();
        java.lang.reflect.Type type89 = typeCircularBuffer41.get();
        boolean boolean90 = typeCircularBuffer1.put(type89);
        java.lang.Class<?> wildcardClass91 = type89.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNull(type37);
        org.junit.Assert.assertNull(type38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNull(type55);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNull(type66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(type89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test2158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2158");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type4 = typeCircularBuffer3.get();
        boolean boolean5 = typeCircularBuffer3.isFull();
        boolean boolean6 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean9 = typeCircularBuffer8.isEmpty();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer8.getClass();
        boolean boolean14 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass13);
        boolean boolean15 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean18 = typeCircularBuffer17.isFull();
        boolean boolean19 = typeCircularBuffer17.isEmpty();
        java.lang.reflect.Type type20 = typeCircularBuffer17.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean25 = typeCircularBuffer24.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer27.getClass();
        boolean boolean29 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.reflect.Type type30 = typeCircularBuffer24.get();
        boolean boolean31 = typeCircularBuffer22.put(type30);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer22.getClass();
        boolean boolean33 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean35 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass32);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean38 = typeCircularBuffer37.isFull();
        java.lang.reflect.Type type39 = typeCircularBuffer37.get();
        boolean boolean40 = typeCircularBuffer37.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean43 = typeCircularBuffer42.isEmpty();
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer42.getClass();
        boolean boolean45 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass44);
        java.lang.Class<?> wildcardClass46 = typeCircularBuffer37.getClass();
        boolean boolean47 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass46);
        boolean boolean48 = typeCircularBuffer1.isFull();
        boolean boolean49 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer53 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean54 = typeCircularBuffer53.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer56 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass57 = typeCircularBuffer56.getClass();
        boolean boolean58 = typeCircularBuffer53.put((java.lang.reflect.Type) wildcardClass57);
        java.lang.reflect.Type type59 = typeCircularBuffer53.get();
        boolean boolean60 = typeCircularBuffer51.put(type59);
        boolean boolean61 = typeCircularBuffer51.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer63 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean64 = typeCircularBuffer63.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer66 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass67 = typeCircularBuffer66.getClass();
        boolean boolean68 = typeCircularBuffer63.put((java.lang.reflect.Type) wildcardClass67);
        java.lang.reflect.Type type69 = typeCircularBuffer63.get();
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        boolean boolean72 = typeCircularBuffer63.put((java.lang.reflect.Type) wildcardClass71);
        boolean boolean73 = typeCircularBuffer51.put((java.lang.reflect.Type) wildcardClass71);
        boolean boolean74 = typeCircularBuffer51.isEmpty();
        java.lang.Object obj75 = new java.lang.Object();
        java.lang.Class<?> wildcardClass76 = obj75.getClass();
        boolean boolean77 = typeCircularBuffer51.put((java.lang.reflect.Type) wildcardClass76);
        java.lang.Class<?> wildcardClass78 = typeCircularBuffer51.getClass();
        boolean boolean79 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass78);
        boolean boolean80 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type81 = typeCircularBuffer1.get();
        boolean boolean82 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(type20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(type39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNull(type81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
    }

    @Test
    public void test2159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2159");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        boolean boolean8 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        boolean boolean12 = typeCircularBuffer10.isFull();
        boolean boolean13 = typeCircularBuffer10.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean16 = typeCircularBuffer15.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer18.getClass();
        boolean boolean20 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass19);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean25 = typeCircularBuffer24.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer27.getClass();
        boolean boolean29 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.reflect.Type type30 = typeCircularBuffer24.get();
        boolean boolean31 = typeCircularBuffer22.put(type30);
        boolean boolean32 = typeCircularBuffer22.isFull();
        java.lang.reflect.Type type33 = typeCircularBuffer22.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean36 = typeCircularBuffer35.isEmpty();
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        boolean boolean39 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass38);
        boolean boolean40 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass38);
        boolean boolean41 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass38);
        boolean boolean42 = typeCircularBuffer15.isFull();
        boolean boolean43 = typeCircularBuffer15.isFull();
        boolean boolean44 = typeCircularBuffer15.isEmpty();
        boolean boolean45 = typeCircularBuffer15.isFull();
        java.lang.reflect.Type type46 = typeCircularBuffer15.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean51 = typeCircularBuffer50.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer53 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass54 = typeCircularBuffer53.getClass();
        boolean boolean55 = typeCircularBuffer50.put((java.lang.reflect.Type) wildcardClass54);
        java.lang.reflect.Type type56 = typeCircularBuffer50.get();
        boolean boolean57 = typeCircularBuffer48.put(type56);
        boolean boolean58 = typeCircularBuffer48.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer60 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean61 = typeCircularBuffer60.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer63 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass64 = typeCircularBuffer63.getClass();
        boolean boolean65 = typeCircularBuffer60.put((java.lang.reflect.Type) wildcardClass64);
        java.lang.reflect.Type type66 = typeCircularBuffer60.get();
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        boolean boolean69 = typeCircularBuffer60.put((java.lang.reflect.Type) wildcardClass68);
        boolean boolean70 = typeCircularBuffer48.put((java.lang.reflect.Type) wildcardClass68);
        java.lang.reflect.Type type71 = typeCircularBuffer48.get();
        boolean boolean72 = typeCircularBuffer15.put(type71);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer74 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean75 = typeCircularBuffer74.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer77 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass78 = typeCircularBuffer77.getClass();
        boolean boolean79 = typeCircularBuffer74.put((java.lang.reflect.Type) wildcardClass78);
        java.lang.reflect.Type type80 = typeCircularBuffer74.get();
        java.lang.Object obj81 = new java.lang.Object();
        java.lang.Class<?> wildcardClass82 = obj81.getClass();
        boolean boolean83 = typeCircularBuffer74.put((java.lang.reflect.Type) wildcardClass82);
        boolean boolean84 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass82);
        boolean boolean85 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass82);
        boolean boolean86 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass82);
        boolean boolean87 = typeCircularBuffer1.isEmpty();
        boolean boolean88 = typeCircularBuffer1.isFull();
        boolean boolean89 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test2160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2160");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer5 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type6 = typeCircularBuffer5.get();
        boolean boolean7 = typeCircularBuffer5.isFull();
        boolean boolean8 = typeCircularBuffer5.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        boolean boolean14 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass13);
        java.lang.Class<?> wildcardClass15 = typeCircularBuffer10.getClass();
        boolean boolean16 = typeCircularBuffer5.put((java.lang.reflect.Type) wildcardClass15);
        java.lang.reflect.Type type17 = typeCircularBuffer5.get();
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer5.getClass();
        boolean boolean19 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass18);
        boolean boolean20 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass26 = typeCircularBuffer25.getClass();
        boolean boolean27 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass26);
        java.lang.reflect.Type type28 = typeCircularBuffer22.get();
        java.lang.Class<?> wildcardClass29 = typeCircularBuffer22.getClass();
        boolean boolean30 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass29);
        boolean boolean31 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
    }

    @Test
    public void test2161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2161");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        java.lang.reflect.Type type12 = typeCircularBuffer6.get();
        boolean boolean13 = typeCircularBuffer4.put(type12);
        boolean boolean14 = typeCircularBuffer4.isFull();
        java.lang.reflect.Type type15 = typeCircularBuffer4.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        boolean boolean21 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean22 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type24 = typeCircularBuffer1.get();
        boolean boolean25 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type26 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer31.getClass();
        boolean boolean33 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass32);
        java.lang.reflect.Type type34 = typeCircularBuffer28.get();
        boolean boolean35 = typeCircularBuffer28.isFull();
        boolean boolean36 = typeCircularBuffer28.isFull();
        java.lang.reflect.Type type37 = typeCircularBuffer28.get();
        boolean boolean38 = typeCircularBuffer28.isFull();
        boolean boolean39 = typeCircularBuffer28.isEmpty();
        java.lang.Class<?> wildcardClass40 = typeCircularBuffer28.getClass();
        boolean boolean41 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass40);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type44 = typeCircularBuffer43.get();
        boolean boolean45 = typeCircularBuffer43.isFull();
        boolean boolean46 = typeCircularBuffer43.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean49 = typeCircularBuffer48.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass52 = typeCircularBuffer51.getClass();
        boolean boolean53 = typeCircularBuffer48.put((java.lang.reflect.Type) wildcardClass52);
        boolean boolean54 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass52);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer56 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer58 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean59 = typeCircularBuffer58.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer61 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass62 = typeCircularBuffer61.getClass();
        boolean boolean63 = typeCircularBuffer58.put((java.lang.reflect.Type) wildcardClass62);
        java.lang.reflect.Type type64 = typeCircularBuffer58.get();
        java.lang.Class<?> wildcardClass65 = typeCircularBuffer58.getClass();
        boolean boolean66 = typeCircularBuffer56.put((java.lang.reflect.Type) wildcardClass65);
        boolean boolean67 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass65);
        java.lang.reflect.Type type68 = typeCircularBuffer43.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer70 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        boolean boolean71 = typeCircularBuffer70.isEmpty();
        java.lang.Class<?> wildcardClass72 = typeCircularBuffer70.getClass();
        boolean boolean73 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass72);
        boolean boolean74 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass72);
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(type26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(type37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(type44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNull(type68);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test2162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2162");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer5 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean8 = typeCircularBuffer7.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer10.getClass();
        boolean boolean12 = typeCircularBuffer7.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.reflect.Type type13 = typeCircularBuffer7.get();
        boolean boolean14 = typeCircularBuffer5.put(type13);
        java.lang.reflect.Type type15 = typeCircularBuffer5.get();
        java.lang.reflect.Type type16 = null;
        boolean boolean17 = typeCircularBuffer5.put(type16);
        boolean boolean18 = typeCircularBuffer5.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 10);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type23 = typeCircularBuffer22.get();
        boolean boolean24 = typeCircularBuffer22.isFull();
        java.lang.Class<?> wildcardClass25 = typeCircularBuffer22.getClass();
        boolean boolean26 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass25);
        boolean boolean27 = typeCircularBuffer5.put((java.lang.reflect.Type) wildcardClass25);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type30 = typeCircularBuffer29.get();
        boolean boolean31 = typeCircularBuffer29.isFull();
        boolean boolean32 = typeCircularBuffer29.isFull();
        boolean boolean33 = typeCircularBuffer29.isFull();
        java.lang.reflect.Type type34 = typeCircularBuffer29.get();
        boolean boolean35 = typeCircularBuffer29.isEmpty();
        java.lang.reflect.Type type36 = typeCircularBuffer29.get();
        java.lang.reflect.Type type37 = typeCircularBuffer29.get();
        java.lang.Class<?> wildcardClass38 = typeCircularBuffer29.getClass();
        boolean boolean39 = typeCircularBuffer5.put((java.lang.reflect.Type) wildcardClass38);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean42 = typeCircularBuffer41.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass45 = typeCircularBuffer44.getClass();
        boolean boolean46 = typeCircularBuffer41.put((java.lang.reflect.Type) wildcardClass45);
        java.lang.reflect.Type type47 = null;
        boolean boolean48 = typeCircularBuffer41.put(type47);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer52 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean53 = typeCircularBuffer52.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer55 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass56 = typeCircularBuffer55.getClass();
        boolean boolean57 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass56);
        java.lang.reflect.Type type58 = typeCircularBuffer52.get();
        java.lang.Class<?> wildcardClass59 = typeCircularBuffer52.getClass();
        boolean boolean60 = typeCircularBuffer50.put((java.lang.reflect.Type) wildcardClass59);
        boolean boolean61 = typeCircularBuffer41.put((java.lang.reflect.Type) wildcardClass59);
        boolean boolean62 = typeCircularBuffer41.isFull();
        boolean boolean63 = typeCircularBuffer41.isEmpty();
        boolean boolean64 = typeCircularBuffer41.isFull();
        java.lang.Class<?> wildcardClass65 = typeCircularBuffer41.getClass();
        boolean boolean66 = typeCircularBuffer5.put((java.lang.reflect.Type) wildcardClass65);
        boolean boolean67 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass65);
        java.lang.reflect.Type type68 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(type34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(type36);
        org.junit.Assert.assertNull(type37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(type68);
    }

    @Test
    public void test2163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2163");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) 'a');
        boolean boolean7 = typeCircularBuffer6.isFull();
        java.lang.Class<?> wildcardClass8 = typeCircularBuffer6.getClass();
        boolean boolean9 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass8);
        java.lang.reflect.Type type10 = typeCircularBuffer1.get();
        boolean boolean11 = typeCircularBuffer1.isFull();
        boolean boolean12 = typeCircularBuffer1.isEmpty();
        boolean boolean13 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test2164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2164");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test2165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2165");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean4 = typeCircularBuffer3.isFull();
        boolean boolean5 = typeCircularBuffer3.isEmpty();
        java.lang.reflect.Type type6 = typeCircularBuffer3.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer10.get();
        boolean boolean17 = typeCircularBuffer8.put(type16);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer8.getClass();
        boolean boolean19 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass18);
        boolean boolean20 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass18);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type23 = typeCircularBuffer22.get();
        boolean boolean24 = typeCircularBuffer22.isFull();
        boolean boolean25 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean28 = typeCircularBuffer27.isEmpty();
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        boolean boolean31 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass30);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer27.getClass();
        boolean boolean33 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean37 = typeCircularBuffer36.isFull();
        boolean boolean38 = typeCircularBuffer36.isEmpty();
        java.lang.reflect.Type type39 = typeCircularBuffer36.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer46.getClass();
        boolean boolean48 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass47);
        java.lang.reflect.Type type49 = typeCircularBuffer43.get();
        boolean boolean50 = typeCircularBuffer41.put(type49);
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer41.getClass();
        boolean boolean52 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean53 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass51);
        java.lang.Class<?> wildcardClass54 = typeCircularBuffer22.getClass();
        boolean boolean55 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean56 = typeCircularBuffer1.isEmpty();
        boolean boolean57 = typeCircularBuffer1.isEmpty();
        boolean boolean58 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer60 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type61 = typeCircularBuffer60.get();
        boolean boolean62 = typeCircularBuffer60.isFull();
        boolean boolean63 = typeCircularBuffer60.isEmpty();
        boolean boolean64 = typeCircularBuffer60.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer66 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass67 = typeCircularBuffer66.getClass();
        boolean boolean68 = typeCircularBuffer60.put((java.lang.reflect.Type) wildcardClass67);
        boolean boolean69 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass67);
        java.lang.reflect.Type type70 = typeCircularBuffer1.get();
        boolean boolean71 = typeCircularBuffer1.isFull();
        boolean boolean72 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(type39);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(type61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test2166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2166");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type5 = null;
        boolean boolean6 = typeCircularBuffer1.put(type5);
        boolean boolean7 = typeCircularBuffer1.isFull();
        boolean boolean8 = typeCircularBuffer1.isFull();
        boolean boolean9 = typeCircularBuffer1.isEmpty();
        boolean boolean10 = typeCircularBuffer1.isFull();
        boolean boolean11 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type12 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(type12);
    }

    @Test
    public void test2167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2167");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type12 = typeCircularBuffer1.get();
        boolean boolean13 = typeCircularBuffer1.isFull();
        boolean boolean14 = typeCircularBuffer1.isFull();
        boolean boolean15 = typeCircularBuffer1.isFull();
        boolean boolean16 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type19 = typeCircularBuffer18.get();
        boolean boolean20 = typeCircularBuffer18.isFull();
        boolean boolean21 = typeCircularBuffer18.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean24 = typeCircularBuffer23.isEmpty();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        boolean boolean27 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass26);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer23.getClass();
        boolean boolean29 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass28);
        boolean boolean30 = typeCircularBuffer18.isFull();
        boolean boolean31 = typeCircularBuffer18.isEmpty();
        java.lang.reflect.Type type32 = typeCircularBuffer18.get();
        boolean boolean33 = typeCircularBuffer18.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean38 = typeCircularBuffer37.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass41 = typeCircularBuffer40.getClass();
        boolean boolean42 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass41);
        java.lang.reflect.Type type43 = typeCircularBuffer37.get();
        boolean boolean44 = typeCircularBuffer35.put(type43);
        boolean boolean45 = typeCircularBuffer35.isEmpty();
        boolean boolean46 = typeCircularBuffer35.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean49 = typeCircularBuffer48.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass52 = typeCircularBuffer51.getClass();
        boolean boolean53 = typeCircularBuffer48.put((java.lang.reflect.Type) wildcardClass52);
        java.lang.reflect.Type type54 = typeCircularBuffer48.get();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        boolean boolean57 = typeCircularBuffer48.put((java.lang.reflect.Type) wildcardClass56);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer59 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean60 = typeCircularBuffer59.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer62 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass63 = typeCircularBuffer62.getClass();
        boolean boolean64 = typeCircularBuffer59.put((java.lang.reflect.Type) wildcardClass63);
        java.lang.reflect.Type type65 = typeCircularBuffer59.get();
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        boolean boolean68 = typeCircularBuffer59.put((java.lang.reflect.Type) wildcardClass67);
        java.lang.reflect.Type type69 = typeCircularBuffer59.get();
        boolean boolean70 = typeCircularBuffer48.put(type69);
        boolean boolean71 = typeCircularBuffer35.put(type69);
        boolean boolean72 = typeCircularBuffer35.isEmpty();
        java.lang.reflect.Type type73 = typeCircularBuffer35.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer75 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 1);
        boolean boolean76 = typeCircularBuffer75.isEmpty();
        boolean boolean77 = typeCircularBuffer75.isFull();
        java.lang.reflect.Type type78 = typeCircularBuffer75.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer80 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean81 = typeCircularBuffer80.isEmpty();
        java.lang.reflect.Type type82 = typeCircularBuffer80.get();
        java.lang.reflect.Type type83 = typeCircularBuffer80.get();
        java.lang.reflect.Type type84 = typeCircularBuffer80.get();
        boolean boolean85 = typeCircularBuffer80.isFull();
        boolean boolean86 = typeCircularBuffer80.isFull();
        boolean boolean87 = typeCircularBuffer80.isFull();
        boolean boolean88 = typeCircularBuffer80.isEmpty();
        boolean boolean89 = typeCircularBuffer80.isFull();
        boolean boolean90 = typeCircularBuffer80.isFull();
        java.lang.Class<?> wildcardClass91 = typeCircularBuffer80.getClass();
        boolean boolean92 = typeCircularBuffer75.put((java.lang.reflect.Type) wildcardClass91);
        boolean boolean93 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass91);
        java.lang.Class<?> wildcardClass94 = typeCircularBuffer35.getClass();
        boolean boolean95 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass94);
        boolean boolean96 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass94);
        boolean boolean97 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(type19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNull(type78);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNull(type82);
        org.junit.Assert.assertNull(type83);
        org.junit.Assert.assertNull(type84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test2168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2168");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        java.lang.reflect.Type type11 = typeCircularBuffer1.get();
        boolean boolean12 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer17.getClass();
        boolean boolean19 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass18);
        java.lang.reflect.Type type20 = typeCircularBuffer14.get();
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        boolean boolean23 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass22);
        java.lang.reflect.Type type24 = typeCircularBuffer14.get();
        boolean boolean25 = typeCircularBuffer1.put(type24);
        boolean boolean26 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type27 = typeCircularBuffer1.get();
        boolean boolean28 = typeCircularBuffer1.isEmpty();
        boolean boolean29 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type30 = typeCircularBuffer1.get();
        boolean boolean31 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
    }

    @Test
    public void test2169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2169");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        java.lang.reflect.Type type11 = typeCircularBuffer1.get();
        java.lang.reflect.Type type12 = null;
        boolean boolean13 = typeCircularBuffer1.put(type12);
        boolean boolean14 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type15 = typeCircularBuffer1.get();
        java.lang.reflect.Type type16 = typeCircularBuffer1.get();
        java.lang.reflect.Type type17 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean22 = typeCircularBuffer21.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass25 = typeCircularBuffer24.getClass();
        boolean boolean26 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.reflect.Type type27 = typeCircularBuffer21.get();
        boolean boolean28 = typeCircularBuffer19.put(type27);
        boolean boolean29 = typeCircularBuffer19.isFull();
        java.lang.reflect.Type type30 = typeCircularBuffer19.get();
        boolean boolean31 = typeCircularBuffer19.isEmpty();
        boolean boolean32 = typeCircularBuffer19.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean37 = typeCircularBuffer36.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass40 = typeCircularBuffer39.getClass();
        boolean boolean41 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass40);
        java.lang.reflect.Type type42 = typeCircularBuffer36.get();
        boolean boolean43 = typeCircularBuffer34.put(type42);
        boolean boolean44 = typeCircularBuffer34.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean47 = typeCircularBuffer46.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer49 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass50 = typeCircularBuffer49.getClass();
        boolean boolean51 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass50);
        java.lang.reflect.Type type52 = typeCircularBuffer46.get();
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        boolean boolean55 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean56 = typeCircularBuffer34.put((java.lang.reflect.Type) wildcardClass54);
        java.lang.reflect.Type type57 = typeCircularBuffer34.get();
        boolean boolean58 = typeCircularBuffer34.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer60 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type61 = typeCircularBuffer60.get();
        boolean boolean62 = typeCircularBuffer60.isFull();
        boolean boolean63 = typeCircularBuffer60.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer65 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean66 = typeCircularBuffer65.isEmpty();
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        boolean boolean69 = typeCircularBuffer65.put((java.lang.reflect.Type) wildcardClass68);
        java.lang.Class<?> wildcardClass70 = typeCircularBuffer65.getClass();
        boolean boolean71 = typeCircularBuffer60.put((java.lang.reflect.Type) wildcardClass70);
        java.lang.reflect.Type type72 = typeCircularBuffer60.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer74 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer76 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean77 = typeCircularBuffer76.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer79 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass80 = typeCircularBuffer79.getClass();
        boolean boolean81 = typeCircularBuffer76.put((java.lang.reflect.Type) wildcardClass80);
        java.lang.reflect.Type type82 = typeCircularBuffer76.get();
        boolean boolean83 = typeCircularBuffer74.put(type82);
        boolean boolean84 = typeCircularBuffer60.put(type82);
        java.lang.reflect.Type type85 = typeCircularBuffer60.get();
        boolean boolean86 = typeCircularBuffer34.put(type85);
        boolean boolean87 = typeCircularBuffer19.put(type85);
        boolean boolean88 = typeCircularBuffer1.put(type85);
        boolean boolean89 = typeCircularBuffer1.isEmpty();
        boolean boolean90 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(type15);
        org.junit.Assert.assertNull(type16);
        org.junit.Assert.assertNull(type17);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(type61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(type85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test2170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2170");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type7 = typeCircularBuffer6.get();
        boolean boolean8 = typeCircularBuffer6.isFull();
        boolean boolean9 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean12 = typeCircularBuffer11.isEmpty();
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        boolean boolean15 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.Class<?> wildcardClass16 = typeCircularBuffer11.getClass();
        boolean boolean17 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass16);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean20 = typeCircularBuffer19.isEmpty();
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        boolean boolean23 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass22);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer19.getClass();
        boolean boolean25 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass24);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean30 = typeCircularBuffer29.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass33 = typeCircularBuffer32.getClass();
        boolean boolean34 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass33);
        java.lang.reflect.Type type35 = typeCircularBuffer29.get();
        boolean boolean36 = typeCircularBuffer27.put(type35);
        java.lang.Class<?> wildcardClass37 = typeCircularBuffer27.getClass();
        boolean boolean38 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass37);
        java.lang.Class<?> wildcardClass39 = typeCircularBuffer6.getClass();
        boolean boolean40 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass39);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type43 = typeCircularBuffer42.get();
        boolean boolean44 = typeCircularBuffer42.isFull();
        boolean boolean45 = typeCircularBuffer42.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean48 = typeCircularBuffer47.isEmpty();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        boolean boolean51 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass50);
        java.lang.Class<?> wildcardClass52 = typeCircularBuffer47.getClass();
        boolean boolean53 = typeCircularBuffer42.put((java.lang.reflect.Type) wildcardClass52);
        java.lang.reflect.Type type54 = typeCircularBuffer42.get();
        boolean boolean55 = typeCircularBuffer42.isFull();
        java.lang.Class<?> wildcardClass56 = typeCircularBuffer42.getClass();
        boolean boolean57 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass56);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer59 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) 'a');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer61 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass62 = typeCircularBuffer61.getClass();
        boolean boolean63 = typeCircularBuffer59.put((java.lang.reflect.Type) wildcardClass62);
        java.lang.reflect.Type type64 = typeCircularBuffer59.get();
        boolean boolean65 = typeCircularBuffer59.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer67 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean68 = typeCircularBuffer67.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer70 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass71 = typeCircularBuffer70.getClass();
        boolean boolean72 = typeCircularBuffer67.put((java.lang.reflect.Type) wildcardClass71);
        java.lang.reflect.Type type73 = null;
        boolean boolean74 = typeCircularBuffer67.put(type73);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer76 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer78 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean79 = typeCircularBuffer78.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer81 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass82 = typeCircularBuffer81.getClass();
        boolean boolean83 = typeCircularBuffer78.put((java.lang.reflect.Type) wildcardClass82);
        java.lang.reflect.Type type84 = typeCircularBuffer78.get();
        java.lang.Class<?> wildcardClass85 = typeCircularBuffer78.getClass();
        boolean boolean86 = typeCircularBuffer76.put((java.lang.reflect.Type) wildcardClass85);
        boolean boolean87 = typeCircularBuffer67.put((java.lang.reflect.Type) wildcardClass85);
        boolean boolean88 = typeCircularBuffer59.put((java.lang.reflect.Type) wildcardClass85);
        java.lang.reflect.Type type89 = typeCircularBuffer59.get();
        boolean boolean90 = typeCircularBuffer1.put(type89);
        boolean boolean91 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(type43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(type84);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(type89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test2171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2171");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean9 = typeCircularBuffer8.isFull();
        java.lang.reflect.Type type10 = typeCircularBuffer8.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean13 = typeCircularBuffer12.isEmpty();
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        boolean boolean16 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass15);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer12.getClass();
        boolean boolean18 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass17);
        boolean boolean19 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type20 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass26 = typeCircularBuffer25.getClass();
        boolean boolean27 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass26);
        java.lang.reflect.Type type28 = typeCircularBuffer22.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type31 = typeCircularBuffer30.get();
        boolean boolean32 = typeCircularBuffer30.isFull();
        boolean boolean33 = typeCircularBuffer30.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean36 = typeCircularBuffer35.isEmpty();
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        boolean boolean39 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass38);
        java.lang.Class<?> wildcardClass40 = typeCircularBuffer35.getClass();
        boolean boolean41 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass40);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        boolean boolean47 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass46);
        java.lang.Class<?> wildcardClass48 = typeCircularBuffer43.getClass();
        boolean boolean49 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass48);
        boolean boolean50 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass48);
        java.lang.reflect.Type type51 = typeCircularBuffer22.get();
        java.lang.reflect.Type type52 = typeCircularBuffer22.get();
        boolean boolean53 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer55 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass56 = typeCircularBuffer55.getClass();
        boolean boolean57 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass56);
        boolean boolean58 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass56);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer60 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean61 = typeCircularBuffer60.isFull();
        boolean boolean62 = typeCircularBuffer60.isEmpty();
        java.lang.reflect.Type type63 = typeCircularBuffer60.get();
        boolean boolean64 = typeCircularBuffer60.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer66 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        boolean boolean67 = typeCircularBuffer66.isEmpty();
        java.lang.Class<?> wildcardClass68 = typeCircularBuffer66.getClass();
        boolean boolean69 = typeCircularBuffer60.put((java.lang.reflect.Type) wildcardClass68);
        boolean boolean70 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass68);
        boolean boolean71 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNull(type31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNull(type52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNull(type63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
    }

    @Test
    public void test2172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2172");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) 'a');
        boolean boolean7 = typeCircularBuffer6.isFull();
        java.lang.Class<?> wildcardClass8 = typeCircularBuffer6.getClass();
        boolean boolean9 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass8);
        boolean boolean10 = typeCircularBuffer1.isEmpty();
        boolean boolean11 = typeCircularBuffer1.isFull();
        boolean boolean12 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '#');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean19 = typeCircularBuffer18.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer21.getClass();
        boolean boolean23 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass22);
        java.lang.reflect.Type type24 = typeCircularBuffer18.get();
        boolean boolean25 = typeCircularBuffer16.put(type24);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean30 = typeCircularBuffer29.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass33 = typeCircularBuffer32.getClass();
        boolean boolean34 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass33);
        java.lang.reflect.Type type35 = typeCircularBuffer29.get();
        boolean boolean36 = typeCircularBuffer27.put(type35);
        java.lang.Class<?> wildcardClass37 = typeCircularBuffer27.getClass();
        boolean boolean38 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass37);
        boolean boolean39 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass37);
        boolean boolean40 = typeCircularBuffer14.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type45 = typeCircularBuffer44.get();
        boolean boolean46 = typeCircularBuffer44.isFull();
        boolean boolean47 = typeCircularBuffer44.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer49 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean50 = typeCircularBuffer49.isEmpty();
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        boolean boolean53 = typeCircularBuffer49.put((java.lang.reflect.Type) wildcardClass52);
        java.lang.Class<?> wildcardClass54 = typeCircularBuffer49.getClass();
        boolean boolean55 = typeCircularBuffer44.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean56 = typeCircularBuffer44.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer58 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean59 = typeCircularBuffer58.isFull();
        boolean boolean60 = typeCircularBuffer58.isEmpty();
        java.lang.reflect.Type type61 = typeCircularBuffer58.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer63 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer65 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean66 = typeCircularBuffer65.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer68 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass69 = typeCircularBuffer68.getClass();
        boolean boolean70 = typeCircularBuffer65.put((java.lang.reflect.Type) wildcardClass69);
        java.lang.reflect.Type type71 = typeCircularBuffer65.get();
        boolean boolean72 = typeCircularBuffer63.put(type71);
        java.lang.Class<?> wildcardClass73 = typeCircularBuffer63.getClass();
        boolean boolean74 = typeCircularBuffer58.put((java.lang.reflect.Type) wildcardClass73);
        boolean boolean75 = typeCircularBuffer44.put((java.lang.reflect.Type) wildcardClass73);
        boolean boolean76 = typeCircularBuffer42.put((java.lang.reflect.Type) wildcardClass73);
        java.lang.Class<?> wildcardClass77 = typeCircularBuffer42.getClass();
        boolean boolean78 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass77);
        boolean boolean79 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass77);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(type45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(type61);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test2173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2173");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        java.lang.reflect.Type type15 = typeCircularBuffer9.get();
        boolean boolean16 = typeCircularBuffer7.put(type15);
        boolean boolean17 = typeCircularBuffer7.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean20 = typeCircularBuffer19.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass23 = typeCircularBuffer22.getClass();
        boolean boolean24 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass23);
        java.lang.reflect.Type type25 = typeCircularBuffer19.get();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        boolean boolean28 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer7.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean30 = typeCircularBuffer7.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type33 = typeCircularBuffer32.get();
        boolean boolean34 = typeCircularBuffer32.isFull();
        boolean boolean35 = typeCircularBuffer32.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean38 = typeCircularBuffer37.isEmpty();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        boolean boolean41 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass40);
        java.lang.Class<?> wildcardClass42 = typeCircularBuffer37.getClass();
        boolean boolean43 = typeCircularBuffer32.put((java.lang.reflect.Type) wildcardClass42);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean46 = typeCircularBuffer45.isEmpty();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        boolean boolean49 = typeCircularBuffer45.put((java.lang.reflect.Type) wildcardClass48);
        java.lang.Class<?> wildcardClass50 = typeCircularBuffer45.getClass();
        boolean boolean51 = typeCircularBuffer32.put((java.lang.reflect.Type) wildcardClass50);
        boolean boolean52 = typeCircularBuffer7.put((java.lang.reflect.Type) wildcardClass50);
        java.lang.Class<?> wildcardClass53 = typeCircularBuffer7.getClass();
        boolean boolean54 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass53);
        java.lang.reflect.Type type55 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass56 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(type33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test2174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2174");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type24 = typeCircularBuffer1.get();
        boolean boolean25 = typeCircularBuffer1.isFull();
        boolean boolean26 = typeCircularBuffer1.isEmpty();
        boolean boolean27 = typeCircularBuffer1.isEmpty();
        boolean boolean28 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type29 = typeCircularBuffer1.get();
        boolean boolean30 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(type29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    }

    @Test
    public void test2175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2175");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type12 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean17 = typeCircularBuffer16.isFull();
        boolean boolean18 = typeCircularBuffer16.isEmpty();
        java.lang.reflect.Type type19 = typeCircularBuffer16.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean24 = typeCircularBuffer23.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer26.getClass();
        boolean boolean28 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass27);
        java.lang.reflect.Type type29 = typeCircularBuffer23.get();
        boolean boolean30 = typeCircularBuffer21.put(type29);
        java.lang.Class<?> wildcardClass31 = typeCircularBuffer21.getClass();
        boolean boolean32 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass31);
        boolean boolean33 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass31);
        boolean boolean34 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass31);
        boolean boolean35 = typeCircularBuffer1.isFull();
        boolean boolean36 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) ' ');
        boolean boolean39 = typeCircularBuffer38.isEmpty();
        java.lang.Class<?> wildcardClass40 = typeCircularBuffer38.getClass();
        boolean boolean41 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass40);
        boolean boolean42 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(type19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
    }

    @Test
    public void test2176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2176");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass10);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer19.getClass();
        boolean boolean21 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type22 = typeCircularBuffer16.get();
        java.lang.Class<?> wildcardClass23 = typeCircularBuffer16.getClass();
        boolean boolean24 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass23);
        boolean boolean25 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass23);
        boolean boolean26 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type27 = typeCircularBuffer1.get();
        boolean boolean28 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
    }

    @Test
    public void test2177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2177");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type12 = typeCircularBuffer1.get();
        boolean boolean13 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type14 = typeCircularBuffer1.get();
        boolean boolean15 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean20 = typeCircularBuffer19.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass23 = typeCircularBuffer22.getClass();
        boolean boolean24 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass23);
        java.lang.reflect.Type type25 = typeCircularBuffer19.get();
        boolean boolean26 = typeCircularBuffer17.put(type25);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean31 = typeCircularBuffer30.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass34 = typeCircularBuffer33.getClass();
        boolean boolean35 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass34);
        java.lang.reflect.Type type36 = typeCircularBuffer30.get();
        boolean boolean37 = typeCircularBuffer28.put(type36);
        java.lang.Class<?> wildcardClass38 = typeCircularBuffer28.getClass();
        boolean boolean39 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass38);
        boolean boolean40 = typeCircularBuffer17.isFull();
        java.lang.reflect.Type type41 = typeCircularBuffer17.get();
        boolean boolean42 = typeCircularBuffer1.put(type41);
        java.lang.Class<?> wildcardClass43 = type41.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(type14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test2178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2178");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer6.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer14.getClass();
        boolean boolean20 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass19);
        java.lang.reflect.Type type21 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.AnnotatedElement> annotatedElementCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.AnnotatedElement>((int) (byte) 10);
        java.lang.Class<?> wildcardClass24 = annotatedElementCircularBuffer23.getClass();
        boolean boolean25 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean26 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    }

    @Test
    public void test2179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2179");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass7 = type6.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(type6);
    }

    @Test
    public void test2180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2180");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        boolean boolean10 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test2181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2181");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '#');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer5 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean6 = typeCircularBuffer5.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass9 = typeCircularBuffer8.getClass();
        boolean boolean10 = typeCircularBuffer5.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.reflect.Type type11 = typeCircularBuffer5.get();
        boolean boolean12 = typeCircularBuffer3.put(type11);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer19.getClass();
        boolean boolean21 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type22 = typeCircularBuffer16.get();
        boolean boolean23 = typeCircularBuffer14.put(type22);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer14.getClass();
        boolean boolean25 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean26 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean27 = typeCircularBuffer1.isEmpty();
        boolean boolean28 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type29 = typeCircularBuffer1.get();
        boolean boolean30 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type31 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type34 = typeCircularBuffer33.get();
        boolean boolean35 = typeCircularBuffer33.isFull();
        boolean boolean36 = typeCircularBuffer33.isFull();
        boolean boolean37 = typeCircularBuffer33.isEmpty();
        boolean boolean38 = typeCircularBuffer33.isEmpty();
        boolean boolean39 = typeCircularBuffer33.isEmpty();
        java.lang.Class<?> wildcardClass40 = typeCircularBuffer33.getClass();
        boolean boolean41 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass40);
        boolean boolean42 = typeCircularBuffer1.isFull();
        boolean boolean43 = typeCircularBuffer1.isEmpty();
        boolean boolean44 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type45 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(type31);
        org.junit.Assert.assertNull(type34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(type45);
    }

    @Test
    public void test2182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2182");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        boolean boolean5 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean8 = typeCircularBuffer7.isFull();
        java.lang.Class<?> wildcardClass9 = typeCircularBuffer7.getClass();
        boolean boolean10 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.reflect.Type type11 = typeCircularBuffer1.get();
        java.lang.reflect.Type type12 = typeCircularBuffer1.get();
        java.lang.reflect.Type type13 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNull(type12);
        org.junit.Assert.assertNull(type13);
    }

    @Test
    public void test2183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2183");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 100);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type5 = typeCircularBuffer4.get();
        boolean boolean6 = typeCircularBuffer4.isFull();
        boolean boolean7 = typeCircularBuffer4.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        java.lang.Object obj11 = new java.lang.Object();
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        boolean boolean13 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass12);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer9.getClass();
        boolean boolean15 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass14);
        boolean boolean16 = typeCircularBuffer4.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean19 = typeCircularBuffer18.isFull();
        boolean boolean20 = typeCircularBuffer18.isEmpty();
        java.lang.reflect.Type type21 = typeCircularBuffer18.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean26 = typeCircularBuffer25.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass29 = typeCircularBuffer28.getClass();
        boolean boolean30 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass29);
        java.lang.reflect.Type type31 = typeCircularBuffer25.get();
        boolean boolean32 = typeCircularBuffer23.put(type31);
        java.lang.Class<?> wildcardClass33 = typeCircularBuffer23.getClass();
        boolean boolean34 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass33);
        boolean boolean35 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass33);
        boolean boolean36 = typeCircularBuffer4.isFull();
        java.lang.reflect.Type type37 = typeCircularBuffer4.get();
        boolean boolean38 = typeCircularBuffer1.put(type37);
        boolean boolean39 = typeCircularBuffer1.isFull();
        boolean boolean40 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(type21);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test2184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2184");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        boolean boolean5 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass8 = typeCircularBuffer7.getClass();
        boolean boolean9 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass8);
        boolean boolean10 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type11 = null;
        boolean boolean12 = typeCircularBuffer1.put(type11);
        boolean boolean13 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test2185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2185");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 10);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type4 = typeCircularBuffer3.get();
        boolean boolean5 = typeCircularBuffer3.isFull();
        java.lang.Class<?> wildcardClass6 = typeCircularBuffer3.getClass();
        boolean boolean7 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass6);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) 'a');
        boolean boolean10 = typeCircularBuffer9.isFull();
        java.lang.reflect.Type type11 = typeCircularBuffer9.get();
        boolean boolean12 = typeCircularBuffer9.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type15 = typeCircularBuffer14.get();
        boolean boolean16 = typeCircularBuffer14.isFull();
        boolean boolean17 = typeCircularBuffer14.isFull();
        boolean boolean18 = typeCircularBuffer14.isFull();
        java.lang.reflect.Type type19 = typeCircularBuffer14.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type22 = typeCircularBuffer21.get();
        boolean boolean23 = typeCircularBuffer21.isFull();
        boolean boolean24 = typeCircularBuffer21.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean27 = typeCircularBuffer26.isEmpty();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        boolean boolean30 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass29);
        java.lang.Class<?> wildcardClass31 = typeCircularBuffer26.getClass();
        boolean boolean32 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass31);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean35 = typeCircularBuffer34.isEmpty();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        boolean boolean38 = typeCircularBuffer34.put((java.lang.reflect.Type) wildcardClass37);
        java.lang.Class<?> wildcardClass39 = typeCircularBuffer34.getClass();
        boolean boolean40 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass39);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean45 = typeCircularBuffer44.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass48 = typeCircularBuffer47.getClass();
        boolean boolean49 = typeCircularBuffer44.put((java.lang.reflect.Type) wildcardClass48);
        java.lang.reflect.Type type50 = typeCircularBuffer44.get();
        boolean boolean51 = typeCircularBuffer42.put(type50);
        java.lang.Class<?> wildcardClass52 = typeCircularBuffer42.getClass();
        boolean boolean53 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass52);
        java.lang.Class<?> wildcardClass54 = typeCircularBuffer21.getClass();
        boolean boolean55 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean56 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass54);
        java.lang.reflect.Type type57 = typeCircularBuffer9.get();
        java.lang.Class<?> wildcardClass58 = typeCircularBuffer9.getClass();
        boolean boolean59 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass58);
        boolean boolean60 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(type11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(type15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(type19);
        org.junit.Assert.assertNull(type22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test2186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2186");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer6.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.reflect.Type type13 = typeCircularBuffer1.get();
        boolean boolean14 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer19.getClass();
        boolean boolean21 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean22 = typeCircularBuffer16.isEmpty();
        java.lang.reflect.Type type23 = typeCircularBuffer16.get();
        boolean boolean24 = typeCircularBuffer1.put(type23);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type27 = typeCircularBuffer26.get();
        boolean boolean28 = typeCircularBuffer26.isFull();
        boolean boolean29 = typeCircularBuffer26.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        boolean boolean35 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass34);
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer31.getClass();
        boolean boolean37 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass36);
        java.lang.reflect.Type type38 = typeCircularBuffer26.get();
        boolean boolean39 = typeCircularBuffer26.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type42 = typeCircularBuffer41.get();
        boolean boolean43 = typeCircularBuffer41.isFull();
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer41.getClass();
        boolean boolean45 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean46 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean47 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type48 = typeCircularBuffer1.get();
        boolean boolean49 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean52 = typeCircularBuffer51.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer54 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass55 = typeCircularBuffer54.getClass();
        boolean boolean56 = typeCircularBuffer51.put((java.lang.reflect.Type) wildcardClass55);
        java.lang.reflect.Type type57 = typeCircularBuffer51.get();
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        boolean boolean60 = typeCircularBuffer51.put((java.lang.reflect.Type) wildcardClass59);
        java.lang.reflect.Type type61 = typeCircularBuffer51.get();
        boolean boolean62 = typeCircularBuffer51.isFull();
        java.lang.Class<?> wildcardClass63 = typeCircularBuffer51.getClass();
        boolean boolean64 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass63);
        boolean boolean65 = typeCircularBuffer1.isFull();
        boolean boolean66 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type67 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(type42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(type67);
    }

    @Test
    public void test2187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2187");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isFull();
        boolean boolean8 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        boolean boolean10 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test2188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2188");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean24 = typeCircularBuffer1.isEmpty();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        boolean boolean27 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass26);
        java.lang.reflect.Type type28 = typeCircularBuffer1.get();
        java.lang.reflect.Type type29 = typeCircularBuffer1.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass30 = type29.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNull(type29);
    }

    @Test
    public void test2189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2189");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        boolean boolean8 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        boolean boolean10 = typeCircularBuffer1.isEmpty();
        boolean boolean11 = typeCircularBuffer1.isFull();
        boolean boolean12 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test2190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2190");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        boolean boolean8 = typeCircularBuffer1.isFull();
        boolean boolean9 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type10 = typeCircularBuffer1.get();
        boolean boolean11 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type14 = typeCircularBuffer13.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean19 = typeCircularBuffer18.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer21.getClass();
        boolean boolean23 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass22);
        java.lang.reflect.Type type24 = typeCircularBuffer18.get();
        boolean boolean25 = typeCircularBuffer16.put(type24);
        boolean boolean26 = typeCircularBuffer16.isFull();
        java.lang.reflect.Type type27 = typeCircularBuffer16.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean30 = typeCircularBuffer29.isEmpty();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        boolean boolean33 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean35 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean36 = typeCircularBuffer13.isFull();
        java.lang.Class<?> wildcardClass37 = typeCircularBuffer13.getClass();
        boolean boolean38 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass37);
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(type14);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
    }

    @Test
    public void test2191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2191");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.invoke.TypeDescriptor> typeDescriptorCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.invoke.TypeDescriptor>((int) (short) 100);
        java.lang.Class<?> wildcardClass2 = typeDescriptorCircularBuffer1.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test2192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2192");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type24 = typeCircularBuffer1.get();
        boolean boolean25 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type26 = typeCircularBuffer1.get();
        java.lang.reflect.Type type27 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(type26);
        org.junit.Assert.assertNull(type27);
    }

    @Test
    public void test2193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2193");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer17.getClass();
        boolean boolean19 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass18);
        java.lang.reflect.Type type20 = typeCircularBuffer14.get();
        boolean boolean21 = typeCircularBuffer12.put(type20);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer12.getClass();
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass22);
        boolean boolean24 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type25 = typeCircularBuffer1.get();
        java.lang.reflect.Type type26 = typeCircularBuffer1.get();
        java.lang.reflect.Type type27 = typeCircularBuffer1.get();
        boolean boolean28 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNull(type26);
        org.junit.Assert.assertNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
    }

    @Test
    public void test2194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2194");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) 'a');
        boolean boolean7 = typeCircularBuffer6.isFull();
        java.lang.Class<?> wildcardClass8 = typeCircularBuffer6.getClass();
        boolean boolean9 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass8);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean12 = typeCircularBuffer11.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass15 = typeCircularBuffer14.getClass();
        boolean boolean16 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass15);
        boolean boolean17 = typeCircularBuffer11.isFull();
        java.lang.reflect.Type type18 = typeCircularBuffer11.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer20.getClass();
        boolean boolean22 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = typeCircularBuffer11.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean26 = typeCircularBuffer25.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass29 = typeCircularBuffer28.getClass();
        boolean boolean30 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass29);
        java.lang.Class<?> wildcardClass31 = typeCircularBuffer25.getClass();
        boolean boolean32 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass31);
        boolean boolean33 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass31);
        java.lang.reflect.Type type34 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean37 = typeCircularBuffer36.isFull();
        boolean boolean38 = typeCircularBuffer36.isEmpty();
        boolean boolean39 = typeCircularBuffer36.isFull();
        java.lang.reflect.Type type40 = null;
        boolean boolean41 = typeCircularBuffer36.put(type40);
        boolean boolean42 = typeCircularBuffer36.isFull();
        boolean boolean43 = typeCircularBuffer36.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean48 = typeCircularBuffer47.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer50.getClass();
        boolean boolean52 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass51);
        java.lang.reflect.Type type53 = typeCircularBuffer47.get();
        boolean boolean54 = typeCircularBuffer45.put(type53);
        boolean boolean55 = typeCircularBuffer45.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer57 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean58 = typeCircularBuffer57.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer60 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass61 = typeCircularBuffer60.getClass();
        boolean boolean62 = typeCircularBuffer57.put((java.lang.reflect.Type) wildcardClass61);
        boolean boolean63 = typeCircularBuffer57.isFull();
        boolean boolean64 = typeCircularBuffer57.isFull();
        boolean boolean65 = typeCircularBuffer57.isFull();
        java.lang.Class<?> wildcardClass66 = typeCircularBuffer57.getClass();
        boolean boolean67 = typeCircularBuffer45.put((java.lang.reflect.Type) wildcardClass66);
        boolean boolean68 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass66);
        boolean boolean69 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass66);
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(type34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    }

    @Test
    public void test2195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2195");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer5 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean6 = typeCircularBuffer5.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass9 = typeCircularBuffer8.getClass();
        boolean boolean10 = typeCircularBuffer5.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.reflect.Type type11 = typeCircularBuffer5.get();
        boolean boolean12 = typeCircularBuffer1.put(type11);
        boolean boolean13 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean16 = typeCircularBuffer15.isEmpty();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        boolean boolean19 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass18);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer15.getClass();
        boolean boolean21 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type22 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(type22);
    }

    @Test
    public void test2196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2196");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) 'a');
        boolean boolean2 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean7 = typeCircularBuffer6.isFull();
        boolean boolean8 = typeCircularBuffer6.isEmpty();
        java.lang.reflect.Type type9 = typeCircularBuffer6.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        boolean boolean20 = typeCircularBuffer11.put(type19);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer11.getClass();
        boolean boolean22 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean24 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type25 = typeCircularBuffer1.get();
        java.lang.reflect.Type type26 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNull(type26);
    }

    @Test
    public void test2197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2197");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer10.get();
        boolean boolean17 = typeCircularBuffer8.put(type16);
        boolean boolean18 = typeCircularBuffer8.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean21 = typeCircularBuffer20.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer23.getClass();
        boolean boolean25 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass24);
        java.lang.reflect.Type type26 = typeCircularBuffer20.get();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        boolean boolean29 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass28);
        boolean boolean30 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass28);
        boolean boolean31 = typeCircularBuffer8.isEmpty();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        boolean boolean34 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass33);
        boolean boolean35 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass33);
        boolean boolean36 = typeCircularBuffer1.isFull();
        boolean boolean37 = typeCircularBuffer1.isFull();
        boolean boolean38 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass39 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test2198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2198");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) 'a');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass4 = typeCircularBuffer3.getClass();
        boolean boolean5 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass4);
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        java.lang.reflect.Type type15 = null;
        boolean boolean16 = typeCircularBuffer9.put(type15);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean21 = typeCircularBuffer20.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer23.getClass();
        boolean boolean25 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass24);
        java.lang.reflect.Type type26 = typeCircularBuffer20.get();
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer20.getClass();
        boolean boolean28 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean30 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean31 = typeCircularBuffer1.isEmpty();
        boolean boolean32 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test2199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2199");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer10.get();
        boolean boolean17 = typeCircularBuffer8.put(type16);
        boolean boolean18 = typeCircularBuffer8.isFull();
        java.lang.reflect.Type type19 = typeCircularBuffer8.get();
        boolean boolean20 = typeCircularBuffer8.isEmpty();
        java.lang.reflect.Type type21 = typeCircularBuffer8.get();
        java.lang.reflect.Type type22 = typeCircularBuffer8.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean27 = typeCircularBuffer26.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass30 = typeCircularBuffer29.getClass();
        boolean boolean31 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass30);
        java.lang.reflect.Type type32 = typeCircularBuffer26.get();
        boolean boolean33 = typeCircularBuffer24.put(type32);
        boolean boolean34 = typeCircularBuffer24.isEmpty();
        boolean boolean35 = typeCircularBuffer24.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean38 = typeCircularBuffer37.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass41 = typeCircularBuffer40.getClass();
        boolean boolean42 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass41);
        java.lang.reflect.Type type43 = typeCircularBuffer37.get();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        boolean boolean46 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass45);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean49 = typeCircularBuffer48.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass52 = typeCircularBuffer51.getClass();
        boolean boolean53 = typeCircularBuffer48.put((java.lang.reflect.Type) wildcardClass52);
        java.lang.reflect.Type type54 = typeCircularBuffer48.get();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        boolean boolean57 = typeCircularBuffer48.put((java.lang.reflect.Type) wildcardClass56);
        java.lang.reflect.Type type58 = typeCircularBuffer48.get();
        boolean boolean59 = typeCircularBuffer37.put(type58);
        boolean boolean60 = typeCircularBuffer24.put(type58);
        boolean boolean61 = typeCircularBuffer24.isEmpty();
        java.lang.reflect.Type type62 = typeCircularBuffer24.get();
        boolean boolean63 = typeCircularBuffer8.put(type62);
        boolean boolean64 = typeCircularBuffer1.put(type62);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer66 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean67 = typeCircularBuffer66.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer69 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type70 = typeCircularBuffer69.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer72 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer74 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean75 = typeCircularBuffer74.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer77 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass78 = typeCircularBuffer77.getClass();
        boolean boolean79 = typeCircularBuffer74.put((java.lang.reflect.Type) wildcardClass78);
        java.lang.reflect.Type type80 = typeCircularBuffer74.get();
        boolean boolean81 = typeCircularBuffer72.put(type80);
        boolean boolean82 = typeCircularBuffer72.isFull();
        java.lang.reflect.Type type83 = typeCircularBuffer72.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer85 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean86 = typeCircularBuffer85.isEmpty();
        java.lang.Object obj87 = new java.lang.Object();
        java.lang.Class<?> wildcardClass88 = obj87.getClass();
        boolean boolean89 = typeCircularBuffer85.put((java.lang.reflect.Type) wildcardClass88);
        boolean boolean90 = typeCircularBuffer72.put((java.lang.reflect.Type) wildcardClass88);
        boolean boolean91 = typeCircularBuffer69.put((java.lang.reflect.Type) wildcardClass88);
        boolean boolean92 = typeCircularBuffer69.isEmpty();
        java.lang.Class<?> wildcardClass93 = typeCircularBuffer69.getClass();
        boolean boolean94 = typeCircularBuffer66.put((java.lang.reflect.Type) wildcardClass93);
        boolean boolean95 = typeCircularBuffer66.isFull();
        boolean boolean96 = typeCircularBuffer66.isEmpty();
        java.lang.reflect.Type type97 = typeCircularBuffer66.get();
        boolean boolean98 = typeCircularBuffer1.put(type97);
        boolean boolean99 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(type21);
        org.junit.Assert.assertNull(type22);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNull(type70);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(type83);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertNotNull(type97);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test2200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2200");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass10);
        boolean boolean13 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type14 = typeCircularBuffer1.get();
        boolean boolean15 = typeCircularBuffer1.isEmpty();
        boolean boolean16 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(type14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test2201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2201");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        java.lang.reflect.Type type15 = typeCircularBuffer9.get();
        boolean boolean16 = typeCircularBuffer7.put(type15);
        boolean boolean17 = typeCircularBuffer7.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean20 = typeCircularBuffer19.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass23 = typeCircularBuffer22.getClass();
        boolean boolean24 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass23);
        java.lang.reflect.Type type25 = typeCircularBuffer19.get();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        boolean boolean28 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer7.put((java.lang.reflect.Type) wildcardClass27);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer34.getClass();
        boolean boolean36 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass35);
        java.lang.reflect.Type type37 = typeCircularBuffer31.get();
        boolean boolean38 = typeCircularBuffer7.put(type37);
        java.lang.reflect.Type type39 = typeCircularBuffer7.get();
        boolean boolean40 = typeCircularBuffer1.put(type39);
        boolean boolean41 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type42 = typeCircularBuffer1.get();
        java.lang.reflect.Type type43 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNull(type43);
    }

    @Test
    public void test2202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2202");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean4 = typeCircularBuffer3.isFull();
        java.lang.reflect.Type type5 = typeCircularBuffer3.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean8 = typeCircularBuffer7.isEmpty();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        boolean boolean11 = typeCircularBuffer7.put((java.lang.reflect.Type) wildcardClass10);
        java.lang.Class<?> wildcardClass12 = typeCircularBuffer7.getClass();
        boolean boolean13 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass12);
        boolean boolean14 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass12);
        boolean boolean15 = typeCircularBuffer1.isEmpty();
        boolean boolean16 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type17 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type20 = typeCircularBuffer19.get();
        boolean boolean21 = typeCircularBuffer19.isFull();
        boolean boolean22 = typeCircularBuffer19.isFull();
        java.lang.reflect.Type type23 = typeCircularBuffer19.get();
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer19.getClass();
        boolean boolean25 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass24);
        java.lang.Class<?> wildcardClass26 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(type17);
        org.junit.Assert.assertNull(type20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(type23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test2203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2203");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) 'a');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass4 = typeCircularBuffer3.getClass();
        boolean boolean5 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass4);
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        java.lang.reflect.Type type15 = null;
        boolean boolean16 = typeCircularBuffer9.put(type15);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean21 = typeCircularBuffer20.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer23.getClass();
        boolean boolean25 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass24);
        java.lang.reflect.Type type26 = typeCircularBuffer20.get();
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer20.getClass();
        boolean boolean28 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean30 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass27);
        java.lang.reflect.Type type31 = typeCircularBuffer1.get();
        java.lang.reflect.Type type32 = typeCircularBuffer1.get();
        boolean boolean33 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNull(type32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    }

    @Test
    public void test2204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2204");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type10 = typeCircularBuffer9.get();
        boolean boolean11 = typeCircularBuffer9.isFull();
        boolean boolean12 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer14.getClass();
        boolean boolean20 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass19);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        boolean boolean26 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer22.getClass();
        boolean boolean28 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean30 = typeCircularBuffer1.isEmpty();
        boolean boolean31 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean36 = typeCircularBuffer35.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass39 = typeCircularBuffer38.getClass();
        boolean boolean40 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass39);
        java.lang.reflect.Type type41 = typeCircularBuffer35.get();
        boolean boolean42 = typeCircularBuffer33.put(type41);
        boolean boolean43 = typeCircularBuffer33.isEmpty();
        boolean boolean44 = typeCircularBuffer33.isFull();
        boolean boolean45 = typeCircularBuffer33.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer49 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean50 = typeCircularBuffer49.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer52 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass53 = typeCircularBuffer52.getClass();
        boolean boolean54 = typeCircularBuffer49.put((java.lang.reflect.Type) wildcardClass53);
        java.lang.reflect.Type type55 = typeCircularBuffer49.get();
        boolean boolean56 = typeCircularBuffer47.put(type55);
        boolean boolean57 = typeCircularBuffer47.isFull();
        java.lang.reflect.Type type58 = typeCircularBuffer47.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer60 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean61 = typeCircularBuffer60.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer63 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass64 = typeCircularBuffer63.getClass();
        boolean boolean65 = typeCircularBuffer60.put((java.lang.reflect.Type) wildcardClass64);
        boolean boolean66 = typeCircularBuffer60.isFull();
        java.lang.reflect.Type type67 = typeCircularBuffer60.get();
        boolean boolean68 = typeCircularBuffer47.put(type67);
        boolean boolean69 = typeCircularBuffer33.put(type67);
        boolean boolean70 = typeCircularBuffer1.put(type67);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer72 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type73 = typeCircularBuffer72.get();
        boolean boolean74 = typeCircularBuffer72.isFull();
        boolean boolean75 = typeCircularBuffer72.isFull();
        boolean boolean76 = typeCircularBuffer72.isEmpty();
        java.lang.reflect.Type type77 = typeCircularBuffer72.get();
        boolean boolean78 = typeCircularBuffer72.isEmpty();
        java.lang.reflect.Type type79 = typeCircularBuffer72.get();
        java.lang.Class<?> wildcardClass80 = typeCircularBuffer72.getClass();
        boolean boolean81 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass80);
        boolean boolean82 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(type73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNull(type77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNull(type79);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
    }

    @Test
    public void test2205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2205");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) ' ');
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean5 = typeCircularBuffer4.isEmpty();
        java.lang.reflect.Type type6 = typeCircularBuffer4.get();
        java.lang.reflect.Type type7 = typeCircularBuffer4.get();
        java.lang.reflect.Type type8 = typeCircularBuffer4.get();
        boolean boolean9 = typeCircularBuffer4.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean12 = typeCircularBuffer11.isFull();
        java.lang.reflect.Type type13 = typeCircularBuffer11.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean16 = typeCircularBuffer15.isEmpty();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        boolean boolean19 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass18);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer15.getClass();
        boolean boolean21 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean22 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass20);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type27 = typeCircularBuffer26.get();
        boolean boolean28 = typeCircularBuffer26.isFull();
        boolean boolean29 = typeCircularBuffer26.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        boolean boolean35 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass34);
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer31.getClass();
        boolean boolean37 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean38 = typeCircularBuffer26.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean41 = typeCircularBuffer40.isFull();
        boolean boolean42 = typeCircularBuffer40.isEmpty();
        java.lang.reflect.Type type43 = typeCircularBuffer40.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean48 = typeCircularBuffer47.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer50.getClass();
        boolean boolean52 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass51);
        java.lang.reflect.Type type53 = typeCircularBuffer47.get();
        boolean boolean54 = typeCircularBuffer45.put(type53);
        java.lang.Class<?> wildcardClass55 = typeCircularBuffer45.getClass();
        boolean boolean56 = typeCircularBuffer40.put((java.lang.reflect.Type) wildcardClass55);
        boolean boolean57 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass55);
        boolean boolean58 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass55);
        boolean boolean59 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass55);
        java.lang.Class<?> wildcardClass60 = typeCircularBuffer4.getClass();
        boolean boolean61 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass60);
        java.lang.reflect.Type type62 = typeCircularBuffer1.get();
        boolean boolean63 = typeCircularBuffer1.isFull();
        boolean boolean64 = typeCircularBuffer1.isFull();
        boolean boolean65 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(type13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(type43);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test2206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2206");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        boolean boolean8 = typeCircularBuffer1.isEmpty();
        boolean boolean9 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type10 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(type10);
    }

    @Test
    public void test2207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2207");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        java.lang.reflect.Type type11 = typeCircularBuffer1.get();
        boolean boolean12 = typeCircularBuffer1.isFull();
        boolean boolean13 = typeCircularBuffer1.isEmpty();
        boolean boolean14 = typeCircularBuffer1.isFull();
        boolean boolean15 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test2208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2208");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isFull();
        boolean boolean8 = typeCircularBuffer1.isFull();
        boolean boolean9 = typeCircularBuffer1.isEmpty();
        boolean boolean10 = typeCircularBuffer1.isEmpty();
        boolean boolean11 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass12 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test2209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2209");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        java.lang.reflect.Type type15 = typeCircularBuffer9.get();
        boolean boolean16 = typeCircularBuffer7.put(type15);
        boolean boolean17 = typeCircularBuffer7.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean20 = typeCircularBuffer19.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass23 = typeCircularBuffer22.getClass();
        boolean boolean24 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass23);
        java.lang.reflect.Type type25 = typeCircularBuffer19.get();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        boolean boolean28 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer7.put((java.lang.reflect.Type) wildcardClass27);
        java.lang.reflect.Type type30 = typeCircularBuffer7.get();
        boolean boolean31 = typeCircularBuffer7.isFull();
        boolean boolean32 = typeCircularBuffer7.isEmpty();
        boolean boolean33 = typeCircularBuffer7.isEmpty();
        boolean boolean34 = typeCircularBuffer7.isFull();
        java.lang.reflect.Type type35 = typeCircularBuffer7.get();
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer7.getClass();
        boolean boolean37 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(type35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test2210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2210");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '#');
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.GenericDeclaration> genericDeclarationCircularBuffer5 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.GenericDeclaration>((int) (byte) 1);
        java.lang.Class<?> wildcardClass6 = genericDeclarationCircularBuffer5.getClass();
        boolean boolean7 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass6);
        boolean boolean8 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test2211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2211");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        boolean boolean8 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test2212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2212");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        boolean boolean8 = typeCircularBuffer1.isEmpty();
        boolean boolean9 = typeCircularBuffer1.isFull();
        boolean boolean10 = typeCircularBuffer1.isFull();
        boolean boolean11 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type12 = null;
        boolean boolean13 = typeCircularBuffer1.put(type12);
        boolean boolean14 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test2213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2213");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type5 = typeCircularBuffer4.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        java.lang.reflect.Type type15 = typeCircularBuffer9.get();
        boolean boolean16 = typeCircularBuffer7.put(type15);
        boolean boolean17 = typeCircularBuffer7.isFull();
        java.lang.reflect.Type type18 = typeCircularBuffer7.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean21 = typeCircularBuffer20.isEmpty();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        boolean boolean24 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass23);
        boolean boolean25 = typeCircularBuffer7.put((java.lang.reflect.Type) wildcardClass23);
        boolean boolean26 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass23);
        boolean boolean27 = typeCircularBuffer4.isEmpty();
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer4.getClass();
        boolean boolean29 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass28);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean32 = typeCircularBuffer31.isFull();
        boolean boolean33 = typeCircularBuffer31.isEmpty();
        boolean boolean34 = typeCircularBuffer31.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean37 = typeCircularBuffer36.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass40 = typeCircularBuffer39.getClass();
        boolean boolean41 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass40);
        java.lang.reflect.Type type42 = typeCircularBuffer36.get();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        boolean boolean45 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean46 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean47 = typeCircularBuffer31.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer49 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean52 = typeCircularBuffer51.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer54 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass55 = typeCircularBuffer54.getClass();
        boolean boolean56 = typeCircularBuffer51.put((java.lang.reflect.Type) wildcardClass55);
        java.lang.reflect.Type type57 = typeCircularBuffer51.get();
        boolean boolean58 = typeCircularBuffer49.put(type57);
        boolean boolean59 = typeCircularBuffer49.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer61 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean62 = typeCircularBuffer61.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer64 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass65 = typeCircularBuffer64.getClass();
        boolean boolean66 = typeCircularBuffer61.put((java.lang.reflect.Type) wildcardClass65);
        java.lang.reflect.Type type67 = typeCircularBuffer61.get();
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        boolean boolean70 = typeCircularBuffer61.put((java.lang.reflect.Type) wildcardClass69);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer72 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean73 = typeCircularBuffer72.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer75 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass76 = typeCircularBuffer75.getClass();
        boolean boolean77 = typeCircularBuffer72.put((java.lang.reflect.Type) wildcardClass76);
        java.lang.Class<?> wildcardClass78 = typeCircularBuffer72.getClass();
        boolean boolean79 = typeCircularBuffer61.put((java.lang.reflect.Type) wildcardClass78);
        boolean boolean80 = typeCircularBuffer49.put((java.lang.reflect.Type) wildcardClass78);
        boolean boolean81 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass78);
        boolean boolean82 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass78);
        boolean boolean83 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test2214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2214");
        com.thealgorithms.datastructures.buffers.CircularBuffer<com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>> typeCircularBufferCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>>((int) '4');
        java.lang.Class<?> wildcardClass2 = typeCircularBufferCircularBuffer1.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test2215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2215");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type12 = typeCircularBuffer1.get();
        boolean boolean13 = typeCircularBuffer1.isFull();
        boolean boolean14 = typeCircularBuffer1.isFull();
        boolean boolean15 = typeCircularBuffer1.isFull();
        boolean boolean16 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean21 = typeCircularBuffer20.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer23.getClass();
        boolean boolean25 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass24);
        java.lang.reflect.Type type26 = typeCircularBuffer20.get();
        boolean boolean27 = typeCircularBuffer18.put(type26);
        boolean boolean28 = typeCircularBuffer18.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean31 = typeCircularBuffer30.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass34 = typeCircularBuffer33.getClass();
        boolean boolean35 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass34);
        java.lang.reflect.Type type36 = typeCircularBuffer30.get();
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        boolean boolean39 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass38);
        boolean boolean40 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass38);
        boolean boolean41 = typeCircularBuffer18.isEmpty();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        boolean boolean44 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass43);
        java.lang.reflect.Type type45 = typeCircularBuffer18.get();
        java.lang.reflect.Type type46 = typeCircularBuffer18.get();
        boolean boolean47 = typeCircularBuffer18.isFull();
        java.lang.Class<?> wildcardClass48 = typeCircularBuffer18.getClass();
        boolean boolean49 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass48);
        java.lang.Class<?> wildcardClass50 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNull(type46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test2216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2216");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        boolean boolean12 = typeCircularBuffer6.isFull();
        java.lang.reflect.Type type13 = typeCircularBuffer6.get();
        boolean boolean14 = typeCircularBuffer1.put(type13);
        boolean boolean15 = typeCircularBuffer1.isEmpty();
        boolean boolean16 = typeCircularBuffer1.isEmpty();
        boolean boolean17 = typeCircularBuffer1.isEmpty();
        boolean boolean18 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test2217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2217");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        java.lang.reflect.Type type12 = typeCircularBuffer6.get();
        boolean boolean13 = typeCircularBuffer4.put(type12);
        boolean boolean14 = typeCircularBuffer4.isFull();
        java.lang.reflect.Type type15 = typeCircularBuffer4.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        boolean boolean21 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean22 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type24 = typeCircularBuffer1.get();
        boolean boolean25 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type26 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer31.getClass();
        boolean boolean33 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass32);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean38 = typeCircularBuffer37.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass41 = typeCircularBuffer40.getClass();
        boolean boolean42 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass41);
        java.lang.reflect.Type type43 = typeCircularBuffer37.get();
        boolean boolean44 = typeCircularBuffer35.put(type43);
        boolean boolean45 = typeCircularBuffer35.isFull();
        java.lang.reflect.Type type46 = typeCircularBuffer35.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean49 = typeCircularBuffer48.isEmpty();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        boolean boolean52 = typeCircularBuffer48.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean53 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean54 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean55 = typeCircularBuffer28.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer57 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean58 = typeCircularBuffer57.isFull();
        boolean boolean59 = typeCircularBuffer57.isEmpty();
        boolean boolean60 = typeCircularBuffer57.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer62 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean63 = typeCircularBuffer62.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer65 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass66 = typeCircularBuffer65.getClass();
        boolean boolean67 = typeCircularBuffer62.put((java.lang.reflect.Type) wildcardClass66);
        java.lang.reflect.Type type68 = typeCircularBuffer62.get();
        java.lang.Object obj69 = new java.lang.Object();
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        boolean boolean71 = typeCircularBuffer62.put((java.lang.reflect.Type) wildcardClass70);
        boolean boolean72 = typeCircularBuffer57.put((java.lang.reflect.Type) wildcardClass70);
        boolean boolean73 = typeCircularBuffer57.isFull();
        java.lang.reflect.Type type74 = typeCircularBuffer57.get();
        boolean boolean75 = typeCircularBuffer28.put(type74);
        java.lang.Class<?> wildcardClass76 = type74.getClass();
        boolean boolean77 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass76);
        java.lang.Class<?> wildcardClass78 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(type26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test2218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2218");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        java.lang.reflect.Type type7 = null;
        boolean boolean8 = typeCircularBuffer1.put(type7);
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        boolean boolean10 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test2219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2219");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        java.lang.reflect.Type type11 = typeCircularBuffer1.get();
        boolean boolean12 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type13 = typeCircularBuffer1.get();
        boolean boolean14 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        boolean boolean18 = typeCircularBuffer16.isFull();
        java.lang.reflect.Type type19 = typeCircularBuffer16.get();
        boolean boolean20 = typeCircularBuffer16.isFull();
        boolean boolean21 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean24 = typeCircularBuffer23.isEmpty();
        java.lang.reflect.Type type25 = typeCircularBuffer23.get();
        java.lang.reflect.Type type26 = typeCircularBuffer23.get();
        java.lang.reflect.Type type27 = typeCircularBuffer23.get();
        java.lang.reflect.Type type28 = typeCircularBuffer23.get();
        boolean boolean29 = typeCircularBuffer23.isEmpty();
        java.lang.reflect.Type type30 = typeCircularBuffer23.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean35 = typeCircularBuffer34.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass38 = typeCircularBuffer37.getClass();
        boolean boolean39 = typeCircularBuffer34.put((java.lang.reflect.Type) wildcardClass38);
        java.lang.reflect.Type type40 = typeCircularBuffer34.get();
        boolean boolean41 = typeCircularBuffer32.put(type40);
        boolean boolean42 = typeCircularBuffer32.isEmpty();
        boolean boolean43 = typeCircularBuffer32.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean46 = typeCircularBuffer45.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass49 = typeCircularBuffer48.getClass();
        boolean boolean50 = typeCircularBuffer45.put((java.lang.reflect.Type) wildcardClass49);
        java.lang.reflect.Type type51 = typeCircularBuffer45.get();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        boolean boolean54 = typeCircularBuffer45.put((java.lang.reflect.Type) wildcardClass53);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer56 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean57 = typeCircularBuffer56.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer59 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass60 = typeCircularBuffer59.getClass();
        boolean boolean61 = typeCircularBuffer56.put((java.lang.reflect.Type) wildcardClass60);
        java.lang.reflect.Type type62 = typeCircularBuffer56.get();
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        boolean boolean65 = typeCircularBuffer56.put((java.lang.reflect.Type) wildcardClass64);
        java.lang.reflect.Type type66 = typeCircularBuffer56.get();
        boolean boolean67 = typeCircularBuffer45.put(type66);
        boolean boolean68 = typeCircularBuffer32.put(type66);
        boolean boolean69 = typeCircularBuffer32.isEmpty();
        java.lang.reflect.Type type70 = typeCircularBuffer32.get();
        boolean boolean71 = typeCircularBuffer23.put(type70);
        boolean boolean72 = typeCircularBuffer23.isFull();
        java.lang.reflect.Type type73 = typeCircularBuffer23.get();
        boolean boolean74 = typeCircularBuffer16.put(type73);
        java.lang.reflect.Type type75 = typeCircularBuffer16.get();
        java.lang.Class<?> wildcardClass76 = typeCircularBuffer16.getClass();
        boolean boolean77 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(type13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(type19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(type25);
        org.junit.Assert.assertNull(type26);
        org.junit.Assert.assertNull(type27);
        org.junit.Assert.assertNull(type28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(type30);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
    }

    @Test
    public void test2220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2220");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        boolean boolean5 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass8 = typeCircularBuffer7.getClass();
        boolean boolean9 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass8);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean12 = typeCircularBuffer11.isFull();
        boolean boolean13 = typeCircularBuffer11.isEmpty();
        boolean boolean14 = typeCircularBuffer11.isFull();
        java.lang.Class<?> wildcardClass15 = typeCircularBuffer11.getClass();
        boolean boolean16 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass15);
        boolean boolean17 = typeCircularBuffer1.isFull();
        boolean boolean18 = typeCircularBuffer1.isFull();
        boolean boolean19 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test2221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2221");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        java.lang.reflect.Type type9 = null;
        boolean boolean10 = typeCircularBuffer1.put(type9);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test2222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2222");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 0);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass4 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test2223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2223");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) ' ');
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) ' ');
        boolean boolean5 = typeCircularBuffer4.isEmpty();
        boolean boolean6 = typeCircularBuffer4.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type9 = typeCircularBuffer8.get();
        boolean boolean10 = typeCircularBuffer8.isFull();
        boolean boolean11 = typeCircularBuffer8.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass16);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer13.getClass();
        boolean boolean19 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass18);
        java.lang.reflect.Type type20 = typeCircularBuffer8.get();
        boolean boolean21 = typeCircularBuffer8.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean24 = typeCircularBuffer23.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer26.getClass();
        boolean boolean28 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer23.isEmpty();
        java.lang.reflect.Type type30 = typeCircularBuffer23.get();
        boolean boolean31 = typeCircularBuffer8.put(type30);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type34 = typeCircularBuffer33.get();
        boolean boolean35 = typeCircularBuffer33.isFull();
        boolean boolean36 = typeCircularBuffer33.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean39 = typeCircularBuffer38.isEmpty();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        boolean boolean42 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass41);
        java.lang.Class<?> wildcardClass43 = typeCircularBuffer38.getClass();
        boolean boolean44 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass43);
        java.lang.reflect.Type type45 = typeCircularBuffer33.get();
        boolean boolean46 = typeCircularBuffer33.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type49 = typeCircularBuffer48.get();
        boolean boolean50 = typeCircularBuffer48.isFull();
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer48.getClass();
        boolean boolean52 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean53 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean54 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass51);
        java.lang.Class<?> wildcardClass55 = typeCircularBuffer4.getClass();
        boolean boolean56 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass55);
        java.lang.reflect.Type type57 = typeCircularBuffer1.get();
        boolean boolean58 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(type34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(type49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test2224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2224");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        boolean boolean15 = typeCircularBuffer13.isFull();
        java.lang.reflect.Type type16 = typeCircularBuffer13.get();
        boolean boolean17 = typeCircularBuffer13.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean20 = typeCircularBuffer19.isFull();
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer19.getClass();
        boolean boolean22 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type24 = typeCircularBuffer1.get();
        boolean boolean25 = typeCircularBuffer1.isEmpty();
        boolean boolean26 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    }

    @Test
    public void test2225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2225");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '#');
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        java.lang.reflect.Type type10 = typeCircularBuffer9.get();
        boolean boolean11 = typeCircularBuffer9.isFull();
        java.lang.reflect.Type type12 = typeCircularBuffer9.get();
        java.lang.reflect.Type type13 = typeCircularBuffer9.get();
        boolean boolean14 = typeCircularBuffer9.isEmpty();
        java.lang.reflect.Type type15 = typeCircularBuffer9.get();
        boolean boolean16 = typeCircularBuffer9.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type19 = typeCircularBuffer18.get();
        boolean boolean20 = typeCircularBuffer18.isFull();
        boolean boolean21 = typeCircularBuffer18.isFull();
        boolean boolean22 = typeCircularBuffer18.isFull();
        java.lang.reflect.Type type23 = typeCircularBuffer18.get();
        boolean boolean24 = typeCircularBuffer18.isEmpty();
        java.lang.reflect.Type type25 = typeCircularBuffer18.get();
        java.lang.reflect.Type type26 = typeCircularBuffer18.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer31.getClass();
        boolean boolean33 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass32);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean38 = typeCircularBuffer37.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass41 = typeCircularBuffer40.getClass();
        boolean boolean42 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass41);
        java.lang.reflect.Type type43 = typeCircularBuffer37.get();
        boolean boolean44 = typeCircularBuffer35.put(type43);
        boolean boolean45 = typeCircularBuffer35.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean48 = typeCircularBuffer47.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer50.getClass();
        boolean boolean52 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass51);
        java.lang.reflect.Type type53 = typeCircularBuffer47.get();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        boolean boolean56 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass55);
        boolean boolean57 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass55);
        boolean boolean58 = typeCircularBuffer35.isEmpty();
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        boolean boolean61 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass60);
        boolean boolean62 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass60);
        boolean boolean63 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass60);
        java.lang.reflect.Type type64 = typeCircularBuffer18.get();
        java.lang.Class<?> wildcardClass65 = typeCircularBuffer18.getClass();
        boolean boolean66 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass65);
        boolean boolean67 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(type12);
        org.junit.Assert.assertNull(type13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(type15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(type19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(type25);
        org.junit.Assert.assertNull(type26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
    }

    @Test
    public void test2226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2226");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        boolean boolean10 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer17.getClass();
        boolean boolean19 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass18);
        java.lang.reflect.Type type20 = typeCircularBuffer14.get();
        boolean boolean21 = typeCircularBuffer12.put(type20);
        boolean boolean22 = typeCircularBuffer12.isFull();
        java.lang.reflect.Type type23 = typeCircularBuffer12.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean26 = typeCircularBuffer25.isEmpty();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        boolean boolean29 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass28);
        boolean boolean30 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass28);
        boolean boolean31 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.reflect.Type type32 = typeCircularBuffer1.get();
        boolean boolean33 = typeCircularBuffer1.isFull();
        boolean boolean34 = typeCircularBuffer1.isFull();
        boolean boolean35 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type36 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) 'a');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass41 = typeCircularBuffer40.getClass();
        boolean boolean42 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass41);
        java.lang.reflect.Type type43 = typeCircularBuffer38.get();
        java.lang.reflect.Type type44 = typeCircularBuffer38.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type47 = typeCircularBuffer46.get();
        boolean boolean48 = typeCircularBuffer46.isFull();
        boolean boolean49 = typeCircularBuffer46.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean52 = typeCircularBuffer51.isEmpty();
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        boolean boolean55 = typeCircularBuffer51.put((java.lang.reflect.Type) wildcardClass54);
        java.lang.Class<?> wildcardClass56 = typeCircularBuffer51.getClass();
        boolean boolean57 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass56);
        java.lang.reflect.Type type58 = typeCircularBuffer46.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer60 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer62 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean63 = typeCircularBuffer62.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer65 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass66 = typeCircularBuffer65.getClass();
        boolean boolean67 = typeCircularBuffer62.put((java.lang.reflect.Type) wildcardClass66);
        java.lang.reflect.Type type68 = typeCircularBuffer62.get();
        boolean boolean69 = typeCircularBuffer60.put(type68);
        boolean boolean70 = typeCircularBuffer46.put(type68);
        java.lang.Class<?> wildcardClass71 = typeCircularBuffer46.getClass();
        boolean boolean72 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass71);
        java.lang.reflect.Type type73 = typeCircularBuffer38.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer75 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean76 = typeCircularBuffer75.isFull();
        java.lang.reflect.Type type77 = typeCircularBuffer75.get();
        boolean boolean78 = typeCircularBuffer75.isFull();
        java.lang.Class<?> wildcardClass79 = typeCircularBuffer75.getClass();
        boolean boolean80 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass79);
        boolean boolean81 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass79);
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(type36);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNull(type44);
        org.junit.Assert.assertNull(type47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNull(type77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
    }

    @Test
    public void test2227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2227");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        boolean boolean8 = typeCircularBuffer1.isFull();
        boolean boolean9 = typeCircularBuffer1.isFull();
        boolean boolean10 = typeCircularBuffer1.isFull();
        boolean boolean11 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test2228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2228");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass9);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean13 = typeCircularBuffer12.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass16 = typeCircularBuffer15.getClass();
        boolean boolean17 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass16);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer12.getClass();
        boolean boolean19 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass18);
        boolean boolean20 = typeCircularBuffer1.isFull();
        boolean boolean21 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type22 = null;
        boolean boolean23 = typeCircularBuffer1.put(type22);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test2229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2229");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer17.getClass();
        boolean boolean19 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass18);
        java.lang.reflect.Type type20 = typeCircularBuffer14.get();
        boolean boolean21 = typeCircularBuffer12.put(type20);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer12.getClass();
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass22);
        boolean boolean24 = typeCircularBuffer1.isFull();
        boolean boolean25 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type26 = typeCircularBuffer1.get();
        boolean boolean27 = typeCircularBuffer1.isEmpty();
        boolean boolean28 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type29 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass30 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(type29);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test2230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2230");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        java.lang.reflect.Type type11 = typeCircularBuffer1.get();
        boolean boolean12 = typeCircularBuffer1.isFull();
        boolean boolean13 = typeCircularBuffer1.isEmpty();
        boolean boolean14 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean17 = typeCircularBuffer16.isFull();
        java.lang.reflect.Type type18 = typeCircularBuffer16.get();
        boolean boolean19 = typeCircularBuffer16.isEmpty();
        boolean boolean20 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer22.getClass();
        boolean boolean25 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass24);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean28 = typeCircularBuffer27.isFull();
        boolean boolean29 = typeCircularBuffer27.isEmpty();
        boolean boolean30 = typeCircularBuffer27.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean33 = typeCircularBuffer32.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer35.getClass();
        boolean boolean37 = typeCircularBuffer32.put((java.lang.reflect.Type) wildcardClass36);
        java.lang.reflect.Type type38 = typeCircularBuffer32.get();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        boolean boolean41 = typeCircularBuffer32.put((java.lang.reflect.Type) wildcardClass40);
        boolean boolean42 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass40);
        boolean boolean43 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass40);
        boolean boolean44 = typeCircularBuffer16.isEmpty();
        boolean boolean45 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean48 = typeCircularBuffer47.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer50.getClass();
        boolean boolean52 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass51);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer54 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer56 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean57 = typeCircularBuffer56.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer59 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass60 = typeCircularBuffer59.getClass();
        boolean boolean61 = typeCircularBuffer56.put((java.lang.reflect.Type) wildcardClass60);
        java.lang.reflect.Type type62 = typeCircularBuffer56.get();
        boolean boolean63 = typeCircularBuffer54.put(type62);
        boolean boolean64 = typeCircularBuffer54.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer66 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean67 = typeCircularBuffer66.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer69 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass70 = typeCircularBuffer69.getClass();
        boolean boolean71 = typeCircularBuffer66.put((java.lang.reflect.Type) wildcardClass70);
        java.lang.reflect.Type type72 = typeCircularBuffer66.get();
        java.lang.Object obj73 = new java.lang.Object();
        java.lang.Class<?> wildcardClass74 = obj73.getClass();
        boolean boolean75 = typeCircularBuffer66.put((java.lang.reflect.Type) wildcardClass74);
        boolean boolean76 = typeCircularBuffer54.put((java.lang.reflect.Type) wildcardClass74);
        boolean boolean77 = typeCircularBuffer54.isEmpty();
        java.lang.Object obj78 = new java.lang.Object();
        java.lang.Class<?> wildcardClass79 = obj78.getClass();
        boolean boolean80 = typeCircularBuffer54.put((java.lang.reflect.Type) wildcardClass79);
        boolean boolean81 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass79);
        boolean boolean82 = typeCircularBuffer47.isFull();
        java.lang.Class<?> wildcardClass83 = typeCircularBuffer47.getClass();
        boolean boolean84 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass83);
        java.lang.Class<?> wildcardClass85 = typeCircularBuffer16.getClass();
        boolean boolean86 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass85);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(type18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
    }

    @Test
    public void test2231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2231");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer5 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type6 = typeCircularBuffer5.get();
        boolean boolean7 = typeCircularBuffer5.isFull();
        boolean boolean8 = typeCircularBuffer5.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        boolean boolean14 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass13);
        java.lang.Class<?> wildcardClass15 = typeCircularBuffer10.getClass();
        boolean boolean16 = typeCircularBuffer5.put((java.lang.reflect.Type) wildcardClass15);
        java.lang.reflect.Type type17 = typeCircularBuffer5.get();
        java.lang.Class<?> wildcardClass18 = type17.getClass();
        boolean boolean19 = typeCircularBuffer1.put(type17);
        boolean boolean20 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test2232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2232");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type7 = typeCircularBuffer6.get();
        boolean boolean8 = typeCircularBuffer6.isFull();
        boolean boolean9 = typeCircularBuffer6.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean12 = typeCircularBuffer11.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass15 = typeCircularBuffer14.getClass();
        boolean boolean16 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass15);
        boolean boolean17 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass15);
        boolean boolean18 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass26 = typeCircularBuffer25.getClass();
        boolean boolean27 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass26);
        java.lang.reflect.Type type28 = typeCircularBuffer22.get();
        boolean boolean29 = typeCircularBuffer20.put(type28);
        boolean boolean30 = typeCircularBuffer20.isFull();
        java.lang.reflect.Type type31 = typeCircularBuffer20.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean34 = typeCircularBuffer33.isEmpty();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        boolean boolean37 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean38 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass36);
        java.lang.reflect.Type type39 = typeCircularBuffer20.get();
        boolean boolean40 = typeCircularBuffer6.put(type39);
        java.lang.reflect.Type type41 = typeCircularBuffer6.get();
        java.lang.reflect.Type type42 = typeCircularBuffer6.get();
        java.lang.Class<?> wildcardClass43 = typeCircularBuffer6.getClass();
        boolean boolean44 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass43);
        boolean boolean45 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(type41);
        org.junit.Assert.assertNull(type42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test2233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2233");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean7 = typeCircularBuffer6.isFull();
        java.lang.reflect.Type type8 = typeCircularBuffer6.get();
        boolean boolean9 = typeCircularBuffer6.isEmpty();
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer6.getClass();
        boolean boolean11 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass10);
        boolean boolean12 = typeCircularBuffer1.isFull();
        boolean boolean13 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test2234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2234");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        java.lang.reflect.Type type11 = typeCircularBuffer1.get();
        java.lang.reflect.Type type12 = typeCircularBuffer1.get();
        boolean boolean13 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) 'a');
        boolean boolean16 = typeCircularBuffer15.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean21 = typeCircularBuffer20.isFull();
        boolean boolean22 = typeCircularBuffer20.isEmpty();
        java.lang.reflect.Type type23 = typeCircularBuffer20.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean28 = typeCircularBuffer27.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass31 = typeCircularBuffer30.getClass();
        boolean boolean32 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass31);
        java.lang.reflect.Type type33 = typeCircularBuffer27.get();
        boolean boolean34 = typeCircularBuffer25.put(type33);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer25.getClass();
        boolean boolean36 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass35);
        boolean boolean37 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass35);
        boolean boolean38 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass35);
        java.lang.reflect.Type type39 = typeCircularBuffer15.get();
        boolean boolean40 = typeCircularBuffer15.isEmpty();
        java.lang.reflect.Type type41 = typeCircularBuffer15.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer46.getClass();
        boolean boolean48 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass47);
        java.lang.reflect.Type type49 = null;
        boolean boolean50 = typeCircularBuffer43.put(type49);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer52 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer54 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean55 = typeCircularBuffer54.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer57 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass58 = typeCircularBuffer57.getClass();
        boolean boolean59 = typeCircularBuffer54.put((java.lang.reflect.Type) wildcardClass58);
        java.lang.reflect.Type type60 = typeCircularBuffer54.get();
        java.lang.Class<?> wildcardClass61 = typeCircularBuffer54.getClass();
        boolean boolean62 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass61);
        boolean boolean63 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass61);
        java.lang.reflect.Type type64 = typeCircularBuffer43.get();
        java.lang.reflect.Type type65 = typeCircularBuffer43.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer67 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer69 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean70 = typeCircularBuffer69.isFull();
        boolean boolean71 = typeCircularBuffer69.isEmpty();
        java.lang.reflect.Type type72 = typeCircularBuffer69.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer74 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer76 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean77 = typeCircularBuffer76.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer79 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass80 = typeCircularBuffer79.getClass();
        boolean boolean81 = typeCircularBuffer76.put((java.lang.reflect.Type) wildcardClass80);
        java.lang.reflect.Type type82 = typeCircularBuffer76.get();
        boolean boolean83 = typeCircularBuffer74.put(type82);
        java.lang.Class<?> wildcardClass84 = typeCircularBuffer74.getClass();
        boolean boolean85 = typeCircularBuffer69.put((java.lang.reflect.Type) wildcardClass84);
        boolean boolean86 = typeCircularBuffer67.put((java.lang.reflect.Type) wildcardClass84);
        java.lang.Class<?> wildcardClass87 = typeCircularBuffer67.getClass();
        boolean boolean88 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass87);
        boolean boolean89 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass87);
        boolean boolean90 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass87);
        boolean boolean91 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(type23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(type41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNull(type65);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNull(type72);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test2235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2235");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type9 = typeCircularBuffer8.get();
        boolean boolean10 = typeCircularBuffer8.isFull();
        boolean boolean11 = typeCircularBuffer8.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass16);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer13.getClass();
        boolean boolean19 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass18);
        java.lang.reflect.Type type20 = typeCircularBuffer8.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean25 = typeCircularBuffer24.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer27.getClass();
        boolean boolean29 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.reflect.Type type30 = typeCircularBuffer24.get();
        boolean boolean31 = typeCircularBuffer22.put(type30);
        boolean boolean32 = typeCircularBuffer8.put(type30);
        java.lang.reflect.Type type33 = null;
        boolean boolean34 = typeCircularBuffer8.put(type33);
        java.lang.reflect.Type type35 = typeCircularBuffer8.get();
        boolean boolean36 = typeCircularBuffer1.put(type35);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean41 = typeCircularBuffer40.isFull();
        java.lang.reflect.Type type42 = typeCircularBuffer40.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean45 = typeCircularBuffer44.isEmpty();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        boolean boolean48 = typeCircularBuffer44.put((java.lang.reflect.Type) wildcardClass47);
        java.lang.Class<?> wildcardClass49 = typeCircularBuffer44.getClass();
        boolean boolean50 = typeCircularBuffer40.put((java.lang.reflect.Type) wildcardClass49);
        boolean boolean51 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass49);
        java.lang.Class<?> wildcardClass52 = typeCircularBuffer38.getClass();
        boolean boolean53 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass52);
        java.lang.reflect.Type type54 = typeCircularBuffer1.get();
        boolean boolean55 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type56 = typeCircularBuffer1.get();
        boolean boolean57 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(type42);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(type54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(type56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
    }

    @Test
    public void test2236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2236");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean5 = typeCircularBuffer4.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass8 = typeCircularBuffer7.getClass();
        boolean boolean9 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass8);
        boolean boolean10 = typeCircularBuffer4.isFull();
        java.lang.reflect.Type type11 = typeCircularBuffer4.get();
        java.lang.Class<?> wildcardClass12 = typeCircularBuffer4.getClass();
        boolean boolean13 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass12);
        boolean boolean14 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type15 = typeCircularBuffer1.get();
        java.lang.reflect.Type type16 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNull(type16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test2237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2237");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean5 = typeCircularBuffer4.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass8 = typeCircularBuffer7.getClass();
        boolean boolean9 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass8);
        boolean boolean10 = typeCircularBuffer4.isFull();
        java.lang.reflect.Type type11 = typeCircularBuffer4.get();
        java.lang.Class<?> wildcardClass12 = typeCircularBuffer4.getClass();
        boolean boolean13 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass12);
        boolean boolean14 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type15 = typeCircularBuffer1.get();
        boolean boolean16 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test2238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2238");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type12 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        boolean boolean19 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass17);
        boolean boolean20 = typeCircularBuffer1.isEmpty();
        boolean boolean21 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type22 = typeCircularBuffer1.get();
        boolean boolean23 = typeCircularBuffer1.isFull();
        boolean boolean24 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type25 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass26 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(type25);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test2239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2239");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.Object> objCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.Object>((int) (short) 100);
        java.lang.Class<?> wildcardClass2 = objCircularBuffer1.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test2240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2240");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        boolean boolean6 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        boolean boolean8 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type11 = typeCircularBuffer10.get();
        boolean boolean12 = typeCircularBuffer10.isFull();
        boolean boolean13 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean16 = typeCircularBuffer15.isEmpty();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        boolean boolean19 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass18);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer15.getClass();
        boolean boolean21 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type22 = typeCircularBuffer10.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean27 = typeCircularBuffer26.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass30 = typeCircularBuffer29.getClass();
        boolean boolean31 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass30);
        java.lang.reflect.Type type32 = typeCircularBuffer26.get();
        boolean boolean33 = typeCircularBuffer24.put(type32);
        boolean boolean34 = typeCircularBuffer10.put(type32);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer10.getClass();
        boolean boolean36 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass35);
        boolean boolean37 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean40 = typeCircularBuffer39.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean43 = typeCircularBuffer42.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass46 = typeCircularBuffer45.getClass();
        boolean boolean47 = typeCircularBuffer42.put((java.lang.reflect.Type) wildcardClass46);
        boolean boolean48 = typeCircularBuffer42.isFull();
        java.lang.reflect.Type type49 = typeCircularBuffer42.get();
        java.lang.Class<?> wildcardClass50 = typeCircularBuffer42.getClass();
        boolean boolean51 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass50);
        boolean boolean52 = typeCircularBuffer39.isFull();
        java.lang.Class<?> wildcardClass53 = typeCircularBuffer39.getClass();
        boolean boolean54 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass53);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer56 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer58 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean59 = typeCircularBuffer58.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer61 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass62 = typeCircularBuffer61.getClass();
        boolean boolean63 = typeCircularBuffer58.put((java.lang.reflect.Type) wildcardClass62);
        java.lang.reflect.Type type64 = typeCircularBuffer58.get();
        boolean boolean65 = typeCircularBuffer56.put(type64);
        boolean boolean66 = typeCircularBuffer56.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer68 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean69 = typeCircularBuffer68.isEmpty();
        boolean boolean70 = typeCircularBuffer68.isFull();
        java.lang.reflect.Type type71 = typeCircularBuffer68.get();
        boolean boolean72 = typeCircularBuffer68.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer74 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean75 = typeCircularBuffer74.isFull();
        java.lang.Class<?> wildcardClass76 = typeCircularBuffer74.getClass();
        boolean boolean77 = typeCircularBuffer68.put((java.lang.reflect.Type) wildcardClass76);
        boolean boolean78 = typeCircularBuffer56.put((java.lang.reflect.Type) wildcardClass76);
        java.lang.reflect.Type type79 = typeCircularBuffer56.get();
        boolean boolean80 = typeCircularBuffer56.isEmpty();
        java.lang.Class<?> wildcardClass81 = typeCircularBuffer56.getClass();
        boolean boolean82 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass81);
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(type11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(type71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test2241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2241");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean24 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type27 = typeCircularBuffer26.get();
        boolean boolean28 = typeCircularBuffer26.isFull();
        boolean boolean29 = typeCircularBuffer26.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        boolean boolean35 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass34);
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer31.getClass();
        boolean boolean37 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass36);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean40 = typeCircularBuffer39.isEmpty();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        boolean boolean43 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass42);
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer39.getClass();
        boolean boolean45 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean46 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean47 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type48 = typeCircularBuffer1.get();
        java.lang.reflect.Type type49 = typeCircularBuffer1.get();
        java.lang.reflect.Type type50 = typeCircularBuffer1.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass51 = type50.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNull(type49);
        org.junit.Assert.assertNull(type50);
    }

    @Test
    public void test2242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2242");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean8 = typeCircularBuffer7.isFull();
        boolean boolean9 = typeCircularBuffer7.isEmpty();
        boolean boolean10 = typeCircularBuffer7.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean13 = typeCircularBuffer12.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass16 = typeCircularBuffer15.getClass();
        boolean boolean17 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass16);
        java.lang.reflect.Type type18 = typeCircularBuffer12.get();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        boolean boolean21 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean22 = typeCircularBuffer7.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean23 = typeCircularBuffer7.isFull();
        java.lang.reflect.Type type24 = typeCircularBuffer7.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean27 = typeCircularBuffer26.isFull();
        boolean boolean28 = typeCircularBuffer26.isEmpty();
        boolean boolean29 = typeCircularBuffer26.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer34.getClass();
        boolean boolean36 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass35);
        java.lang.reflect.Type type37 = typeCircularBuffer31.get();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        boolean boolean40 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass39);
        boolean boolean41 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass39);
        boolean boolean42 = typeCircularBuffer26.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean47 = typeCircularBuffer46.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer49 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass50 = typeCircularBuffer49.getClass();
        boolean boolean51 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass50);
        java.lang.reflect.Type type52 = typeCircularBuffer46.get();
        boolean boolean53 = typeCircularBuffer44.put(type52);
        boolean boolean54 = typeCircularBuffer44.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer56 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean57 = typeCircularBuffer56.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer59 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass60 = typeCircularBuffer59.getClass();
        boolean boolean61 = typeCircularBuffer56.put((java.lang.reflect.Type) wildcardClass60);
        java.lang.reflect.Type type62 = typeCircularBuffer56.get();
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        boolean boolean65 = typeCircularBuffer56.put((java.lang.reflect.Type) wildcardClass64);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer67 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean68 = typeCircularBuffer67.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer70 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass71 = typeCircularBuffer70.getClass();
        boolean boolean72 = typeCircularBuffer67.put((java.lang.reflect.Type) wildcardClass71);
        java.lang.Class<?> wildcardClass73 = typeCircularBuffer67.getClass();
        boolean boolean74 = typeCircularBuffer56.put((java.lang.reflect.Type) wildcardClass73);
        boolean boolean75 = typeCircularBuffer44.put((java.lang.reflect.Type) wildcardClass73);
        boolean boolean76 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass73);
        boolean boolean77 = typeCircularBuffer7.put((java.lang.reflect.Type) wildcardClass73);
        boolean boolean78 = typeCircularBuffer7.isFull();
        boolean boolean79 = typeCircularBuffer7.isFull();
        java.lang.reflect.Type type80 = typeCircularBuffer7.get();
        boolean boolean81 = typeCircularBuffer1.put(type80);
        java.lang.Class<?> wildcardClass82 = type80.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test2243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2243");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.GenericDeclaration> genericDeclarationCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.GenericDeclaration>((int) (byte) 100);
    }

    @Test
    public void test2244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2244");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean24 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type25 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean28 = typeCircularBuffer27.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass31 = typeCircularBuffer30.getClass();
        boolean boolean32 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass31);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean37 = typeCircularBuffer36.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass40 = typeCircularBuffer39.getClass();
        boolean boolean41 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass40);
        java.lang.reflect.Type type42 = typeCircularBuffer36.get();
        boolean boolean43 = typeCircularBuffer34.put(type42);
        boolean boolean44 = typeCircularBuffer34.isFull();
        java.lang.reflect.Type type45 = typeCircularBuffer34.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean48 = typeCircularBuffer47.isEmpty();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        boolean boolean51 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass50);
        boolean boolean52 = typeCircularBuffer34.put((java.lang.reflect.Type) wildcardClass50);
        boolean boolean53 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass50);
        boolean boolean54 = typeCircularBuffer27.isFull();
        boolean boolean55 = typeCircularBuffer27.isFull();
        java.lang.Class<?> wildcardClass56 = typeCircularBuffer27.getClass();
        boolean boolean57 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass56);
        boolean boolean58 = typeCircularBuffer1.isEmpty();
        boolean boolean59 = typeCircularBuffer1.isFull();
        boolean boolean60 = typeCircularBuffer1.isEmpty();
        boolean boolean61 = typeCircularBuffer1.isEmpty();
        boolean boolean62 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test2245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2245");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test2246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2246");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        boolean boolean8 = typeCircularBuffer1.isEmpty();
        boolean boolean9 = typeCircularBuffer1.isEmpty();
        boolean boolean10 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean13 = typeCircularBuffer12.isFull();
        java.lang.reflect.Type type14 = typeCircularBuffer12.get();
        boolean boolean15 = typeCircularBuffer12.isFull();
        java.lang.reflect.Type type16 = typeCircularBuffer12.get();
        boolean boolean17 = typeCircularBuffer12.isFull();
        boolean boolean18 = typeCircularBuffer12.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean21 = typeCircularBuffer20.isFull();
        boolean boolean22 = typeCircularBuffer20.isEmpty();
        java.lang.reflect.Type type23 = typeCircularBuffer20.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean28 = typeCircularBuffer27.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass31 = typeCircularBuffer30.getClass();
        boolean boolean32 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass31);
        java.lang.reflect.Type type33 = typeCircularBuffer27.get();
        boolean boolean34 = typeCircularBuffer25.put(type33);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer25.getClass();
        boolean boolean36 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass35);
        boolean boolean37 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass35);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) ' ');
        java.lang.Class<?> wildcardClass40 = typeCircularBuffer39.getClass();
        boolean boolean41 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass40);
        java.lang.Class<?> wildcardClass42 = typeCircularBuffer12.getClass();
        boolean boolean43 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass42);
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(type14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(type23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test2247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2247");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type10 = typeCircularBuffer9.get();
        boolean boolean11 = typeCircularBuffer9.isFull();
        boolean boolean12 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer14.getClass();
        boolean boolean20 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass19);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        boolean boolean26 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer22.getClass();
        boolean boolean28 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean30 = typeCircularBuffer1.isFull();
        boolean boolean31 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test2248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2248");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        boolean boolean8 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean12 = typeCircularBuffer11.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass15 = typeCircularBuffer14.getClass();
        boolean boolean16 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass15);
        java.lang.reflect.Type type17 = typeCircularBuffer11.get();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        boolean boolean20 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass19);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass26 = typeCircularBuffer25.getClass();
        boolean boolean27 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass26);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer22.getClass();
        boolean boolean29 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass28);
        boolean boolean30 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.reflect.Type type31 = typeCircularBuffer1.get();
        java.lang.reflect.Type type32 = typeCircularBuffer1.get();
        boolean boolean33 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNull(type32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    }

    @Test
    public void test2249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2249");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test2250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2250");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer6.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer14.getClass();
        boolean boolean20 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass19);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean25 = typeCircularBuffer24.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer27.getClass();
        boolean boolean29 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.reflect.Type type30 = typeCircularBuffer24.get();
        boolean boolean31 = typeCircularBuffer22.put(type30);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer22.getClass();
        boolean boolean33 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type37 = typeCircularBuffer36.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean42 = typeCircularBuffer41.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass45 = typeCircularBuffer44.getClass();
        boolean boolean46 = typeCircularBuffer41.put((java.lang.reflect.Type) wildcardClass45);
        java.lang.reflect.Type type47 = typeCircularBuffer41.get();
        boolean boolean48 = typeCircularBuffer39.put(type47);
        boolean boolean49 = typeCircularBuffer39.isFull();
        java.lang.reflect.Type type50 = typeCircularBuffer39.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer52 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean53 = typeCircularBuffer52.isEmpty();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        boolean boolean56 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass55);
        boolean boolean57 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass55);
        boolean boolean58 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass55);
        java.lang.reflect.Type type59 = typeCircularBuffer36.get();
        boolean boolean60 = typeCircularBuffer36.isEmpty();
        java.lang.reflect.Type type61 = typeCircularBuffer36.get();
        java.lang.Class<?> wildcardClass62 = typeCircularBuffer36.getClass();
        boolean boolean63 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass62);
        boolean boolean64 = typeCircularBuffer1.isFull();
        boolean boolean65 = typeCircularBuffer1.isFull();
        boolean boolean66 = typeCircularBuffer1.isEmpty();
        boolean boolean67 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(type37);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(type61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test2251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2251");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        boolean boolean6 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean9 = typeCircularBuffer8.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        boolean boolean20 = typeCircularBuffer11.put(type19);
        boolean boolean21 = typeCircularBuffer11.isFull();
        java.lang.reflect.Type type22 = typeCircularBuffer11.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type25 = typeCircularBuffer24.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean28 = typeCircularBuffer27.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass31 = typeCircularBuffer30.getClass();
        boolean boolean32 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass31);
        java.lang.reflect.Type type33 = typeCircularBuffer27.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type36 = typeCircularBuffer35.get();
        boolean boolean37 = typeCircularBuffer35.isFull();
        boolean boolean38 = typeCircularBuffer35.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean41 = typeCircularBuffer40.isEmpty();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        boolean boolean44 = typeCircularBuffer40.put((java.lang.reflect.Type) wildcardClass43);
        java.lang.Class<?> wildcardClass45 = typeCircularBuffer40.getClass();
        boolean boolean46 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass45);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean49 = typeCircularBuffer48.isEmpty();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        boolean boolean52 = typeCircularBuffer48.put((java.lang.reflect.Type) wildcardClass51);
        java.lang.Class<?> wildcardClass53 = typeCircularBuffer48.getClass();
        boolean boolean54 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass53);
        boolean boolean55 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass53);
        boolean boolean56 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass53);
        boolean boolean57 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass53);
        boolean boolean58 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass53);
        boolean boolean59 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass53);
        java.lang.reflect.Type type60 = typeCircularBuffer1.get();
        boolean boolean61 = typeCircularBuffer1.isFull();
        boolean boolean62 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type63 = typeCircularBuffer1.get();
        boolean boolean64 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNull(type25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNull(type36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNull(type63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
    }

    @Test
    public void test2252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2252");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type10 = typeCircularBuffer9.get();
        boolean boolean11 = typeCircularBuffer9.isFull();
        boolean boolean12 = typeCircularBuffer9.isFull();
        boolean boolean13 = typeCircularBuffer9.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer20.getClass();
        boolean boolean22 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type23 = typeCircularBuffer17.get();
        boolean boolean24 = typeCircularBuffer15.put(type23);
        boolean boolean25 = typeCircularBuffer15.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean28 = typeCircularBuffer27.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass31 = typeCircularBuffer30.getClass();
        boolean boolean32 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass31);
        java.lang.reflect.Type type33 = typeCircularBuffer27.get();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        boolean boolean36 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass35);
        boolean boolean37 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass35);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean40 = typeCircularBuffer39.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass43 = typeCircularBuffer42.getClass();
        boolean boolean44 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass43);
        java.lang.reflect.Type type45 = typeCircularBuffer39.get();
        boolean boolean46 = typeCircularBuffer15.put(type45);
        java.lang.reflect.Type type47 = typeCircularBuffer15.get();
        boolean boolean48 = typeCircularBuffer9.put(type47);
        boolean boolean49 = typeCircularBuffer1.put(type47);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.invoke.TypeDescriptor> typeDescriptorCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.invoke.TypeDescriptor>(10);
        java.lang.Class<?> wildcardClass52 = typeDescriptorCircularBuffer51.getClass();
        boolean boolean53 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass52);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer55 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean56 = typeCircularBuffer55.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer58 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass59 = typeCircularBuffer58.getClass();
        boolean boolean60 = typeCircularBuffer55.put((java.lang.reflect.Type) wildcardClass59);
        boolean boolean61 = typeCircularBuffer55.isFull();
        boolean boolean62 = typeCircularBuffer55.isFull();
        boolean boolean63 = typeCircularBuffer55.isFull();
        java.lang.Class<?> wildcardClass64 = typeCircularBuffer55.getClass();
        boolean boolean65 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass64);
        java.lang.reflect.Type type66 = typeCircularBuffer1.get();
        boolean boolean67 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test2253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2253");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isEmpty();
        boolean boolean12 = typeCircularBuffer1.isFull();
        boolean boolean13 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer20.getClass();
        boolean boolean22 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type23 = typeCircularBuffer17.get();
        boolean boolean24 = typeCircularBuffer15.put(type23);
        boolean boolean25 = typeCircularBuffer15.isFull();
        java.lang.reflect.Type type26 = typeCircularBuffer15.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer31.getClass();
        boolean boolean33 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer28.isFull();
        java.lang.reflect.Type type35 = typeCircularBuffer28.get();
        boolean boolean36 = typeCircularBuffer15.put(type35);
        boolean boolean37 = typeCircularBuffer1.put(type35);
        boolean boolean38 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type39 = typeCircularBuffer1.get();
        boolean boolean40 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type41 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(type41);
    }

    @Test
    public void test2254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2254");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type12 = typeCircularBuffer1.get();
        boolean boolean13 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type14 = typeCircularBuffer1.get();
        java.lang.reflect.Type type15 = typeCircularBuffer1.get();
        boolean boolean16 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type17 = typeCircularBuffer1.get();
        boolean boolean18 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(type14);
        org.junit.Assert.assertNull(type15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(type17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test2255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2255");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type12 = typeCircularBuffer1.get();
        boolean boolean13 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type14 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        boolean boolean18 = typeCircularBuffer16.isFull();
        java.lang.reflect.Type type19 = typeCircularBuffer16.get();
        boolean boolean20 = typeCircularBuffer16.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean25 = typeCircularBuffer24.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer27.getClass();
        boolean boolean29 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.reflect.Type type30 = typeCircularBuffer24.get();
        boolean boolean31 = typeCircularBuffer22.put(type30);
        boolean boolean32 = typeCircularBuffer22.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean35 = typeCircularBuffer34.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass38 = typeCircularBuffer37.getClass();
        boolean boolean39 = typeCircularBuffer34.put((java.lang.reflect.Type) wildcardClass38);
        java.lang.reflect.Type type40 = typeCircularBuffer34.get();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        boolean boolean43 = typeCircularBuffer34.put((java.lang.reflect.Type) wildcardClass42);
        boolean boolean44 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass42);
        boolean boolean45 = typeCircularBuffer22.isEmpty();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        boolean boolean48 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass47);
        boolean boolean49 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass47);
        boolean boolean50 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass47);
        java.lang.reflect.Type type51 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer53 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer55 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type56 = typeCircularBuffer55.get();
        boolean boolean57 = typeCircularBuffer55.isFull();
        boolean boolean58 = typeCircularBuffer55.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer60 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean61 = typeCircularBuffer60.isEmpty();
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        boolean boolean64 = typeCircularBuffer60.put((java.lang.reflect.Type) wildcardClass63);
        java.lang.Class<?> wildcardClass65 = typeCircularBuffer60.getClass();
        boolean boolean66 = typeCircularBuffer55.put((java.lang.reflect.Type) wildcardClass65);
        boolean boolean67 = typeCircularBuffer55.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer69 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean70 = typeCircularBuffer69.isFull();
        boolean boolean71 = typeCircularBuffer69.isEmpty();
        java.lang.reflect.Type type72 = typeCircularBuffer69.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer74 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer76 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean77 = typeCircularBuffer76.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer79 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass80 = typeCircularBuffer79.getClass();
        boolean boolean81 = typeCircularBuffer76.put((java.lang.reflect.Type) wildcardClass80);
        java.lang.reflect.Type type82 = typeCircularBuffer76.get();
        boolean boolean83 = typeCircularBuffer74.put(type82);
        java.lang.Class<?> wildcardClass84 = typeCircularBuffer74.getClass();
        boolean boolean85 = typeCircularBuffer69.put((java.lang.reflect.Type) wildcardClass84);
        boolean boolean86 = typeCircularBuffer55.put((java.lang.reflect.Type) wildcardClass84);
        boolean boolean87 = typeCircularBuffer53.put((java.lang.reflect.Type) wildcardClass84);
        boolean boolean88 = typeCircularBuffer53.isFull();
        boolean boolean89 = typeCircularBuffer53.isEmpty();
        boolean boolean90 = typeCircularBuffer53.isFull();
        boolean boolean91 = typeCircularBuffer53.isEmpty();
        java.lang.reflect.Type type92 = typeCircularBuffer53.get();
        boolean boolean93 = typeCircularBuffer53.isFull();
        java.lang.Class<?> wildcardClass94 = typeCircularBuffer53.getClass();
        boolean boolean95 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass94);
        java.lang.Class<?> wildcardClass96 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(type14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(type19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNull(type56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNull(type72);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNull(type92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test2256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2256");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass10);
        java.lang.reflect.Type type13 = typeCircularBuffer1.get();
        boolean boolean14 = typeCircularBuffer1.isFull();
        boolean boolean15 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test2257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2257");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) ' ');
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean5 = typeCircularBuffer4.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass8 = typeCircularBuffer7.getClass();
        boolean boolean9 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass8);
        java.lang.reflect.Type type10 = typeCircularBuffer4.get();
        java.lang.Object obj11 = new java.lang.Object();
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        boolean boolean13 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass12);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean16 = typeCircularBuffer15.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer18.getClass();
        boolean boolean20 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass19);
        java.lang.reflect.Type type21 = typeCircularBuffer15.get();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        boolean boolean24 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass23);
        java.lang.reflect.Type type25 = typeCircularBuffer15.get();
        boolean boolean26 = typeCircularBuffer4.put(type25);
        boolean boolean27 = typeCircularBuffer1.put(type25);
        boolean boolean28 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass29 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test2258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2258");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type12 = typeCircularBuffer1.get();
        boolean boolean13 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type14 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        boolean boolean18 = typeCircularBuffer16.isFull();
        java.lang.reflect.Type type19 = typeCircularBuffer16.get();
        boolean boolean20 = typeCircularBuffer16.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean25 = typeCircularBuffer24.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer27.getClass();
        boolean boolean29 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.reflect.Type type30 = typeCircularBuffer24.get();
        boolean boolean31 = typeCircularBuffer22.put(type30);
        boolean boolean32 = typeCircularBuffer22.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean35 = typeCircularBuffer34.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass38 = typeCircularBuffer37.getClass();
        boolean boolean39 = typeCircularBuffer34.put((java.lang.reflect.Type) wildcardClass38);
        java.lang.reflect.Type type40 = typeCircularBuffer34.get();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        boolean boolean43 = typeCircularBuffer34.put((java.lang.reflect.Type) wildcardClass42);
        boolean boolean44 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass42);
        boolean boolean45 = typeCircularBuffer22.isEmpty();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        boolean boolean48 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass47);
        boolean boolean49 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass47);
        boolean boolean50 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass47);
        java.lang.reflect.Type type51 = typeCircularBuffer1.get();
        boolean boolean52 = typeCircularBuffer1.isFull();
        boolean boolean53 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(type14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(type19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
    }

    @Test
    public void test2259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2259");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass10);
        boolean boolean13 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type14 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(type14);
    }

    @Test
    public void test2260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2260");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '#');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer5 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean6 = typeCircularBuffer5.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass9 = typeCircularBuffer8.getClass();
        boolean boolean10 = typeCircularBuffer5.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.reflect.Type type11 = typeCircularBuffer5.get();
        boolean boolean12 = typeCircularBuffer3.put(type11);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer19.getClass();
        boolean boolean21 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type22 = typeCircularBuffer16.get();
        boolean boolean23 = typeCircularBuffer14.put(type22);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer14.getClass();
        boolean boolean25 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean26 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean27 = typeCircularBuffer1.isEmpty();
        boolean boolean28 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type29 = typeCircularBuffer1.get();
        boolean boolean30 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type33 = typeCircularBuffer32.get();
        boolean boolean34 = typeCircularBuffer32.isFull();
        boolean boolean35 = typeCircularBuffer32.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean38 = typeCircularBuffer37.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass41 = typeCircularBuffer40.getClass();
        boolean boolean42 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean43 = typeCircularBuffer32.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean44 = typeCircularBuffer32.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean49 = typeCircularBuffer48.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass52 = typeCircularBuffer51.getClass();
        boolean boolean53 = typeCircularBuffer48.put((java.lang.reflect.Type) wildcardClass52);
        java.lang.reflect.Type type54 = typeCircularBuffer48.get();
        boolean boolean55 = typeCircularBuffer46.put(type54);
        boolean boolean56 = typeCircularBuffer46.isFull();
        java.lang.reflect.Type type57 = typeCircularBuffer46.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer59 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean60 = typeCircularBuffer59.isEmpty();
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        boolean boolean63 = typeCircularBuffer59.put((java.lang.reflect.Type) wildcardClass62);
        boolean boolean64 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass62);
        java.lang.reflect.Type type65 = typeCircularBuffer46.get();
        boolean boolean66 = typeCircularBuffer32.put(type65);
        java.lang.reflect.Type type67 = typeCircularBuffer32.get();
        java.lang.reflect.Type type68 = typeCircularBuffer32.get();
        java.lang.Class<?> wildcardClass69 = typeCircularBuffer32.getClass();
        boolean boolean70 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass69);
        boolean boolean71 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type72 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(type33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(type67);
        org.junit.Assert.assertNull(type68);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(type72);
    }

    @Test
    public void test2261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2261");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) 'a');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass4 = typeCircularBuffer3.getClass();
        boolean boolean5 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass4);
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test2262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2262");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean24 = typeCircularBuffer1.isEmpty();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        boolean boolean27 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass26);
        java.lang.reflect.Type type28 = typeCircularBuffer1.get();
        boolean boolean29 = typeCircularBuffer1.isEmpty();
        boolean boolean30 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type31 = typeCircularBuffer1.get();
        boolean boolean32 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type35 = typeCircularBuffer34.get();
        boolean boolean36 = typeCircularBuffer34.isFull();
        boolean boolean37 = typeCircularBuffer34.isFull();
        boolean boolean38 = typeCircularBuffer34.isEmpty();
        java.lang.reflect.Type type39 = typeCircularBuffer34.get();
        boolean boolean40 = typeCircularBuffer34.isEmpty();
        boolean boolean41 = typeCircularBuffer34.isFull();
        java.lang.reflect.Type type42 = typeCircularBuffer34.get();
        java.lang.reflect.Type type43 = typeCircularBuffer34.get();
        boolean boolean44 = typeCircularBuffer34.isFull();
        java.lang.Class<?> wildcardClass45 = typeCircularBuffer34.getClass();
        boolean boolean46 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(type31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(type35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(type39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(type42);
        org.junit.Assert.assertNull(type43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
    }

    @Test
    public void test2263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2263");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) 'a');
        java.lang.Class<?> wildcardClass8 = typeCircularBuffer7.getClass();
        boolean boolean9 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass8);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test2264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2264");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer6.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.reflect.Type type13 = typeCircularBuffer1.get();
        boolean boolean14 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer19.getClass();
        boolean boolean21 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean22 = typeCircularBuffer16.isEmpty();
        java.lang.reflect.Type type23 = typeCircularBuffer16.get();
        boolean boolean24 = typeCircularBuffer1.put(type23);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type27 = typeCircularBuffer26.get();
        boolean boolean28 = typeCircularBuffer26.isFull();
        boolean boolean29 = typeCircularBuffer26.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        boolean boolean35 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass34);
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer31.getClass();
        boolean boolean37 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass36);
        java.lang.reflect.Type type38 = typeCircularBuffer26.get();
        boolean boolean39 = typeCircularBuffer26.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type42 = typeCircularBuffer41.get();
        boolean boolean43 = typeCircularBuffer41.isFull();
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer41.getClass();
        boolean boolean45 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean46 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean47 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer49 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean50 = typeCircularBuffer49.isEmpty();
        java.lang.reflect.Type type51 = typeCircularBuffer49.get();
        java.lang.reflect.Type type52 = typeCircularBuffer49.get();
        java.lang.reflect.Type type53 = typeCircularBuffer49.get();
        boolean boolean54 = typeCircularBuffer49.isFull();
        boolean boolean55 = typeCircularBuffer49.isFull();
        java.lang.reflect.Type type56 = typeCircularBuffer49.get();
        java.lang.reflect.Type type57 = typeCircularBuffer49.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer59 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean60 = typeCircularBuffer59.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer62 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass63 = typeCircularBuffer62.getClass();
        boolean boolean64 = typeCircularBuffer59.put((java.lang.reflect.Type) wildcardClass63);
        java.lang.reflect.Type type65 = typeCircularBuffer59.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer67 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type68 = typeCircularBuffer67.get();
        boolean boolean69 = typeCircularBuffer67.isFull();
        boolean boolean70 = typeCircularBuffer67.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer72 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean73 = typeCircularBuffer72.isEmpty();
        java.lang.Object obj74 = new java.lang.Object();
        java.lang.Class<?> wildcardClass75 = obj74.getClass();
        boolean boolean76 = typeCircularBuffer72.put((java.lang.reflect.Type) wildcardClass75);
        java.lang.Class<?> wildcardClass77 = typeCircularBuffer72.getClass();
        boolean boolean78 = typeCircularBuffer67.put((java.lang.reflect.Type) wildcardClass77);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer80 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean81 = typeCircularBuffer80.isEmpty();
        java.lang.Object obj82 = new java.lang.Object();
        java.lang.Class<?> wildcardClass83 = obj82.getClass();
        boolean boolean84 = typeCircularBuffer80.put((java.lang.reflect.Type) wildcardClass83);
        java.lang.Class<?> wildcardClass85 = typeCircularBuffer80.getClass();
        boolean boolean86 = typeCircularBuffer67.put((java.lang.reflect.Type) wildcardClass85);
        boolean boolean87 = typeCircularBuffer59.put((java.lang.reflect.Type) wildcardClass85);
        java.lang.reflect.Type type88 = typeCircularBuffer59.get();
        boolean boolean89 = typeCircularBuffer49.put(type88);
        boolean boolean90 = typeCircularBuffer1.put(type88);
        boolean boolean91 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type92 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(type42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(type51);
        org.junit.Assert.assertNull(type52);
        org.junit.Assert.assertNull(type53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(type56);
        org.junit.Assert.assertNull(type57);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNull(type68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(type88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(type92);
    }

    @Test
    public void test2265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2265");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        boolean boolean7 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean19 = typeCircularBuffer18.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer21.getClass();
        boolean boolean23 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass22);
        java.lang.reflect.Type type24 = typeCircularBuffer18.get();
        boolean boolean25 = typeCircularBuffer16.put(type24);
        boolean boolean26 = typeCircularBuffer16.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer31.getClass();
        boolean boolean33 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass32);
        java.lang.reflect.Type type34 = typeCircularBuffer28.get();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        boolean boolean37 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean38 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean39 = typeCircularBuffer16.isEmpty();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        boolean boolean42 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean43 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean44 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass41);
        java.lang.reflect.Type type45 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean48 = typeCircularBuffer47.isEmpty();
        java.lang.reflect.Type type49 = typeCircularBuffer47.get();
        java.lang.reflect.Type type50 = typeCircularBuffer47.get();
        java.lang.reflect.Type type51 = typeCircularBuffer47.get();
        boolean boolean52 = typeCircularBuffer47.isFull();
        boolean boolean53 = typeCircularBuffer47.isFull();
        java.lang.reflect.Type type54 = typeCircularBuffer47.get();
        boolean boolean55 = typeCircularBuffer47.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer57 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer59 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean60 = typeCircularBuffer59.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer62 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass63 = typeCircularBuffer62.getClass();
        boolean boolean64 = typeCircularBuffer59.put((java.lang.reflect.Type) wildcardClass63);
        java.lang.reflect.Type type65 = typeCircularBuffer59.get();
        java.lang.Class<?> wildcardClass66 = typeCircularBuffer59.getClass();
        boolean boolean67 = typeCircularBuffer57.put((java.lang.reflect.Type) wildcardClass66);
        boolean boolean68 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass66);
        boolean boolean69 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass66);
        java.lang.reflect.Type type70 = typeCircularBuffer1.get();
        java.lang.reflect.Type type71 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer73 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        boolean boolean74 = typeCircularBuffer73.isEmpty();
        boolean boolean75 = typeCircularBuffer73.isEmpty();
        boolean boolean76 = typeCircularBuffer73.isFull();
        java.lang.reflect.Type type77 = typeCircularBuffer73.get();
        boolean boolean78 = typeCircularBuffer73.isFull();
        boolean boolean79 = typeCircularBuffer73.isFull();
        java.lang.Class<?> wildcardClass80 = typeCircularBuffer73.getClass();
        boolean boolean81 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass80);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(type49);
        org.junit.Assert.assertNull(type50);
        org.junit.Assert.assertNull(type51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(type54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNull(type71);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNull(type77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
    }

    @Test
    public void test2266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2266");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass10);
        java.lang.reflect.Type type13 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer20.getClass();
        boolean boolean22 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type23 = typeCircularBuffer17.get();
        boolean boolean24 = typeCircularBuffer15.put(type23);
        boolean boolean25 = typeCircularBuffer15.isFull();
        java.lang.reflect.Type type26 = typeCircularBuffer15.get();
        boolean boolean27 = typeCircularBuffer15.isEmpty();
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer15.getClass();
        boolean boolean29 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass28);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        boolean boolean33 = typeCircularBuffer31.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean36 = typeCircularBuffer35.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass39 = typeCircularBuffer38.getClass();
        boolean boolean40 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass39);
        java.lang.reflect.Type type41 = typeCircularBuffer35.get();
        boolean boolean42 = typeCircularBuffer31.put(type41);
        boolean boolean43 = typeCircularBuffer31.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean46 = typeCircularBuffer45.isFull();
        boolean boolean47 = typeCircularBuffer45.isEmpty();
        boolean boolean48 = typeCircularBuffer45.isFull();
        java.lang.reflect.Type type49 = null;
        boolean boolean50 = typeCircularBuffer45.put(type49);
        boolean boolean51 = typeCircularBuffer45.isFull();
        java.lang.Class<?> wildcardClass52 = typeCircularBuffer45.getClass();
        boolean boolean53 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass52);
        boolean boolean54 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test2267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2267");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type4 = typeCircularBuffer3.get();
        boolean boolean5 = typeCircularBuffer3.isFull();
        boolean boolean6 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean9 = typeCircularBuffer8.isEmpty();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer8.getClass();
        boolean boolean14 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass13);
        boolean boolean15 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean18 = typeCircularBuffer17.isFull();
        boolean boolean19 = typeCircularBuffer17.isEmpty();
        java.lang.reflect.Type type20 = typeCircularBuffer17.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean25 = typeCircularBuffer24.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer27.getClass();
        boolean boolean29 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.reflect.Type type30 = typeCircularBuffer24.get();
        boolean boolean31 = typeCircularBuffer22.put(type30);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer22.getClass();
        boolean boolean33 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean35 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean36 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean41 = typeCircularBuffer40.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer43.getClass();
        boolean boolean45 = typeCircularBuffer40.put((java.lang.reflect.Type) wildcardClass44);
        java.lang.reflect.Type type46 = typeCircularBuffer40.get();
        boolean boolean47 = typeCircularBuffer38.put(type46);
        boolean boolean48 = typeCircularBuffer38.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean51 = typeCircularBuffer50.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer53 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass54 = typeCircularBuffer53.getClass();
        boolean boolean55 = typeCircularBuffer50.put((java.lang.reflect.Type) wildcardClass54);
        java.lang.reflect.Type type56 = typeCircularBuffer50.get();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        boolean boolean59 = typeCircularBuffer50.put((java.lang.reflect.Type) wildcardClass58);
        boolean boolean60 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass58);
        boolean boolean61 = typeCircularBuffer38.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer63 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type64 = typeCircularBuffer63.get();
        boolean boolean65 = typeCircularBuffer63.isFull();
        boolean boolean66 = typeCircularBuffer63.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer68 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean69 = typeCircularBuffer68.isEmpty();
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        boolean boolean72 = typeCircularBuffer68.put((java.lang.reflect.Type) wildcardClass71);
        java.lang.Class<?> wildcardClass73 = typeCircularBuffer68.getClass();
        boolean boolean74 = typeCircularBuffer63.put((java.lang.reflect.Type) wildcardClass73);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer76 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean77 = typeCircularBuffer76.isEmpty();
        java.lang.Object obj78 = new java.lang.Object();
        java.lang.Class<?> wildcardClass79 = obj78.getClass();
        boolean boolean80 = typeCircularBuffer76.put((java.lang.reflect.Type) wildcardClass79);
        java.lang.Class<?> wildcardClass81 = typeCircularBuffer76.getClass();
        boolean boolean82 = typeCircularBuffer63.put((java.lang.reflect.Type) wildcardClass81);
        boolean boolean83 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass81);
        java.lang.reflect.Type type84 = typeCircularBuffer38.get();
        java.lang.Class<?> wildcardClass85 = typeCircularBuffer38.getClass();
        boolean boolean86 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass85);
        boolean boolean87 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(type20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(type64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(type84);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
    }

    @Test
    public void test2268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2268");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer5 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean6 = typeCircularBuffer5.isEmpty();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = typeCircularBuffer5.put((java.lang.reflect.Type) wildcardClass8);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer5.getClass();
        boolean boolean11 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass10);
        boolean boolean12 = typeCircularBuffer1.isEmpty();
        boolean boolean13 = typeCircularBuffer1.isFull();
        boolean boolean14 = typeCircularBuffer1.isFull();
        boolean boolean15 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test2269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2269");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        boolean boolean7 = typeCircularBuffer1.isFull();
        boolean boolean8 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        boolean boolean10 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test2270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2270");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer5 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean6 = typeCircularBuffer5.isEmpty();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = typeCircularBuffer5.put((java.lang.reflect.Type) wildcardClass8);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer5.getClass();
        boolean boolean11 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass10);
        boolean boolean12 = typeCircularBuffer1.isEmpty();
        boolean boolean13 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type14 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) ' ');
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean20 = typeCircularBuffer19.isEmpty();
        java.lang.reflect.Type type21 = typeCircularBuffer19.get();
        java.lang.reflect.Type type22 = typeCircularBuffer19.get();
        java.lang.reflect.Type type23 = typeCircularBuffer19.get();
        boolean boolean24 = typeCircularBuffer19.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean27 = typeCircularBuffer26.isFull();
        java.lang.reflect.Type type28 = typeCircularBuffer26.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean31 = typeCircularBuffer30.isEmpty();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        boolean boolean34 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass33);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer30.getClass();
        boolean boolean36 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass35);
        boolean boolean37 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass35);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type42 = typeCircularBuffer41.get();
        boolean boolean43 = typeCircularBuffer41.isFull();
        boolean boolean44 = typeCircularBuffer41.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean47 = typeCircularBuffer46.isEmpty();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        boolean boolean50 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass49);
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer46.getClass();
        boolean boolean52 = typeCircularBuffer41.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean53 = typeCircularBuffer41.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer55 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean56 = typeCircularBuffer55.isFull();
        boolean boolean57 = typeCircularBuffer55.isEmpty();
        java.lang.reflect.Type type58 = typeCircularBuffer55.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer60 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer62 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean63 = typeCircularBuffer62.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer65 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass66 = typeCircularBuffer65.getClass();
        boolean boolean67 = typeCircularBuffer62.put((java.lang.reflect.Type) wildcardClass66);
        java.lang.reflect.Type type68 = typeCircularBuffer62.get();
        boolean boolean69 = typeCircularBuffer60.put(type68);
        java.lang.Class<?> wildcardClass70 = typeCircularBuffer60.getClass();
        boolean boolean71 = typeCircularBuffer55.put((java.lang.reflect.Type) wildcardClass70);
        boolean boolean72 = typeCircularBuffer41.put((java.lang.reflect.Type) wildcardClass70);
        boolean boolean73 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass70);
        boolean boolean74 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass70);
        java.lang.Class<?> wildcardClass75 = typeCircularBuffer19.getClass();
        boolean boolean76 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass75);
        boolean boolean77 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass75);
        boolean boolean78 = typeCircularBuffer1.isEmpty();
        boolean boolean79 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(type21);
        org.junit.Assert.assertNull(type22);
        org.junit.Assert.assertNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(type28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(type42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(type58);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test2271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2271");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        boolean boolean9 = typeCircularBuffer1.isEmpty();
        boolean boolean10 = typeCircularBuffer1.isFull();
        boolean boolean11 = typeCircularBuffer1.isFull();
        boolean boolean12 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        java.lang.reflect.Type type15 = typeCircularBuffer14.get();
        boolean boolean16 = typeCircularBuffer14.isFull();
        java.lang.reflect.Type type17 = typeCircularBuffer14.get();
        java.lang.reflect.Type type18 = typeCircularBuffer14.get();
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer14.getClass();
        boolean boolean20 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(type15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(type17);
        org.junit.Assert.assertNull(type18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test2272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2272");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer6.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean15 = typeCircularBuffer14.isFull();
        java.lang.reflect.Type type16 = typeCircularBuffer14.get();
        boolean boolean17 = typeCircularBuffer14.isEmpty();
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer14.getClass();
        boolean boolean19 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass18);
        boolean boolean20 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type23 = typeCircularBuffer22.get();
        boolean boolean24 = typeCircularBuffer22.isFull();
        boolean boolean25 = typeCircularBuffer22.isFull();
        boolean boolean26 = typeCircularBuffer22.isFull();
        boolean boolean27 = typeCircularBuffer22.isFull();
        boolean boolean28 = typeCircularBuffer22.isFull();
        boolean boolean29 = typeCircularBuffer22.isEmpty();
        java.lang.reflect.Type type30 = typeCircularBuffer22.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean33 = typeCircularBuffer32.isEmpty();
        java.lang.reflect.Type type34 = typeCircularBuffer32.get();
        boolean boolean35 = typeCircularBuffer32.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type38 = typeCircularBuffer37.get();
        boolean boolean39 = typeCircularBuffer37.isFull();
        boolean boolean40 = typeCircularBuffer37.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean43 = typeCircularBuffer42.isEmpty();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        boolean boolean46 = typeCircularBuffer42.put((java.lang.reflect.Type) wildcardClass45);
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer42.getClass();
        boolean boolean48 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass47);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean51 = typeCircularBuffer50.isEmpty();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        boolean boolean54 = typeCircularBuffer50.put((java.lang.reflect.Type) wildcardClass53);
        java.lang.Class<?> wildcardClass55 = typeCircularBuffer50.getClass();
        boolean boolean56 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass55);
        boolean boolean57 = typeCircularBuffer32.put((java.lang.reflect.Type) wildcardClass55);
        boolean boolean58 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass55);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer60 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean61 = typeCircularBuffer60.isEmpty();
        java.lang.reflect.Type type62 = typeCircularBuffer60.get();
        java.lang.reflect.Type type63 = typeCircularBuffer60.get();
        java.lang.reflect.Type type64 = typeCircularBuffer60.get();
        boolean boolean65 = typeCircularBuffer60.isFull();
        boolean boolean66 = typeCircularBuffer60.isFull();
        java.lang.reflect.Type type67 = typeCircularBuffer60.get();
        boolean boolean68 = typeCircularBuffer60.isFull();
        boolean boolean69 = typeCircularBuffer60.isEmpty();
        boolean boolean70 = typeCircularBuffer60.isFull();
        java.lang.Class<?> wildcardClass71 = typeCircularBuffer60.getClass();
        boolean boolean72 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass71);
        boolean boolean73 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass71);
        boolean boolean74 = typeCircularBuffer1.isFull();
        boolean boolean75 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(type30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(type34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(type38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(type62);
        org.junit.Assert.assertNull(type63);
        org.junit.Assert.assertNull(type64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(type67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
    }

    @Test
    public void test2273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2273");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        java.lang.reflect.Type type12 = typeCircularBuffer6.get();
        boolean boolean13 = typeCircularBuffer4.put(type12);
        boolean boolean14 = typeCircularBuffer4.isFull();
        java.lang.reflect.Type type15 = typeCircularBuffer4.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        boolean boolean21 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean22 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type24 = typeCircularBuffer1.get();
        boolean boolean25 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type26 = typeCircularBuffer1.get();
        boolean boolean27 = typeCircularBuffer1.isEmpty();
        boolean boolean28 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean31 = typeCircularBuffer30.isEmpty();
        boolean boolean32 = typeCircularBuffer30.isEmpty();
        java.lang.reflect.Type type33 = typeCircularBuffer30.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean36 = typeCircularBuffer35.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass39 = typeCircularBuffer38.getClass();
        boolean boolean40 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass39);
        boolean boolean41 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass39);
        boolean boolean42 = typeCircularBuffer30.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.invoke.TypeDescriptor> typeDescriptorCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.invoke.TypeDescriptor>(100);
        java.lang.Class<?> wildcardClass45 = typeDescriptorCircularBuffer44.getClass();
        boolean boolean46 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass45);
        java.lang.reflect.Type type47 = typeCircularBuffer30.get();
        boolean boolean48 = typeCircularBuffer1.put(type47);
        java.lang.reflect.Type type49 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(type26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(type33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(type49);
    }

    @Test
    public void test2274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2274");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type4 = typeCircularBuffer3.get();
        boolean boolean5 = typeCircularBuffer3.isFull();
        boolean boolean6 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean9 = typeCircularBuffer8.isEmpty();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer8.getClass();
        boolean boolean14 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass13);
        boolean boolean15 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean18 = typeCircularBuffer17.isFull();
        boolean boolean19 = typeCircularBuffer17.isEmpty();
        java.lang.reflect.Type type20 = typeCircularBuffer17.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean25 = typeCircularBuffer24.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer27.getClass();
        boolean boolean29 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.reflect.Type type30 = typeCircularBuffer24.get();
        boolean boolean31 = typeCircularBuffer22.put(type30);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer22.getClass();
        boolean boolean33 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean35 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean36 = typeCircularBuffer1.isFull();
        boolean boolean37 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type38 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type41 = typeCircularBuffer40.get();
        boolean boolean42 = typeCircularBuffer40.isFull();
        boolean boolean43 = typeCircularBuffer40.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean46 = typeCircularBuffer45.isEmpty();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        boolean boolean49 = typeCircularBuffer45.put((java.lang.reflect.Type) wildcardClass48);
        java.lang.Class<?> wildcardClass50 = typeCircularBuffer45.getClass();
        boolean boolean51 = typeCircularBuffer40.put((java.lang.reflect.Type) wildcardClass50);
        java.lang.reflect.Type type52 = typeCircularBuffer40.get();
        boolean boolean53 = typeCircularBuffer40.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer55 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type56 = typeCircularBuffer55.get();
        boolean boolean57 = typeCircularBuffer55.isFull();
        java.lang.Class<?> wildcardClass58 = typeCircularBuffer55.getClass();
        boolean boolean59 = typeCircularBuffer40.put((java.lang.reflect.Type) wildcardClass58);
        boolean boolean60 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass58);
        java.lang.reflect.Type type61 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(type20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(type38);
        org.junit.Assert.assertNull(type41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(type56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(type61);
    }

    @Test
    public void test2275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2275");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(100);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test2276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2276");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) ' ');
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean5 = typeCircularBuffer4.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass8 = typeCircularBuffer7.getClass();
        boolean boolean9 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass8);
        java.lang.reflect.Type type10 = typeCircularBuffer4.get();
        java.lang.Object obj11 = new java.lang.Object();
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        boolean boolean13 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass12);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean16 = typeCircularBuffer15.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer18.getClass();
        boolean boolean20 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass19);
        java.lang.reflect.Type type21 = typeCircularBuffer15.get();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        boolean boolean24 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass23);
        java.lang.reflect.Type type25 = typeCircularBuffer15.get();
        boolean boolean26 = typeCircularBuffer4.put(type25);
        boolean boolean27 = typeCircularBuffer1.put(type25);
        boolean boolean28 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test2277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2277");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean9 = typeCircularBuffer8.isFull();
        boolean boolean10 = typeCircularBuffer8.isEmpty();
        java.lang.reflect.Type type11 = typeCircularBuffer8.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean16 = typeCircularBuffer15.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer18.getClass();
        boolean boolean20 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass19);
        java.lang.reflect.Type type21 = typeCircularBuffer15.get();
        boolean boolean22 = typeCircularBuffer13.put(type21);
        java.lang.Class<?> wildcardClass23 = typeCircularBuffer13.getClass();
        boolean boolean24 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass23);
        boolean boolean25 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass23);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type28 = typeCircularBuffer27.get();
        boolean boolean29 = typeCircularBuffer27.isFull();
        boolean boolean30 = typeCircularBuffer27.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean33 = typeCircularBuffer32.isEmpty();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        boolean boolean36 = typeCircularBuffer32.put((java.lang.reflect.Type) wildcardClass35);
        java.lang.Class<?> wildcardClass37 = typeCircularBuffer32.getClass();
        boolean boolean38 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass37);
        boolean boolean39 = typeCircularBuffer27.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean42 = typeCircularBuffer41.isFull();
        boolean boolean43 = typeCircularBuffer41.isEmpty();
        java.lang.reflect.Type type44 = typeCircularBuffer41.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean49 = typeCircularBuffer48.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass52 = typeCircularBuffer51.getClass();
        boolean boolean53 = typeCircularBuffer48.put((java.lang.reflect.Type) wildcardClass52);
        java.lang.reflect.Type type54 = typeCircularBuffer48.get();
        boolean boolean55 = typeCircularBuffer46.put(type54);
        java.lang.Class<?> wildcardClass56 = typeCircularBuffer46.getClass();
        boolean boolean57 = typeCircularBuffer41.put((java.lang.reflect.Type) wildcardClass56);
        boolean boolean58 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass56);
        java.lang.Class<?> wildcardClass59 = typeCircularBuffer27.getClass();
        boolean boolean60 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass59);
        boolean boolean61 = typeCircularBuffer6.isEmpty();
        boolean boolean62 = typeCircularBuffer6.isFull();
        boolean boolean63 = typeCircularBuffer6.isEmpty();
        boolean boolean64 = typeCircularBuffer6.isFull();
        java.lang.reflect.Type type65 = typeCircularBuffer6.get();
        boolean boolean66 = typeCircularBuffer1.put(type65);
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(type11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(type28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(type44);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
    }

    @Test
    public void test2278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2278");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        boolean boolean9 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test2279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2279");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean10 = typeCircularBuffer9.isFull();
        boolean boolean11 = typeCircularBuffer9.isEmpty();
        java.lang.reflect.Type type12 = typeCircularBuffer9.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer19.getClass();
        boolean boolean21 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type22 = typeCircularBuffer16.get();
        boolean boolean23 = typeCircularBuffer14.put(type22);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer14.getClass();
        boolean boolean25 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean26 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean27 = typeCircularBuffer1.isEmpty();
        boolean boolean28 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean33 = typeCircularBuffer32.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer35.getClass();
        boolean boolean37 = typeCircularBuffer32.put((java.lang.reflect.Type) wildcardClass36);
        java.lang.reflect.Type type38 = typeCircularBuffer32.get();
        boolean boolean39 = typeCircularBuffer30.put(type38);
        java.lang.reflect.Type type40 = typeCircularBuffer30.get();
        java.lang.reflect.Type type41 = null;
        boolean boolean42 = typeCircularBuffer30.put(type41);
        boolean boolean43 = typeCircularBuffer30.isEmpty();
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer30.getClass();
        boolean boolean45 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean46 = typeCircularBuffer1.isFull();
        boolean boolean47 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type48 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean51 = typeCircularBuffer50.isFull();
        java.lang.reflect.Type type52 = typeCircularBuffer50.get();
        boolean boolean53 = typeCircularBuffer50.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer55 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean56 = typeCircularBuffer55.isEmpty();
        java.lang.Class<?> wildcardClass57 = typeCircularBuffer55.getClass();
        boolean boolean58 = typeCircularBuffer50.put((java.lang.reflect.Type) wildcardClass57);
        java.lang.reflect.Type type59 = typeCircularBuffer50.get();
        boolean boolean60 = typeCircularBuffer1.put(type59);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(type12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(type52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
    }

    @Test
    public void test2280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2280");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        boolean boolean8 = typeCircularBuffer7.isEmpty();
        java.lang.Class<?> wildcardClass9 = typeCircularBuffer7.getClass();
        boolean boolean10 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass9);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean13 = typeCircularBuffer12.isFull();
        boolean boolean14 = typeCircularBuffer12.isEmpty();
        boolean boolean15 = typeCircularBuffer12.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer20.getClass();
        boolean boolean22 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type23 = typeCircularBuffer17.get();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        boolean boolean26 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass25);
        boolean boolean27 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass25);
        boolean boolean28 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.reflect.Type type29 = typeCircularBuffer1.get();
        boolean boolean30 = typeCircularBuffer1.isEmpty();
        boolean boolean31 = typeCircularBuffer1.isEmpty();
        boolean boolean32 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass33 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test2281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2281");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean19 = typeCircularBuffer18.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer21.getClass();
        boolean boolean23 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass22);
        java.lang.reflect.Type type24 = typeCircularBuffer18.get();
        boolean boolean25 = typeCircularBuffer16.put(type24);
        boolean boolean26 = typeCircularBuffer16.isFull();
        java.lang.reflect.Type type27 = typeCircularBuffer16.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean30 = typeCircularBuffer29.isEmpty();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        boolean boolean33 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean35 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean36 = typeCircularBuffer9.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean39 = typeCircularBuffer38.isFull();
        boolean boolean40 = typeCircularBuffer38.isEmpty();
        boolean boolean41 = typeCircularBuffer38.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer46.getClass();
        boolean boolean48 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass47);
        java.lang.reflect.Type type49 = typeCircularBuffer43.get();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        boolean boolean52 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean53 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean54 = typeCircularBuffer38.isFull();
        java.lang.reflect.Type type55 = typeCircularBuffer38.get();
        boolean boolean56 = typeCircularBuffer9.put(type55);
        java.lang.Class<?> wildcardClass57 = type55.getClass();
        boolean boolean58 = typeCircularBuffer1.put(type55);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer60 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean61 = typeCircularBuffer60.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer63 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass64 = typeCircularBuffer63.getClass();
        boolean boolean65 = typeCircularBuffer60.put((java.lang.reflect.Type) wildcardClass64);
        boolean boolean66 = typeCircularBuffer60.isEmpty();
        java.lang.reflect.Type type67 = typeCircularBuffer60.get();
        boolean boolean68 = typeCircularBuffer1.put(type67);
        java.lang.reflect.Type type69 = typeCircularBuffer1.get();
        boolean boolean70 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test2282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2282");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer10.get();
        boolean boolean17 = typeCircularBuffer8.put(type16);
        boolean boolean18 = typeCircularBuffer8.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean21 = typeCircularBuffer20.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer23.getClass();
        boolean boolean25 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass24);
        java.lang.reflect.Type type26 = typeCircularBuffer20.get();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        boolean boolean29 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass28);
        boolean boolean30 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass28);
        boolean boolean31 = typeCircularBuffer8.isEmpty();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        boolean boolean34 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass33);
        boolean boolean35 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass33);
        boolean boolean36 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean41 = typeCircularBuffer40.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer43.getClass();
        boolean boolean45 = typeCircularBuffer40.put((java.lang.reflect.Type) wildcardClass44);
        java.lang.reflect.Type type46 = typeCircularBuffer40.get();
        boolean boolean47 = typeCircularBuffer38.put(type46);
        java.lang.reflect.Type type48 = typeCircularBuffer38.get();
        java.lang.reflect.Type type49 = null;
        boolean boolean50 = typeCircularBuffer38.put(type49);
        boolean boolean51 = typeCircularBuffer38.isFull();
        boolean boolean52 = typeCircularBuffer38.isFull();
        boolean boolean53 = typeCircularBuffer38.isFull();
        boolean boolean54 = typeCircularBuffer38.isFull();
        boolean boolean55 = typeCircularBuffer38.isFull();
        boolean boolean56 = typeCircularBuffer38.isFull();
        java.lang.Class<?> wildcardClass57 = typeCircularBuffer38.getClass();
        boolean boolean58 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test2283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2283");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        boolean boolean15 = typeCircularBuffer13.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type18 = typeCircularBuffer17.get();
        boolean boolean19 = typeCircularBuffer17.isFull();
        boolean boolean20 = typeCircularBuffer17.isFull();
        boolean boolean21 = typeCircularBuffer17.isEmpty();
        java.lang.reflect.Type type22 = typeCircularBuffer17.get();
        java.lang.Class<?> wildcardClass23 = typeCircularBuffer17.getClass();
        boolean boolean24 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass23);
        boolean boolean25 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass23);
        java.lang.reflect.Type type26 = typeCircularBuffer1.get();
        java.lang.reflect.Type type27 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type30 = typeCircularBuffer29.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean35 = typeCircularBuffer34.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass38 = typeCircularBuffer37.getClass();
        boolean boolean39 = typeCircularBuffer34.put((java.lang.reflect.Type) wildcardClass38);
        java.lang.reflect.Type type40 = typeCircularBuffer34.get();
        boolean boolean41 = typeCircularBuffer32.put(type40);
        boolean boolean42 = typeCircularBuffer32.isFull();
        java.lang.reflect.Type type43 = typeCircularBuffer32.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean46 = typeCircularBuffer45.isEmpty();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        boolean boolean49 = typeCircularBuffer45.put((java.lang.reflect.Type) wildcardClass48);
        boolean boolean50 = typeCircularBuffer32.put((java.lang.reflect.Type) wildcardClass48);
        boolean boolean51 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass48);
        java.lang.reflect.Type type52 = typeCircularBuffer29.get();
        boolean boolean53 = typeCircularBuffer1.put(type52);
        com.thealgorithms.datastructures.buffers.CircularBuffer<com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>> typeCircularBufferCircularBuffer55 = new com.thealgorithms.datastructures.buffers.CircularBuffer<com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>>((int) ' ');
        java.lang.Class<?> wildcardClass56 = typeCircularBufferCircularBuffer55.getClass();
        boolean boolean57 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass56);
        java.lang.reflect.Type type58 = typeCircularBuffer1.get();
        boolean boolean59 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(type18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(type22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNull(type27);
        org.junit.Assert.assertNull(type30);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test2284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2284");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isFull();
        boolean boolean8 = typeCircularBuffer1.isFull();
        boolean boolean9 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test2285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2285");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) 'a');
        boolean boolean7 = typeCircularBuffer6.isFull();
        java.lang.Class<?> wildcardClass8 = typeCircularBuffer6.getClass();
        boolean boolean9 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass8);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean12 = typeCircularBuffer11.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass15 = typeCircularBuffer14.getClass();
        boolean boolean16 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass15);
        boolean boolean17 = typeCircularBuffer11.isFull();
        java.lang.reflect.Type type18 = typeCircularBuffer11.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer20.getClass();
        boolean boolean22 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = typeCircularBuffer11.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean26 = typeCircularBuffer25.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass29 = typeCircularBuffer28.getClass();
        boolean boolean30 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass29);
        java.lang.Class<?> wildcardClass31 = typeCircularBuffer25.getClass();
        boolean boolean32 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass31);
        boolean boolean33 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass31);
        java.lang.reflect.Type type34 = typeCircularBuffer1.get();
        boolean boolean35 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(type34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
    }

    @Test
    public void test2286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2286");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer10.get();
        boolean boolean17 = typeCircularBuffer8.put(type16);
        boolean boolean18 = typeCircularBuffer8.isFull();
        java.lang.reflect.Type type19 = typeCircularBuffer8.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean22 = typeCircularBuffer21.isEmpty();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean26 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean27 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean28 = typeCircularBuffer1.isFull();
        boolean boolean29 = typeCircularBuffer1.isFull();
        boolean boolean30 = typeCircularBuffer1.isEmpty();
        boolean boolean31 = typeCircularBuffer1.isFull();
        boolean boolean32 = typeCircularBuffer1.isFull();
        boolean boolean33 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    }

    @Test
    public void test2287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2287");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer10.get();
        boolean boolean17 = typeCircularBuffer8.put(type16);
        boolean boolean18 = typeCircularBuffer8.isFull();
        java.lang.reflect.Type type19 = typeCircularBuffer8.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean22 = typeCircularBuffer21.isEmpty();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean26 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean27 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean28 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type31 = typeCircularBuffer30.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean34 = typeCircularBuffer33.isEmpty();
        boolean boolean35 = typeCircularBuffer33.isFull();
        java.lang.reflect.Type type36 = typeCircularBuffer33.get();
        boolean boolean37 = typeCircularBuffer33.isFull();
        java.lang.Class<?> wildcardClass38 = typeCircularBuffer33.getClass();
        boolean boolean39 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass38);
        java.lang.Class<?> wildcardClass40 = typeCircularBuffer30.getClass();
        boolean boolean41 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass40);
        java.lang.reflect.Type type42 = typeCircularBuffer1.get();
        boolean boolean43 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(type31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(type36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
    }

    @Test
    public void test2288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2288");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass10);
        boolean boolean13 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer20.getClass();
        boolean boolean22 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type23 = typeCircularBuffer17.get();
        boolean boolean24 = typeCircularBuffer15.put(type23);
        boolean boolean25 = typeCircularBuffer15.isFull();
        java.lang.reflect.Type type26 = typeCircularBuffer15.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        boolean boolean32 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass31);
        boolean boolean33 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass31);
        java.lang.reflect.Type type34 = typeCircularBuffer15.get();
        boolean boolean35 = typeCircularBuffer1.put(type34);
        boolean boolean36 = typeCircularBuffer1.isEmpty();
        boolean boolean37 = typeCircularBuffer1.isEmpty();
        boolean boolean38 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean41 = typeCircularBuffer40.isEmpty();
        java.lang.reflect.Type type42 = typeCircularBuffer40.get();
        java.lang.reflect.Type type43 = typeCircularBuffer40.get();
        java.lang.reflect.Type type44 = typeCircularBuffer40.get();
        boolean boolean45 = typeCircularBuffer40.isFull();
        boolean boolean46 = typeCircularBuffer40.isFull();
        java.lang.reflect.Type type47 = typeCircularBuffer40.get();
        boolean boolean48 = typeCircularBuffer40.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer52 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean53 = typeCircularBuffer52.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer55 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass56 = typeCircularBuffer55.getClass();
        boolean boolean57 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass56);
        java.lang.reflect.Type type58 = typeCircularBuffer52.get();
        java.lang.Class<?> wildcardClass59 = typeCircularBuffer52.getClass();
        boolean boolean60 = typeCircularBuffer50.put((java.lang.reflect.Type) wildcardClass59);
        boolean boolean61 = typeCircularBuffer40.put((java.lang.reflect.Type) wildcardClass59);
        boolean boolean62 = typeCircularBuffer40.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer64 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean65 = typeCircularBuffer64.isEmpty();
        java.lang.reflect.Type type66 = typeCircularBuffer64.get();
        java.lang.reflect.Type type67 = typeCircularBuffer64.get();
        java.lang.reflect.Type type68 = typeCircularBuffer64.get();
        boolean boolean69 = typeCircularBuffer64.isFull();
        java.lang.reflect.Type type70 = typeCircularBuffer64.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer72 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean73 = typeCircularBuffer72.isEmpty();
        java.lang.Class<?> wildcardClass74 = typeCircularBuffer72.getClass();
        boolean boolean75 = typeCircularBuffer64.put((java.lang.reflect.Type) wildcardClass74);
        java.lang.Class<?> wildcardClass76 = typeCircularBuffer64.getClass();
        boolean boolean77 = typeCircularBuffer40.put((java.lang.reflect.Type) wildcardClass76);
        java.lang.reflect.Type type78 = typeCircularBuffer40.get();
        boolean boolean79 = typeCircularBuffer1.put(type78);
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(type42);
        org.junit.Assert.assertNull(type43);
        org.junit.Assert.assertNull(type44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(type47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(type66);
        org.junit.Assert.assertNull(type67);
        org.junit.Assert.assertNull(type68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(type70);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test2289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2289");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isEmpty();
        boolean boolean12 = typeCircularBuffer1.isFull();
        boolean boolean13 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer20.getClass();
        boolean boolean22 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type23 = typeCircularBuffer17.get();
        boolean boolean24 = typeCircularBuffer15.put(type23);
        boolean boolean25 = typeCircularBuffer15.isFull();
        java.lang.reflect.Type type26 = typeCircularBuffer15.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer31.getClass();
        boolean boolean33 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer28.isFull();
        java.lang.reflect.Type type35 = typeCircularBuffer28.get();
        boolean boolean36 = typeCircularBuffer15.put(type35);
        boolean boolean37 = typeCircularBuffer1.put(type35);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean40 = typeCircularBuffer39.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass43 = typeCircularBuffer42.getClass();
        boolean boolean44 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass43);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean49 = typeCircularBuffer48.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass52 = typeCircularBuffer51.getClass();
        boolean boolean53 = typeCircularBuffer48.put((java.lang.reflect.Type) wildcardClass52);
        java.lang.reflect.Type type54 = typeCircularBuffer48.get();
        boolean boolean55 = typeCircularBuffer46.put(type54);
        boolean boolean56 = typeCircularBuffer46.isFull();
        java.lang.reflect.Type type57 = typeCircularBuffer46.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer59 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean60 = typeCircularBuffer59.isEmpty();
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        boolean boolean63 = typeCircularBuffer59.put((java.lang.reflect.Type) wildcardClass62);
        boolean boolean64 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass62);
        boolean boolean65 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass62);
        boolean boolean66 = typeCircularBuffer39.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer68 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean69 = typeCircularBuffer68.isFull();
        boolean boolean70 = typeCircularBuffer68.isEmpty();
        boolean boolean71 = typeCircularBuffer68.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer73 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean74 = typeCircularBuffer73.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer76 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass77 = typeCircularBuffer76.getClass();
        boolean boolean78 = typeCircularBuffer73.put((java.lang.reflect.Type) wildcardClass77);
        java.lang.reflect.Type type79 = typeCircularBuffer73.get();
        java.lang.Object obj80 = new java.lang.Object();
        java.lang.Class<?> wildcardClass81 = obj80.getClass();
        boolean boolean82 = typeCircularBuffer73.put((java.lang.reflect.Type) wildcardClass81);
        boolean boolean83 = typeCircularBuffer68.put((java.lang.reflect.Type) wildcardClass81);
        boolean boolean84 = typeCircularBuffer68.isFull();
        java.lang.reflect.Type type85 = typeCircularBuffer68.get();
        boolean boolean86 = typeCircularBuffer39.put(type85);
        boolean boolean87 = typeCircularBuffer1.put(type85);
        boolean boolean88 = typeCircularBuffer1.isFull();
        boolean boolean89 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type90 = typeCircularBuffer1.get();
        boolean boolean91 = typeCircularBuffer1.isFull();
        boolean boolean92 = typeCircularBuffer1.isFull();
        boolean boolean93 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass94 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(type85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(type90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test2290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2290");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        boolean boolean9 = typeCircularBuffer1.isFull();
        boolean boolean10 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type11 = typeCircularBuffer1.get();
        boolean boolean12 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(type11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test2291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2291");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass21);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean26 = typeCircularBuffer25.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass29 = typeCircularBuffer28.getClass();
        boolean boolean30 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass29);
        java.lang.reflect.Type type31 = typeCircularBuffer25.get();
        boolean boolean32 = typeCircularBuffer1.put(type31);
        boolean boolean33 = typeCircularBuffer1.isEmpty();
        boolean boolean34 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type35 = typeCircularBuffer1.get();
        boolean boolean36 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
    }

    @Test
    public void test2292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2292");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        boolean boolean7 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean19 = typeCircularBuffer18.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer21.getClass();
        boolean boolean23 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass22);
        java.lang.reflect.Type type24 = typeCircularBuffer18.get();
        boolean boolean25 = typeCircularBuffer16.put(type24);
        boolean boolean26 = typeCircularBuffer16.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer31.getClass();
        boolean boolean33 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass32);
        java.lang.reflect.Type type34 = typeCircularBuffer28.get();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        boolean boolean37 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean38 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean39 = typeCircularBuffer16.isEmpty();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        boolean boolean42 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean43 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean44 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean45 = typeCircularBuffer1.isFull();
        boolean boolean46 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type47 = typeCircularBuffer1.get();
        boolean boolean48 = typeCircularBuffer1.isEmpty();
        boolean boolean49 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
    }

    @Test
    public void test2293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2293");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type24 = typeCircularBuffer1.get();
        boolean boolean25 = typeCircularBuffer1.isFull();
        boolean boolean26 = typeCircularBuffer1.isEmpty();
        boolean boolean27 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean30 = typeCircularBuffer29.isEmpty();
        java.lang.reflect.Type type31 = typeCircularBuffer29.get();
        java.lang.reflect.Type type32 = typeCircularBuffer29.get();
        java.lang.reflect.Type type33 = typeCircularBuffer29.get();
        boolean boolean34 = typeCircularBuffer29.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean37 = typeCircularBuffer36.isFull();
        java.lang.reflect.Type type38 = typeCircularBuffer36.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean41 = typeCircularBuffer40.isEmpty();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        boolean boolean44 = typeCircularBuffer40.put((java.lang.reflect.Type) wildcardClass43);
        java.lang.Class<?> wildcardClass45 = typeCircularBuffer40.getClass();
        boolean boolean46 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass45);
        boolean boolean47 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass45);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer49 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type52 = typeCircularBuffer51.get();
        boolean boolean53 = typeCircularBuffer51.isFull();
        boolean boolean54 = typeCircularBuffer51.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer56 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean57 = typeCircularBuffer56.isEmpty();
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        boolean boolean60 = typeCircularBuffer56.put((java.lang.reflect.Type) wildcardClass59);
        java.lang.Class<?> wildcardClass61 = typeCircularBuffer56.getClass();
        boolean boolean62 = typeCircularBuffer51.put((java.lang.reflect.Type) wildcardClass61);
        boolean boolean63 = typeCircularBuffer51.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer65 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean66 = typeCircularBuffer65.isFull();
        boolean boolean67 = typeCircularBuffer65.isEmpty();
        java.lang.reflect.Type type68 = typeCircularBuffer65.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer70 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer72 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean73 = typeCircularBuffer72.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer75 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass76 = typeCircularBuffer75.getClass();
        boolean boolean77 = typeCircularBuffer72.put((java.lang.reflect.Type) wildcardClass76);
        java.lang.reflect.Type type78 = typeCircularBuffer72.get();
        boolean boolean79 = typeCircularBuffer70.put(type78);
        java.lang.Class<?> wildcardClass80 = typeCircularBuffer70.getClass();
        boolean boolean81 = typeCircularBuffer65.put((java.lang.reflect.Type) wildcardClass80);
        boolean boolean82 = typeCircularBuffer51.put((java.lang.reflect.Type) wildcardClass80);
        boolean boolean83 = typeCircularBuffer49.put((java.lang.reflect.Type) wildcardClass80);
        boolean boolean84 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass80);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer86 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean87 = typeCircularBuffer86.isFull();
        java.lang.reflect.Type type88 = typeCircularBuffer86.get();
        boolean boolean89 = typeCircularBuffer86.isEmpty();
        boolean boolean90 = typeCircularBuffer86.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer92 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        boolean boolean93 = typeCircularBuffer92.isEmpty();
        java.lang.Class<?> wildcardClass94 = typeCircularBuffer92.getClass();
        boolean boolean95 = typeCircularBuffer86.put((java.lang.reflect.Type) wildcardClass94);
        boolean boolean96 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass94);
        boolean boolean97 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass94);
        boolean boolean98 = typeCircularBuffer1.isEmpty();
        boolean boolean99 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(type31);
        org.junit.Assert.assertNull(type32);
        org.junit.Assert.assertNull(type33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(type38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(type52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNull(type68);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNull(type88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + true + "'", boolean99 == true);
    }

    @Test
    public void test2294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2294");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean13 = typeCircularBuffer12.isFull();
        boolean boolean14 = typeCircularBuffer12.isEmpty();
        java.lang.reflect.Type type15 = typeCircularBuffer12.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean20 = typeCircularBuffer19.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass23 = typeCircularBuffer22.getClass();
        boolean boolean24 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass23);
        java.lang.reflect.Type type25 = typeCircularBuffer19.get();
        boolean boolean26 = typeCircularBuffer17.put(type25);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer17.getClass();
        boolean boolean28 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean30 = typeCircularBuffer1.isFull();
        boolean boolean31 = typeCircularBuffer1.isEmpty();
        boolean boolean32 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(type15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test2295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2295");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        boolean boolean5 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean8 = typeCircularBuffer7.isFull();
        java.lang.reflect.Type type9 = typeCircularBuffer7.get();
        boolean boolean10 = typeCircularBuffer7.isFull();
        java.lang.reflect.Type type11 = typeCircularBuffer7.get();
        boolean boolean12 = typeCircularBuffer7.isEmpty();
        java.lang.reflect.Type type13 = typeCircularBuffer7.get();
        boolean boolean14 = typeCircularBuffer7.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        boolean boolean18 = typeCircularBuffer16.isFull();
        boolean boolean19 = typeCircularBuffer16.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean22 = typeCircularBuffer21.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass25 = typeCircularBuffer24.getClass();
        boolean boolean26 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass25);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean31 = typeCircularBuffer30.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass34 = typeCircularBuffer33.getClass();
        boolean boolean35 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass34);
        java.lang.reflect.Type type36 = typeCircularBuffer30.get();
        boolean boolean37 = typeCircularBuffer28.put(type36);
        boolean boolean38 = typeCircularBuffer28.isFull();
        java.lang.reflect.Type type39 = typeCircularBuffer28.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean42 = typeCircularBuffer41.isEmpty();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        boolean boolean45 = typeCircularBuffer41.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean46 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean47 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean48 = typeCircularBuffer21.isFull();
        boolean boolean49 = typeCircularBuffer21.isFull();
        boolean boolean50 = typeCircularBuffer21.isEmpty();
        boolean boolean51 = typeCircularBuffer21.isFull();
        java.lang.reflect.Type type52 = typeCircularBuffer21.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer54 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer56 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean57 = typeCircularBuffer56.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer59 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass60 = typeCircularBuffer59.getClass();
        boolean boolean61 = typeCircularBuffer56.put((java.lang.reflect.Type) wildcardClass60);
        java.lang.reflect.Type type62 = typeCircularBuffer56.get();
        boolean boolean63 = typeCircularBuffer54.put(type62);
        boolean boolean64 = typeCircularBuffer54.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer66 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean67 = typeCircularBuffer66.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer69 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass70 = typeCircularBuffer69.getClass();
        boolean boolean71 = typeCircularBuffer66.put((java.lang.reflect.Type) wildcardClass70);
        java.lang.reflect.Type type72 = typeCircularBuffer66.get();
        java.lang.Object obj73 = new java.lang.Object();
        java.lang.Class<?> wildcardClass74 = obj73.getClass();
        boolean boolean75 = typeCircularBuffer66.put((java.lang.reflect.Type) wildcardClass74);
        boolean boolean76 = typeCircularBuffer54.put((java.lang.reflect.Type) wildcardClass74);
        java.lang.reflect.Type type77 = typeCircularBuffer54.get();
        boolean boolean78 = typeCircularBuffer21.put(type77);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer80 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean81 = typeCircularBuffer80.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer83 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass84 = typeCircularBuffer83.getClass();
        boolean boolean85 = typeCircularBuffer80.put((java.lang.reflect.Type) wildcardClass84);
        java.lang.reflect.Type type86 = typeCircularBuffer80.get();
        java.lang.Object obj87 = new java.lang.Object();
        java.lang.Class<?> wildcardClass88 = obj87.getClass();
        boolean boolean89 = typeCircularBuffer80.put((java.lang.reflect.Type) wildcardClass88);
        boolean boolean90 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass88);
        boolean boolean91 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass88);
        boolean boolean92 = typeCircularBuffer7.put((java.lang.reflect.Type) wildcardClass88);
        java.lang.reflect.Type type93 = typeCircularBuffer7.get();
        boolean boolean94 = typeCircularBuffer1.put(type93);
        boolean boolean95 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(type11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(type13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(type86);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(type93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
    }

    @Test
    public void test2296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2296");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        boolean boolean8 = typeCircularBuffer6.isEmpty();
        boolean boolean9 = typeCircularBuffer6.isEmpty();
        boolean boolean10 = typeCircularBuffer6.isEmpty();
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer6.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.reflect.Type type13 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(type13);
    }

    @Test
    public void test2297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2297");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) 'a');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass4 = typeCircularBuffer3.getClass();
        boolean boolean5 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass4);
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type10 = typeCircularBuffer9.get();
        boolean boolean11 = typeCircularBuffer9.isFull();
        boolean boolean12 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer14.getClass();
        boolean boolean20 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass19);
        java.lang.reflect.Type type21 = typeCircularBuffer9.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean26 = typeCircularBuffer25.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass29 = typeCircularBuffer28.getClass();
        boolean boolean30 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass29);
        java.lang.reflect.Type type31 = typeCircularBuffer25.get();
        boolean boolean32 = typeCircularBuffer23.put(type31);
        boolean boolean33 = typeCircularBuffer9.put(type31);
        java.lang.Class<?> wildcardClass34 = typeCircularBuffer9.getClass();
        boolean boolean35 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass34);
        java.lang.reflect.Type type36 = typeCircularBuffer1.get();
        java.lang.reflect.Type type37 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean40 = typeCircularBuffer39.isEmpty();
        java.lang.reflect.Type type41 = typeCircularBuffer39.get();
        java.lang.reflect.Type type42 = typeCircularBuffer39.get();
        java.lang.reflect.Type type43 = typeCircularBuffer39.get();
        boolean boolean44 = typeCircularBuffer39.isFull();
        boolean boolean45 = typeCircularBuffer39.isFull();
        boolean boolean46 = typeCircularBuffer39.isFull();
        boolean boolean47 = typeCircularBuffer39.isEmpty();
        boolean boolean48 = typeCircularBuffer39.isFull();
        boolean boolean49 = typeCircularBuffer39.isFull();
        java.lang.Class<?> wildcardClass50 = typeCircularBuffer39.getClass();
        boolean boolean51 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass50);
        boolean boolean52 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNull(type37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(type41);
        org.junit.Assert.assertNull(type42);
        org.junit.Assert.assertNull(type43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test2298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2298");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        boolean boolean7 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test2299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2299");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean24 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type27 = typeCircularBuffer26.get();
        boolean boolean28 = typeCircularBuffer26.isFull();
        boolean boolean29 = typeCircularBuffer26.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        boolean boolean35 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass34);
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer31.getClass();
        boolean boolean37 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass36);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean40 = typeCircularBuffer39.isEmpty();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        boolean boolean43 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass42);
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer39.getClass();
        boolean boolean45 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean46 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean47 = typeCircularBuffer1.isEmpty();
        boolean boolean48 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type49 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(type49);
    }

    @Test
    public void test2300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2300");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) ' ');
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer5 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type6 = typeCircularBuffer5.get();
        boolean boolean7 = typeCircularBuffer5.isFull();
        boolean boolean8 = typeCircularBuffer5.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        boolean boolean14 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass13);
        java.lang.Class<?> wildcardClass15 = typeCircularBuffer10.getClass();
        boolean boolean16 = typeCircularBuffer5.put((java.lang.reflect.Type) wildcardClass15);
        java.lang.reflect.Type type17 = typeCircularBuffer5.get();
        boolean boolean18 = typeCircularBuffer5.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean21 = typeCircularBuffer20.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer23.getClass();
        boolean boolean25 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean26 = typeCircularBuffer20.isEmpty();
        java.lang.reflect.Type type27 = typeCircularBuffer20.get();
        boolean boolean28 = typeCircularBuffer5.put(type27);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type31 = typeCircularBuffer30.get();
        boolean boolean32 = typeCircularBuffer30.isFull();
        boolean boolean33 = typeCircularBuffer30.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean36 = typeCircularBuffer35.isEmpty();
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        boolean boolean39 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass38);
        java.lang.Class<?> wildcardClass40 = typeCircularBuffer35.getClass();
        boolean boolean41 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass40);
        java.lang.reflect.Type type42 = typeCircularBuffer30.get();
        boolean boolean43 = typeCircularBuffer30.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type46 = typeCircularBuffer45.get();
        boolean boolean47 = typeCircularBuffer45.isFull();
        java.lang.Class<?> wildcardClass48 = typeCircularBuffer45.getClass();
        boolean boolean49 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass48);
        boolean boolean50 = typeCircularBuffer5.put((java.lang.reflect.Type) wildcardClass48);
        boolean boolean51 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass48);
        boolean boolean52 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type53 = typeCircularBuffer1.get();
        boolean boolean54 = typeCircularBuffer1.isFull();
        boolean boolean55 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(type31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(type46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
    }

    @Test
    public void test2301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2301");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass21);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean25 = typeCircularBuffer24.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer27.getClass();
        boolean boolean29 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.Class<?> wildcardClass30 = typeCircularBuffer24.getClass();
        boolean boolean31 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass30);
        boolean boolean32 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass30);
        boolean boolean33 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type34 = null;
        boolean boolean35 = typeCircularBuffer1.put(type34);
        boolean boolean36 = typeCircularBuffer1.isFull();
        boolean boolean37 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test2302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2302");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass10);
        boolean boolean13 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer20.getClass();
        boolean boolean22 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type23 = typeCircularBuffer17.get();
        boolean boolean24 = typeCircularBuffer15.put(type23);
        boolean boolean25 = typeCircularBuffer15.isFull();
        java.lang.reflect.Type type26 = typeCircularBuffer15.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        boolean boolean32 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass31);
        boolean boolean33 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass31);
        java.lang.reflect.Type type34 = typeCircularBuffer15.get();
        boolean boolean35 = typeCircularBuffer1.put(type34);
        java.lang.reflect.Type type36 = typeCircularBuffer1.get();
        boolean boolean37 = typeCircularBuffer1.isEmpty();
        boolean boolean38 = typeCircularBuffer1.isFull();
        boolean boolean39 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type40 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean43 = typeCircularBuffer42.isFull();
        java.lang.reflect.Type type44 = typeCircularBuffer42.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean47 = typeCircularBuffer46.isEmpty();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        boolean boolean50 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass49);
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer46.getClass();
        boolean boolean52 = typeCircularBuffer42.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean53 = typeCircularBuffer42.isEmpty();
        java.lang.reflect.Type type54 = typeCircularBuffer42.get();
        boolean boolean55 = typeCircularBuffer1.put(type54);
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(type36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(type40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(type44);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test2303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2303");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer6.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.reflect.Type type13 = typeCircularBuffer1.get();
        boolean boolean14 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type17 = typeCircularBuffer16.get();
        boolean boolean18 = typeCircularBuffer16.isFull();
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer16.getClass();
        boolean boolean20 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass19);
        java.lang.reflect.Type type21 = typeCircularBuffer1.get();
        boolean boolean22 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean25 = typeCircularBuffer24.isEmpty();
        java.lang.reflect.Type type26 = typeCircularBuffer24.get();
        java.lang.reflect.Type type27 = typeCircularBuffer24.get();
        java.lang.reflect.Type type28 = typeCircularBuffer24.get();
        boolean boolean29 = typeCircularBuffer24.isFull();
        boolean boolean30 = typeCircularBuffer24.isFull();
        java.lang.reflect.Type type31 = typeCircularBuffer24.get();
        boolean boolean32 = typeCircularBuffer24.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean37 = typeCircularBuffer36.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass40 = typeCircularBuffer39.getClass();
        boolean boolean41 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass40);
        java.lang.reflect.Type type42 = typeCircularBuffer36.get();
        java.lang.Class<?> wildcardClass43 = typeCircularBuffer36.getClass();
        boolean boolean44 = typeCircularBuffer34.put((java.lang.reflect.Type) wildcardClass43);
        boolean boolean45 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass43);
        boolean boolean46 = typeCircularBuffer24.isEmpty();
        java.lang.reflect.Type type47 = typeCircularBuffer24.get();
        boolean boolean48 = typeCircularBuffer1.put(type47);
        boolean boolean49 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(type17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(type26);
        org.junit.Assert.assertNull(type27);
        org.junit.Assert.assertNull(type28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(type31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test2304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2304");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean24 = typeCircularBuffer1.isEmpty();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        boolean boolean27 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass26);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer34.getClass();
        boolean boolean36 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass35);
        java.lang.reflect.Type type37 = typeCircularBuffer31.get();
        boolean boolean38 = typeCircularBuffer29.put(type37);
        boolean boolean39 = typeCircularBuffer29.isFull();
        java.lang.reflect.Type type40 = typeCircularBuffer29.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type43 = typeCircularBuffer42.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean46 = typeCircularBuffer45.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass49 = typeCircularBuffer48.getClass();
        boolean boolean50 = typeCircularBuffer45.put((java.lang.reflect.Type) wildcardClass49);
        java.lang.reflect.Type type51 = typeCircularBuffer45.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer53 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type54 = typeCircularBuffer53.get();
        boolean boolean55 = typeCircularBuffer53.isFull();
        boolean boolean56 = typeCircularBuffer53.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer58 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean59 = typeCircularBuffer58.isEmpty();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        boolean boolean62 = typeCircularBuffer58.put((java.lang.reflect.Type) wildcardClass61);
        java.lang.Class<?> wildcardClass63 = typeCircularBuffer58.getClass();
        boolean boolean64 = typeCircularBuffer53.put((java.lang.reflect.Type) wildcardClass63);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer66 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean67 = typeCircularBuffer66.isEmpty();
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        boolean boolean70 = typeCircularBuffer66.put((java.lang.reflect.Type) wildcardClass69);
        java.lang.Class<?> wildcardClass71 = typeCircularBuffer66.getClass();
        boolean boolean72 = typeCircularBuffer53.put((java.lang.reflect.Type) wildcardClass71);
        boolean boolean73 = typeCircularBuffer45.put((java.lang.reflect.Type) wildcardClass71);
        boolean boolean74 = typeCircularBuffer42.put((java.lang.reflect.Type) wildcardClass71);
        boolean boolean75 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass71);
        boolean boolean76 = typeCircularBuffer29.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer78 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean79 = typeCircularBuffer78.isEmpty();
        boolean boolean80 = typeCircularBuffer78.isEmpty();
        java.lang.reflect.Type type81 = typeCircularBuffer78.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer83 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean84 = typeCircularBuffer83.isEmpty();
        java.lang.Object obj85 = new java.lang.Object();
        java.lang.Class<?> wildcardClass86 = obj85.getClass();
        boolean boolean87 = typeCircularBuffer83.put((java.lang.reflect.Type) wildcardClass86);
        boolean boolean88 = typeCircularBuffer83.isFull();
        java.lang.Class<?> wildcardClass89 = typeCircularBuffer83.getClass();
        boolean boolean90 = typeCircularBuffer78.put((java.lang.reflect.Type) wildcardClass89);
        boolean boolean91 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass89);
        boolean boolean92 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass89);
        boolean boolean93 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNull(type43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNull(type54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNull(type81);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
    }

    @Test
    public void test2305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2305");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        boolean boolean8 = typeCircularBuffer1.isFull();
        boolean boolean9 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test2306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2306");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean10 = typeCircularBuffer9.isFull();
        boolean boolean11 = typeCircularBuffer9.isEmpty();
        java.lang.reflect.Type type12 = typeCircularBuffer9.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer19.getClass();
        boolean boolean21 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type22 = typeCircularBuffer16.get();
        boolean boolean23 = typeCircularBuffer14.put(type22);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer14.getClass();
        boolean boolean25 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean26 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass24);
        java.lang.reflect.Type type27 = typeCircularBuffer1.get();
        boolean boolean28 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type31 = typeCircularBuffer30.get();
        boolean boolean32 = typeCircularBuffer30.isFull();
        boolean boolean33 = typeCircularBuffer30.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean36 = typeCircularBuffer35.isEmpty();
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        boolean boolean39 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass38);
        java.lang.Class<?> wildcardClass40 = typeCircularBuffer35.getClass();
        boolean boolean41 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass40);
        boolean boolean42 = typeCircularBuffer30.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean45 = typeCircularBuffer44.isFull();
        boolean boolean46 = typeCircularBuffer44.isEmpty();
        java.lang.reflect.Type type47 = typeCircularBuffer44.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer49 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean52 = typeCircularBuffer51.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer54 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass55 = typeCircularBuffer54.getClass();
        boolean boolean56 = typeCircularBuffer51.put((java.lang.reflect.Type) wildcardClass55);
        java.lang.reflect.Type type57 = typeCircularBuffer51.get();
        boolean boolean58 = typeCircularBuffer49.put(type57);
        java.lang.Class<?> wildcardClass59 = typeCircularBuffer49.getClass();
        boolean boolean60 = typeCircularBuffer44.put((java.lang.reflect.Type) wildcardClass59);
        boolean boolean61 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass59);
        boolean boolean62 = typeCircularBuffer30.isFull();
        java.lang.reflect.Type type63 = typeCircularBuffer30.get();
        boolean boolean64 = typeCircularBuffer30.isEmpty();
        boolean boolean65 = typeCircularBuffer30.isEmpty();
        java.lang.Class<?> wildcardClass66 = typeCircularBuffer30.getClass();
        boolean boolean67 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(type12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(type31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(type47);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
    }

    @Test
    public void test2307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2307");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        java.lang.reflect.Type type12 = typeCircularBuffer6.get();
        boolean boolean13 = typeCircularBuffer4.put(type12);
        boolean boolean14 = typeCircularBuffer4.isFull();
        java.lang.reflect.Type type15 = typeCircularBuffer4.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        boolean boolean21 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean22 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean24 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type25 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean30 = typeCircularBuffer29.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass33 = typeCircularBuffer32.getClass();
        boolean boolean34 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass33);
        java.lang.reflect.Type type35 = typeCircularBuffer29.get();
        boolean boolean36 = typeCircularBuffer27.put(type35);
        boolean boolean37 = typeCircularBuffer27.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean40 = typeCircularBuffer39.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass43 = typeCircularBuffer42.getClass();
        boolean boolean44 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass43);
        java.lang.reflect.Type type45 = typeCircularBuffer39.get();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        boolean boolean48 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass47);
        boolean boolean49 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass47);
        boolean boolean50 = typeCircularBuffer27.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer52 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type53 = typeCircularBuffer52.get();
        boolean boolean54 = typeCircularBuffer52.isFull();
        boolean boolean55 = typeCircularBuffer52.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer57 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean58 = typeCircularBuffer57.isEmpty();
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        boolean boolean61 = typeCircularBuffer57.put((java.lang.reflect.Type) wildcardClass60);
        java.lang.Class<?> wildcardClass62 = typeCircularBuffer57.getClass();
        boolean boolean63 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass62);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer65 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean66 = typeCircularBuffer65.isEmpty();
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        boolean boolean69 = typeCircularBuffer65.put((java.lang.reflect.Type) wildcardClass68);
        java.lang.Class<?> wildcardClass70 = typeCircularBuffer65.getClass();
        boolean boolean71 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass70);
        boolean boolean72 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass70);
        java.lang.reflect.Type type73 = typeCircularBuffer27.get();
        boolean boolean74 = typeCircularBuffer1.put(type73);
        java.lang.reflect.Type type75 = typeCircularBuffer1.get();
        boolean boolean76 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type77 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(type53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNull(type77);
    }

    @Test
    public void test2308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2308");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        boolean boolean6 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test2309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2309");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass10);
        boolean boolean13 = typeCircularBuffer1.isEmpty();
        boolean boolean14 = typeCircularBuffer1.isEmpty();
        boolean boolean15 = typeCircularBuffer1.isFull();
        boolean boolean16 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test2310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2310");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        java.lang.reflect.Type type11 = typeCircularBuffer1.get();
        boolean boolean12 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type13 = typeCircularBuffer1.get();
        java.lang.reflect.Type type14 = typeCircularBuffer1.get();
        boolean boolean15 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type16 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(type13);
        org.junit.Assert.assertNull(type14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(type16);
    }

    @Test
    public void test2311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2311");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '#');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer5 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean6 = typeCircularBuffer5.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass9 = typeCircularBuffer8.getClass();
        boolean boolean10 = typeCircularBuffer5.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.reflect.Type type11 = typeCircularBuffer5.get();
        boolean boolean12 = typeCircularBuffer3.put(type11);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer19.getClass();
        boolean boolean21 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type22 = typeCircularBuffer16.get();
        boolean boolean23 = typeCircularBuffer14.put(type22);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer14.getClass();
        boolean boolean25 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean26 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean27 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean30 = typeCircularBuffer29.isFull();
        java.lang.reflect.Type type31 = typeCircularBuffer29.get();
        boolean boolean32 = typeCircularBuffer29.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean35 = typeCircularBuffer34.isFull();
        boolean boolean36 = typeCircularBuffer34.isEmpty();
        boolean boolean37 = typeCircularBuffer34.isFull();
        java.lang.reflect.Type type38 = null;
        boolean boolean39 = typeCircularBuffer34.put(type38);
        boolean boolean40 = typeCircularBuffer34.isFull();
        boolean boolean41 = typeCircularBuffer34.isFull();
        java.lang.Class<?> wildcardClass42 = typeCircularBuffer34.getClass();
        boolean boolean43 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass42);
        boolean boolean44 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass42);
        java.lang.reflect.Type type45 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass46 = type45.getClass();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(type31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test2312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2312");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        boolean boolean5 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass8 = typeCircularBuffer7.getClass();
        boolean boolean9 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass8);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean12 = typeCircularBuffer11.isFull();
        boolean boolean13 = typeCircularBuffer11.isEmpty();
        boolean boolean14 = typeCircularBuffer11.isFull();
        java.lang.Class<?> wildcardClass15 = typeCircularBuffer11.getClass();
        boolean boolean16 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass15);
        java.lang.reflect.Type type17 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean22 = typeCircularBuffer21.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass25 = typeCircularBuffer24.getClass();
        boolean boolean26 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.reflect.Type type27 = typeCircularBuffer21.get();
        boolean boolean28 = typeCircularBuffer19.put(type27);
        boolean boolean29 = typeCircularBuffer19.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer34.getClass();
        boolean boolean36 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass35);
        java.lang.reflect.Type type37 = typeCircularBuffer31.get();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        boolean boolean40 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass39);
        boolean boolean41 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass39);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer46.getClass();
        boolean boolean48 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass47);
        java.lang.reflect.Type type49 = typeCircularBuffer43.get();
        boolean boolean50 = typeCircularBuffer19.put(type49);
        java.lang.reflect.Type type51 = typeCircularBuffer19.get();
        boolean boolean52 = typeCircularBuffer1.put(type51);
        boolean boolean53 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer55 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean56 = typeCircularBuffer55.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer58 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass59 = typeCircularBuffer58.getClass();
        boolean boolean60 = typeCircularBuffer55.put((java.lang.reflect.Type) wildcardClass59);
        java.lang.reflect.Type type61 = typeCircularBuffer55.get();
        java.lang.Class<?> wildcardClass62 = typeCircularBuffer55.getClass();
        boolean boolean63 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass62);
        java.lang.reflect.Type type64 = typeCircularBuffer1.get();
        boolean boolean65 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass66 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test2313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2313");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) 'a');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass12 = typeCircularBuffer11.getClass();
        boolean boolean13 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass12);
        java.lang.reflect.Type type14 = typeCircularBuffer9.get();
        java.lang.reflect.Type type15 = typeCircularBuffer9.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type18 = typeCircularBuffer17.get();
        boolean boolean19 = typeCircularBuffer17.isFull();
        boolean boolean20 = typeCircularBuffer17.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        boolean boolean26 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer22.getClass();
        boolean boolean28 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass27);
        java.lang.reflect.Type type29 = typeCircularBuffer17.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean34 = typeCircularBuffer33.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass37 = typeCircularBuffer36.getClass();
        boolean boolean38 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass37);
        java.lang.reflect.Type type39 = typeCircularBuffer33.get();
        boolean boolean40 = typeCircularBuffer31.put(type39);
        boolean boolean41 = typeCircularBuffer17.put(type39);
        java.lang.Class<?> wildcardClass42 = typeCircularBuffer17.getClass();
        boolean boolean43 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass42);
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer9.getClass();
        boolean boolean45 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean46 = typeCircularBuffer1.isEmpty();
        boolean boolean47 = typeCircularBuffer1.isFull();
        boolean boolean48 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean51 = typeCircularBuffer50.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer53 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass54 = typeCircularBuffer53.getClass();
        boolean boolean55 = typeCircularBuffer50.put((java.lang.reflect.Type) wildcardClass54);
        java.lang.reflect.Type type56 = null;
        boolean boolean57 = typeCircularBuffer50.put(type56);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer59 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer61 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean62 = typeCircularBuffer61.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer64 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass65 = typeCircularBuffer64.getClass();
        boolean boolean66 = typeCircularBuffer61.put((java.lang.reflect.Type) wildcardClass65);
        java.lang.reflect.Type type67 = typeCircularBuffer61.get();
        java.lang.Class<?> wildcardClass68 = typeCircularBuffer61.getClass();
        boolean boolean69 = typeCircularBuffer59.put((java.lang.reflect.Type) wildcardClass68);
        boolean boolean70 = typeCircularBuffer50.put((java.lang.reflect.Type) wildcardClass68);
        boolean boolean71 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass68);
        boolean boolean72 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNull(type15);
        org.junit.Assert.assertNull(type18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test2314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2314");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean4 = typeCircularBuffer3.isFull();
        boolean boolean5 = typeCircularBuffer3.isEmpty();
        java.lang.reflect.Type type6 = typeCircularBuffer3.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer10.get();
        boolean boolean17 = typeCircularBuffer8.put(type16);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer8.getClass();
        boolean boolean19 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass18);
        boolean boolean20 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass18);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type23 = typeCircularBuffer22.get();
        boolean boolean24 = typeCircularBuffer22.isFull();
        boolean boolean25 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean28 = typeCircularBuffer27.isEmpty();
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        boolean boolean31 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass30);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer27.getClass();
        boolean boolean33 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean37 = typeCircularBuffer36.isFull();
        boolean boolean38 = typeCircularBuffer36.isEmpty();
        java.lang.reflect.Type type39 = typeCircularBuffer36.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer46.getClass();
        boolean boolean48 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass47);
        java.lang.reflect.Type type49 = typeCircularBuffer43.get();
        boolean boolean50 = typeCircularBuffer41.put(type49);
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer41.getClass();
        boolean boolean52 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean53 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass51);
        java.lang.Class<?> wildcardClass54 = typeCircularBuffer22.getClass();
        boolean boolean55 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean56 = typeCircularBuffer1.isEmpty();
        boolean boolean57 = typeCircularBuffer1.isFull();
        boolean boolean58 = typeCircularBuffer1.isFull();
        boolean boolean59 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type60 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer62 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean63 = typeCircularBuffer62.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer65 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass66 = typeCircularBuffer65.getClass();
        boolean boolean67 = typeCircularBuffer62.put((java.lang.reflect.Type) wildcardClass66);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer69 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer71 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean72 = typeCircularBuffer71.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer74 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass75 = typeCircularBuffer74.getClass();
        boolean boolean76 = typeCircularBuffer71.put((java.lang.reflect.Type) wildcardClass75);
        java.lang.reflect.Type type77 = typeCircularBuffer71.get();
        boolean boolean78 = typeCircularBuffer69.put(type77);
        boolean boolean79 = typeCircularBuffer69.isFull();
        java.lang.reflect.Type type80 = typeCircularBuffer69.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer82 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean83 = typeCircularBuffer82.isEmpty();
        java.lang.Object obj84 = new java.lang.Object();
        java.lang.Class<?> wildcardClass85 = obj84.getClass();
        boolean boolean86 = typeCircularBuffer82.put((java.lang.reflect.Type) wildcardClass85);
        boolean boolean87 = typeCircularBuffer69.put((java.lang.reflect.Type) wildcardClass85);
        boolean boolean88 = typeCircularBuffer62.put((java.lang.reflect.Type) wildcardClass85);
        boolean boolean89 = typeCircularBuffer62.isFull();
        boolean boolean90 = typeCircularBuffer62.isFull();
        boolean boolean91 = typeCircularBuffer62.isEmpty();
        boolean boolean92 = typeCircularBuffer62.isFull();
        java.lang.reflect.Type type93 = typeCircularBuffer62.get();
        boolean boolean94 = typeCircularBuffer1.put(type93);
        boolean boolean95 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type96 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(type39);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(type93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(type96);
    }

    @Test
    public void test2315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2315");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer10.get();
        boolean boolean17 = typeCircularBuffer8.put(type16);
        boolean boolean18 = typeCircularBuffer8.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean21 = typeCircularBuffer20.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer23.getClass();
        boolean boolean25 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass24);
        java.lang.reflect.Type type26 = typeCircularBuffer20.get();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        boolean boolean29 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass28);
        boolean boolean30 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass28);
        boolean boolean31 = typeCircularBuffer8.isEmpty();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        boolean boolean34 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass33);
        boolean boolean35 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass33);
        boolean boolean36 = typeCircularBuffer1.isFull();
        boolean boolean37 = typeCircularBuffer1.isFull();
        boolean boolean38 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type39 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(type39);
    }

    @Test
    public void test2316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2316");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        boolean boolean5 = typeCircularBuffer1.isFull();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean16 = typeCircularBuffer15.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer18.getClass();
        boolean boolean20 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass19);
        java.lang.reflect.Type type21 = typeCircularBuffer15.get();
        boolean boolean22 = typeCircularBuffer13.put(type21);
        boolean boolean23 = typeCircularBuffer13.isFull();
        java.lang.reflect.Type type24 = typeCircularBuffer13.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type27 = typeCircularBuffer26.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean30 = typeCircularBuffer29.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass33 = typeCircularBuffer32.getClass();
        boolean boolean34 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass33);
        java.lang.reflect.Type type35 = typeCircularBuffer29.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type38 = typeCircularBuffer37.get();
        boolean boolean39 = typeCircularBuffer37.isFull();
        boolean boolean40 = typeCircularBuffer37.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean43 = typeCircularBuffer42.isEmpty();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        boolean boolean46 = typeCircularBuffer42.put((java.lang.reflect.Type) wildcardClass45);
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer42.getClass();
        boolean boolean48 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass47);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean51 = typeCircularBuffer50.isEmpty();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        boolean boolean54 = typeCircularBuffer50.put((java.lang.reflect.Type) wildcardClass53);
        java.lang.Class<?> wildcardClass55 = typeCircularBuffer50.getClass();
        boolean boolean56 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass55);
        boolean boolean57 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass55);
        boolean boolean58 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass55);
        boolean boolean59 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass55);
        boolean boolean60 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass55);
        boolean boolean61 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer63 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 1);
        java.lang.reflect.Type type64 = typeCircularBuffer63.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer66 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '#');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer68 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer70 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean71 = typeCircularBuffer70.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer73 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass74 = typeCircularBuffer73.getClass();
        boolean boolean75 = typeCircularBuffer70.put((java.lang.reflect.Type) wildcardClass74);
        java.lang.reflect.Type type76 = typeCircularBuffer70.get();
        boolean boolean77 = typeCircularBuffer68.put(type76);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer79 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer81 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean82 = typeCircularBuffer81.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer84 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass85 = typeCircularBuffer84.getClass();
        boolean boolean86 = typeCircularBuffer81.put((java.lang.reflect.Type) wildcardClass85);
        java.lang.reflect.Type type87 = typeCircularBuffer81.get();
        boolean boolean88 = typeCircularBuffer79.put(type87);
        java.lang.Class<?> wildcardClass89 = typeCircularBuffer79.getClass();
        boolean boolean90 = typeCircularBuffer68.put((java.lang.reflect.Type) wildcardClass89);
        boolean boolean91 = typeCircularBuffer66.put((java.lang.reflect.Type) wildcardClass89);
        boolean boolean92 = typeCircularBuffer66.isEmpty();
        java.lang.Class<?> wildcardClass93 = typeCircularBuffer66.getClass();
        boolean boolean94 = typeCircularBuffer63.put((java.lang.reflect.Type) wildcardClass93);
        java.lang.reflect.Type type95 = typeCircularBuffer63.get();
        boolean boolean96 = typeCircularBuffer10.put(type95);
        boolean boolean97 = typeCircularBuffer1.put(type95);
        java.lang.Class<?> wildcardClass98 = type95.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNull(type27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNull(type38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(type64);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(type87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNotNull(type95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test2317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2317");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) 'a');
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(type6);
    }

    @Test
    public void test2318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2318");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type9 = typeCircularBuffer8.get();
        boolean boolean10 = typeCircularBuffer8.isFull();
        boolean boolean11 = typeCircularBuffer8.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass16);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer13.getClass();
        boolean boolean19 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass18);
        java.lang.reflect.Type type20 = typeCircularBuffer8.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean25 = typeCircularBuffer24.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer27.getClass();
        boolean boolean29 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.reflect.Type type30 = typeCircularBuffer24.get();
        boolean boolean31 = typeCircularBuffer22.put(type30);
        boolean boolean32 = typeCircularBuffer8.put(type30);
        java.lang.reflect.Type type33 = null;
        boolean boolean34 = typeCircularBuffer8.put(type33);
        java.lang.reflect.Type type35 = typeCircularBuffer8.get();
        boolean boolean36 = typeCircularBuffer1.put(type35);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean41 = typeCircularBuffer40.isFull();
        java.lang.reflect.Type type42 = typeCircularBuffer40.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean45 = typeCircularBuffer44.isEmpty();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        boolean boolean48 = typeCircularBuffer44.put((java.lang.reflect.Type) wildcardClass47);
        java.lang.Class<?> wildcardClass49 = typeCircularBuffer44.getClass();
        boolean boolean50 = typeCircularBuffer40.put((java.lang.reflect.Type) wildcardClass49);
        boolean boolean51 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass49);
        java.lang.Class<?> wildcardClass52 = typeCircularBuffer38.getClass();
        boolean boolean53 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass52);
        java.lang.reflect.Type type54 = typeCircularBuffer1.get();
        boolean boolean55 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(type42);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(type54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
    }

    @Test
    public void test2319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2319");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        boolean boolean8 = typeCircularBuffer1.isEmpty();
        boolean boolean9 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test2320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2320");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer6.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.reflect.Type type13 = typeCircularBuffer1.get();
        boolean boolean14 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type17 = typeCircularBuffer16.get();
        boolean boolean18 = typeCircularBuffer16.isFull();
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer16.getClass();
        boolean boolean20 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass19);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        boolean boolean24 = typeCircularBuffer22.isEmpty();
        boolean boolean25 = typeCircularBuffer22.isFull();
        java.lang.Class<?> wildcardClass26 = typeCircularBuffer22.getClass();
        boolean boolean27 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass26);
        boolean boolean28 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(type17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test2321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2321");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        java.lang.reflect.Type type12 = typeCircularBuffer6.get();
        boolean boolean13 = typeCircularBuffer4.put(type12);
        boolean boolean14 = typeCircularBuffer4.isFull();
        java.lang.reflect.Type type15 = typeCircularBuffer4.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        boolean boolean21 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean22 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean24 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type25 = typeCircularBuffer1.get();
        java.lang.reflect.Type type26 = typeCircularBuffer1.get();
        boolean boolean27 = typeCircularBuffer1.isFull();
        boolean boolean28 = typeCircularBuffer1.isEmpty();
        boolean boolean29 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer34.getClass();
        boolean boolean36 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass35);
        java.lang.reflect.Type type37 = typeCircularBuffer31.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type40 = typeCircularBuffer39.get();
        boolean boolean41 = typeCircularBuffer39.isFull();
        boolean boolean42 = typeCircularBuffer39.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean45 = typeCircularBuffer44.isEmpty();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        boolean boolean48 = typeCircularBuffer44.put((java.lang.reflect.Type) wildcardClass47);
        java.lang.Class<?> wildcardClass49 = typeCircularBuffer44.getClass();
        boolean boolean50 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass49);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer52 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean53 = typeCircularBuffer52.isEmpty();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        boolean boolean56 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass55);
        java.lang.Class<?> wildcardClass57 = typeCircularBuffer52.getClass();
        boolean boolean58 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass57);
        boolean boolean59 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass57);
        java.lang.reflect.Type type60 = typeCircularBuffer31.get();
        java.lang.reflect.Type type61 = typeCircularBuffer31.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer63 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean64 = typeCircularBuffer63.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer66 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass67 = typeCircularBuffer66.getClass();
        boolean boolean68 = typeCircularBuffer63.put((java.lang.reflect.Type) wildcardClass67);
        boolean boolean69 = typeCircularBuffer63.isEmpty();
        java.lang.reflect.Type type70 = typeCircularBuffer63.get();
        boolean boolean71 = typeCircularBuffer31.put(type70);
        java.lang.Class<?> wildcardClass72 = type70.getClass();
        boolean boolean73 = typeCircularBuffer1.put(type70);
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNull(type26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNull(type40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNull(type61);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
    }

    @Test
    public void test2322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2322");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        boolean boolean6 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        boolean boolean8 = typeCircularBuffer1.isFull();
        boolean boolean9 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type10 = null;
        boolean boolean11 = typeCircularBuffer1.put(type10);
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test2323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2323");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        boolean boolean8 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean13 = typeCircularBuffer12.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass16 = typeCircularBuffer15.getClass();
        boolean boolean17 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass16);
        java.lang.reflect.Type type18 = typeCircularBuffer12.get();
        boolean boolean19 = typeCircularBuffer10.put(type18);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean24 = typeCircularBuffer23.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer26.getClass();
        boolean boolean28 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass27);
        java.lang.reflect.Type type29 = typeCircularBuffer23.get();
        boolean boolean30 = typeCircularBuffer21.put(type29);
        java.lang.Class<?> wildcardClass31 = typeCircularBuffer21.getClass();
        boolean boolean32 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass31);
        boolean boolean33 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass31);
        java.lang.reflect.Type type34 = typeCircularBuffer1.get();
        java.lang.reflect.Type type35 = typeCircularBuffer1.get();
        boolean boolean36 = typeCircularBuffer1.isFull();
        boolean boolean37 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass38 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNull(type35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test2324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2324");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        boolean boolean8 = typeCircularBuffer7.isEmpty();
        java.lang.Class<?> wildcardClass9 = typeCircularBuffer7.getClass();
        boolean boolean10 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass9);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean13 = typeCircularBuffer12.isFull();
        boolean boolean14 = typeCircularBuffer12.isEmpty();
        boolean boolean15 = typeCircularBuffer12.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer20.getClass();
        boolean boolean22 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type23 = typeCircularBuffer17.get();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        boolean boolean26 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass25);
        boolean boolean27 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass25);
        boolean boolean28 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.reflect.Type type29 = typeCircularBuffer1.get();
        boolean boolean30 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type31 = typeCircularBuffer1.get();
        boolean boolean32 = typeCircularBuffer1.isFull();
        boolean boolean33 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test2325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2325");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean12 = typeCircularBuffer11.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass15 = typeCircularBuffer14.getClass();
        boolean boolean16 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass15);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean21 = typeCircularBuffer20.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer23.getClass();
        boolean boolean25 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass24);
        java.lang.reflect.Type type26 = typeCircularBuffer20.get();
        boolean boolean27 = typeCircularBuffer18.put(type26);
        boolean boolean28 = typeCircularBuffer18.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean31 = typeCircularBuffer30.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass34 = typeCircularBuffer33.getClass();
        boolean boolean35 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass34);
        java.lang.reflect.Type type36 = typeCircularBuffer30.get();
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        boolean boolean39 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass38);
        boolean boolean40 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass38);
        boolean boolean41 = typeCircularBuffer18.isEmpty();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        boolean boolean44 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass43);
        boolean boolean45 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass43);
        boolean boolean46 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass43);
        boolean boolean47 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer49 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 1);
        java.lang.reflect.Type type50 = typeCircularBuffer49.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer52 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean53 = typeCircularBuffer52.isFull();
        boolean boolean54 = typeCircularBuffer52.isEmpty();
        java.lang.reflect.Type type55 = typeCircularBuffer52.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer57 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer59 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean60 = typeCircularBuffer59.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer62 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass63 = typeCircularBuffer62.getClass();
        boolean boolean64 = typeCircularBuffer59.put((java.lang.reflect.Type) wildcardClass63);
        java.lang.reflect.Type type65 = typeCircularBuffer59.get();
        boolean boolean66 = typeCircularBuffer57.put(type65);
        java.lang.Class<?> wildcardClass67 = typeCircularBuffer57.getClass();
        boolean boolean68 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass67);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer70 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(10);
        java.lang.Class<?> wildcardClass71 = typeCircularBuffer70.getClass();
        boolean boolean72 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass71);
        boolean boolean73 = typeCircularBuffer49.put((java.lang.reflect.Type) wildcardClass71);
        boolean boolean74 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass71);
        java.lang.reflect.Type type75 = typeCircularBuffer1.get();
        boolean boolean76 = typeCircularBuffer1.isEmpty();
        boolean boolean77 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(type50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNull(type55);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test2326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2326");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type7 = typeCircularBuffer6.get();
        boolean boolean8 = typeCircularBuffer6.isFull();
        boolean boolean9 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean12 = typeCircularBuffer11.isEmpty();
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        boolean boolean15 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.Class<?> wildcardClass16 = typeCircularBuffer11.getClass();
        boolean boolean17 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass16);
        java.lang.reflect.Type type18 = typeCircularBuffer6.get();
        java.lang.Class<?> wildcardClass19 = type18.getClass();
        boolean boolean20 = typeCircularBuffer1.put(type18);
        java.lang.reflect.Type type21 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test2327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2327");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass10);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer19.getClass();
        boolean boolean21 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type22 = typeCircularBuffer16.get();
        java.lang.Class<?> wildcardClass23 = typeCircularBuffer16.getClass();
        boolean boolean24 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass23);
        boolean boolean25 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass23);
        boolean boolean26 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean29 = typeCircularBuffer28.isFull();
        boolean boolean30 = typeCircularBuffer28.isEmpty();
        boolean boolean31 = typeCircularBuffer28.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean34 = typeCircularBuffer33.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass37 = typeCircularBuffer36.getClass();
        boolean boolean38 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass37);
        java.lang.reflect.Type type39 = typeCircularBuffer33.get();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        boolean boolean42 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean43 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean44 = typeCircularBuffer28.isFull();
        java.lang.reflect.Type type45 = typeCircularBuffer28.get();
        java.lang.reflect.Type type46 = null;
        boolean boolean47 = typeCircularBuffer28.put(type46);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer49 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type50 = typeCircularBuffer49.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer52 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer54 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean55 = typeCircularBuffer54.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer57 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass58 = typeCircularBuffer57.getClass();
        boolean boolean59 = typeCircularBuffer54.put((java.lang.reflect.Type) wildcardClass58);
        java.lang.reflect.Type type60 = typeCircularBuffer54.get();
        boolean boolean61 = typeCircularBuffer52.put(type60);
        boolean boolean62 = typeCircularBuffer52.isFull();
        java.lang.reflect.Type type63 = typeCircularBuffer52.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer65 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean66 = typeCircularBuffer65.isEmpty();
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        boolean boolean69 = typeCircularBuffer65.put((java.lang.reflect.Type) wildcardClass68);
        boolean boolean70 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass68);
        boolean boolean71 = typeCircularBuffer49.put((java.lang.reflect.Type) wildcardClass68);
        boolean boolean72 = typeCircularBuffer49.isEmpty();
        boolean boolean73 = typeCircularBuffer49.isFull();
        boolean boolean74 = typeCircularBuffer49.isEmpty();
        java.lang.Class<?> wildcardClass75 = typeCircularBuffer49.getClass();
        boolean boolean76 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass75);
        boolean boolean77 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass75);
        boolean boolean78 = typeCircularBuffer1.isEmpty();
        boolean boolean79 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(type50);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
    }

    @Test
    public void test2328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2328");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isFull();
        boolean boolean8 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        boolean boolean10 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean13 = typeCircularBuffer12.isFull();
        java.lang.reflect.Type type14 = typeCircularBuffer12.get();
        boolean boolean15 = typeCircularBuffer12.isFull();
        java.lang.reflect.Type type16 = typeCircularBuffer12.get();
        boolean boolean17 = typeCircularBuffer12.isFull();
        boolean boolean18 = typeCircularBuffer12.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean21 = typeCircularBuffer20.isFull();
        boolean boolean22 = typeCircularBuffer20.isEmpty();
        java.lang.reflect.Type type23 = typeCircularBuffer20.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean28 = typeCircularBuffer27.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass31 = typeCircularBuffer30.getClass();
        boolean boolean32 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass31);
        java.lang.reflect.Type type33 = typeCircularBuffer27.get();
        boolean boolean34 = typeCircularBuffer25.put(type33);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer25.getClass();
        boolean boolean36 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass35);
        boolean boolean37 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass35);
        boolean boolean38 = typeCircularBuffer12.isEmpty();
        boolean boolean39 = typeCircularBuffer12.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer46.getClass();
        boolean boolean48 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass47);
        java.lang.reflect.Type type49 = typeCircularBuffer43.get();
        boolean boolean50 = typeCircularBuffer41.put(type49);
        java.lang.reflect.Type type51 = typeCircularBuffer41.get();
        java.lang.reflect.Type type52 = null;
        boolean boolean53 = typeCircularBuffer41.put(type52);
        boolean boolean54 = typeCircularBuffer41.isEmpty();
        java.lang.Class<?> wildcardClass55 = typeCircularBuffer41.getClass();
        boolean boolean56 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass55);
        java.lang.Class<?> wildcardClass57 = typeCircularBuffer12.getClass();
        boolean boolean58 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass57);
        java.lang.reflect.Type type59 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer61 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean62 = typeCircularBuffer61.isFull();
        java.lang.reflect.Type type63 = typeCircularBuffer61.get();
        boolean boolean64 = typeCircularBuffer61.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer66 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean67 = typeCircularBuffer66.isEmpty();
        java.lang.Class<?> wildcardClass68 = typeCircularBuffer66.getClass();
        boolean boolean69 = typeCircularBuffer61.put((java.lang.reflect.Type) wildcardClass68);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer71 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 1);
        boolean boolean72 = typeCircularBuffer71.isEmpty();
        boolean boolean73 = typeCircularBuffer71.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer75 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type76 = typeCircularBuffer75.get();
        boolean boolean77 = typeCircularBuffer75.isFull();
        boolean boolean78 = typeCircularBuffer75.isFull();
        boolean boolean79 = typeCircularBuffer75.isEmpty();
        java.lang.reflect.Type type80 = typeCircularBuffer75.get();
        java.lang.Class<?> wildcardClass81 = typeCircularBuffer75.getClass();
        boolean boolean82 = typeCircularBuffer71.put((java.lang.reflect.Type) wildcardClass81);
        boolean boolean83 = typeCircularBuffer61.put((java.lang.reflect.Type) wildcardClass81);
        java.lang.Class<?> wildcardClass84 = typeCircularBuffer61.getClass();
        boolean boolean85 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass84);
        boolean boolean86 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass87 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(type14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(type23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(type63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNull(type76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNull(type80);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test2329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2329");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer10.get();
        boolean boolean17 = typeCircularBuffer8.put(type16);
        boolean boolean18 = typeCircularBuffer8.isFull();
        java.lang.reflect.Type type19 = typeCircularBuffer8.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean22 = typeCircularBuffer21.isEmpty();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean26 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean27 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean28 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean31 = typeCircularBuffer30.isFull();
        boolean boolean32 = typeCircularBuffer30.isEmpty();
        boolean boolean33 = typeCircularBuffer30.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean36 = typeCircularBuffer35.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass39 = typeCircularBuffer38.getClass();
        boolean boolean40 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass39);
        java.lang.reflect.Type type41 = typeCircularBuffer35.get();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        boolean boolean44 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass43);
        boolean boolean45 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass43);
        boolean boolean46 = typeCircularBuffer30.isFull();
        java.lang.reflect.Type type47 = typeCircularBuffer30.get();
        boolean boolean48 = typeCircularBuffer1.put(type47);
        boolean boolean49 = typeCircularBuffer1.isEmpty();
        boolean boolean50 = typeCircularBuffer1.isFull();
        boolean boolean51 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type52 = null;
        boolean boolean53 = typeCircularBuffer1.put(type52);
        boolean boolean54 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass55 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test2330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2330");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) 'a');
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        java.lang.reflect.Type type8 = typeCircularBuffer6.get();
        boolean boolean9 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type12 = typeCircularBuffer11.get();
        boolean boolean13 = typeCircularBuffer11.isFull();
        boolean boolean14 = typeCircularBuffer11.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer19.getClass();
        boolean boolean21 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean22 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean23 = typeCircularBuffer11.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean28 = typeCircularBuffer27.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass31 = typeCircularBuffer30.getClass();
        boolean boolean32 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass31);
        java.lang.reflect.Type type33 = typeCircularBuffer27.get();
        boolean boolean34 = typeCircularBuffer25.put(type33);
        boolean boolean35 = typeCircularBuffer25.isFull();
        java.lang.reflect.Type type36 = typeCircularBuffer25.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean39 = typeCircularBuffer38.isEmpty();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        boolean boolean42 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean43 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass41);
        java.lang.reflect.Type type44 = typeCircularBuffer25.get();
        boolean boolean45 = typeCircularBuffer11.put(type44);
        java.lang.reflect.Type type46 = typeCircularBuffer11.get();
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer11.getClass();
        boolean boolean48 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass47);
        boolean boolean49 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass47);
        boolean boolean50 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(type46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test2331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2331");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        boolean boolean12 = typeCircularBuffer6.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer17.getClass();
        boolean boolean19 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass18);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean24 = typeCircularBuffer23.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer26.getClass();
        boolean boolean28 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass27);
        java.lang.reflect.Type type29 = typeCircularBuffer23.get();
        boolean boolean30 = typeCircularBuffer21.put(type29);
        boolean boolean31 = typeCircularBuffer21.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean34 = typeCircularBuffer33.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass37 = typeCircularBuffer36.getClass();
        boolean boolean38 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass37);
        java.lang.reflect.Type type39 = typeCircularBuffer33.get();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        boolean boolean42 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean43 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean44 = typeCircularBuffer21.isEmpty();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        boolean boolean47 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass46);
        boolean boolean48 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass46);
        boolean boolean49 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass46);
        java.lang.reflect.Type type50 = typeCircularBuffer6.get();
        boolean boolean51 = typeCircularBuffer6.isEmpty();
        java.lang.Class<?> wildcardClass52 = typeCircularBuffer6.getClass();
        boolean boolean53 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass52);
        java.lang.Class<?> wildcardClass54 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test2332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2332");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test2333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2333");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '#');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 10);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer5 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type6 = typeCircularBuffer5.get();
        boolean boolean7 = typeCircularBuffer5.isFull();
        java.lang.Class<?> wildcardClass8 = typeCircularBuffer5.getClass();
        boolean boolean9 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass8);
        boolean boolean10 = typeCircularBuffer3.isFull();
        boolean boolean11 = typeCircularBuffer3.isEmpty();
        java.lang.reflect.Type type12 = typeCircularBuffer3.get();
        boolean boolean13 = typeCircularBuffer1.put(type12);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test2334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2334");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass10);
        boolean boolean13 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type14 = typeCircularBuffer1.get();
        boolean boolean15 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type16 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(type14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(type16);
    }

    @Test
    public void test2335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2335");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean9 = typeCircularBuffer8.isFull();
        java.lang.reflect.Type type10 = typeCircularBuffer8.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean13 = typeCircularBuffer12.isEmpty();
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        boolean boolean16 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass15);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer12.getClass();
        boolean boolean18 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass17);
        boolean boolean19 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass17);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '#');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean26 = typeCircularBuffer25.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass29 = typeCircularBuffer28.getClass();
        boolean boolean30 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass29);
        java.lang.reflect.Type type31 = typeCircularBuffer25.get();
        boolean boolean32 = typeCircularBuffer23.put(type31);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean37 = typeCircularBuffer36.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass40 = typeCircularBuffer39.getClass();
        boolean boolean41 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass40);
        java.lang.reflect.Type type42 = typeCircularBuffer36.get();
        boolean boolean43 = typeCircularBuffer34.put(type42);
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer34.getClass();
        boolean boolean45 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean46 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean47 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass44);
        java.lang.reflect.Type type48 = typeCircularBuffer1.get();
        java.lang.reflect.Type type49 = typeCircularBuffer1.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass50 = type49.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNull(type49);
    }

    @Test
    public void test2336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2336");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        boolean boolean9 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer13.getClass();
        boolean boolean21 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean22 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean23 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type24 = typeCircularBuffer1.get();
        java.lang.reflect.Type type25 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNull(type25);
    }

    @Test
    public void test2337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2337");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        boolean boolean8 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean13 = typeCircularBuffer12.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass16 = typeCircularBuffer15.getClass();
        boolean boolean17 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass16);
        java.lang.reflect.Type type18 = typeCircularBuffer12.get();
        boolean boolean19 = typeCircularBuffer10.put(type18);
        boolean boolean20 = typeCircularBuffer10.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        boolean boolean24 = typeCircularBuffer22.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type27 = typeCircularBuffer26.get();
        boolean boolean28 = typeCircularBuffer26.isFull();
        boolean boolean29 = typeCircularBuffer26.isFull();
        boolean boolean30 = typeCircularBuffer26.isEmpty();
        java.lang.reflect.Type type31 = typeCircularBuffer26.get();
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer26.getClass();
        boolean boolean33 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass32);
        java.lang.reflect.Type type35 = typeCircularBuffer10.get();
        java.lang.reflect.Type type36 = typeCircularBuffer10.get();
        boolean boolean37 = typeCircularBuffer10.isFull();
        boolean boolean38 = typeCircularBuffer10.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '#');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean45 = typeCircularBuffer44.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass48 = typeCircularBuffer47.getClass();
        boolean boolean49 = typeCircularBuffer44.put((java.lang.reflect.Type) wildcardClass48);
        java.lang.reflect.Type type50 = typeCircularBuffer44.get();
        boolean boolean51 = typeCircularBuffer42.put(type50);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer53 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer55 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean56 = typeCircularBuffer55.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer58 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass59 = typeCircularBuffer58.getClass();
        boolean boolean60 = typeCircularBuffer55.put((java.lang.reflect.Type) wildcardClass59);
        java.lang.reflect.Type type61 = typeCircularBuffer55.get();
        boolean boolean62 = typeCircularBuffer53.put(type61);
        java.lang.Class<?> wildcardClass63 = typeCircularBuffer53.getClass();
        boolean boolean64 = typeCircularBuffer42.put((java.lang.reflect.Type) wildcardClass63);
        boolean boolean65 = typeCircularBuffer40.put((java.lang.reflect.Type) wildcardClass63);
        boolean boolean66 = typeCircularBuffer40.isEmpty();
        java.lang.Class<?> wildcardClass67 = typeCircularBuffer40.getClass();
        boolean boolean68 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass67);
        boolean boolean69 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass67);
        java.lang.Class<?> wildcardClass70 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(type31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNull(type36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test2338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2338");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type7 = typeCircularBuffer6.get();
        boolean boolean8 = typeCircularBuffer6.isFull();
        boolean boolean9 = typeCircularBuffer6.isEmpty();
        boolean boolean10 = typeCircularBuffer6.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass13);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean17 = typeCircularBuffer16.isFull();
        boolean boolean18 = typeCircularBuffer16.isEmpty();
        boolean boolean19 = typeCircularBuffer16.isFull();
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer16.getClass();
        boolean boolean21 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type22 = typeCircularBuffer6.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean27 = typeCircularBuffer26.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass30 = typeCircularBuffer29.getClass();
        boolean boolean31 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass30);
        java.lang.reflect.Type type32 = typeCircularBuffer26.get();
        boolean boolean33 = typeCircularBuffer24.put(type32);
        boolean boolean34 = typeCircularBuffer24.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean37 = typeCircularBuffer36.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass40 = typeCircularBuffer39.getClass();
        boolean boolean41 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass40);
        java.lang.reflect.Type type42 = typeCircularBuffer36.get();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        boolean boolean45 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean46 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass44);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean49 = typeCircularBuffer48.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass52 = typeCircularBuffer51.getClass();
        boolean boolean53 = typeCircularBuffer48.put((java.lang.reflect.Type) wildcardClass52);
        java.lang.reflect.Type type54 = typeCircularBuffer48.get();
        boolean boolean55 = typeCircularBuffer24.put(type54);
        java.lang.reflect.Type type56 = typeCircularBuffer24.get();
        boolean boolean57 = typeCircularBuffer6.put(type56);
        boolean boolean58 = typeCircularBuffer1.put(type56);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test2339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2339");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isFull();
        boolean boolean8 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass9 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test2340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2340");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean9 = typeCircularBuffer8.isFull();
        java.lang.reflect.Type type10 = typeCircularBuffer8.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean13 = typeCircularBuffer12.isEmpty();
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        boolean boolean16 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass15);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer12.getClass();
        boolean boolean18 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass17);
        boolean boolean19 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass17);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type24 = typeCircularBuffer23.get();
        boolean boolean25 = typeCircularBuffer23.isFull();
        boolean boolean26 = typeCircularBuffer23.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        boolean boolean32 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass31);
        java.lang.Class<?> wildcardClass33 = typeCircularBuffer28.getClass();
        boolean boolean34 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass33);
        boolean boolean35 = typeCircularBuffer23.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean38 = typeCircularBuffer37.isFull();
        boolean boolean39 = typeCircularBuffer37.isEmpty();
        java.lang.reflect.Type type40 = typeCircularBuffer37.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean45 = typeCircularBuffer44.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass48 = typeCircularBuffer47.getClass();
        boolean boolean49 = typeCircularBuffer44.put((java.lang.reflect.Type) wildcardClass48);
        java.lang.reflect.Type type50 = typeCircularBuffer44.get();
        boolean boolean51 = typeCircularBuffer42.put(type50);
        java.lang.Class<?> wildcardClass52 = typeCircularBuffer42.getClass();
        boolean boolean53 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass52);
        boolean boolean54 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass52);
        boolean boolean55 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass52);
        boolean boolean56 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass52);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer58 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean59 = typeCircularBuffer58.isEmpty();
        boolean boolean60 = typeCircularBuffer58.isEmpty();
        java.lang.reflect.Type type61 = typeCircularBuffer58.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer63 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean64 = typeCircularBuffer63.isEmpty();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        boolean boolean67 = typeCircularBuffer63.put((java.lang.reflect.Type) wildcardClass66);
        boolean boolean68 = typeCircularBuffer63.isFull();
        java.lang.Class<?> wildcardClass69 = typeCircularBuffer63.getClass();
        boolean boolean70 = typeCircularBuffer58.put((java.lang.reflect.Type) wildcardClass69);
        boolean boolean71 = typeCircularBuffer58.isFull();
        java.lang.reflect.Type type72 = typeCircularBuffer58.get();
        boolean boolean73 = typeCircularBuffer1.put(type72);
        java.lang.Class<?> wildcardClass74 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(type40);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(type61);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test2341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2341");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer6.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.reflect.Type type13 = typeCircularBuffer1.get();
        boolean boolean14 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer19.getClass();
        boolean boolean21 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean22 = typeCircularBuffer16.isEmpty();
        java.lang.reflect.Type type23 = typeCircularBuffer16.get();
        boolean boolean24 = typeCircularBuffer1.put(type23);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type27 = typeCircularBuffer26.get();
        boolean boolean28 = typeCircularBuffer26.isFull();
        boolean boolean29 = typeCircularBuffer26.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        boolean boolean35 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass34);
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer31.getClass();
        boolean boolean37 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass36);
        java.lang.reflect.Type type38 = typeCircularBuffer26.get();
        boolean boolean39 = typeCircularBuffer26.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type42 = typeCircularBuffer41.get();
        boolean boolean43 = typeCircularBuffer41.isFull();
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer41.getClass();
        boolean boolean45 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean46 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean47 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer49 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type50 = typeCircularBuffer49.get();
        boolean boolean51 = typeCircularBuffer49.isFull();
        boolean boolean52 = typeCircularBuffer49.isFull();
        boolean boolean53 = typeCircularBuffer49.isFull();
        boolean boolean54 = typeCircularBuffer49.isFull();
        java.lang.reflect.Type type55 = typeCircularBuffer49.get();
        boolean boolean56 = typeCircularBuffer49.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer58 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type59 = typeCircularBuffer58.get();
        boolean boolean60 = typeCircularBuffer58.isFull();
        boolean boolean61 = typeCircularBuffer58.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer63 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean64 = typeCircularBuffer63.isEmpty();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        boolean boolean67 = typeCircularBuffer63.put((java.lang.reflect.Type) wildcardClass66);
        java.lang.Class<?> wildcardClass68 = typeCircularBuffer63.getClass();
        boolean boolean69 = typeCircularBuffer58.put((java.lang.reflect.Type) wildcardClass68);
        java.lang.reflect.Type type70 = typeCircularBuffer58.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer72 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer74 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean75 = typeCircularBuffer74.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer77 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass78 = typeCircularBuffer77.getClass();
        boolean boolean79 = typeCircularBuffer74.put((java.lang.reflect.Type) wildcardClass78);
        java.lang.reflect.Type type80 = typeCircularBuffer74.get();
        boolean boolean81 = typeCircularBuffer72.put(type80);
        boolean boolean82 = typeCircularBuffer58.put(type80);
        java.lang.Class<?> wildcardClass83 = typeCircularBuffer58.getClass();
        boolean boolean84 = typeCircularBuffer49.put((java.lang.reflect.Type) wildcardClass83);
        java.lang.reflect.Type type85 = typeCircularBuffer49.get();
        boolean boolean86 = typeCircularBuffer1.put(type85);
        boolean boolean87 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type88 = typeCircularBuffer1.get();
        java.lang.reflect.Type type89 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass90 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(type42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(type50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(type55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(type59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(type85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(type88);
        org.junit.Assert.assertNull(type89);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test2342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2342");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer6.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.reflect.Type type13 = typeCircularBuffer1.get();
        boolean boolean14 = typeCircularBuffer1.isFull();
        boolean boolean15 = typeCircularBuffer1.isEmpty();
        boolean boolean16 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type17 = typeCircularBuffer1.get();
        boolean boolean18 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(type17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test2343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2343");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer17.getClass();
        boolean boolean19 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass18);
        java.lang.reflect.Type type20 = typeCircularBuffer14.get();
        boolean boolean21 = typeCircularBuffer12.put(type20);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer12.getClass();
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass22);
        boolean boolean24 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer31.getClass();
        boolean boolean33 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass32);
        java.lang.reflect.Type type34 = typeCircularBuffer28.get();
        boolean boolean35 = typeCircularBuffer26.put(type34);
        boolean boolean36 = typeCircularBuffer26.isFull();
        java.lang.reflect.Type type37 = typeCircularBuffer26.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean40 = typeCircularBuffer39.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass43 = typeCircularBuffer42.getClass();
        boolean boolean44 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass43);
        boolean boolean45 = typeCircularBuffer39.isFull();
        java.lang.reflect.Type type46 = typeCircularBuffer39.get();
        boolean boolean47 = typeCircularBuffer26.put(type46);
        boolean boolean48 = typeCircularBuffer1.put(type46);
        java.lang.Class<?> wildcardClass49 = type46.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test2344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2344");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer10.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type19 = typeCircularBuffer18.get();
        boolean boolean20 = typeCircularBuffer18.isFull();
        boolean boolean21 = typeCircularBuffer18.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean24 = typeCircularBuffer23.isEmpty();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        boolean boolean27 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass26);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer23.getClass();
        boolean boolean29 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass28);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        boolean boolean35 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass34);
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer31.getClass();
        boolean boolean37 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean38 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean39 = typeCircularBuffer10.isEmpty();
        boolean boolean40 = typeCircularBuffer10.isFull();
        java.lang.Class<?> wildcardClass41 = typeCircularBuffer10.getClass();
        boolean boolean42 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass41);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean47 = typeCircularBuffer46.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer49 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass50 = typeCircularBuffer49.getClass();
        boolean boolean51 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass50);
        java.lang.reflect.Type type52 = typeCircularBuffer46.get();
        boolean boolean53 = typeCircularBuffer44.put(type52);
        boolean boolean54 = typeCircularBuffer44.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer56 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean57 = typeCircularBuffer56.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer59 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass60 = typeCircularBuffer59.getClass();
        boolean boolean61 = typeCircularBuffer56.put((java.lang.reflect.Type) wildcardClass60);
        java.lang.reflect.Type type62 = typeCircularBuffer56.get();
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        boolean boolean65 = typeCircularBuffer56.put((java.lang.reflect.Type) wildcardClass64);
        boolean boolean66 = typeCircularBuffer44.put((java.lang.reflect.Type) wildcardClass64);
        boolean boolean67 = typeCircularBuffer44.isEmpty();
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        boolean boolean70 = typeCircularBuffer44.put((java.lang.reflect.Type) wildcardClass69);
        java.lang.reflect.Type type71 = typeCircularBuffer44.get();
        java.lang.Class<?> wildcardClass72 = typeCircularBuffer44.getClass();
        boolean boolean73 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass72);
        boolean boolean74 = typeCircularBuffer1.isFull();
        boolean boolean75 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer77 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean78 = typeCircularBuffer77.isFull();
        java.lang.reflect.Type type79 = typeCircularBuffer77.get();
        boolean boolean80 = typeCircularBuffer77.isFull();
        java.lang.reflect.Type type81 = null;
        boolean boolean82 = typeCircularBuffer77.put(type81);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer84 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) 'a');
        boolean boolean85 = typeCircularBuffer84.isFull();
        java.lang.Class<?> wildcardClass86 = typeCircularBuffer84.getClass();
        boolean boolean87 = typeCircularBuffer77.put((java.lang.reflect.Type) wildcardClass86);
        boolean boolean88 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass86);
        boolean boolean89 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNull(type19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNull(type79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
    }

    @Test
    public void test2345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2345");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type12 = null;
        boolean boolean13 = typeCircularBuffer1.put(type12);
        boolean boolean14 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer19.getClass();
        boolean boolean21 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type22 = typeCircularBuffer16.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type25 = typeCircularBuffer24.get();
        boolean boolean26 = typeCircularBuffer24.isFull();
        boolean boolean27 = typeCircularBuffer24.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean30 = typeCircularBuffer29.isEmpty();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        boolean boolean33 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass32);
        java.lang.Class<?> wildcardClass34 = typeCircularBuffer29.getClass();
        boolean boolean35 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass34);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean38 = typeCircularBuffer37.isEmpty();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        boolean boolean41 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass40);
        java.lang.Class<?> wildcardClass42 = typeCircularBuffer37.getClass();
        boolean boolean43 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass42);
        boolean boolean44 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass42);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean49 = typeCircularBuffer48.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass52 = typeCircularBuffer51.getClass();
        boolean boolean53 = typeCircularBuffer48.put((java.lang.reflect.Type) wildcardClass52);
        java.lang.reflect.Type type54 = typeCircularBuffer48.get();
        boolean boolean55 = typeCircularBuffer46.put(type54);
        boolean boolean56 = typeCircularBuffer46.isFull();
        java.lang.reflect.Type type57 = typeCircularBuffer46.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer59 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type60 = typeCircularBuffer59.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer62 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean63 = typeCircularBuffer62.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer65 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass66 = typeCircularBuffer65.getClass();
        boolean boolean67 = typeCircularBuffer62.put((java.lang.reflect.Type) wildcardClass66);
        java.lang.reflect.Type type68 = typeCircularBuffer62.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer70 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type71 = typeCircularBuffer70.get();
        boolean boolean72 = typeCircularBuffer70.isFull();
        boolean boolean73 = typeCircularBuffer70.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer75 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean76 = typeCircularBuffer75.isEmpty();
        java.lang.Object obj77 = new java.lang.Object();
        java.lang.Class<?> wildcardClass78 = obj77.getClass();
        boolean boolean79 = typeCircularBuffer75.put((java.lang.reflect.Type) wildcardClass78);
        java.lang.Class<?> wildcardClass80 = typeCircularBuffer75.getClass();
        boolean boolean81 = typeCircularBuffer70.put((java.lang.reflect.Type) wildcardClass80);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer83 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean84 = typeCircularBuffer83.isEmpty();
        java.lang.Object obj85 = new java.lang.Object();
        java.lang.Class<?> wildcardClass86 = obj85.getClass();
        boolean boolean87 = typeCircularBuffer83.put((java.lang.reflect.Type) wildcardClass86);
        java.lang.Class<?> wildcardClass88 = typeCircularBuffer83.getClass();
        boolean boolean89 = typeCircularBuffer70.put((java.lang.reflect.Type) wildcardClass88);
        boolean boolean90 = typeCircularBuffer62.put((java.lang.reflect.Type) wildcardClass88);
        boolean boolean91 = typeCircularBuffer59.put((java.lang.reflect.Type) wildcardClass88);
        boolean boolean92 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass88);
        boolean boolean93 = typeCircularBuffer46.isEmpty();
        java.lang.Class<?> wildcardClass94 = typeCircularBuffer46.getClass();
        boolean boolean95 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass94);
        java.lang.reflect.Type type96 = typeCircularBuffer16.get();
        boolean boolean97 = typeCircularBuffer1.put(type96);
        boolean boolean98 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type99 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNull(type25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNull(type60);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNull(type71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(wildcardClass94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(type96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
        org.junit.Assert.assertNotNull(type99);
    }

    @Test
    public void test2346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2346");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean24 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type25 = typeCircularBuffer1.get();
        boolean boolean26 = typeCircularBuffer1.isFull();
        boolean boolean27 = typeCircularBuffer1.isEmpty();
        boolean boolean28 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test2347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2347");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer6.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.reflect.Type type13 = typeCircularBuffer1.get();
        boolean boolean14 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer19.getClass();
        boolean boolean21 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean22 = typeCircularBuffer16.isEmpty();
        java.lang.reflect.Type type23 = typeCircularBuffer16.get();
        boolean boolean24 = typeCircularBuffer1.put(type23);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type27 = typeCircularBuffer26.get();
        boolean boolean28 = typeCircularBuffer26.isFull();
        boolean boolean29 = typeCircularBuffer26.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        boolean boolean35 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass34);
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer31.getClass();
        boolean boolean37 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass36);
        java.lang.reflect.Type type38 = typeCircularBuffer26.get();
        boolean boolean39 = typeCircularBuffer26.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type42 = typeCircularBuffer41.get();
        boolean boolean43 = typeCircularBuffer41.isFull();
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer41.getClass();
        boolean boolean45 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean46 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean47 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer49 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean50 = typeCircularBuffer49.isEmpty();
        java.lang.reflect.Type type51 = typeCircularBuffer49.get();
        java.lang.reflect.Type type52 = typeCircularBuffer49.get();
        java.lang.reflect.Type type53 = typeCircularBuffer49.get();
        boolean boolean54 = typeCircularBuffer49.isFull();
        boolean boolean55 = typeCircularBuffer49.isFull();
        java.lang.reflect.Type type56 = typeCircularBuffer49.get();
        java.lang.reflect.Type type57 = typeCircularBuffer49.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer59 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean60 = typeCircularBuffer59.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer62 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass63 = typeCircularBuffer62.getClass();
        boolean boolean64 = typeCircularBuffer59.put((java.lang.reflect.Type) wildcardClass63);
        java.lang.reflect.Type type65 = typeCircularBuffer59.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer67 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type68 = typeCircularBuffer67.get();
        boolean boolean69 = typeCircularBuffer67.isFull();
        boolean boolean70 = typeCircularBuffer67.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer72 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean73 = typeCircularBuffer72.isEmpty();
        java.lang.Object obj74 = new java.lang.Object();
        java.lang.Class<?> wildcardClass75 = obj74.getClass();
        boolean boolean76 = typeCircularBuffer72.put((java.lang.reflect.Type) wildcardClass75);
        java.lang.Class<?> wildcardClass77 = typeCircularBuffer72.getClass();
        boolean boolean78 = typeCircularBuffer67.put((java.lang.reflect.Type) wildcardClass77);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer80 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean81 = typeCircularBuffer80.isEmpty();
        java.lang.Object obj82 = new java.lang.Object();
        java.lang.Class<?> wildcardClass83 = obj82.getClass();
        boolean boolean84 = typeCircularBuffer80.put((java.lang.reflect.Type) wildcardClass83);
        java.lang.Class<?> wildcardClass85 = typeCircularBuffer80.getClass();
        boolean boolean86 = typeCircularBuffer67.put((java.lang.reflect.Type) wildcardClass85);
        boolean boolean87 = typeCircularBuffer59.put((java.lang.reflect.Type) wildcardClass85);
        java.lang.reflect.Type type88 = typeCircularBuffer59.get();
        boolean boolean89 = typeCircularBuffer49.put(type88);
        boolean boolean90 = typeCircularBuffer1.put(type88);
        boolean boolean91 = typeCircularBuffer1.isEmpty();
        boolean boolean92 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(type42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(type51);
        org.junit.Assert.assertNull(type52);
        org.junit.Assert.assertNull(type53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(type56);
        org.junit.Assert.assertNull(type57);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNull(type68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(type88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
    }

    @Test
    public void test2348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2348");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = null;
        boolean boolean8 = typeCircularBuffer1.put(type7);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean13 = typeCircularBuffer12.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass16 = typeCircularBuffer15.getClass();
        boolean boolean17 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass16);
        java.lang.reflect.Type type18 = typeCircularBuffer12.get();
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer12.getClass();
        boolean boolean20 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass19);
        boolean boolean21 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass19);
        boolean boolean22 = typeCircularBuffer1.isFull();
        boolean boolean23 = typeCircularBuffer1.isEmpty();
        boolean boolean24 = typeCircularBuffer1.isFull();
        boolean boolean25 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type26 = typeCircularBuffer1.get();
        java.lang.reflect.Type type27 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNull(type27);
    }

    @Test
    public void test2349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2349");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer6.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.reflect.Type type13 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer20.getClass();
        boolean boolean22 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type23 = typeCircularBuffer17.get();
        boolean boolean24 = typeCircularBuffer15.put(type23);
        boolean boolean25 = typeCircularBuffer1.put(type23);
        java.lang.reflect.Type type26 = null;
        boolean boolean27 = typeCircularBuffer1.put(type26);
        java.lang.reflect.Type type28 = typeCircularBuffer1.get();
        boolean boolean29 = typeCircularBuffer1.isFull();
        boolean boolean30 = typeCircularBuffer1.isEmpty();
        boolean boolean31 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
    }

    @Test
    public void test2350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2350");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer5 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean6 = typeCircularBuffer5.isEmpty();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = typeCircularBuffer5.put((java.lang.reflect.Type) wildcardClass8);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer5.getClass();
        boolean boolean11 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass10);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        boolean boolean19 = typeCircularBuffer13.isEmpty();
        java.lang.reflect.Type type20 = typeCircularBuffer13.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        java.lang.reflect.Type type23 = typeCircularBuffer22.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean26 = typeCircularBuffer25.isFull();
        boolean boolean27 = typeCircularBuffer25.isEmpty();
        boolean boolean28 = typeCircularBuffer25.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean31 = typeCircularBuffer30.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass34 = typeCircularBuffer33.getClass();
        boolean boolean35 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass34);
        java.lang.reflect.Type type36 = typeCircularBuffer30.get();
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        boolean boolean39 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass38);
        boolean boolean40 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass38);
        boolean boolean41 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass38);
        java.lang.Class<?> wildcardClass42 = typeCircularBuffer22.getClass();
        boolean boolean43 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass42);
        boolean boolean44 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass42);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type47 = typeCircularBuffer46.get();
        boolean boolean48 = typeCircularBuffer46.isFull();
        boolean boolean49 = typeCircularBuffer46.isFull();
        boolean boolean50 = typeCircularBuffer46.isFull();
        java.lang.reflect.Type type51 = typeCircularBuffer46.get();
        boolean boolean52 = typeCircularBuffer46.isEmpty();
        java.lang.reflect.Type type53 = typeCircularBuffer46.get();
        java.lang.reflect.Type type54 = typeCircularBuffer46.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer56 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean57 = typeCircularBuffer56.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer59 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass60 = typeCircularBuffer59.getClass();
        boolean boolean61 = typeCircularBuffer56.put((java.lang.reflect.Type) wildcardClass60);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer63 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer65 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean66 = typeCircularBuffer65.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer68 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass69 = typeCircularBuffer68.getClass();
        boolean boolean70 = typeCircularBuffer65.put((java.lang.reflect.Type) wildcardClass69);
        java.lang.reflect.Type type71 = typeCircularBuffer65.get();
        boolean boolean72 = typeCircularBuffer63.put(type71);
        boolean boolean73 = typeCircularBuffer63.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer75 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean76 = typeCircularBuffer75.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer78 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass79 = typeCircularBuffer78.getClass();
        boolean boolean80 = typeCircularBuffer75.put((java.lang.reflect.Type) wildcardClass79);
        java.lang.reflect.Type type81 = typeCircularBuffer75.get();
        java.lang.Object obj82 = new java.lang.Object();
        java.lang.Class<?> wildcardClass83 = obj82.getClass();
        boolean boolean84 = typeCircularBuffer75.put((java.lang.reflect.Type) wildcardClass83);
        boolean boolean85 = typeCircularBuffer63.put((java.lang.reflect.Type) wildcardClass83);
        boolean boolean86 = typeCircularBuffer63.isEmpty();
        java.lang.Object obj87 = new java.lang.Object();
        java.lang.Class<?> wildcardClass88 = obj87.getClass();
        boolean boolean89 = typeCircularBuffer63.put((java.lang.reflect.Type) wildcardClass88);
        boolean boolean90 = typeCircularBuffer56.put((java.lang.reflect.Type) wildcardClass88);
        boolean boolean91 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass88);
        boolean boolean92 = typeCircularBuffer46.isFull();
        java.lang.Class<?> wildcardClass93 = typeCircularBuffer46.getClass();
        boolean boolean94 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass93);
        java.lang.reflect.Type type95 = typeCircularBuffer1.get();
        boolean boolean96 = typeCircularBuffer1.isEmpty();
        boolean boolean97 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNull(type23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(type47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(type51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(type53);
        org.junit.Assert.assertNull(type54);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(type81);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNotNull(type95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test2351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2351");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type4 = typeCircularBuffer3.get();
        boolean boolean5 = typeCircularBuffer3.isFull();
        boolean boolean6 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean9 = typeCircularBuffer8.isEmpty();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer8.getClass();
        boolean boolean14 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass13);
        boolean boolean15 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean18 = typeCircularBuffer17.isFull();
        boolean boolean19 = typeCircularBuffer17.isEmpty();
        java.lang.reflect.Type type20 = typeCircularBuffer17.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean25 = typeCircularBuffer24.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer27.getClass();
        boolean boolean29 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.reflect.Type type30 = typeCircularBuffer24.get();
        boolean boolean31 = typeCircularBuffer22.put(type30);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer22.getClass();
        boolean boolean33 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean35 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass32);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean38 = typeCircularBuffer37.isFull();
        java.lang.reflect.Type type39 = typeCircularBuffer37.get();
        boolean boolean40 = typeCircularBuffer37.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean43 = typeCircularBuffer42.isEmpty();
        java.lang.reflect.Type type44 = typeCircularBuffer42.get();
        java.lang.reflect.Type type45 = typeCircularBuffer42.get();
        java.lang.reflect.Type type46 = typeCircularBuffer42.get();
        boolean boolean47 = typeCircularBuffer42.isFull();
        boolean boolean48 = typeCircularBuffer42.isFull();
        java.lang.reflect.Type type49 = typeCircularBuffer42.get();
        boolean boolean50 = typeCircularBuffer42.isFull();
        boolean boolean51 = typeCircularBuffer42.isEmpty();
        java.lang.Class<?> wildcardClass52 = typeCircularBuffer42.getClass();
        boolean boolean53 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass52);
        boolean boolean54 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass52);
        boolean boolean55 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type56 = null;
        boolean boolean57 = typeCircularBuffer1.put(type56);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(type20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(type39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(type44);
        org.junit.Assert.assertNull(type45);
        org.junit.Assert.assertNull(type46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(type49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test2352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2352");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isEmpty();
        boolean boolean12 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer17.getClass();
        boolean boolean19 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass18);
        java.lang.reflect.Type type20 = typeCircularBuffer14.get();
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        boolean boolean23 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass22);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean26 = typeCircularBuffer25.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass29 = typeCircularBuffer28.getClass();
        boolean boolean30 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass29);
        java.lang.reflect.Type type31 = typeCircularBuffer25.get();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        boolean boolean34 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass33);
        java.lang.reflect.Type type35 = typeCircularBuffer25.get();
        boolean boolean36 = typeCircularBuffer14.put(type35);
        boolean boolean37 = typeCircularBuffer1.put(type35);
        java.lang.reflect.Type type38 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(type38);
    }

    @Test
    public void test2353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2353");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        boolean boolean7 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer10.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type15 = typeCircularBuffer14.get();
        boolean boolean16 = typeCircularBuffer14.isFull();
        boolean boolean17 = typeCircularBuffer14.isEmpty();
        boolean boolean18 = typeCircularBuffer14.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer20.getClass();
        boolean boolean22 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass21);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean25 = typeCircularBuffer24.isFull();
        boolean boolean26 = typeCircularBuffer24.isEmpty();
        boolean boolean27 = typeCircularBuffer24.isFull();
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer24.getClass();
        boolean boolean29 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.reflect.Type type30 = typeCircularBuffer14.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type33 = typeCircularBuffer32.get();
        boolean boolean34 = typeCircularBuffer32.isFull();
        boolean boolean35 = typeCircularBuffer32.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean38 = typeCircularBuffer37.isEmpty();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        boolean boolean41 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass40);
        java.lang.Class<?> wildcardClass42 = typeCircularBuffer37.getClass();
        boolean boolean43 = typeCircularBuffer32.put((java.lang.reflect.Type) wildcardClass42);
        java.lang.reflect.Type type44 = typeCircularBuffer32.get();
        boolean boolean45 = typeCircularBuffer32.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean48 = typeCircularBuffer47.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer50.getClass();
        boolean boolean52 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean53 = typeCircularBuffer47.isEmpty();
        java.lang.reflect.Type type54 = typeCircularBuffer47.get();
        boolean boolean55 = typeCircularBuffer32.put(type54);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer57 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type58 = typeCircularBuffer57.get();
        boolean boolean59 = typeCircularBuffer57.isFull();
        boolean boolean60 = typeCircularBuffer57.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer62 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean63 = typeCircularBuffer62.isEmpty();
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        boolean boolean66 = typeCircularBuffer62.put((java.lang.reflect.Type) wildcardClass65);
        java.lang.Class<?> wildcardClass67 = typeCircularBuffer62.getClass();
        boolean boolean68 = typeCircularBuffer57.put((java.lang.reflect.Type) wildcardClass67);
        java.lang.reflect.Type type69 = typeCircularBuffer57.get();
        boolean boolean70 = typeCircularBuffer57.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer72 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type73 = typeCircularBuffer72.get();
        boolean boolean74 = typeCircularBuffer72.isFull();
        java.lang.Class<?> wildcardClass75 = typeCircularBuffer72.getClass();
        boolean boolean76 = typeCircularBuffer57.put((java.lang.reflect.Type) wildcardClass75);
        boolean boolean77 = typeCircularBuffer32.put((java.lang.reflect.Type) wildcardClass75);
        java.lang.reflect.Type type78 = typeCircularBuffer32.get();
        boolean boolean79 = typeCircularBuffer14.put(type78);
        boolean boolean80 = typeCircularBuffer1.put(type78);
        boolean boolean81 = typeCircularBuffer1.isFull();
        boolean boolean82 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(type15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNull(type33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(type58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(type73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
    }

    @Test
    public void test2354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2354");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isEmpty();
        boolean boolean12 = typeCircularBuffer1.isFull();
        boolean boolean13 = typeCircularBuffer1.isEmpty();
        boolean boolean14 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer19.getClass();
        boolean boolean21 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type22 = typeCircularBuffer16.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type25 = typeCircularBuffer24.get();
        boolean boolean26 = typeCircularBuffer24.isFull();
        boolean boolean27 = typeCircularBuffer24.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean30 = typeCircularBuffer29.isEmpty();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        boolean boolean33 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass32);
        java.lang.Class<?> wildcardClass34 = typeCircularBuffer29.getClass();
        boolean boolean35 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass34);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean38 = typeCircularBuffer37.isEmpty();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        boolean boolean41 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass40);
        java.lang.Class<?> wildcardClass42 = typeCircularBuffer37.getClass();
        boolean boolean43 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass42);
        boolean boolean44 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass42);
        boolean boolean45 = typeCircularBuffer16.isEmpty();
        boolean boolean46 = typeCircularBuffer16.isEmpty();
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer16.getClass();
        boolean boolean48 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass47);
        boolean boolean49 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        java.lang.reflect.Type type52 = typeCircularBuffer51.get();
        boolean boolean53 = typeCircularBuffer51.isEmpty();
        java.lang.Class<?> wildcardClass54 = typeCircularBuffer51.getClass();
        boolean boolean55 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean56 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNull(type25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(type52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
    }

    @Test
    public void test2355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2355");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type11 = typeCircularBuffer10.get();
        boolean boolean12 = typeCircularBuffer10.isFull();
        boolean boolean13 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean16 = typeCircularBuffer15.isEmpty();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        boolean boolean19 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass18);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer15.getClass();
        boolean boolean21 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type22 = typeCircularBuffer10.get();
        boolean boolean23 = typeCircularBuffer10.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean26 = typeCircularBuffer25.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass29 = typeCircularBuffer28.getClass();
        boolean boolean30 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass29);
        boolean boolean31 = typeCircularBuffer25.isEmpty();
        java.lang.reflect.Type type32 = typeCircularBuffer25.get();
        boolean boolean33 = typeCircularBuffer10.put(type32);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type36 = typeCircularBuffer35.get();
        boolean boolean37 = typeCircularBuffer35.isFull();
        boolean boolean38 = typeCircularBuffer35.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean41 = typeCircularBuffer40.isEmpty();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        boolean boolean44 = typeCircularBuffer40.put((java.lang.reflect.Type) wildcardClass43);
        java.lang.Class<?> wildcardClass45 = typeCircularBuffer40.getClass();
        boolean boolean46 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass45);
        java.lang.reflect.Type type47 = typeCircularBuffer35.get();
        boolean boolean48 = typeCircularBuffer35.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type51 = typeCircularBuffer50.get();
        boolean boolean52 = typeCircularBuffer50.isFull();
        java.lang.Class<?> wildcardClass53 = typeCircularBuffer50.getClass();
        boolean boolean54 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass53);
        boolean boolean55 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass53);
        boolean boolean56 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer58 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type59 = typeCircularBuffer58.get();
        boolean boolean60 = typeCircularBuffer58.isFull();
        boolean boolean61 = typeCircularBuffer58.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer63 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean64 = typeCircularBuffer63.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer66 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass67 = typeCircularBuffer66.getClass();
        boolean boolean68 = typeCircularBuffer63.put((java.lang.reflect.Type) wildcardClass67);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer70 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer72 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean73 = typeCircularBuffer72.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer75 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass76 = typeCircularBuffer75.getClass();
        boolean boolean77 = typeCircularBuffer72.put((java.lang.reflect.Type) wildcardClass76);
        java.lang.reflect.Type type78 = typeCircularBuffer72.get();
        boolean boolean79 = typeCircularBuffer70.put(type78);
        boolean boolean80 = typeCircularBuffer70.isFull();
        java.lang.reflect.Type type81 = typeCircularBuffer70.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer83 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean84 = typeCircularBuffer83.isEmpty();
        java.lang.Object obj85 = new java.lang.Object();
        java.lang.Class<?> wildcardClass86 = obj85.getClass();
        boolean boolean87 = typeCircularBuffer83.put((java.lang.reflect.Type) wildcardClass86);
        boolean boolean88 = typeCircularBuffer70.put((java.lang.reflect.Type) wildcardClass86);
        boolean boolean89 = typeCircularBuffer63.put((java.lang.reflect.Type) wildcardClass86);
        boolean boolean90 = typeCircularBuffer63.isFull();
        boolean boolean91 = typeCircularBuffer63.isFull();
        boolean boolean92 = typeCircularBuffer63.isEmpty();
        boolean boolean93 = typeCircularBuffer63.isFull();
        java.lang.reflect.Type type94 = typeCircularBuffer63.get();
        boolean boolean95 = typeCircularBuffer58.put(type94);
        boolean boolean96 = typeCircularBuffer10.put(type94);
        boolean boolean97 = typeCircularBuffer1.put(type94);
        boolean boolean98 = typeCircularBuffer1.isFull();
        boolean boolean99 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertNull(type11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(type36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(type51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(type59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(type81);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertNotNull(type94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + true + "'", boolean99 == true);
    }

    @Test
    public void test2356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2356");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        java.lang.reflect.Type type12 = typeCircularBuffer6.get();
        boolean boolean13 = typeCircularBuffer4.put(type12);
        boolean boolean14 = typeCircularBuffer4.isFull();
        java.lang.reflect.Type type15 = typeCircularBuffer4.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        boolean boolean21 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean22 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean24 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type25 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean30 = typeCircularBuffer29.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass33 = typeCircularBuffer32.getClass();
        boolean boolean34 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass33);
        java.lang.reflect.Type type35 = typeCircularBuffer29.get();
        boolean boolean36 = typeCircularBuffer27.put(type35);
        boolean boolean37 = typeCircularBuffer27.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean40 = typeCircularBuffer39.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass43 = typeCircularBuffer42.getClass();
        boolean boolean44 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass43);
        java.lang.reflect.Type type45 = typeCircularBuffer39.get();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        boolean boolean48 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass47);
        boolean boolean49 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass47);
        boolean boolean50 = typeCircularBuffer27.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer52 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type53 = typeCircularBuffer52.get();
        boolean boolean54 = typeCircularBuffer52.isFull();
        boolean boolean55 = typeCircularBuffer52.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer57 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean58 = typeCircularBuffer57.isEmpty();
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        boolean boolean61 = typeCircularBuffer57.put((java.lang.reflect.Type) wildcardClass60);
        java.lang.Class<?> wildcardClass62 = typeCircularBuffer57.getClass();
        boolean boolean63 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass62);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer65 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean66 = typeCircularBuffer65.isEmpty();
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        boolean boolean69 = typeCircularBuffer65.put((java.lang.reflect.Type) wildcardClass68);
        java.lang.Class<?> wildcardClass70 = typeCircularBuffer65.getClass();
        boolean boolean71 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass70);
        boolean boolean72 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass70);
        java.lang.reflect.Type type73 = typeCircularBuffer27.get();
        boolean boolean74 = typeCircularBuffer1.put(type73);
        boolean boolean75 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass76 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(type53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test2357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2357");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type4 = typeCircularBuffer3.get();
        boolean boolean5 = typeCircularBuffer3.isFull();
        boolean boolean6 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean9 = typeCircularBuffer8.isEmpty();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer8.getClass();
        boolean boolean14 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass13);
        boolean boolean15 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean18 = typeCircularBuffer17.isFull();
        boolean boolean19 = typeCircularBuffer17.isEmpty();
        java.lang.reflect.Type type20 = typeCircularBuffer17.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean25 = typeCircularBuffer24.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer27.getClass();
        boolean boolean29 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.reflect.Type type30 = typeCircularBuffer24.get();
        boolean boolean31 = typeCircularBuffer22.put(type30);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer22.getClass();
        boolean boolean33 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean35 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean36 = typeCircularBuffer1.isFull();
        boolean boolean37 = typeCircularBuffer1.isEmpty();
        boolean boolean38 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type39 = null;
        boolean boolean40 = typeCircularBuffer1.put(type39);
        boolean boolean41 = typeCircularBuffer1.isFull();
        boolean boolean42 = typeCircularBuffer1.isFull();
        boolean boolean43 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type44 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(type20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(type44);
    }

    @Test
    public void test2358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2358");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean4 = typeCircularBuffer3.isFull();
        java.lang.reflect.Type type5 = typeCircularBuffer3.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean8 = typeCircularBuffer7.isEmpty();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        boolean boolean11 = typeCircularBuffer7.put((java.lang.reflect.Type) wildcardClass10);
        java.lang.Class<?> wildcardClass12 = typeCircularBuffer7.getClass();
        boolean boolean13 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass12);
        boolean boolean14 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass12);
        boolean boolean15 = typeCircularBuffer1.isEmpty();
        boolean boolean16 = typeCircularBuffer1.isEmpty();
        boolean boolean17 = typeCircularBuffer1.isFull();
        boolean boolean18 = typeCircularBuffer1.isEmpty();
        boolean boolean19 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test2359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2359");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean24 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type25 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean28 = typeCircularBuffer27.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass31 = typeCircularBuffer30.getClass();
        boolean boolean32 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass31);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean37 = typeCircularBuffer36.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass40 = typeCircularBuffer39.getClass();
        boolean boolean41 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass40);
        java.lang.reflect.Type type42 = typeCircularBuffer36.get();
        boolean boolean43 = typeCircularBuffer34.put(type42);
        boolean boolean44 = typeCircularBuffer34.isFull();
        java.lang.reflect.Type type45 = typeCircularBuffer34.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean48 = typeCircularBuffer47.isEmpty();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        boolean boolean51 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass50);
        boolean boolean52 = typeCircularBuffer34.put((java.lang.reflect.Type) wildcardClass50);
        boolean boolean53 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass50);
        boolean boolean54 = typeCircularBuffer27.isFull();
        boolean boolean55 = typeCircularBuffer27.isFull();
        java.lang.Class<?> wildcardClass56 = typeCircularBuffer27.getClass();
        boolean boolean57 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass56);
        boolean boolean58 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type59 = typeCircularBuffer1.get();
        java.lang.reflect.Type type60 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer62 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean63 = typeCircularBuffer62.isFull();
        java.lang.reflect.Type type64 = typeCircularBuffer62.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer66 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean67 = typeCircularBuffer66.isEmpty();
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        boolean boolean70 = typeCircularBuffer66.put((java.lang.reflect.Type) wildcardClass69);
        java.lang.Class<?> wildcardClass71 = typeCircularBuffer66.getClass();
        boolean boolean72 = typeCircularBuffer62.put((java.lang.reflect.Type) wildcardClass71);
        boolean boolean73 = typeCircularBuffer62.isEmpty();
        boolean boolean74 = typeCircularBuffer62.isFull();
        java.lang.reflect.Type type75 = typeCircularBuffer62.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer77 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type78 = typeCircularBuffer77.get();
        boolean boolean79 = typeCircularBuffer77.isFull();
        boolean boolean80 = typeCircularBuffer77.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer82 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean83 = typeCircularBuffer82.isEmpty();
        java.lang.Object obj84 = new java.lang.Object();
        java.lang.Class<?> wildcardClass85 = obj84.getClass();
        boolean boolean86 = typeCircularBuffer82.put((java.lang.reflect.Type) wildcardClass85);
        java.lang.Class<?> wildcardClass87 = typeCircularBuffer82.getClass();
        boolean boolean88 = typeCircularBuffer77.put((java.lang.reflect.Type) wildcardClass87);
        boolean boolean89 = typeCircularBuffer62.put((java.lang.reflect.Type) wildcardClass87);
        boolean boolean90 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass87);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNull(type60);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(type64);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNull(type78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
    }

    @Test
    public void test2360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2360");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        boolean boolean8 = typeCircularBuffer1.isFull();
        boolean boolean9 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type10 = typeCircularBuffer1.get();
        boolean boolean11 = typeCircularBuffer1.isFull();
        boolean boolean12 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type15 = typeCircularBuffer14.get();
        boolean boolean16 = typeCircularBuffer14.isFull();
        boolean boolean17 = typeCircularBuffer14.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean20 = typeCircularBuffer19.isEmpty();
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        boolean boolean23 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass22);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer19.getClass();
        boolean boolean25 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass24);
        java.lang.reflect.Type type26 = typeCircularBuffer14.get();
        boolean boolean27 = typeCircularBuffer14.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type30 = typeCircularBuffer29.get();
        boolean boolean31 = typeCircularBuffer29.isFull();
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer29.getClass();
        boolean boolean33 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer14.isFull();
        java.lang.reflect.Type type35 = typeCircularBuffer14.get();
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer14.getClass();
        boolean boolean37 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean38 = typeCircularBuffer1.isFull();
        boolean boolean39 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(type15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test2361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2361");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        boolean boolean7 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean19 = typeCircularBuffer18.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer21.getClass();
        boolean boolean23 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass22);
        java.lang.reflect.Type type24 = typeCircularBuffer18.get();
        boolean boolean25 = typeCircularBuffer16.put(type24);
        boolean boolean26 = typeCircularBuffer16.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer31.getClass();
        boolean boolean33 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass32);
        java.lang.reflect.Type type34 = typeCircularBuffer28.get();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        boolean boolean37 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean38 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean39 = typeCircularBuffer16.isEmpty();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        boolean boolean42 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean43 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean44 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass41);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean47 = typeCircularBuffer46.isEmpty();
        boolean boolean48 = typeCircularBuffer46.isFull();
        java.lang.reflect.Type type49 = typeCircularBuffer46.get();
        boolean boolean50 = typeCircularBuffer46.isFull();
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer46.getClass();
        boolean boolean52 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean53 = typeCircularBuffer1.isFull();
        boolean boolean54 = typeCircularBuffer1.isEmpty();
        boolean boolean55 = typeCircularBuffer1.isFull();
        boolean boolean56 = typeCircularBuffer1.isFull();
        boolean boolean57 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass58 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(type49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test2362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2362");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean19 = typeCircularBuffer18.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer21.getClass();
        boolean boolean23 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass22);
        java.lang.reflect.Type type24 = typeCircularBuffer18.get();
        boolean boolean25 = typeCircularBuffer16.put(type24);
        boolean boolean26 = typeCircularBuffer16.isFull();
        java.lang.reflect.Type type27 = typeCircularBuffer16.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean30 = typeCircularBuffer29.isEmpty();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        boolean boolean33 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean35 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean36 = typeCircularBuffer9.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean39 = typeCircularBuffer38.isFull();
        boolean boolean40 = typeCircularBuffer38.isEmpty();
        boolean boolean41 = typeCircularBuffer38.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer46.getClass();
        boolean boolean48 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass47);
        java.lang.reflect.Type type49 = typeCircularBuffer43.get();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        boolean boolean52 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean53 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean54 = typeCircularBuffer38.isFull();
        java.lang.reflect.Type type55 = typeCircularBuffer38.get();
        boolean boolean56 = typeCircularBuffer9.put(type55);
        java.lang.Class<?> wildcardClass57 = type55.getClass();
        boolean boolean58 = typeCircularBuffer1.put(type55);
        java.lang.reflect.Type type59 = typeCircularBuffer1.get();
        boolean boolean60 = typeCircularBuffer1.isFull();
        boolean boolean61 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
    }

    @Test
    public void test2363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2363");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(type7);
    }

    @Test
    public void test2364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2364");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass9);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean13 = typeCircularBuffer12.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass16 = typeCircularBuffer15.getClass();
        boolean boolean17 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass16);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer12.getClass();
        boolean boolean19 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass18);
        java.lang.reflect.Type type20 = typeCircularBuffer1.get();
        java.lang.reflect.Type type21 = typeCircularBuffer1.get();
        boolean boolean22 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type25 = typeCircularBuffer24.get();
        boolean boolean26 = typeCircularBuffer24.isFull();
        boolean boolean27 = typeCircularBuffer24.isFull();
        boolean boolean28 = typeCircularBuffer24.isEmpty();
        java.lang.reflect.Type type29 = typeCircularBuffer24.get();
        boolean boolean30 = typeCircularBuffer24.isEmpty();
        java.lang.Class<?> wildcardClass31 = typeCircularBuffer24.getClass();
        boolean boolean32 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass31);
        java.lang.reflect.Type type33 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean36 = typeCircularBuffer35.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass39 = typeCircularBuffer38.getClass();
        boolean boolean40 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass39);
        java.lang.reflect.Type type41 = typeCircularBuffer35.get();
        boolean boolean42 = typeCircularBuffer35.isFull();
        java.lang.Class<?> wildcardClass43 = typeCircularBuffer35.getClass();
        boolean boolean44 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass43);
        java.lang.reflect.Type type45 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNull(type21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(type25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(type29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(type45);
    }

    @Test
    public void test2365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2365");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer6.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.reflect.Type type13 = typeCircularBuffer1.get();
        boolean boolean14 = typeCircularBuffer1.isFull();
        boolean boolean15 = typeCircularBuffer1.isEmpty();
        boolean boolean16 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type17 = null;
        boolean boolean18 = typeCircularBuffer1.put(type17);
        boolean boolean19 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test2366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2366");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass21);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean26 = typeCircularBuffer25.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass29 = typeCircularBuffer28.getClass();
        boolean boolean30 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass29);
        java.lang.reflect.Type type31 = typeCircularBuffer25.get();
        boolean boolean32 = typeCircularBuffer1.put(type31);
        boolean boolean33 = typeCircularBuffer1.isEmpty();
        boolean boolean34 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
    }

    @Test
    public void test2367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2367");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean10 = typeCircularBuffer9.isFull();
        boolean boolean11 = typeCircularBuffer9.isEmpty();
        java.lang.reflect.Type type12 = typeCircularBuffer9.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer19.getClass();
        boolean boolean21 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type22 = typeCircularBuffer16.get();
        boolean boolean23 = typeCircularBuffer14.put(type22);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer14.getClass();
        boolean boolean25 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean26 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean27 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type28 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(type12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(type28);
    }

    @Test
    public void test2368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2368");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        boolean boolean8 = typeCircularBuffer1.isEmpty();
        boolean boolean9 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type10 = typeCircularBuffer1.get();
        boolean boolean11 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test2369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2369");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type4 = typeCircularBuffer3.get();
        boolean boolean5 = typeCircularBuffer3.isFull();
        boolean boolean6 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean9 = typeCircularBuffer8.isEmpty();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer8.getClass();
        boolean boolean14 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass13);
        boolean boolean15 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean18 = typeCircularBuffer17.isFull();
        boolean boolean19 = typeCircularBuffer17.isEmpty();
        java.lang.reflect.Type type20 = typeCircularBuffer17.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean25 = typeCircularBuffer24.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer27.getClass();
        boolean boolean29 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.reflect.Type type30 = typeCircularBuffer24.get();
        boolean boolean31 = typeCircularBuffer22.put(type30);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer22.getClass();
        boolean boolean33 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean35 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass32);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean38 = typeCircularBuffer37.isFull();
        java.lang.reflect.Type type39 = typeCircularBuffer37.get();
        boolean boolean40 = typeCircularBuffer37.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean43 = typeCircularBuffer42.isEmpty();
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer42.getClass();
        boolean boolean45 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass44);
        java.lang.Class<?> wildcardClass46 = typeCircularBuffer37.getClass();
        boolean boolean47 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass46);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer49 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean50 = typeCircularBuffer49.isFull();
        boolean boolean51 = typeCircularBuffer49.isEmpty();
        boolean boolean52 = typeCircularBuffer49.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer54 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean55 = typeCircularBuffer54.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer57 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass58 = typeCircularBuffer57.getClass();
        boolean boolean59 = typeCircularBuffer54.put((java.lang.reflect.Type) wildcardClass58);
        java.lang.reflect.Type type60 = typeCircularBuffer54.get();
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        boolean boolean63 = typeCircularBuffer54.put((java.lang.reflect.Type) wildcardClass62);
        boolean boolean64 = typeCircularBuffer49.put((java.lang.reflect.Type) wildcardClass62);
        boolean boolean65 = typeCircularBuffer49.isFull();
        java.lang.reflect.Type type66 = typeCircularBuffer49.get();
        boolean boolean67 = typeCircularBuffer1.put(type66);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer69 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean70 = typeCircularBuffer69.isEmpty();
        boolean boolean71 = typeCircularBuffer69.isFull();
        boolean boolean72 = typeCircularBuffer69.isFull();
        boolean boolean73 = typeCircularBuffer69.isFull();
        boolean boolean74 = typeCircularBuffer69.isFull();
        boolean boolean75 = typeCircularBuffer69.isEmpty();
        java.lang.Class<?> wildcardClass76 = typeCircularBuffer69.getClass();
        boolean boolean77 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass76);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(type20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(type39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test2370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2370");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isEmpty();
        boolean boolean12 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer17.getClass();
        boolean boolean19 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass18);
        java.lang.reflect.Type type20 = typeCircularBuffer14.get();
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        boolean boolean23 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass22);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean26 = typeCircularBuffer25.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass29 = typeCircularBuffer28.getClass();
        boolean boolean30 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass29);
        java.lang.reflect.Type type31 = typeCircularBuffer25.get();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        boolean boolean34 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass33);
        java.lang.reflect.Type type35 = typeCircularBuffer25.get();
        boolean boolean36 = typeCircularBuffer14.put(type35);
        boolean boolean37 = typeCircularBuffer1.put(type35);
        boolean boolean38 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type41 = typeCircularBuffer40.get();
        boolean boolean42 = typeCircularBuffer40.isFull();
        boolean boolean43 = typeCircularBuffer40.isFull();
        boolean boolean44 = typeCircularBuffer40.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean49 = typeCircularBuffer48.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass52 = typeCircularBuffer51.getClass();
        boolean boolean53 = typeCircularBuffer48.put((java.lang.reflect.Type) wildcardClass52);
        java.lang.reflect.Type type54 = typeCircularBuffer48.get();
        boolean boolean55 = typeCircularBuffer46.put(type54);
        boolean boolean56 = typeCircularBuffer46.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer58 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean59 = typeCircularBuffer58.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer61 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass62 = typeCircularBuffer61.getClass();
        boolean boolean63 = typeCircularBuffer58.put((java.lang.reflect.Type) wildcardClass62);
        java.lang.reflect.Type type64 = typeCircularBuffer58.get();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        boolean boolean67 = typeCircularBuffer58.put((java.lang.reflect.Type) wildcardClass66);
        boolean boolean68 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass66);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer70 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean71 = typeCircularBuffer70.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer73 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass74 = typeCircularBuffer73.getClass();
        boolean boolean75 = typeCircularBuffer70.put((java.lang.reflect.Type) wildcardClass74);
        java.lang.reflect.Type type76 = typeCircularBuffer70.get();
        boolean boolean77 = typeCircularBuffer46.put(type76);
        java.lang.reflect.Type type78 = typeCircularBuffer46.get();
        boolean boolean79 = typeCircularBuffer40.put(type78);
        boolean boolean80 = typeCircularBuffer1.put(type78);
        boolean boolean81 = typeCircularBuffer1.isFull();
        boolean boolean82 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(type41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test2371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2371");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean10 = typeCircularBuffer9.isFull();
        boolean boolean11 = typeCircularBuffer9.isEmpty();
        boolean boolean12 = typeCircularBuffer9.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer17.getClass();
        boolean boolean19 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass18);
        java.lang.reflect.Type type20 = typeCircularBuffer14.get();
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        boolean boolean23 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass22);
        boolean boolean24 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass22);
        boolean boolean25 = typeCircularBuffer9.isFull();
        java.lang.reflect.Type type26 = typeCircularBuffer9.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean29 = typeCircularBuffer28.isFull();
        boolean boolean30 = typeCircularBuffer28.isEmpty();
        boolean boolean31 = typeCircularBuffer28.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean34 = typeCircularBuffer33.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass37 = typeCircularBuffer36.getClass();
        boolean boolean38 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass37);
        java.lang.reflect.Type type39 = typeCircularBuffer33.get();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        boolean boolean42 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean43 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean44 = typeCircularBuffer28.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean49 = typeCircularBuffer48.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass52 = typeCircularBuffer51.getClass();
        boolean boolean53 = typeCircularBuffer48.put((java.lang.reflect.Type) wildcardClass52);
        java.lang.reflect.Type type54 = typeCircularBuffer48.get();
        boolean boolean55 = typeCircularBuffer46.put(type54);
        boolean boolean56 = typeCircularBuffer46.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer58 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean59 = typeCircularBuffer58.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer61 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass62 = typeCircularBuffer61.getClass();
        boolean boolean63 = typeCircularBuffer58.put((java.lang.reflect.Type) wildcardClass62);
        java.lang.reflect.Type type64 = typeCircularBuffer58.get();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        boolean boolean67 = typeCircularBuffer58.put((java.lang.reflect.Type) wildcardClass66);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer69 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean70 = typeCircularBuffer69.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer72 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass73 = typeCircularBuffer72.getClass();
        boolean boolean74 = typeCircularBuffer69.put((java.lang.reflect.Type) wildcardClass73);
        java.lang.Class<?> wildcardClass75 = typeCircularBuffer69.getClass();
        boolean boolean76 = typeCircularBuffer58.put((java.lang.reflect.Type) wildcardClass75);
        boolean boolean77 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass75);
        boolean boolean78 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass75);
        boolean boolean79 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass75);
        java.lang.reflect.Type type80 = typeCircularBuffer9.get();
        java.lang.Class<?> wildcardClass81 = type80.getClass();
        boolean boolean82 = typeCircularBuffer1.put(type80);
        boolean boolean83 = typeCircularBuffer1.isFull();
        boolean boolean84 = typeCircularBuffer1.isFull();
        boolean boolean85 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test2372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2372");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        boolean boolean5 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass8 = typeCircularBuffer7.getClass();
        boolean boolean9 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass8);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean12 = typeCircularBuffer11.isFull();
        boolean boolean13 = typeCircularBuffer11.isEmpty();
        boolean boolean14 = typeCircularBuffer11.isFull();
        java.lang.Class<?> wildcardClass15 = typeCircularBuffer11.getClass();
        boolean boolean16 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass15);
        boolean boolean17 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type18 = typeCircularBuffer1.get();
        boolean boolean19 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean24 = typeCircularBuffer23.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer26.getClass();
        boolean boolean28 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass27);
        java.lang.reflect.Type type29 = typeCircularBuffer23.get();
        boolean boolean30 = typeCircularBuffer21.put(type29);
        java.lang.reflect.Type type31 = typeCircularBuffer21.get();
        java.lang.reflect.Type type32 = null;
        boolean boolean33 = typeCircularBuffer21.put(type32);
        boolean boolean34 = typeCircularBuffer21.isFull();
        boolean boolean35 = typeCircularBuffer21.isFull();
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer21.getClass();
        boolean boolean37 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean38 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.String> strCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.String>((int) ' ');
        java.lang.Class<?> wildcardClass41 = strCircularBuffer40.getClass();
        boolean boolean42 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass41);
        java.lang.reflect.Type type43 = typeCircularBuffer1.get();
        java.lang.reflect.Type type44 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNull(type44);
    }

    @Test
    public void test2373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2373");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type10 = typeCircularBuffer9.get();
        boolean boolean11 = typeCircularBuffer9.isFull();
        boolean boolean12 = typeCircularBuffer9.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type15 = typeCircularBuffer14.get();
        boolean boolean16 = typeCircularBuffer14.isFull();
        boolean boolean17 = typeCircularBuffer14.isEmpty();
        boolean boolean18 = typeCircularBuffer14.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer20.getClass();
        boolean boolean22 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass21);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean25 = typeCircularBuffer24.isFull();
        boolean boolean26 = typeCircularBuffer24.isEmpty();
        boolean boolean27 = typeCircularBuffer24.isFull();
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer24.getClass();
        boolean boolean29 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass28);
        boolean boolean30 = typeCircularBuffer14.isFull();
        boolean boolean31 = typeCircularBuffer14.isFull();
        boolean boolean32 = typeCircularBuffer14.isEmpty();
        boolean boolean33 = typeCircularBuffer14.isFull();
        java.lang.Class<?> wildcardClass34 = typeCircularBuffer14.getClass();
        boolean boolean35 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass34);
        boolean boolean36 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass34);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        java.lang.reflect.Type type39 = typeCircularBuffer38.get();
        boolean boolean40 = typeCircularBuffer38.isFull();
        boolean boolean41 = typeCircularBuffer38.isEmpty();
        boolean boolean42 = typeCircularBuffer38.isFull();
        java.lang.Class<?> wildcardClass43 = typeCircularBuffer38.getClass();
        boolean boolean44 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass43);
        boolean boolean45 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(type15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(type39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test2374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2374");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type10 = typeCircularBuffer9.get();
        boolean boolean11 = typeCircularBuffer9.isFull();
        boolean boolean12 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer14.getClass();
        boolean boolean20 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass19);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        boolean boolean26 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer22.getClass();
        boolean boolean28 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass27);
        java.lang.reflect.Type type30 = typeCircularBuffer1.get();
        boolean boolean31 = typeCircularBuffer1.isFull();
        boolean boolean32 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean37 = typeCircularBuffer36.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass40 = typeCircularBuffer39.getClass();
        boolean boolean41 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass40);
        java.lang.reflect.Type type42 = typeCircularBuffer36.get();
        boolean boolean43 = typeCircularBuffer34.put(type42);
        java.lang.reflect.Type type44 = typeCircularBuffer34.get();
        java.lang.reflect.Type type45 = null;
        boolean boolean46 = typeCircularBuffer34.put(type45);
        boolean boolean47 = typeCircularBuffer34.isFull();
        boolean boolean48 = typeCircularBuffer34.isFull();
        boolean boolean49 = typeCircularBuffer34.isFull();
        boolean boolean50 = typeCircularBuffer34.isFull();
        boolean boolean51 = typeCircularBuffer34.isFull();
        boolean boolean52 = typeCircularBuffer34.isFull();
        java.lang.Class<?> wildcardClass53 = typeCircularBuffer34.getClass();
        boolean boolean54 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
    }

    @Test
    public void test2375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2375");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isEmpty();
        boolean boolean12 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer17.getClass();
        boolean boolean19 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass18);
        java.lang.reflect.Type type20 = typeCircularBuffer14.get();
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        boolean boolean23 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass22);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean26 = typeCircularBuffer25.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass29 = typeCircularBuffer28.getClass();
        boolean boolean30 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass29);
        java.lang.reflect.Type type31 = typeCircularBuffer25.get();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        boolean boolean34 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass33);
        java.lang.reflect.Type type35 = typeCircularBuffer25.get();
        boolean boolean36 = typeCircularBuffer14.put(type35);
        boolean boolean37 = typeCircularBuffer1.put(type35);
        boolean boolean38 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type41 = typeCircularBuffer40.get();
        boolean boolean42 = typeCircularBuffer40.isFull();
        boolean boolean43 = typeCircularBuffer40.isFull();
        boolean boolean44 = typeCircularBuffer40.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean49 = typeCircularBuffer48.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass52 = typeCircularBuffer51.getClass();
        boolean boolean53 = typeCircularBuffer48.put((java.lang.reflect.Type) wildcardClass52);
        java.lang.reflect.Type type54 = typeCircularBuffer48.get();
        boolean boolean55 = typeCircularBuffer46.put(type54);
        boolean boolean56 = typeCircularBuffer46.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer58 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean59 = typeCircularBuffer58.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer61 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass62 = typeCircularBuffer61.getClass();
        boolean boolean63 = typeCircularBuffer58.put((java.lang.reflect.Type) wildcardClass62);
        java.lang.reflect.Type type64 = typeCircularBuffer58.get();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        boolean boolean67 = typeCircularBuffer58.put((java.lang.reflect.Type) wildcardClass66);
        boolean boolean68 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass66);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer70 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean71 = typeCircularBuffer70.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer73 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass74 = typeCircularBuffer73.getClass();
        boolean boolean75 = typeCircularBuffer70.put((java.lang.reflect.Type) wildcardClass74);
        java.lang.reflect.Type type76 = typeCircularBuffer70.get();
        boolean boolean77 = typeCircularBuffer46.put(type76);
        java.lang.reflect.Type type78 = typeCircularBuffer46.get();
        boolean boolean79 = typeCircularBuffer40.put(type78);
        boolean boolean80 = typeCircularBuffer1.put(type78);
        boolean boolean81 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer83 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean84 = typeCircularBuffer83.isEmpty();
        java.lang.reflect.Type type85 = typeCircularBuffer83.get();
        java.lang.reflect.Type type86 = typeCircularBuffer83.get();
        java.lang.reflect.Type type87 = typeCircularBuffer83.get();
        boolean boolean88 = typeCircularBuffer83.isFull();
        boolean boolean89 = typeCircularBuffer83.isFull();
        java.lang.reflect.Type type90 = typeCircularBuffer83.get();
        java.lang.reflect.Type type91 = typeCircularBuffer83.get();
        java.lang.Class<?> wildcardClass92 = typeCircularBuffer83.getClass();
        boolean boolean93 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass92);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(type41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNull(type85);
        org.junit.Assert.assertNull(type86);
        org.junit.Assert.assertNull(type87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNull(type90);
        org.junit.Assert.assertNull(type91);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test2376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2376");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean13 = typeCircularBuffer12.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass16 = typeCircularBuffer15.getClass();
        boolean boolean17 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass16);
        java.lang.reflect.Type type18 = typeCircularBuffer12.get();
        boolean boolean19 = typeCircularBuffer10.put(type18);
        boolean boolean20 = typeCircularBuffer10.isFull();
        java.lang.reflect.Type type21 = typeCircularBuffer10.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean24 = typeCircularBuffer23.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer26.getClass();
        boolean boolean28 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer23.isFull();
        java.lang.reflect.Type type30 = typeCircularBuffer23.get();
        boolean boolean31 = typeCircularBuffer10.put(type30);
        boolean boolean32 = typeCircularBuffer1.put(type30);
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test2377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2377");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) 'a');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass4 = typeCircularBuffer3.getClass();
        boolean boolean5 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass4);
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type10 = typeCircularBuffer9.get();
        boolean boolean11 = typeCircularBuffer9.isFull();
        boolean boolean12 = typeCircularBuffer9.isFull();
        boolean boolean13 = typeCircularBuffer9.isFull();
        boolean boolean14 = typeCircularBuffer9.isFull();
        boolean boolean15 = typeCircularBuffer9.isFull();
        boolean boolean16 = typeCircularBuffer9.isEmpty();
        java.lang.reflect.Type type17 = typeCircularBuffer9.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean20 = typeCircularBuffer19.isEmpty();
        java.lang.reflect.Type type21 = typeCircularBuffer19.get();
        boolean boolean22 = typeCircularBuffer19.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type25 = typeCircularBuffer24.get();
        boolean boolean26 = typeCircularBuffer24.isFull();
        boolean boolean27 = typeCircularBuffer24.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean30 = typeCircularBuffer29.isEmpty();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        boolean boolean33 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass32);
        java.lang.Class<?> wildcardClass34 = typeCircularBuffer29.getClass();
        boolean boolean35 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass34);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean38 = typeCircularBuffer37.isEmpty();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        boolean boolean41 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass40);
        java.lang.Class<?> wildcardClass42 = typeCircularBuffer37.getClass();
        boolean boolean43 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass42);
        boolean boolean44 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass42);
        boolean boolean45 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass42);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean48 = typeCircularBuffer47.isEmpty();
        java.lang.reflect.Type type49 = typeCircularBuffer47.get();
        java.lang.reflect.Type type50 = typeCircularBuffer47.get();
        java.lang.reflect.Type type51 = typeCircularBuffer47.get();
        boolean boolean52 = typeCircularBuffer47.isFull();
        boolean boolean53 = typeCircularBuffer47.isFull();
        java.lang.reflect.Type type54 = typeCircularBuffer47.get();
        boolean boolean55 = typeCircularBuffer47.isFull();
        boolean boolean56 = typeCircularBuffer47.isEmpty();
        boolean boolean57 = typeCircularBuffer47.isFull();
        java.lang.Class<?> wildcardClass58 = typeCircularBuffer47.getClass();
        boolean boolean59 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass58);
        java.lang.reflect.Type type60 = typeCircularBuffer9.get();
        boolean boolean61 = typeCircularBuffer1.put(type60);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(type17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(type21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(type25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(type49);
        org.junit.Assert.assertNull(type50);
        org.junit.Assert.assertNull(type51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(type54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
    }

    @Test
    public void test2378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2378");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        boolean boolean7 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean19 = typeCircularBuffer18.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer21.getClass();
        boolean boolean23 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass22);
        java.lang.reflect.Type type24 = typeCircularBuffer18.get();
        boolean boolean25 = typeCircularBuffer16.put(type24);
        boolean boolean26 = typeCircularBuffer16.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer31.getClass();
        boolean boolean33 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass32);
        java.lang.reflect.Type type34 = typeCircularBuffer28.get();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        boolean boolean37 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean38 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean39 = typeCircularBuffer16.isEmpty();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        boolean boolean42 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean43 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean44 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean45 = typeCircularBuffer1.isFull();
        boolean boolean46 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type47 = typeCircularBuffer1.get();
        java.lang.reflect.Type type48 = typeCircularBuffer1.get();
        java.lang.reflect.Type type49 = typeCircularBuffer1.get();
        java.lang.reflect.Type type50 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNull(type48);
        org.junit.Assert.assertNull(type49);
        org.junit.Assert.assertNull(type50);
    }

    @Test
    public void test2379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2379");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer6.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.reflect.Type type13 = typeCircularBuffer1.get();
        boolean boolean14 = typeCircularBuffer1.isFull();
        boolean boolean15 = typeCircularBuffer1.isEmpty();
        boolean boolean16 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type17 = null;
        boolean boolean18 = typeCircularBuffer1.put(type17);
        boolean boolean19 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test2380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2380");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        java.lang.reflect.Type type11 = typeCircularBuffer1.get();
        boolean boolean12 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer17.getClass();
        boolean boolean19 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass18);
        java.lang.reflect.Type type20 = typeCircularBuffer14.get();
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        boolean boolean23 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass22);
        java.lang.reflect.Type type24 = typeCircularBuffer14.get();
        boolean boolean25 = typeCircularBuffer1.put(type24);
        java.lang.reflect.Type type26 = typeCircularBuffer1.get();
        boolean boolean27 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type28 = typeCircularBuffer1.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass29 = type28.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(type28);
    }

    @Test
    public void test2381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2381");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer6.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer14.getClass();
        boolean boolean20 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass19);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean25 = typeCircularBuffer24.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer27.getClass();
        boolean boolean29 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.reflect.Type type30 = typeCircularBuffer24.get();
        boolean boolean31 = typeCircularBuffer22.put(type30);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer22.getClass();
        boolean boolean33 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test2382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2382");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.reflect.Type type11 = typeCircularBuffer1.get();
        boolean boolean12 = typeCircularBuffer1.isFull();
        boolean boolean13 = typeCircularBuffer1.isEmpty();
        boolean boolean14 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean19 = typeCircularBuffer18.isFull();
        boolean boolean20 = typeCircularBuffer18.isEmpty();
        java.lang.reflect.Type type21 = typeCircularBuffer18.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean26 = typeCircularBuffer25.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass29 = typeCircularBuffer28.getClass();
        boolean boolean30 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass29);
        java.lang.reflect.Type type31 = typeCircularBuffer25.get();
        boolean boolean32 = typeCircularBuffer23.put(type31);
        java.lang.Class<?> wildcardClass33 = typeCircularBuffer23.getClass();
        boolean boolean34 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass33);
        boolean boolean35 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass33);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type38 = typeCircularBuffer37.get();
        boolean boolean39 = typeCircularBuffer37.isFull();
        boolean boolean40 = typeCircularBuffer37.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean43 = typeCircularBuffer42.isEmpty();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        boolean boolean46 = typeCircularBuffer42.put((java.lang.reflect.Type) wildcardClass45);
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer42.getClass();
        boolean boolean48 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass47);
        boolean boolean49 = typeCircularBuffer37.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean52 = typeCircularBuffer51.isFull();
        boolean boolean53 = typeCircularBuffer51.isEmpty();
        java.lang.reflect.Type type54 = typeCircularBuffer51.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer56 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer58 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean59 = typeCircularBuffer58.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer61 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass62 = typeCircularBuffer61.getClass();
        boolean boolean63 = typeCircularBuffer58.put((java.lang.reflect.Type) wildcardClass62);
        java.lang.reflect.Type type64 = typeCircularBuffer58.get();
        boolean boolean65 = typeCircularBuffer56.put(type64);
        java.lang.Class<?> wildcardClass66 = typeCircularBuffer56.getClass();
        boolean boolean67 = typeCircularBuffer51.put((java.lang.reflect.Type) wildcardClass66);
        boolean boolean68 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass66);
        java.lang.Class<?> wildcardClass69 = typeCircularBuffer37.getClass();
        boolean boolean70 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass69);
        boolean boolean71 = typeCircularBuffer16.isEmpty();
        boolean boolean72 = typeCircularBuffer16.isFull();
        boolean boolean73 = typeCircularBuffer16.isFull();
        boolean boolean74 = typeCircularBuffer16.isEmpty();
        java.lang.reflect.Type type75 = typeCircularBuffer16.get();
        boolean boolean76 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer78 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) 'a');
        boolean boolean79 = typeCircularBuffer78.isFull();
        java.lang.reflect.Type type80 = typeCircularBuffer78.get();
        boolean boolean81 = typeCircularBuffer78.isFull();
        java.lang.Class<?> wildcardClass82 = typeCircularBuffer78.getClass();
        boolean boolean83 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass82);
        boolean boolean84 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass82);
        boolean boolean85 = typeCircularBuffer1.isEmpty();
        boolean boolean86 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type87 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(type21);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(type38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(type54);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNull(type80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(type87);
    }

    @Test
    public void test2383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2383");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer10.get();
        boolean boolean17 = typeCircularBuffer8.put(type16);
        boolean boolean18 = typeCircularBuffer8.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean21 = typeCircularBuffer20.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer23.getClass();
        boolean boolean25 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass24);
        java.lang.reflect.Type type26 = typeCircularBuffer20.get();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        boolean boolean29 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass28);
        boolean boolean30 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass28);
        boolean boolean31 = typeCircularBuffer8.isEmpty();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        boolean boolean34 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass33);
        boolean boolean35 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass33);
        boolean boolean36 = typeCircularBuffer1.isFull();
        boolean boolean37 = typeCircularBuffer1.isEmpty();
        boolean boolean38 = typeCircularBuffer1.isEmpty();
        boolean boolean39 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type42 = typeCircularBuffer41.get();
        boolean boolean43 = typeCircularBuffer41.isFull();
        boolean boolean44 = typeCircularBuffer41.isFull();
        boolean boolean45 = typeCircularBuffer41.isEmpty();
        boolean boolean46 = typeCircularBuffer41.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean49 = typeCircularBuffer48.isEmpty();
        boolean boolean50 = typeCircularBuffer48.isEmpty();
        boolean boolean51 = typeCircularBuffer48.isEmpty();
        boolean boolean52 = typeCircularBuffer48.isEmpty();
        java.lang.Class<?> wildcardClass53 = typeCircularBuffer48.getClass();
        boolean boolean54 = typeCircularBuffer41.put((java.lang.reflect.Type) wildcardClass53);
        boolean boolean55 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(type42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test2384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2384");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.GenericDeclaration> genericDeclarationCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.GenericDeclaration>((int) ' ');
    }

    @Test
    public void test2385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2385");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        boolean boolean8 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test2386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2386");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer6.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        boolean boolean13 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean16 = typeCircularBuffer15.isFull();
        boolean boolean17 = typeCircularBuffer15.isEmpty();
        java.lang.reflect.Type type18 = typeCircularBuffer15.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass26 = typeCircularBuffer25.getClass();
        boolean boolean27 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass26);
        java.lang.reflect.Type type28 = typeCircularBuffer22.get();
        boolean boolean29 = typeCircularBuffer20.put(type28);
        java.lang.Class<?> wildcardClass30 = typeCircularBuffer20.getClass();
        boolean boolean31 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass30);
        boolean boolean32 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass30);
        boolean boolean33 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type34 = typeCircularBuffer1.get();
        boolean boolean35 = typeCircularBuffer1.isEmpty();
        boolean boolean36 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type37 = typeCircularBuffer1.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass38 = type37.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(type18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(type37);
    }

    @Test
    public void test2387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2387");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        java.lang.reflect.Type type12 = typeCircularBuffer6.get();
        boolean boolean13 = typeCircularBuffer4.put(type12);
        boolean boolean14 = typeCircularBuffer4.isFull();
        java.lang.reflect.Type type15 = typeCircularBuffer4.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        boolean boolean21 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean22 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type24 = typeCircularBuffer1.get();
        boolean boolean25 = typeCircularBuffer1.isEmpty();
        boolean boolean26 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type27 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(type27);
    }

    @Test
    public void test2388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2388");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        boolean boolean8 = typeCircularBuffer7.isEmpty();
        java.lang.Class<?> wildcardClass9 = typeCircularBuffer7.getClass();
        boolean boolean10 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass9);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean13 = typeCircularBuffer12.isFull();
        boolean boolean14 = typeCircularBuffer12.isEmpty();
        boolean boolean15 = typeCircularBuffer12.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer20.getClass();
        boolean boolean22 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type23 = typeCircularBuffer17.get();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        boolean boolean26 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass25);
        boolean boolean27 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass25);
        boolean boolean28 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.reflect.Type type29 = typeCircularBuffer1.get();
        boolean boolean30 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type31 = typeCircularBuffer1.get();
        java.lang.reflect.Type type32 = typeCircularBuffer1.get();
        java.lang.reflect.Type type33 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNull(type32);
        org.junit.Assert.assertNull(type33);
    }

    @Test
    public void test2389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2389");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        java.lang.reflect.Type type12 = typeCircularBuffer6.get();
        boolean boolean13 = typeCircularBuffer4.put(type12);
        boolean boolean14 = typeCircularBuffer4.isFull();
        java.lang.reflect.Type type15 = typeCircularBuffer4.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        boolean boolean21 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean22 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type24 = typeCircularBuffer1.get();
        boolean boolean25 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type26 = typeCircularBuffer1.get();
        boolean boolean27 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type28 = typeCircularBuffer1.get();
        boolean boolean29 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        boolean boolean33 = typeCircularBuffer31.isEmpty();
        boolean boolean34 = typeCircularBuffer31.isEmpty();
        boolean boolean35 = typeCircularBuffer31.isFull();
        boolean boolean36 = typeCircularBuffer31.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type39 = typeCircularBuffer38.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer46.getClass();
        boolean boolean48 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass47);
        java.lang.reflect.Type type49 = typeCircularBuffer43.get();
        boolean boolean50 = typeCircularBuffer41.put(type49);
        boolean boolean51 = typeCircularBuffer41.isFull();
        java.lang.reflect.Type type52 = typeCircularBuffer41.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer54 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean55 = typeCircularBuffer54.isEmpty();
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        boolean boolean58 = typeCircularBuffer54.put((java.lang.reflect.Type) wildcardClass57);
        boolean boolean59 = typeCircularBuffer41.put((java.lang.reflect.Type) wildcardClass57);
        boolean boolean60 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass57);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer62 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer64 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 0);
        java.lang.Class<?> wildcardClass65 = typeCircularBuffer64.getClass();
        boolean boolean66 = typeCircularBuffer62.put((java.lang.reflect.Type) wildcardClass65);
        boolean boolean67 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass65);
        boolean boolean68 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass65);
        java.lang.reflect.Type type69 = null;
        boolean boolean70 = typeCircularBuffer31.put(type69);
        java.lang.reflect.Type type71 = null;
        boolean boolean72 = typeCircularBuffer31.put(type71);
        java.lang.reflect.Type type73 = typeCircularBuffer31.get();
        boolean boolean74 = typeCircularBuffer1.put(type73);
        java.lang.Class<?> wildcardClass75 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(type26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(type28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(type39);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test2390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2390");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        boolean boolean19 = typeCircularBuffer13.isFull();
        boolean boolean20 = typeCircularBuffer13.isFull();
        boolean boolean21 = typeCircularBuffer13.isFull();
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer13.getClass();
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass22);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean26 = typeCircularBuffer25.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass29 = typeCircularBuffer28.getClass();
        boolean boolean30 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass29);
        java.lang.reflect.Type type31 = typeCircularBuffer25.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type34 = typeCircularBuffer33.get();
        boolean boolean35 = typeCircularBuffer33.isFull();
        boolean boolean36 = typeCircularBuffer33.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean39 = typeCircularBuffer38.isEmpty();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        boolean boolean42 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass41);
        java.lang.Class<?> wildcardClass43 = typeCircularBuffer38.getClass();
        boolean boolean44 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass43);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean47 = typeCircularBuffer46.isEmpty();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        boolean boolean50 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass49);
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer46.getClass();
        boolean boolean52 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean53 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean54 = typeCircularBuffer25.isEmpty();
        boolean boolean55 = typeCircularBuffer25.isEmpty();
        java.lang.reflect.Type type56 = typeCircularBuffer25.get();
        boolean boolean57 = typeCircularBuffer1.put(type56);
        boolean boolean58 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNull(type34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test2391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2391");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        boolean boolean5 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type8 = typeCircularBuffer7.get();
        boolean boolean9 = typeCircularBuffer7.isFull();
        boolean boolean10 = typeCircularBuffer7.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean13 = typeCircularBuffer12.isEmpty();
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        boolean boolean16 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass15);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer12.getClass();
        boolean boolean18 = typeCircularBuffer7.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer7.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean24 = typeCircularBuffer23.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer26.getClass();
        boolean boolean28 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass27);
        java.lang.reflect.Type type29 = typeCircularBuffer23.get();
        boolean boolean30 = typeCircularBuffer21.put(type29);
        boolean boolean31 = typeCircularBuffer7.put(type29);
        boolean boolean32 = typeCircularBuffer3.put(type29);
        boolean boolean33 = typeCircularBuffer1.put(type29);
        java.lang.reflect.Type type34 = typeCircularBuffer1.get();
        java.lang.reflect.Type type35 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNull(type35);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test2392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2392");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '#');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer5 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean6 = typeCircularBuffer5.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass9 = typeCircularBuffer8.getClass();
        boolean boolean10 = typeCircularBuffer5.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.reflect.Type type11 = typeCircularBuffer5.get();
        boolean boolean12 = typeCircularBuffer3.put(type11);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer19.getClass();
        boolean boolean21 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type22 = typeCircularBuffer16.get();
        boolean boolean23 = typeCircularBuffer14.put(type22);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer14.getClass();
        boolean boolean25 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean26 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean27 = typeCircularBuffer1.isEmpty();
        boolean boolean28 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type29 = typeCircularBuffer1.get();
        boolean boolean30 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type31 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type34 = typeCircularBuffer33.get();
        boolean boolean35 = typeCircularBuffer33.isFull();
        boolean boolean36 = typeCircularBuffer33.isFull();
        boolean boolean37 = typeCircularBuffer33.isEmpty();
        boolean boolean38 = typeCircularBuffer33.isEmpty();
        boolean boolean39 = typeCircularBuffer33.isEmpty();
        java.lang.Class<?> wildcardClass40 = typeCircularBuffer33.getClass();
        boolean boolean41 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass40);
        boolean boolean42 = typeCircularBuffer1.isFull();
        boolean boolean43 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type46 = typeCircularBuffer45.get();
        boolean boolean47 = typeCircularBuffer45.isFull();
        boolean boolean48 = typeCircularBuffer45.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean51 = typeCircularBuffer50.isEmpty();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        boolean boolean54 = typeCircularBuffer50.put((java.lang.reflect.Type) wildcardClass53);
        java.lang.Class<?> wildcardClass55 = typeCircularBuffer50.getClass();
        boolean boolean56 = typeCircularBuffer45.put((java.lang.reflect.Type) wildcardClass55);
        java.lang.reflect.Type type57 = typeCircularBuffer45.get();
        boolean boolean58 = typeCircularBuffer45.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer60 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type61 = typeCircularBuffer60.get();
        boolean boolean62 = typeCircularBuffer60.isFull();
        java.lang.Class<?> wildcardClass63 = typeCircularBuffer60.getClass();
        boolean boolean64 = typeCircularBuffer45.put((java.lang.reflect.Type) wildcardClass63);
        java.lang.reflect.Type type65 = typeCircularBuffer45.get();
        boolean boolean66 = typeCircularBuffer45.isFull();
        java.lang.reflect.Type type67 = typeCircularBuffer45.get();
        java.lang.reflect.Type type68 = typeCircularBuffer45.get();
        boolean boolean69 = typeCircularBuffer45.isEmpty();
        java.lang.Class<?> wildcardClass70 = typeCircularBuffer45.getClass();
        boolean boolean71 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass70);
        java.lang.Class<?> wildcardClass72 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(type31);
        org.junit.Assert.assertNull(type34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(type46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(type61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(type67);
        org.junit.Assert.assertNull(type68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test2393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2393");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        boolean boolean10 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer17.getClass();
        boolean boolean19 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass18);
        java.lang.reflect.Type type20 = typeCircularBuffer14.get();
        boolean boolean21 = typeCircularBuffer12.put(type20);
        boolean boolean22 = typeCircularBuffer12.isFull();
        java.lang.reflect.Type type23 = typeCircularBuffer12.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean26 = typeCircularBuffer25.isEmpty();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        boolean boolean29 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass28);
        boolean boolean30 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass28);
        boolean boolean31 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.reflect.Type type32 = typeCircularBuffer1.get();
        java.lang.reflect.Type type33 = typeCircularBuffer1.get();
        boolean boolean34 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type35 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNull(type33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(type35);
    }

    @Test
    public void test2394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2394");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type10 = typeCircularBuffer9.get();
        boolean boolean11 = typeCircularBuffer9.isFull();
        boolean boolean12 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer14.getClass();
        boolean boolean20 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass19);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        boolean boolean26 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer22.getClass();
        boolean boolean28 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass27);
        java.lang.reflect.Type type30 = typeCircularBuffer1.get();
        boolean boolean31 = typeCircularBuffer1.isFull();
        boolean boolean32 = typeCircularBuffer1.isFull();
        boolean boolean33 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    }

    @Test
    public void test2395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2395");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer5 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type6 = typeCircularBuffer5.get();
        boolean boolean7 = typeCircularBuffer5.isFull();
        boolean boolean8 = typeCircularBuffer5.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        boolean boolean14 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass13);
        java.lang.Class<?> wildcardClass15 = typeCircularBuffer10.getClass();
        boolean boolean16 = typeCircularBuffer5.put((java.lang.reflect.Type) wildcardClass15);
        java.lang.reflect.Type type17 = typeCircularBuffer5.get();
        java.lang.Class<?> wildcardClass18 = type17.getClass();
        boolean boolean19 = typeCircularBuffer1.put(type17);
        boolean boolean20 = typeCircularBuffer1.isFull();
        boolean boolean21 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test2396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2396");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer6.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        boolean boolean13 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean16 = typeCircularBuffer15.isFull();
        boolean boolean17 = typeCircularBuffer15.isEmpty();
        java.lang.reflect.Type type18 = typeCircularBuffer15.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass26 = typeCircularBuffer25.getClass();
        boolean boolean27 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass26);
        java.lang.reflect.Type type28 = typeCircularBuffer22.get();
        boolean boolean29 = typeCircularBuffer20.put(type28);
        java.lang.Class<?> wildcardClass30 = typeCircularBuffer20.getClass();
        boolean boolean31 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass30);
        boolean boolean32 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass30);
        boolean boolean33 = typeCircularBuffer1.isFull();
        boolean boolean34 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(type18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
    }

    @Test
    public void test2397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2397");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        java.lang.reflect.Type type12 = typeCircularBuffer6.get();
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        boolean boolean15 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass14);
        boolean boolean16 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass14);
        boolean boolean17 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type18 = typeCircularBuffer1.get();
        java.lang.reflect.Type type19 = null;
        boolean boolean20 = typeCircularBuffer1.put(type19);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean23 = typeCircularBuffer22.isFull();
        java.lang.reflect.Type type24 = typeCircularBuffer22.get();
        java.lang.Class<?> wildcardClass25 = typeCircularBuffer22.getClass();
        boolean boolean26 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.reflect.Type type27 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(type24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(type27);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test2398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2398");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type4 = typeCircularBuffer3.get();
        boolean boolean5 = typeCircularBuffer3.isFull();
        boolean boolean6 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean9 = typeCircularBuffer8.isEmpty();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer8.getClass();
        boolean boolean14 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass13);
        boolean boolean15 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean18 = typeCircularBuffer17.isFull();
        boolean boolean19 = typeCircularBuffer17.isEmpty();
        java.lang.reflect.Type type20 = typeCircularBuffer17.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean25 = typeCircularBuffer24.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer27.getClass();
        boolean boolean29 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.reflect.Type type30 = typeCircularBuffer24.get();
        boolean boolean31 = typeCircularBuffer22.put(type30);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer22.getClass();
        boolean boolean33 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean35 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean36 = typeCircularBuffer1.isFull();
        boolean boolean37 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type38 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type41 = typeCircularBuffer40.get();
        boolean boolean42 = typeCircularBuffer40.isFull();
        boolean boolean43 = typeCircularBuffer40.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean46 = typeCircularBuffer45.isEmpty();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        boolean boolean49 = typeCircularBuffer45.put((java.lang.reflect.Type) wildcardClass48);
        java.lang.Class<?> wildcardClass50 = typeCircularBuffer45.getClass();
        boolean boolean51 = typeCircularBuffer40.put((java.lang.reflect.Type) wildcardClass50);
        java.lang.reflect.Type type52 = typeCircularBuffer40.get();
        boolean boolean53 = typeCircularBuffer40.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer55 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type56 = typeCircularBuffer55.get();
        boolean boolean57 = typeCircularBuffer55.isFull();
        java.lang.Class<?> wildcardClass58 = typeCircularBuffer55.getClass();
        boolean boolean59 = typeCircularBuffer40.put((java.lang.reflect.Type) wildcardClass58);
        boolean boolean60 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass58);
        boolean boolean61 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(type20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(type38);
        org.junit.Assert.assertNull(type41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(type56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
    }

    @Test
    public void test2399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2399");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass10);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer19.getClass();
        boolean boolean21 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type22 = typeCircularBuffer16.get();
        java.lang.Class<?> wildcardClass23 = typeCircularBuffer16.getClass();
        boolean boolean24 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass23);
        boolean boolean25 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass23);
        java.lang.reflect.Type type26 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        java.lang.Class<?> wildcardClass30 = typeCircularBuffer28.getClass();
        boolean boolean31 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass30);
        java.lang.reflect.Type type32 = typeCircularBuffer1.get();
        java.lang.reflect.Type type33 = typeCircularBuffer1.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass34 = type33.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(type26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(type32);
        org.junit.Assert.assertNull(type33);
    }

    @Test
    public void test2400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2400");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer17.getClass();
        boolean boolean19 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass18);
        java.lang.reflect.Type type20 = typeCircularBuffer14.get();
        boolean boolean21 = typeCircularBuffer12.put(type20);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer12.getClass();
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass22);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 10);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type28 = typeCircularBuffer27.get();
        boolean boolean29 = typeCircularBuffer27.isFull();
        java.lang.Class<?> wildcardClass30 = typeCircularBuffer27.getClass();
        boolean boolean31 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass30);
        boolean boolean32 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass30);
        boolean boolean33 = typeCircularBuffer1.isFull();
        boolean boolean34 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type35 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(type28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(type35);
    }

    @Test
    public void test2401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2401");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        boolean boolean7 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean19 = typeCircularBuffer18.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer21.getClass();
        boolean boolean23 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass22);
        java.lang.reflect.Type type24 = typeCircularBuffer18.get();
        boolean boolean25 = typeCircularBuffer16.put(type24);
        boolean boolean26 = typeCircularBuffer16.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer31.getClass();
        boolean boolean33 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass32);
        java.lang.reflect.Type type34 = typeCircularBuffer28.get();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        boolean boolean37 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean38 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean39 = typeCircularBuffer16.isEmpty();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        boolean boolean42 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean43 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean44 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass41);
        java.lang.reflect.Type type45 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean48 = typeCircularBuffer47.isEmpty();
        java.lang.reflect.Type type49 = typeCircularBuffer47.get();
        java.lang.reflect.Type type50 = typeCircularBuffer47.get();
        java.lang.reflect.Type type51 = typeCircularBuffer47.get();
        boolean boolean52 = typeCircularBuffer47.isFull();
        boolean boolean53 = typeCircularBuffer47.isFull();
        java.lang.reflect.Type type54 = typeCircularBuffer47.get();
        boolean boolean55 = typeCircularBuffer47.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer57 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer59 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean60 = typeCircularBuffer59.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer62 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass63 = typeCircularBuffer62.getClass();
        boolean boolean64 = typeCircularBuffer59.put((java.lang.reflect.Type) wildcardClass63);
        java.lang.reflect.Type type65 = typeCircularBuffer59.get();
        java.lang.Class<?> wildcardClass66 = typeCircularBuffer59.getClass();
        boolean boolean67 = typeCircularBuffer57.put((java.lang.reflect.Type) wildcardClass66);
        boolean boolean68 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass66);
        boolean boolean69 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass66);
        boolean boolean70 = typeCircularBuffer1.isFull();
        boolean boolean71 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type72 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(type49);
        org.junit.Assert.assertNull(type50);
        org.junit.Assert.assertNull(type51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(type54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(type72);
    }

    @Test
    public void test2402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2402");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer6.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        boolean boolean13 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type14 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(type14);
    }

    @Test
    public void test2403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2403");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type24 = typeCircularBuffer1.get();
        boolean boolean25 = typeCircularBuffer1.isFull();
        boolean boolean26 = typeCircularBuffer1.isEmpty();
        boolean boolean27 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type28 = typeCircularBuffer1.get();
        boolean boolean29 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(type28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test2404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2404");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer5 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type6 = typeCircularBuffer5.get();
        boolean boolean7 = typeCircularBuffer5.isFull();
        boolean boolean8 = typeCircularBuffer5.isFull();
        boolean boolean9 = typeCircularBuffer5.isFull();
        boolean boolean10 = typeCircularBuffer5.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean13 = typeCircularBuffer12.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer20.getClass();
        boolean boolean22 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type23 = typeCircularBuffer17.get();
        boolean boolean24 = typeCircularBuffer15.put(type23);
        boolean boolean25 = typeCircularBuffer15.isFull();
        java.lang.reflect.Type type26 = typeCircularBuffer15.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type29 = typeCircularBuffer28.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer34.getClass();
        boolean boolean36 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass35);
        java.lang.reflect.Type type37 = typeCircularBuffer31.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type40 = typeCircularBuffer39.get();
        boolean boolean41 = typeCircularBuffer39.isFull();
        boolean boolean42 = typeCircularBuffer39.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean45 = typeCircularBuffer44.isEmpty();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        boolean boolean48 = typeCircularBuffer44.put((java.lang.reflect.Type) wildcardClass47);
        java.lang.Class<?> wildcardClass49 = typeCircularBuffer44.getClass();
        boolean boolean50 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass49);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer52 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean53 = typeCircularBuffer52.isEmpty();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        boolean boolean56 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass55);
        java.lang.Class<?> wildcardClass57 = typeCircularBuffer52.getClass();
        boolean boolean58 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass57);
        boolean boolean59 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass57);
        boolean boolean60 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass57);
        boolean boolean61 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass57);
        boolean boolean62 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass57);
        boolean boolean63 = typeCircularBuffer5.put((java.lang.reflect.Type) wildcardClass57);
        boolean boolean64 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass57);
        boolean boolean65 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer67 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type68 = typeCircularBuffer67.get();
        boolean boolean69 = typeCircularBuffer67.isFull();
        boolean boolean70 = typeCircularBuffer67.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer72 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean73 = typeCircularBuffer72.isEmpty();
        java.lang.Object obj74 = new java.lang.Object();
        java.lang.Class<?> wildcardClass75 = obj74.getClass();
        boolean boolean76 = typeCircularBuffer72.put((java.lang.reflect.Type) wildcardClass75);
        java.lang.Class<?> wildcardClass77 = typeCircularBuffer72.getClass();
        boolean boolean78 = typeCircularBuffer67.put((java.lang.reflect.Type) wildcardClass77);
        java.lang.reflect.Type type79 = typeCircularBuffer67.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer81 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer83 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean84 = typeCircularBuffer83.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer86 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass87 = typeCircularBuffer86.getClass();
        boolean boolean88 = typeCircularBuffer83.put((java.lang.reflect.Type) wildcardClass87);
        java.lang.reflect.Type type89 = typeCircularBuffer83.get();
        boolean boolean90 = typeCircularBuffer81.put(type89);
        boolean boolean91 = typeCircularBuffer67.put(type89);
        java.lang.reflect.Type type92 = null;
        boolean boolean93 = typeCircularBuffer67.put(type92);
        boolean boolean94 = typeCircularBuffer67.isEmpty();
        boolean boolean95 = typeCircularBuffer67.isFull();
        boolean boolean96 = typeCircularBuffer67.isEmpty();
        java.lang.Class<?> wildcardClass97 = typeCircularBuffer67.getClass();
        boolean boolean98 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass97);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNull(type29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNull(type40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(type68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(type89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertNotNull(wildcardClass97);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test2405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2405");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        boolean boolean9 = typeCircularBuffer1.isFull();
        boolean boolean10 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test2406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2406");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type4 = typeCircularBuffer3.get();
        boolean boolean5 = typeCircularBuffer3.isFull();
        boolean boolean6 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean9 = typeCircularBuffer8.isEmpty();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer8.getClass();
        boolean boolean14 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass13);
        boolean boolean15 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean18 = typeCircularBuffer17.isFull();
        boolean boolean19 = typeCircularBuffer17.isEmpty();
        java.lang.reflect.Type type20 = typeCircularBuffer17.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean25 = typeCircularBuffer24.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer27.getClass();
        boolean boolean29 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.reflect.Type type30 = typeCircularBuffer24.get();
        boolean boolean31 = typeCircularBuffer22.put(type30);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer22.getClass();
        boolean boolean33 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean35 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean36 = typeCircularBuffer1.isFull();
        boolean boolean37 = typeCircularBuffer1.isEmpty();
        boolean boolean38 = typeCircularBuffer1.isFull();
        boolean boolean39 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass40 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(type20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test2407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2407");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 100);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer5 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        java.lang.reflect.Type type6 = typeCircularBuffer5.get();
        boolean boolean7 = typeCircularBuffer5.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>((int) (short) 1);
        java.lang.Class<?> wildcardClass10 = wildcardClassOfFieldCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer5.put((java.lang.reflect.Type) wildcardClass10);
        java.lang.reflect.Type type12 = typeCircularBuffer5.get();
        java.lang.Class<?> wildcardClass13 = type12.getClass();
        boolean boolean14 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass13);
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test2408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2408");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        boolean boolean6 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        boolean boolean8 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        boolean boolean12 = typeCircularBuffer10.isFull();
        java.lang.reflect.Type type13 = typeCircularBuffer10.get();
        boolean boolean14 = typeCircularBuffer10.isFull();
        boolean boolean15 = typeCircularBuffer10.isEmpty();
        boolean boolean16 = typeCircularBuffer10.isFull();
        boolean boolean17 = typeCircularBuffer10.isFull();
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer10.getClass();
        boolean boolean19 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass18);
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(type13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test2409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2409");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        java.lang.reflect.Type type11 = typeCircularBuffer1.get();
        java.lang.reflect.Type type12 = null;
        boolean boolean13 = typeCircularBuffer1.put(type12);
        boolean boolean14 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 10);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type19 = typeCircularBuffer18.get();
        boolean boolean20 = typeCircularBuffer18.isFull();
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer18.getClass();
        boolean boolean22 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean24 = typeCircularBuffer1.isEmpty();
        boolean boolean25 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(type19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test2410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2410");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        boolean boolean9 = typeCircularBuffer1.isFull();
        boolean boolean10 = typeCircularBuffer1.isEmpty();
        boolean boolean11 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type22 = typeCircularBuffer21.get();
        boolean boolean23 = typeCircularBuffer21.isFull();
        boolean boolean24 = typeCircularBuffer21.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean27 = typeCircularBuffer26.isEmpty();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        boolean boolean30 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass29);
        java.lang.Class<?> wildcardClass31 = typeCircularBuffer26.getClass();
        boolean boolean32 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass31);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean35 = typeCircularBuffer34.isEmpty();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        boolean boolean38 = typeCircularBuffer34.put((java.lang.reflect.Type) wildcardClass37);
        java.lang.Class<?> wildcardClass39 = typeCircularBuffer34.getClass();
        boolean boolean40 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass39);
        boolean boolean41 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass39);
        boolean boolean42 = typeCircularBuffer13.isEmpty();
        boolean boolean43 = typeCircularBuffer13.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean48 = typeCircularBuffer47.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer50.getClass();
        boolean boolean52 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass51);
        java.lang.reflect.Type type53 = typeCircularBuffer47.get();
        boolean boolean54 = typeCircularBuffer45.put(type53);
        boolean boolean55 = typeCircularBuffer45.isEmpty();
        boolean boolean56 = typeCircularBuffer45.isFull();
        boolean boolean57 = typeCircularBuffer45.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer59 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer61 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean62 = typeCircularBuffer61.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer64 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass65 = typeCircularBuffer64.getClass();
        boolean boolean66 = typeCircularBuffer61.put((java.lang.reflect.Type) wildcardClass65);
        java.lang.reflect.Type type67 = typeCircularBuffer61.get();
        boolean boolean68 = typeCircularBuffer59.put(type67);
        boolean boolean69 = typeCircularBuffer59.isFull();
        java.lang.reflect.Type type70 = typeCircularBuffer59.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer72 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean73 = typeCircularBuffer72.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer75 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass76 = typeCircularBuffer75.getClass();
        boolean boolean77 = typeCircularBuffer72.put((java.lang.reflect.Type) wildcardClass76);
        boolean boolean78 = typeCircularBuffer72.isFull();
        java.lang.reflect.Type type79 = typeCircularBuffer72.get();
        boolean boolean80 = typeCircularBuffer59.put(type79);
        boolean boolean81 = typeCircularBuffer45.put(type79);
        boolean boolean82 = typeCircularBuffer13.put(type79);
        boolean boolean83 = typeCircularBuffer1.put(type79);
        boolean boolean84 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type85 = typeCircularBuffer1.get();
        java.lang.reflect.Type type86 = typeCircularBuffer1.get();
        java.lang.reflect.Type type87 = typeCircularBuffer1.get();
        boolean boolean88 = typeCircularBuffer1.isFull();
        boolean boolean89 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass90 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNull(type22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(type85);
        org.junit.Assert.assertNull(type86);
        org.junit.Assert.assertNull(type87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test2411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2411");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        boolean boolean7 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean19 = typeCircularBuffer18.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer21.getClass();
        boolean boolean23 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass22);
        java.lang.reflect.Type type24 = typeCircularBuffer18.get();
        boolean boolean25 = typeCircularBuffer16.put(type24);
        boolean boolean26 = typeCircularBuffer16.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer31.getClass();
        boolean boolean33 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass32);
        java.lang.reflect.Type type34 = typeCircularBuffer28.get();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        boolean boolean37 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean38 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean39 = typeCircularBuffer16.isEmpty();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        boolean boolean42 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean43 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean44 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass41);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean47 = typeCircularBuffer46.isEmpty();
        boolean boolean48 = typeCircularBuffer46.isFull();
        java.lang.reflect.Type type49 = typeCircularBuffer46.get();
        boolean boolean50 = typeCircularBuffer46.isFull();
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer46.getClass();
        boolean boolean52 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean53 = typeCircularBuffer1.isFull();
        boolean boolean54 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type55 = typeCircularBuffer1.get();
        java.lang.reflect.Type type56 = typeCircularBuffer1.get();
        boolean boolean57 = typeCircularBuffer1.isFull();
        boolean boolean58 = typeCircularBuffer1.isEmpty();
        boolean boolean59 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(type49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNull(type56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test2412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2412");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) 'a');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass4 = typeCircularBuffer3.getClass();
        boolean boolean5 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass4);
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type10 = typeCircularBuffer9.get();
        boolean boolean11 = typeCircularBuffer9.isFull();
        boolean boolean12 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer14.getClass();
        boolean boolean20 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass19);
        java.lang.reflect.Type type21 = typeCircularBuffer9.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean26 = typeCircularBuffer25.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass29 = typeCircularBuffer28.getClass();
        boolean boolean30 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass29);
        java.lang.reflect.Type type31 = typeCircularBuffer25.get();
        boolean boolean32 = typeCircularBuffer23.put(type31);
        boolean boolean33 = typeCircularBuffer9.put(type31);
        java.lang.Class<?> wildcardClass34 = typeCircularBuffer9.getClass();
        boolean boolean35 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass34);
        java.lang.reflect.Type type36 = typeCircularBuffer1.get();
        boolean boolean37 = typeCircularBuffer1.isEmpty();
        boolean boolean38 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test2413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2413");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        boolean boolean8 = typeCircularBuffer7.isEmpty();
        java.lang.Class<?> wildcardClass9 = typeCircularBuffer7.getClass();
        boolean boolean10 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass9);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean13 = typeCircularBuffer12.isFull();
        boolean boolean14 = typeCircularBuffer12.isEmpty();
        boolean boolean15 = typeCircularBuffer12.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer20.getClass();
        boolean boolean22 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type23 = typeCircularBuffer17.get();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        boolean boolean26 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass25);
        boolean boolean27 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass25);
        boolean boolean28 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.reflect.Type type29 = typeCircularBuffer1.get();
        boolean boolean30 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type31 = typeCircularBuffer1.get();
        boolean boolean32 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean35 = typeCircularBuffer34.isFull();
        java.lang.reflect.Type type36 = typeCircularBuffer34.get();
        boolean boolean37 = typeCircularBuffer34.isFull();
        java.lang.reflect.Type type38 = typeCircularBuffer34.get();
        boolean boolean39 = typeCircularBuffer34.isFull();
        boolean boolean40 = typeCircularBuffer34.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean43 = typeCircularBuffer42.isFull();
        boolean boolean44 = typeCircularBuffer42.isEmpty();
        java.lang.reflect.Type type45 = typeCircularBuffer42.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer49 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean50 = typeCircularBuffer49.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer52 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass53 = typeCircularBuffer52.getClass();
        boolean boolean54 = typeCircularBuffer49.put((java.lang.reflect.Type) wildcardClass53);
        java.lang.reflect.Type type55 = typeCircularBuffer49.get();
        boolean boolean56 = typeCircularBuffer47.put(type55);
        java.lang.Class<?> wildcardClass57 = typeCircularBuffer47.getClass();
        boolean boolean58 = typeCircularBuffer42.put((java.lang.reflect.Type) wildcardClass57);
        boolean boolean59 = typeCircularBuffer34.put((java.lang.reflect.Type) wildcardClass57);
        boolean boolean60 = typeCircularBuffer34.isEmpty();
        boolean boolean61 = typeCircularBuffer34.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer63 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer65 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean66 = typeCircularBuffer65.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer68 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass69 = typeCircularBuffer68.getClass();
        boolean boolean70 = typeCircularBuffer65.put((java.lang.reflect.Type) wildcardClass69);
        java.lang.reflect.Type type71 = typeCircularBuffer65.get();
        boolean boolean72 = typeCircularBuffer63.put(type71);
        java.lang.reflect.Type type73 = typeCircularBuffer63.get();
        java.lang.reflect.Type type74 = null;
        boolean boolean75 = typeCircularBuffer63.put(type74);
        boolean boolean76 = typeCircularBuffer63.isEmpty();
        java.lang.Class<?> wildcardClass77 = typeCircularBuffer63.getClass();
        boolean boolean78 = typeCircularBuffer34.put((java.lang.reflect.Type) wildcardClass77);
        boolean boolean79 = typeCircularBuffer34.isFull();
        java.lang.Class<?> wildcardClass80 = typeCircularBuffer34.getClass();
        boolean boolean81 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass80);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(type36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(type38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(type45);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
    }

    @Test
    public void test2414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2414");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        java.lang.reflect.Type type11 = typeCircularBuffer1.get();
        java.lang.reflect.Type type12 = null;
        boolean boolean13 = typeCircularBuffer1.put(type12);
        boolean boolean14 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 10);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type19 = typeCircularBuffer18.get();
        boolean boolean20 = typeCircularBuffer18.isFull();
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer18.getClass();
        boolean boolean22 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean24 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean27 = typeCircularBuffer26.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass30 = typeCircularBuffer29.getClass();
        boolean boolean31 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass30);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean36 = typeCircularBuffer35.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass39 = typeCircularBuffer38.getClass();
        boolean boolean40 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass39);
        java.lang.reflect.Type type41 = typeCircularBuffer35.get();
        boolean boolean42 = typeCircularBuffer33.put(type41);
        boolean boolean43 = typeCircularBuffer33.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean46 = typeCircularBuffer45.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass49 = typeCircularBuffer48.getClass();
        boolean boolean50 = typeCircularBuffer45.put((java.lang.reflect.Type) wildcardClass49);
        java.lang.reflect.Type type51 = typeCircularBuffer45.get();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        boolean boolean54 = typeCircularBuffer45.put((java.lang.reflect.Type) wildcardClass53);
        boolean boolean55 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass53);
        boolean boolean56 = typeCircularBuffer33.isEmpty();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        boolean boolean59 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass58);
        boolean boolean60 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass58);
        boolean boolean61 = typeCircularBuffer26.isEmpty();
        boolean boolean62 = typeCircularBuffer26.isEmpty();
        boolean boolean63 = typeCircularBuffer26.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer65 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type66 = typeCircularBuffer65.get();
        boolean boolean67 = typeCircularBuffer65.isFull();
        boolean boolean68 = typeCircularBuffer65.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer70 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean71 = typeCircularBuffer70.isEmpty();
        java.lang.Object obj72 = new java.lang.Object();
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        boolean boolean74 = typeCircularBuffer70.put((java.lang.reflect.Type) wildcardClass73);
        java.lang.Class<?> wildcardClass75 = typeCircularBuffer70.getClass();
        boolean boolean76 = typeCircularBuffer65.put((java.lang.reflect.Type) wildcardClass75);
        java.lang.reflect.Type type77 = typeCircularBuffer65.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer79 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer81 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean82 = typeCircularBuffer81.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer84 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass85 = typeCircularBuffer84.getClass();
        boolean boolean86 = typeCircularBuffer81.put((java.lang.reflect.Type) wildcardClass85);
        java.lang.reflect.Type type87 = typeCircularBuffer81.get();
        boolean boolean88 = typeCircularBuffer79.put(type87);
        boolean boolean89 = typeCircularBuffer65.put(type87);
        java.lang.reflect.Type type90 = typeCircularBuffer65.get();
        boolean boolean91 = typeCircularBuffer26.put(type90);
        java.lang.reflect.Type type92 = typeCircularBuffer26.get();
        boolean boolean93 = typeCircularBuffer1.put(type92);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(type19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(type66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(type87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(type90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(type92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test2415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2415");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer6.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.reflect.Type type13 = typeCircularBuffer1.get();
        boolean boolean14 = typeCircularBuffer1.isFull();
        boolean boolean15 = typeCircularBuffer1.isEmpty();
        boolean boolean16 = typeCircularBuffer1.isEmpty();
        boolean boolean17 = typeCircularBuffer1.isFull();
        boolean boolean18 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test2416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2416");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isFull();
        boolean boolean8 = typeCircularBuffer1.isFull();
        boolean boolean9 = typeCircularBuffer1.isEmpty();
        boolean boolean10 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type11 = typeCircularBuffer1.get();
        boolean boolean12 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type13 = typeCircularBuffer1.get();
        boolean boolean14 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass15 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(type11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(type13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test2417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2417");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer6.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.reflect.Type type13 = typeCircularBuffer1.get();
        boolean boolean14 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer19.getClass();
        boolean boolean21 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean22 = typeCircularBuffer16.isEmpty();
        java.lang.reflect.Type type23 = typeCircularBuffer16.get();
        boolean boolean24 = typeCircularBuffer1.put(type23);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type27 = typeCircularBuffer26.get();
        boolean boolean28 = typeCircularBuffer26.isFull();
        boolean boolean29 = typeCircularBuffer26.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        boolean boolean35 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass34);
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer31.getClass();
        boolean boolean37 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass36);
        java.lang.reflect.Type type38 = typeCircularBuffer26.get();
        boolean boolean39 = typeCircularBuffer26.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type42 = typeCircularBuffer41.get();
        boolean boolean43 = typeCircularBuffer41.isFull();
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer41.getClass();
        boolean boolean45 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean46 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean47 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer49 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean52 = typeCircularBuffer51.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer54 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass55 = typeCircularBuffer54.getClass();
        boolean boolean56 = typeCircularBuffer51.put((java.lang.reflect.Type) wildcardClass55);
        java.lang.reflect.Type type57 = typeCircularBuffer51.get();
        boolean boolean58 = typeCircularBuffer49.put(type57);
        boolean boolean59 = typeCircularBuffer49.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer61 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean62 = typeCircularBuffer61.isEmpty();
        boolean boolean63 = typeCircularBuffer61.isFull();
        java.lang.reflect.Type type64 = typeCircularBuffer61.get();
        boolean boolean65 = typeCircularBuffer61.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer67 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean68 = typeCircularBuffer67.isFull();
        java.lang.Class<?> wildcardClass69 = typeCircularBuffer67.getClass();
        boolean boolean70 = typeCircularBuffer61.put((java.lang.reflect.Type) wildcardClass69);
        boolean boolean71 = typeCircularBuffer49.put((java.lang.reflect.Type) wildcardClass69);
        java.lang.reflect.Type type72 = typeCircularBuffer49.get();
        boolean boolean73 = typeCircularBuffer1.put(type72);
        boolean boolean74 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(type42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(type64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
    }

    @Test
    public void test2418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2418");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean8 = typeCircularBuffer7.isFull();
        java.lang.reflect.Type type9 = typeCircularBuffer7.get();
        boolean boolean10 = typeCircularBuffer7.isFull();
        java.lang.reflect.Type type11 = typeCircularBuffer7.get();
        boolean boolean12 = typeCircularBuffer7.isFull();
        boolean boolean13 = typeCircularBuffer7.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean16 = typeCircularBuffer15.isFull();
        boolean boolean17 = typeCircularBuffer15.isEmpty();
        java.lang.reflect.Type type18 = typeCircularBuffer15.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass26 = typeCircularBuffer25.getClass();
        boolean boolean27 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass26);
        java.lang.reflect.Type type28 = typeCircularBuffer22.get();
        boolean boolean29 = typeCircularBuffer20.put(type28);
        java.lang.Class<?> wildcardClass30 = typeCircularBuffer20.getClass();
        boolean boolean31 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass30);
        boolean boolean32 = typeCircularBuffer7.put((java.lang.reflect.Type) wildcardClass30);
        boolean boolean33 = typeCircularBuffer7.isEmpty();
        boolean boolean34 = typeCircularBuffer7.isFull();
        java.lang.reflect.Type type35 = typeCircularBuffer7.get();
        boolean boolean36 = typeCircularBuffer1.put(type35);
        java.lang.reflect.Type type37 = typeCircularBuffer1.get();
        java.lang.reflect.Type type38 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(type11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(type18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNull(type38);
    }

    @Test
    public void test2419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2419");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean9 = typeCircularBuffer8.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass12 = typeCircularBuffer11.getClass();
        boolean boolean13 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass12);
        java.lang.reflect.Type type14 = typeCircularBuffer8.get();
        boolean boolean15 = typeCircularBuffer6.put(type14);
        java.lang.Class<?> wildcardClass16 = typeCircularBuffer6.getClass();
        boolean boolean17 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass16);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(10);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer19.getClass();
        boolean boolean21 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type22 = typeCircularBuffer1.get();
        java.lang.reflect.Type type23 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type26 = typeCircularBuffer25.get();
        boolean boolean27 = typeCircularBuffer25.isFull();
        boolean boolean28 = typeCircularBuffer25.isEmpty();
        boolean boolean29 = typeCircularBuffer25.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer31.getClass();
        boolean boolean33 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass32);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean36 = typeCircularBuffer35.isFull();
        boolean boolean37 = typeCircularBuffer35.isEmpty();
        boolean boolean38 = typeCircularBuffer35.isFull();
        java.lang.Class<?> wildcardClass39 = typeCircularBuffer35.getClass();
        boolean boolean40 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass39);
        java.lang.reflect.Type type41 = typeCircularBuffer25.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean46 = typeCircularBuffer45.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass49 = typeCircularBuffer48.getClass();
        boolean boolean50 = typeCircularBuffer45.put((java.lang.reflect.Type) wildcardClass49);
        java.lang.reflect.Type type51 = typeCircularBuffer45.get();
        boolean boolean52 = typeCircularBuffer43.put(type51);
        boolean boolean53 = typeCircularBuffer43.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer55 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean56 = typeCircularBuffer55.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer58 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass59 = typeCircularBuffer58.getClass();
        boolean boolean60 = typeCircularBuffer55.put((java.lang.reflect.Type) wildcardClass59);
        java.lang.reflect.Type type61 = typeCircularBuffer55.get();
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        boolean boolean64 = typeCircularBuffer55.put((java.lang.reflect.Type) wildcardClass63);
        boolean boolean65 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass63);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer67 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean68 = typeCircularBuffer67.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer70 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass71 = typeCircularBuffer70.getClass();
        boolean boolean72 = typeCircularBuffer67.put((java.lang.reflect.Type) wildcardClass71);
        java.lang.reflect.Type type73 = typeCircularBuffer67.get();
        boolean boolean74 = typeCircularBuffer43.put(type73);
        java.lang.reflect.Type type75 = typeCircularBuffer43.get();
        boolean boolean76 = typeCircularBuffer25.put(type75);
        boolean boolean77 = typeCircularBuffer25.isFull();
        java.lang.reflect.Type type78 = typeCircularBuffer25.get();
        boolean boolean79 = typeCircularBuffer1.put(type78);
        java.lang.reflect.Type type80 = typeCircularBuffer1.get();
        java.lang.reflect.Type type81 = typeCircularBuffer1.get();
        java.lang.reflect.Type type82 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass83 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNull(type23);
        org.junit.Assert.assertNull(type26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertNull(type81);
        org.junit.Assert.assertNull(type82);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test2420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2420");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean4 = typeCircularBuffer3.isFull();
        boolean boolean5 = typeCircularBuffer3.isEmpty();
        java.lang.reflect.Type type6 = typeCircularBuffer3.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer10.get();
        boolean boolean17 = typeCircularBuffer8.put(type16);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer8.getClass();
        boolean boolean19 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass18);
        boolean boolean20 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass18);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type23 = typeCircularBuffer22.get();
        boolean boolean24 = typeCircularBuffer22.isFull();
        boolean boolean25 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean28 = typeCircularBuffer27.isEmpty();
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        boolean boolean31 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass30);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer27.getClass();
        boolean boolean33 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean37 = typeCircularBuffer36.isFull();
        boolean boolean38 = typeCircularBuffer36.isEmpty();
        java.lang.reflect.Type type39 = typeCircularBuffer36.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer46.getClass();
        boolean boolean48 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass47);
        java.lang.reflect.Type type49 = typeCircularBuffer43.get();
        boolean boolean50 = typeCircularBuffer41.put(type49);
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer41.getClass();
        boolean boolean52 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean53 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass51);
        java.lang.Class<?> wildcardClass54 = typeCircularBuffer22.getClass();
        boolean boolean55 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean56 = typeCircularBuffer1.isEmpty();
        boolean boolean57 = typeCircularBuffer1.isFull();
        boolean boolean58 = typeCircularBuffer1.isFull();
        boolean boolean59 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type60 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass61 = type60.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(type39);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test2421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2421");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        boolean boolean8 = typeCircularBuffer1.isEmpty();
        boolean boolean9 = typeCircularBuffer1.isFull();
        boolean boolean10 = typeCircularBuffer1.isFull();
        boolean boolean11 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type12 = null;
        boolean boolean13 = typeCircularBuffer1.put(type12);
        java.lang.reflect.Type type14 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type17 = typeCircularBuffer16.get();
        boolean boolean18 = typeCircularBuffer16.isFull();
        boolean boolean19 = typeCircularBuffer16.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean22 = typeCircularBuffer21.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass25 = typeCircularBuffer24.getClass();
        boolean boolean26 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass25);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean31 = typeCircularBuffer30.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass34 = typeCircularBuffer33.getClass();
        boolean boolean35 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass34);
        java.lang.reflect.Type type36 = typeCircularBuffer30.get();
        boolean boolean37 = typeCircularBuffer28.put(type36);
        boolean boolean38 = typeCircularBuffer28.isFull();
        java.lang.reflect.Type type39 = typeCircularBuffer28.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean42 = typeCircularBuffer41.isEmpty();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        boolean boolean45 = typeCircularBuffer41.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean46 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean47 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean48 = typeCircularBuffer21.isFull();
        boolean boolean49 = typeCircularBuffer21.isFull();
        boolean boolean50 = typeCircularBuffer21.isEmpty();
        boolean boolean51 = typeCircularBuffer21.isFull();
        java.lang.reflect.Type type52 = typeCircularBuffer21.get();
        boolean boolean53 = typeCircularBuffer16.put(type52);
        boolean boolean54 = typeCircularBuffer16.isEmpty();
        java.lang.Class<?> wildcardClass55 = typeCircularBuffer16.getClass();
        boolean boolean56 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass55);
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(type14);
        org.junit.Assert.assertNull(type17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
    }

    @Test
    public void test2422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2422");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        boolean boolean8 = typeCircularBuffer1.isEmpty();
        boolean boolean9 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type10 = typeCircularBuffer1.get();
        java.lang.reflect.Type type11 = typeCircularBuffer1.get();
        java.lang.reflect.Type type12 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertNull(type11);
        org.junit.Assert.assertNull(type12);
    }

    @Test
    public void test2423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2423");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass10);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer19.getClass();
        boolean boolean21 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type22 = typeCircularBuffer16.get();
        java.lang.Class<?> wildcardClass23 = typeCircularBuffer16.getClass();
        boolean boolean24 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass23);
        boolean boolean25 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass23);
        boolean boolean26 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type27 = typeCircularBuffer1.get();
        boolean boolean28 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type29 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        java.lang.reflect.Type type33 = typeCircularBuffer31.get();
        java.lang.reflect.Type type34 = typeCircularBuffer31.get();
        java.lang.reflect.Type type35 = typeCircularBuffer31.get();
        boolean boolean36 = typeCircularBuffer31.isFull();
        boolean boolean37 = typeCircularBuffer31.isFull();
        java.lang.reflect.Type type38 = typeCircularBuffer31.get();
        boolean boolean39 = typeCircularBuffer31.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer46.getClass();
        boolean boolean48 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass47);
        java.lang.reflect.Type type49 = typeCircularBuffer43.get();
        java.lang.Class<?> wildcardClass50 = typeCircularBuffer43.getClass();
        boolean boolean51 = typeCircularBuffer41.put((java.lang.reflect.Type) wildcardClass50);
        boolean boolean52 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass50);
        boolean boolean53 = typeCircularBuffer31.isEmpty();
        java.lang.reflect.Type type54 = typeCircularBuffer31.get();
        boolean boolean55 = typeCircularBuffer1.put(type54);
        boolean boolean56 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer58 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean59 = typeCircularBuffer58.isFull();
        java.lang.reflect.Type type60 = typeCircularBuffer58.get();
        boolean boolean61 = typeCircularBuffer58.isEmpty();
        java.lang.Class<?> wildcardClass62 = typeCircularBuffer58.getClass();
        boolean boolean63 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass62);
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(type29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(type33);
        org.junit.Assert.assertNull(type34);
        org.junit.Assert.assertNull(type35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(type38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(type60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test2424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2424");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean12 = typeCircularBuffer11.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass15 = typeCircularBuffer14.getClass();
        boolean boolean16 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass15);
        java.lang.reflect.Type type17 = typeCircularBuffer11.get();
        boolean boolean18 = typeCircularBuffer9.put(type17);
        boolean boolean19 = typeCircularBuffer9.isFull();
        java.lang.reflect.Type type20 = typeCircularBuffer9.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type23 = typeCircularBuffer22.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean26 = typeCircularBuffer25.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass29 = typeCircularBuffer28.getClass();
        boolean boolean30 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass29);
        java.lang.reflect.Type type31 = typeCircularBuffer25.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type34 = typeCircularBuffer33.get();
        boolean boolean35 = typeCircularBuffer33.isFull();
        boolean boolean36 = typeCircularBuffer33.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean39 = typeCircularBuffer38.isEmpty();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        boolean boolean42 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass41);
        java.lang.Class<?> wildcardClass43 = typeCircularBuffer38.getClass();
        boolean boolean44 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass43);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean47 = typeCircularBuffer46.isEmpty();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        boolean boolean50 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass49);
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer46.getClass();
        boolean boolean52 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean53 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean54 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean55 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean56 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer58 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type59 = typeCircularBuffer58.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer61 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer63 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean64 = typeCircularBuffer63.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer66 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass67 = typeCircularBuffer66.getClass();
        boolean boolean68 = typeCircularBuffer63.put((java.lang.reflect.Type) wildcardClass67);
        java.lang.reflect.Type type69 = typeCircularBuffer63.get();
        boolean boolean70 = typeCircularBuffer61.put(type69);
        boolean boolean71 = typeCircularBuffer61.isFull();
        java.lang.reflect.Type type72 = typeCircularBuffer61.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer74 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean75 = typeCircularBuffer74.isEmpty();
        java.lang.Object obj76 = new java.lang.Object();
        java.lang.Class<?> wildcardClass77 = obj76.getClass();
        boolean boolean78 = typeCircularBuffer74.put((java.lang.reflect.Type) wildcardClass77);
        boolean boolean79 = typeCircularBuffer61.put((java.lang.reflect.Type) wildcardClass77);
        boolean boolean80 = typeCircularBuffer58.put((java.lang.reflect.Type) wildcardClass77);
        boolean boolean81 = typeCircularBuffer58.isEmpty();
        java.lang.reflect.Type type82 = typeCircularBuffer58.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer84 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean85 = typeCircularBuffer84.isEmpty();
        java.lang.reflect.Type type86 = typeCircularBuffer84.get();
        java.lang.reflect.Type type87 = typeCircularBuffer84.get();
        java.lang.reflect.Type type88 = typeCircularBuffer84.get();
        java.lang.reflect.Type type89 = typeCircularBuffer84.get();
        boolean boolean90 = typeCircularBuffer84.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer92 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) ' ');
        java.lang.reflect.Type type93 = typeCircularBuffer92.get();
        java.lang.Class<?> wildcardClass94 = typeCircularBuffer92.getClass();
        boolean boolean95 = typeCircularBuffer84.put((java.lang.reflect.Type) wildcardClass94);
        boolean boolean96 = typeCircularBuffer58.put((java.lang.reflect.Type) wildcardClass94);
        boolean boolean97 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass94);
        java.lang.reflect.Type type98 = typeCircularBuffer9.get();
        boolean boolean99 = typeCircularBuffer1.put(type98);
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNull(type23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNull(type34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(type59);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNull(type86);
        org.junit.Assert.assertNull(type87);
        org.junit.Assert.assertNull(type88);
        org.junit.Assert.assertNull(type89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNull(type93);
        org.junit.Assert.assertNotNull(wildcardClass94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertNotNull(type98);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test2425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2425");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean7 = typeCircularBuffer6.isFull();
        boolean boolean8 = typeCircularBuffer6.isEmpty();
        boolean boolean9 = typeCircularBuffer6.isFull();
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer6.getClass();
        boolean boolean11 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass10);
        java.lang.reflect.Type type12 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
    }

    @Test
    public void test2426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2426");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isEmpty();
        boolean boolean12 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer17.getClass();
        boolean boolean19 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass18);
        java.lang.reflect.Type type20 = typeCircularBuffer14.get();
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        boolean boolean23 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass22);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean26 = typeCircularBuffer25.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass29 = typeCircularBuffer28.getClass();
        boolean boolean30 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass29);
        java.lang.reflect.Type type31 = typeCircularBuffer25.get();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        boolean boolean34 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass33);
        java.lang.reflect.Type type35 = typeCircularBuffer25.get();
        boolean boolean36 = typeCircularBuffer14.put(type35);
        boolean boolean37 = typeCircularBuffer1.put(type35);
        boolean boolean38 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type39 = typeCircularBuffer1.get();
        boolean boolean40 = typeCircularBuffer1.isEmpty();
        boolean boolean41 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test2427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2427");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer6.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.reflect.Type type13 = typeCircularBuffer1.get();
        boolean boolean14 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer19.getClass();
        boolean boolean21 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean22 = typeCircularBuffer16.isEmpty();
        java.lang.reflect.Type type23 = typeCircularBuffer16.get();
        boolean boolean24 = typeCircularBuffer1.put(type23);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type27 = typeCircularBuffer26.get();
        boolean boolean28 = typeCircularBuffer26.isFull();
        boolean boolean29 = typeCircularBuffer26.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        boolean boolean35 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass34);
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer31.getClass();
        boolean boolean37 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass36);
        java.lang.reflect.Type type38 = typeCircularBuffer26.get();
        boolean boolean39 = typeCircularBuffer26.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type42 = typeCircularBuffer41.get();
        boolean boolean43 = typeCircularBuffer41.isFull();
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer41.getClass();
        boolean boolean45 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean46 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass44);
        java.lang.reflect.Type type47 = typeCircularBuffer1.get();
        boolean boolean48 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type51 = typeCircularBuffer50.get();
        boolean boolean52 = typeCircularBuffer50.isFull();
        boolean boolean53 = typeCircularBuffer50.isFull();
        boolean boolean54 = typeCircularBuffer50.isFull();
        java.lang.reflect.Type type55 = typeCircularBuffer50.get();
        boolean boolean56 = typeCircularBuffer50.isEmpty();
        java.lang.reflect.Type type57 = typeCircularBuffer50.get();
        java.lang.reflect.Type type58 = typeCircularBuffer50.get();
        boolean boolean59 = typeCircularBuffer50.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer61 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer63 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean64 = typeCircularBuffer63.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer66 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass67 = typeCircularBuffer66.getClass();
        boolean boolean68 = typeCircularBuffer63.put((java.lang.reflect.Type) wildcardClass67);
        java.lang.reflect.Type type69 = typeCircularBuffer63.get();
        boolean boolean70 = typeCircularBuffer61.put(type69);
        boolean boolean71 = typeCircularBuffer61.isFull();
        java.lang.reflect.Type type72 = typeCircularBuffer61.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer74 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean75 = typeCircularBuffer74.isEmpty();
        java.lang.Object obj76 = new java.lang.Object();
        java.lang.Class<?> wildcardClass77 = obj76.getClass();
        boolean boolean78 = typeCircularBuffer74.put((java.lang.reflect.Type) wildcardClass77);
        boolean boolean79 = typeCircularBuffer61.put((java.lang.reflect.Type) wildcardClass77);
        boolean boolean80 = typeCircularBuffer50.put((java.lang.reflect.Type) wildcardClass77);
        boolean boolean81 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass77);
        boolean boolean82 = typeCircularBuffer1.isEmpty();
        boolean boolean83 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(type42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(type51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(type55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(type57);
        org.junit.Assert.assertNull(type58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
    }

    @Test
    public void test2428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2428");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type4 = typeCircularBuffer3.get();
        boolean boolean5 = typeCircularBuffer3.isFull();
        boolean boolean6 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean9 = typeCircularBuffer8.isEmpty();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer8.getClass();
        boolean boolean14 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass13);
        boolean boolean15 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean18 = typeCircularBuffer17.isFull();
        boolean boolean19 = typeCircularBuffer17.isEmpty();
        java.lang.reflect.Type type20 = typeCircularBuffer17.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean25 = typeCircularBuffer24.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer27.getClass();
        boolean boolean29 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.reflect.Type type30 = typeCircularBuffer24.get();
        boolean boolean31 = typeCircularBuffer22.put(type30);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer22.getClass();
        boolean boolean33 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean35 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean36 = typeCircularBuffer1.isFull();
        boolean boolean37 = typeCircularBuffer1.isEmpty();
        boolean boolean38 = typeCircularBuffer1.isFull();
        boolean boolean39 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type40 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean43 = typeCircularBuffer42.isFull();
        boolean boolean44 = typeCircularBuffer42.isEmpty();
        java.lang.reflect.Type type45 = typeCircularBuffer42.get();
        boolean boolean46 = typeCircularBuffer42.isEmpty();
        boolean boolean47 = typeCircularBuffer42.isEmpty();
        java.lang.Class<?> wildcardClass48 = typeCircularBuffer42.getClass();
        boolean boolean49 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass48);
        boolean boolean50 = typeCircularBuffer1.isFull();
        boolean boolean51 = typeCircularBuffer1.isEmpty();
        boolean boolean52 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(type20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(type40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(type45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
    }

    @Test
    public void test2429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2429");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type9 = typeCircularBuffer8.get();
        boolean boolean10 = typeCircularBuffer8.isFull();
        boolean boolean11 = typeCircularBuffer8.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass16);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer13.getClass();
        boolean boolean19 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass18);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean22 = typeCircularBuffer21.isEmpty();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass24);
        java.lang.Class<?> wildcardClass26 = typeCircularBuffer21.getClass();
        boolean boolean27 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass26);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer34.getClass();
        boolean boolean36 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass35);
        java.lang.reflect.Type type37 = typeCircularBuffer31.get();
        boolean boolean38 = typeCircularBuffer29.put(type37);
        java.lang.Class<?> wildcardClass39 = typeCircularBuffer29.getClass();
        boolean boolean40 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass39);
        java.lang.Class<?> wildcardClass41 = typeCircularBuffer8.getClass();
        boolean boolean42 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean43 = typeCircularBuffer1.isEmpty();
        boolean boolean44 = typeCircularBuffer1.isFull();
        boolean boolean45 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
    }

    @Test
    public void test2430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2430");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean9 = typeCircularBuffer8.isFull();
        java.lang.reflect.Type type10 = typeCircularBuffer8.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean13 = typeCircularBuffer12.isEmpty();
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        boolean boolean16 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass15);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer12.getClass();
        boolean boolean18 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass17);
        boolean boolean19 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass17);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '#');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean26 = typeCircularBuffer25.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass29 = typeCircularBuffer28.getClass();
        boolean boolean30 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass29);
        java.lang.reflect.Type type31 = typeCircularBuffer25.get();
        boolean boolean32 = typeCircularBuffer23.put(type31);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean37 = typeCircularBuffer36.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass40 = typeCircularBuffer39.getClass();
        boolean boolean41 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass40);
        java.lang.reflect.Type type42 = typeCircularBuffer36.get();
        boolean boolean43 = typeCircularBuffer34.put(type42);
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer34.getClass();
        boolean boolean45 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean46 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean47 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass44);
        java.lang.reflect.Type type48 = typeCircularBuffer1.get();
        java.lang.reflect.Type type49 = typeCircularBuffer1.get();
        java.lang.reflect.Type type50 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer52 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean53 = typeCircularBuffer52.isFull();
        java.lang.reflect.Type type54 = typeCircularBuffer52.get();
        boolean boolean55 = typeCircularBuffer52.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer57 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean58 = typeCircularBuffer57.isEmpty();
        java.lang.Class<?> wildcardClass59 = typeCircularBuffer57.getClass();
        boolean boolean60 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass59);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer62 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 1);
        boolean boolean63 = typeCircularBuffer62.isEmpty();
        boolean boolean64 = typeCircularBuffer62.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer66 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type67 = typeCircularBuffer66.get();
        boolean boolean68 = typeCircularBuffer66.isFull();
        boolean boolean69 = typeCircularBuffer66.isFull();
        boolean boolean70 = typeCircularBuffer66.isEmpty();
        java.lang.reflect.Type type71 = typeCircularBuffer66.get();
        java.lang.Class<?> wildcardClass72 = typeCircularBuffer66.getClass();
        boolean boolean73 = typeCircularBuffer62.put((java.lang.reflect.Type) wildcardClass72);
        boolean boolean74 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass72);
        java.lang.Class<?> wildcardClass75 = typeCircularBuffer52.getClass();
        boolean boolean76 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass75);
        java.lang.reflect.Type type77 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass78 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNull(type49);
        org.junit.Assert.assertNull(type50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(type54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(type67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(type71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test2431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2431");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type24 = typeCircularBuffer1.get();
        boolean boolean25 = typeCircularBuffer1.isEmpty();
        boolean boolean26 = typeCircularBuffer1.isFull();
        boolean boolean27 = typeCircularBuffer1.isEmpty();
        boolean boolean28 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test2432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2432");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        boolean boolean10 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type11 = typeCircularBuffer1.get();
        boolean boolean12 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(type11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test2433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2433");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isEmpty();
        boolean boolean12 = typeCircularBuffer1.isFull();
        boolean boolean13 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type14 = typeCircularBuffer1.get();
        boolean boolean15 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type16 = typeCircularBuffer1.get();
        java.lang.reflect.Type type17 = typeCircularBuffer1.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass18 = type17.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(type16);
        org.junit.Assert.assertNull(type17);
    }

    @Test
    public void test2434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2434");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        java.lang.reflect.Type type11 = typeCircularBuffer1.get();
        boolean boolean12 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer17.getClass();
        boolean boolean19 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass18);
        java.lang.reflect.Type type20 = typeCircularBuffer14.get();
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        boolean boolean23 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass22);
        java.lang.reflect.Type type24 = typeCircularBuffer14.get();
        boolean boolean25 = typeCircularBuffer1.put(type24);
        boolean boolean26 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type27 = typeCircularBuffer1.get();
        boolean boolean28 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean31 = typeCircularBuffer30.isFull();
        java.lang.reflect.Type type32 = typeCircularBuffer30.get();
        boolean boolean33 = typeCircularBuffer30.isEmpty();
        java.lang.reflect.Type type34 = typeCircularBuffer30.get();
        java.lang.reflect.Type type35 = typeCircularBuffer30.get();
        boolean boolean36 = typeCircularBuffer30.isEmpty();
        java.lang.Class<?> wildcardClass37 = typeCircularBuffer30.getClass();
        boolean boolean38 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass37);
        java.lang.reflect.Type type39 = typeCircularBuffer1.get();
        boolean boolean40 = typeCircularBuffer1.isFull();
        boolean boolean41 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass42 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(type32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(type34);
        org.junit.Assert.assertNull(type35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test2435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2435");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer10.get();
        boolean boolean17 = typeCircularBuffer8.put(type16);
        boolean boolean18 = typeCircularBuffer8.isFull();
        java.lang.reflect.Type type19 = typeCircularBuffer8.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean24 = typeCircularBuffer23.isFull();
        boolean boolean25 = typeCircularBuffer23.isEmpty();
        java.lang.reflect.Type type26 = typeCircularBuffer23.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean31 = typeCircularBuffer30.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass34 = typeCircularBuffer33.getClass();
        boolean boolean35 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass34);
        java.lang.reflect.Type type36 = typeCircularBuffer30.get();
        boolean boolean37 = typeCircularBuffer28.put(type36);
        java.lang.Class<?> wildcardClass38 = typeCircularBuffer28.getClass();
        boolean boolean39 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass38);
        boolean boolean40 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass38);
        boolean boolean41 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass38);
        boolean boolean42 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass38);
        java.lang.reflect.Type type43 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(type26);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(type43);
    }

    @Test
    public void test2436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2436");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        java.lang.reflect.Type type12 = typeCircularBuffer10.get();
        java.lang.reflect.Type type13 = typeCircularBuffer10.get();
        java.lang.reflect.Type type14 = typeCircularBuffer10.get();
        boolean boolean15 = typeCircularBuffer10.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean18 = typeCircularBuffer17.isFull();
        boolean boolean19 = typeCircularBuffer17.isEmpty();
        boolean boolean20 = typeCircularBuffer17.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass26 = typeCircularBuffer25.getClass();
        boolean boolean27 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass26);
        java.lang.reflect.Type type28 = typeCircularBuffer22.get();
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        boolean boolean31 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass30);
        boolean boolean32 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass30);
        boolean boolean33 = typeCircularBuffer17.isFull();
        java.lang.Class<?> wildcardClass34 = typeCircularBuffer17.getClass();
        boolean boolean35 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass34);
        boolean boolean36 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass34);
        boolean boolean37 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean40 = typeCircularBuffer39.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass43 = typeCircularBuffer42.getClass();
        boolean boolean44 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass43);
        java.lang.reflect.Type type45 = typeCircularBuffer39.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type48 = typeCircularBuffer47.get();
        boolean boolean49 = typeCircularBuffer47.isFull();
        boolean boolean50 = typeCircularBuffer47.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer52 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean53 = typeCircularBuffer52.isEmpty();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        boolean boolean56 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass55);
        java.lang.Class<?> wildcardClass57 = typeCircularBuffer52.getClass();
        boolean boolean58 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass57);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer60 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean61 = typeCircularBuffer60.isEmpty();
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        boolean boolean64 = typeCircularBuffer60.put((java.lang.reflect.Type) wildcardClass63);
        java.lang.Class<?> wildcardClass65 = typeCircularBuffer60.getClass();
        boolean boolean66 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass65);
        boolean boolean67 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass65);
        boolean boolean68 = typeCircularBuffer39.isEmpty();
        boolean boolean69 = typeCircularBuffer39.isFull();
        java.lang.reflect.Type type70 = typeCircularBuffer39.get();
        java.lang.Class<?> wildcardClass71 = typeCircularBuffer39.getClass();
        boolean boolean72 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass71);
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(type12);
        org.junit.Assert.assertNull(type13);
        org.junit.Assert.assertNull(type14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNull(type48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test2437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2437");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer6.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.reflect.Type type13 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer20.getClass();
        boolean boolean22 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type23 = typeCircularBuffer17.get();
        boolean boolean24 = typeCircularBuffer15.put(type23);
        boolean boolean25 = typeCircularBuffer1.put(type23);
        boolean boolean26 = typeCircularBuffer1.isFull();
        boolean boolean27 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test2438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2438");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer5 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean6 = typeCircularBuffer5.isEmpty();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = typeCircularBuffer5.put((java.lang.reflect.Type) wildcardClass8);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer5.getClass();
        boolean boolean11 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass10);
        boolean boolean12 = typeCircularBuffer1.isFull();
        boolean boolean13 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean16 = typeCircularBuffer15.isFull();
        boolean boolean17 = typeCircularBuffer15.isEmpty();
        boolean boolean18 = typeCircularBuffer15.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean21 = typeCircularBuffer20.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer23.getClass();
        boolean boolean25 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass24);
        java.lang.reflect.Type type26 = typeCircularBuffer20.get();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        boolean boolean29 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass28);
        boolean boolean30 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass28);
        boolean boolean31 = typeCircularBuffer15.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean34 = typeCircularBuffer33.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass37 = typeCircularBuffer36.getClass();
        boolean boolean38 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass37);
        boolean boolean39 = typeCircularBuffer33.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.GenericDeclaration> genericDeclarationCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.GenericDeclaration>((int) (short) 100);
        java.lang.Class<?> wildcardClass42 = genericDeclarationCircularBuffer41.getClass();
        boolean boolean43 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass42);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean46 = typeCircularBuffer45.isFull();
        java.lang.reflect.Type type47 = typeCircularBuffer45.get();
        boolean boolean48 = typeCircularBuffer45.isFull();
        java.lang.reflect.Type type49 = typeCircularBuffer45.get();
        boolean boolean50 = typeCircularBuffer45.isFull();
        boolean boolean51 = typeCircularBuffer45.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer53 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean54 = typeCircularBuffer53.isFull();
        boolean boolean55 = typeCircularBuffer53.isEmpty();
        java.lang.reflect.Type type56 = typeCircularBuffer53.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer58 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer60 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean61 = typeCircularBuffer60.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer63 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass64 = typeCircularBuffer63.getClass();
        boolean boolean65 = typeCircularBuffer60.put((java.lang.reflect.Type) wildcardClass64);
        java.lang.reflect.Type type66 = typeCircularBuffer60.get();
        boolean boolean67 = typeCircularBuffer58.put(type66);
        java.lang.Class<?> wildcardClass68 = typeCircularBuffer58.getClass();
        boolean boolean69 = typeCircularBuffer53.put((java.lang.reflect.Type) wildcardClass68);
        boolean boolean70 = typeCircularBuffer45.put((java.lang.reflect.Type) wildcardClass68);
        boolean boolean71 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass68);
        boolean boolean72 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass68);
        java.lang.Class<?> wildcardClass73 = typeCircularBuffer15.getClass();
        boolean boolean74 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass73);
        boolean boolean75 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(type47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(type49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(type56);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test2439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2439");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean4 = typeCircularBuffer3.isFull();
        boolean boolean5 = typeCircularBuffer3.isEmpty();
        java.lang.reflect.Type type6 = typeCircularBuffer3.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer10.get();
        boolean boolean17 = typeCircularBuffer8.put(type16);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer8.getClass();
        boolean boolean19 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass18);
        boolean boolean20 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass18);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type23 = typeCircularBuffer22.get();
        boolean boolean24 = typeCircularBuffer22.isFull();
        boolean boolean25 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean28 = typeCircularBuffer27.isEmpty();
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        boolean boolean31 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass30);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer27.getClass();
        boolean boolean33 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean37 = typeCircularBuffer36.isFull();
        boolean boolean38 = typeCircularBuffer36.isEmpty();
        java.lang.reflect.Type type39 = typeCircularBuffer36.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer46.getClass();
        boolean boolean48 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass47);
        java.lang.reflect.Type type49 = typeCircularBuffer43.get();
        boolean boolean50 = typeCircularBuffer41.put(type49);
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer41.getClass();
        boolean boolean52 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean53 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass51);
        java.lang.Class<?> wildcardClass54 = typeCircularBuffer22.getClass();
        boolean boolean55 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean56 = typeCircularBuffer1.isEmpty();
        boolean boolean57 = typeCircularBuffer1.isFull();
        boolean boolean58 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type59 = typeCircularBuffer1.get();
        boolean boolean60 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type61 = typeCircularBuffer1.get();
        boolean boolean62 = typeCircularBuffer1.isFull();
        boolean boolean63 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(type39);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
    }

    @Test
    public void test2440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2440");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass10);
        boolean boolean13 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer20.getClass();
        boolean boolean22 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type23 = typeCircularBuffer17.get();
        boolean boolean24 = typeCircularBuffer15.put(type23);
        boolean boolean25 = typeCircularBuffer15.isFull();
        java.lang.reflect.Type type26 = typeCircularBuffer15.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        boolean boolean32 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass31);
        boolean boolean33 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass31);
        java.lang.reflect.Type type34 = typeCircularBuffer15.get();
        boolean boolean35 = typeCircularBuffer1.put(type34);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean40 = typeCircularBuffer39.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass43 = typeCircularBuffer42.getClass();
        boolean boolean44 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass43);
        java.lang.reflect.Type type45 = typeCircularBuffer39.get();
        boolean boolean46 = typeCircularBuffer37.put(type45);
        boolean boolean47 = typeCircularBuffer37.isFull();
        java.lang.reflect.Type type48 = typeCircularBuffer37.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean51 = typeCircularBuffer50.isEmpty();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        boolean boolean54 = typeCircularBuffer50.put((java.lang.reflect.Type) wildcardClass53);
        boolean boolean55 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass53);
        java.lang.reflect.Type type56 = typeCircularBuffer37.get();
        boolean boolean57 = typeCircularBuffer1.put(type56);
        java.lang.Class<?> wildcardClass58 = type56.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test2441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2441");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        boolean boolean12 = typeCircularBuffer6.isFull();
        boolean boolean13 = typeCircularBuffer6.isFull();
        boolean boolean14 = typeCircularBuffer6.isFull();
        java.lang.Class<?> wildcardClass15 = typeCircularBuffer6.getClass();
        boolean boolean16 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass15);
        boolean boolean17 = typeCircularBuffer1.isEmpty();
        boolean boolean18 = typeCircularBuffer1.isEmpty();
        boolean boolean19 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test2442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2442");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean9 = typeCircularBuffer8.isEmpty();
        boolean boolean10 = typeCircularBuffer8.isEmpty();
        boolean boolean11 = typeCircularBuffer8.isEmpty();
        boolean boolean12 = typeCircularBuffer8.isEmpty();
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer8.getClass();
        boolean boolean14 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass13);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        boolean boolean20 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass19);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean23 = typeCircularBuffer22.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type26 = typeCircularBuffer25.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean31 = typeCircularBuffer30.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass34 = typeCircularBuffer33.getClass();
        boolean boolean35 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass34);
        java.lang.reflect.Type type36 = typeCircularBuffer30.get();
        boolean boolean37 = typeCircularBuffer28.put(type36);
        boolean boolean38 = typeCircularBuffer28.isFull();
        java.lang.reflect.Type type39 = typeCircularBuffer28.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean42 = typeCircularBuffer41.isEmpty();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        boolean boolean45 = typeCircularBuffer41.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean46 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean47 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean48 = typeCircularBuffer25.isEmpty();
        java.lang.Class<?> wildcardClass49 = typeCircularBuffer25.getClass();
        boolean boolean50 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass49);
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer22.getClass();
        boolean boolean52 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass51);
        java.lang.Class<?> wildcardClass53 = typeCircularBuffer16.getClass();
        boolean boolean54 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass53);
        boolean boolean55 = typeCircularBuffer1.isEmpty();
        boolean boolean56 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(type26);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
    }

    @Test
    public void test2443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2443");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer10.get();
        boolean boolean17 = typeCircularBuffer8.put(type16);
        boolean boolean18 = typeCircularBuffer8.isFull();
        java.lang.reflect.Type type19 = typeCircularBuffer8.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean22 = typeCircularBuffer21.isEmpty();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean26 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean27 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean28 = typeCircularBuffer1.isFull();
        boolean boolean29 = typeCircularBuffer1.isFull();
        boolean boolean30 = typeCircularBuffer1.isEmpty();
        boolean boolean31 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type32 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean37 = typeCircularBuffer36.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass40 = typeCircularBuffer39.getClass();
        boolean boolean41 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass40);
        java.lang.reflect.Type type42 = typeCircularBuffer36.get();
        boolean boolean43 = typeCircularBuffer34.put(type42);
        boolean boolean44 = typeCircularBuffer34.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean47 = typeCircularBuffer46.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer49 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass50 = typeCircularBuffer49.getClass();
        boolean boolean51 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass50);
        java.lang.reflect.Type type52 = typeCircularBuffer46.get();
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        boolean boolean55 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean56 = typeCircularBuffer34.put((java.lang.reflect.Type) wildcardClass54);
        java.lang.reflect.Type type57 = typeCircularBuffer34.get();
        boolean boolean58 = typeCircularBuffer1.put(type57);
        boolean boolean59 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
    }

    @Test
    public void test2444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2444");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass10);
        boolean boolean13 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer20.getClass();
        boolean boolean22 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type23 = typeCircularBuffer17.get();
        boolean boolean24 = typeCircularBuffer15.put(type23);
        boolean boolean25 = typeCircularBuffer15.isFull();
        java.lang.reflect.Type type26 = typeCircularBuffer15.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        boolean boolean32 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass31);
        boolean boolean33 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass31);
        java.lang.reflect.Type type34 = typeCircularBuffer15.get();
        boolean boolean35 = typeCircularBuffer1.put(type34);
        boolean boolean36 = typeCircularBuffer1.isEmpty();
        boolean boolean37 = typeCircularBuffer1.isEmpty();
        boolean boolean38 = typeCircularBuffer1.isFull();
        boolean boolean39 = typeCircularBuffer1.isFull();
        boolean boolean40 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
    }

    @Test
    public void test2445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2445");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        boolean boolean12 = typeCircularBuffer6.isFull();
        boolean boolean13 = typeCircularBuffer6.isFull();
        boolean boolean14 = typeCircularBuffer6.isFull();
        java.lang.Class<?> wildcardClass15 = typeCircularBuffer6.getClass();
        boolean boolean16 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass15);
        boolean boolean17 = typeCircularBuffer1.isEmpty();
        boolean boolean18 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type19 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(type19);
    }

    @Test
    public void test2446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2446");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer9.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        boolean boolean13 = typeCircularBuffer1.isEmpty();
        boolean boolean14 = typeCircularBuffer1.isFull();
        boolean boolean15 = typeCircularBuffer1.isEmpty();
        boolean boolean16 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type17 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(type17);
    }

    @Test
    public void test2447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2447");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.AnnotatedElement> annotatedElementCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.AnnotatedElement>((int) (short) 0);
    }

    @Test
    public void test2448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2448");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type10 = typeCircularBuffer9.get();
        boolean boolean11 = typeCircularBuffer9.isFull();
        boolean boolean12 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer14.getClass();
        boolean boolean20 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass19);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        boolean boolean26 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer22.getClass();
        boolean boolean28 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass27);
        java.lang.reflect.Type type30 = typeCircularBuffer1.get();
        java.lang.reflect.Type type31 = typeCircularBuffer1.get();
        boolean boolean32 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type33 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNull(type31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(type33);
    }

    @Test
    public void test2449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2449");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type10 = typeCircularBuffer9.get();
        boolean boolean11 = typeCircularBuffer9.isFull();
        boolean boolean12 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer14.getClass();
        boolean boolean20 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass19);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        boolean boolean26 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer22.getClass();
        boolean boolean28 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean30 = typeCircularBuffer1.isEmpty();
        boolean boolean31 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type32 = typeCircularBuffer1.get();
        boolean boolean33 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean36 = typeCircularBuffer35.isEmpty();
        java.lang.reflect.Type type37 = typeCircularBuffer35.get();
        java.lang.reflect.Type type38 = typeCircularBuffer35.get();
        java.lang.reflect.Type type39 = typeCircularBuffer35.get();
        boolean boolean40 = typeCircularBuffer35.isFull();
        boolean boolean41 = typeCircularBuffer35.isFull();
        java.lang.reflect.Type type42 = typeCircularBuffer35.get();
        boolean boolean43 = typeCircularBuffer35.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean48 = typeCircularBuffer47.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer50.getClass();
        boolean boolean52 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass51);
        java.lang.reflect.Type type53 = typeCircularBuffer47.get();
        java.lang.Class<?> wildcardClass54 = typeCircularBuffer47.getClass();
        boolean boolean55 = typeCircularBuffer45.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean56 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean57 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean58 = typeCircularBuffer1.isEmpty();
        boolean boolean59 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass60 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(type37);
        org.junit.Assert.assertNull(type38);
        org.junit.Assert.assertNull(type39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(type42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test2450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2450");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass4 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test2451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2451");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 100);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type4 = typeCircularBuffer3.get();
        boolean boolean5 = typeCircularBuffer3.isFull();
        boolean boolean6 = typeCircularBuffer3.isFull();
        boolean boolean7 = typeCircularBuffer3.isFull();
        boolean boolean8 = typeCircularBuffer3.isFull();
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer17.getClass();
        boolean boolean19 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass18);
        java.lang.reflect.Type type20 = typeCircularBuffer14.get();
        boolean boolean21 = typeCircularBuffer12.put(type20);
        boolean boolean22 = typeCircularBuffer12.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 1);
        boolean boolean25 = typeCircularBuffer24.isEmpty();
        boolean boolean26 = typeCircularBuffer24.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type29 = typeCircularBuffer28.get();
        boolean boolean30 = typeCircularBuffer28.isFull();
        boolean boolean31 = typeCircularBuffer28.isFull();
        boolean boolean32 = typeCircularBuffer28.isEmpty();
        java.lang.reflect.Type type33 = typeCircularBuffer28.get();
        java.lang.Class<?> wildcardClass34 = typeCircularBuffer28.getClass();
        boolean boolean35 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass34);
        boolean boolean36 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass34);
        java.lang.reflect.Type type37 = typeCircularBuffer12.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type40 = typeCircularBuffer39.get();
        boolean boolean41 = typeCircularBuffer39.isFull();
        boolean boolean42 = typeCircularBuffer39.isEmpty();
        java.lang.Class<?> wildcardClass43 = typeCircularBuffer39.getClass();
        boolean boolean44 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass43);
        boolean boolean45 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass43);
        java.lang.Class<?> wildcardClass46 = typeCircularBuffer3.getClass();
        boolean boolean47 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass46);
        boolean boolean48 = typeCircularBuffer1.isEmpty();
        boolean boolean49 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(type29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(type33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNull(type40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test2452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2452");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer17.getClass();
        boolean boolean19 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass18);
        java.lang.reflect.Type type20 = typeCircularBuffer14.get();
        boolean boolean21 = typeCircularBuffer12.put(type20);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer12.getClass();
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass22);
        boolean boolean24 = typeCircularBuffer1.isFull();
        boolean boolean25 = typeCircularBuffer1.isFull();
        boolean boolean26 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type27 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type30 = typeCircularBuffer29.get();
        boolean boolean31 = typeCircularBuffer29.isFull();
        boolean boolean32 = typeCircularBuffer29.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean35 = typeCircularBuffer34.isEmpty();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        boolean boolean38 = typeCircularBuffer34.put((java.lang.reflect.Type) wildcardClass37);
        java.lang.Class<?> wildcardClass39 = typeCircularBuffer34.getClass();
        boolean boolean40 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass39);
        java.lang.reflect.Type type41 = typeCircularBuffer29.get();
        boolean boolean42 = typeCircularBuffer29.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type45 = typeCircularBuffer44.get();
        boolean boolean46 = typeCircularBuffer44.isFull();
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer44.getClass();
        boolean boolean48 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass47);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        boolean boolean51 = typeCircularBuffer50.isEmpty();
        boolean boolean52 = typeCircularBuffer50.isEmpty();
        boolean boolean53 = typeCircularBuffer50.isFull();
        java.lang.Class<?> wildcardClass54 = typeCircularBuffer50.getClass();
        boolean boolean55 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean56 = typeCircularBuffer29.isFull();
        boolean boolean57 = typeCircularBuffer29.isEmpty();
        java.lang.reflect.Type type58 = typeCircularBuffer29.get();
        boolean boolean59 = typeCircularBuffer1.put(type58);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(type45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
    }

    @Test
    public void test2453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2453");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass9);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean13 = typeCircularBuffer12.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass16 = typeCircularBuffer15.getClass();
        boolean boolean17 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass16);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer12.getClass();
        boolean boolean19 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass18);
        boolean boolean20 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type21 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) ' ');
        java.lang.reflect.Type type24 = typeCircularBuffer23.get();
        boolean boolean25 = typeCircularBuffer23.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean28 = typeCircularBuffer27.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass31 = typeCircularBuffer30.getClass();
        boolean boolean32 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass31);
        java.lang.reflect.Type type33 = typeCircularBuffer27.get();
        boolean boolean34 = typeCircularBuffer23.put(type33);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer23.getClass();
        boolean boolean36 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass35);
        boolean boolean37 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
    }

    @Test
    public void test2454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2454");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) 'a');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass12 = typeCircularBuffer11.getClass();
        boolean boolean13 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass12);
        java.lang.reflect.Type type14 = typeCircularBuffer9.get();
        java.lang.reflect.Type type15 = typeCircularBuffer9.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type18 = typeCircularBuffer17.get();
        boolean boolean19 = typeCircularBuffer17.isFull();
        boolean boolean20 = typeCircularBuffer17.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        boolean boolean26 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer22.getClass();
        boolean boolean28 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass27);
        java.lang.reflect.Type type29 = typeCircularBuffer17.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean34 = typeCircularBuffer33.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass37 = typeCircularBuffer36.getClass();
        boolean boolean38 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass37);
        java.lang.reflect.Type type39 = typeCircularBuffer33.get();
        boolean boolean40 = typeCircularBuffer31.put(type39);
        boolean boolean41 = typeCircularBuffer17.put(type39);
        java.lang.Class<?> wildcardClass42 = typeCircularBuffer17.getClass();
        boolean boolean43 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass42);
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer9.getClass();
        boolean boolean45 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass44);
        java.lang.Class<?> wildcardClass46 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNull(type15);
        org.junit.Assert.assertNull(type18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test2455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2455");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) ' ');
        java.lang.reflect.Type type10 = typeCircularBuffer9.get();
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer9.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean17 = typeCircularBuffer16.isFull();
        boolean boolean18 = typeCircularBuffer16.isEmpty();
        java.lang.reflect.Type type19 = typeCircularBuffer16.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean24 = typeCircularBuffer23.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer26.getClass();
        boolean boolean28 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass27);
        java.lang.reflect.Type type29 = typeCircularBuffer23.get();
        boolean boolean30 = typeCircularBuffer21.put(type29);
        java.lang.Class<?> wildcardClass31 = typeCircularBuffer21.getClass();
        boolean boolean32 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass31);
        boolean boolean33 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass31);
        boolean boolean34 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass31);
        boolean boolean35 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type36 = typeCircularBuffer1.get();
        boolean boolean37 = typeCircularBuffer1.isFull();
        boolean boolean38 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(type19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test2456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2456");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isFull();
        boolean boolean8 = typeCircularBuffer1.isFull();
        boolean boolean9 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type10 = typeCircularBuffer1.get();
        java.lang.reflect.Type type11 = typeCircularBuffer1.get();
        boolean boolean12 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer19.getClass();
        boolean boolean21 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type22 = typeCircularBuffer16.get();
        boolean boolean23 = typeCircularBuffer14.put(type22);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean28 = typeCircularBuffer27.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass31 = typeCircularBuffer30.getClass();
        boolean boolean32 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass31);
        java.lang.reflect.Type type33 = typeCircularBuffer27.get();
        boolean boolean34 = typeCircularBuffer25.put(type33);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer25.getClass();
        boolean boolean36 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass35);
        boolean boolean37 = typeCircularBuffer14.isEmpty();
        java.lang.reflect.Type type38 = null;
        boolean boolean39 = typeCircularBuffer14.put(type38);
        java.lang.reflect.Type type40 = typeCircularBuffer14.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean45 = typeCircularBuffer44.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass48 = typeCircularBuffer47.getClass();
        boolean boolean49 = typeCircularBuffer44.put((java.lang.reflect.Type) wildcardClass48);
        java.lang.reflect.Type type50 = typeCircularBuffer44.get();
        boolean boolean51 = typeCircularBuffer42.put(type50);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer53 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer55 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean56 = typeCircularBuffer55.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer58 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass59 = typeCircularBuffer58.getClass();
        boolean boolean60 = typeCircularBuffer55.put((java.lang.reflect.Type) wildcardClass59);
        java.lang.reflect.Type type61 = typeCircularBuffer55.get();
        boolean boolean62 = typeCircularBuffer53.put(type61);
        java.lang.Class<?> wildcardClass63 = typeCircularBuffer53.getClass();
        boolean boolean64 = typeCircularBuffer42.put((java.lang.reflect.Type) wildcardClass63);
        boolean boolean65 = typeCircularBuffer42.isFull();
        boolean boolean66 = typeCircularBuffer42.isFull();
        java.lang.Class<?> wildcardClass67 = typeCircularBuffer42.getClass();
        boolean boolean68 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass67);
        boolean boolean69 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass67);
        boolean boolean70 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertNull(type11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test2457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2457");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean9 = typeCircularBuffer8.isFull();
        java.lang.reflect.Type type10 = typeCircularBuffer8.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean13 = typeCircularBuffer12.isEmpty();
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        boolean boolean16 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass15);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer12.getClass();
        boolean boolean18 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass17);
        boolean boolean19 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass17);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type24 = typeCircularBuffer23.get();
        boolean boolean25 = typeCircularBuffer23.isFull();
        boolean boolean26 = typeCircularBuffer23.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        boolean boolean32 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass31);
        java.lang.Class<?> wildcardClass33 = typeCircularBuffer28.getClass();
        boolean boolean34 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass33);
        boolean boolean35 = typeCircularBuffer23.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean38 = typeCircularBuffer37.isFull();
        boolean boolean39 = typeCircularBuffer37.isEmpty();
        java.lang.reflect.Type type40 = typeCircularBuffer37.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean45 = typeCircularBuffer44.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass48 = typeCircularBuffer47.getClass();
        boolean boolean49 = typeCircularBuffer44.put((java.lang.reflect.Type) wildcardClass48);
        java.lang.reflect.Type type50 = typeCircularBuffer44.get();
        boolean boolean51 = typeCircularBuffer42.put(type50);
        java.lang.Class<?> wildcardClass52 = typeCircularBuffer42.getClass();
        boolean boolean53 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass52);
        boolean boolean54 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass52);
        boolean boolean55 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass52);
        boolean boolean56 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass52);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer58 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean59 = typeCircularBuffer58.isFull();
        java.lang.reflect.Type type60 = typeCircularBuffer58.get();
        boolean boolean61 = typeCircularBuffer58.isEmpty();
        boolean boolean62 = typeCircularBuffer58.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer64 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        boolean boolean65 = typeCircularBuffer64.isEmpty();
        java.lang.Class<?> wildcardClass66 = typeCircularBuffer64.getClass();
        boolean boolean67 = typeCircularBuffer58.put((java.lang.reflect.Type) wildcardClass66);
        boolean boolean68 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass66);
        java.lang.reflect.Type type69 = typeCircularBuffer1.get();
        boolean boolean70 = typeCircularBuffer1.isFull();
        boolean boolean71 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type72 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(type40);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(type60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNull(type72);
    }

    @Test
    public void test2458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2458");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer17.getClass();
        boolean boolean19 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass18);
        java.lang.reflect.Type type20 = typeCircularBuffer14.get();
        boolean boolean21 = typeCircularBuffer12.put(type20);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer12.getClass();
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass22);
        boolean boolean24 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass25 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test2459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2459");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 10);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test2460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2460");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        java.lang.reflect.Type type10 = typeCircularBuffer1.get();
        boolean boolean11 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type14 = typeCircularBuffer13.get();
        boolean boolean15 = typeCircularBuffer13.isEmpty();
        java.lang.reflect.Type type16 = typeCircularBuffer13.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean21 = typeCircularBuffer20.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer23.getClass();
        boolean boolean25 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass24);
        java.lang.reflect.Type type26 = typeCircularBuffer20.get();
        boolean boolean27 = typeCircularBuffer18.put(type26);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer18.getClass();
        boolean boolean29 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.reflect.Type type30 = typeCircularBuffer13.get();
        java.lang.Class<?> wildcardClass31 = typeCircularBuffer13.getClass();
        boolean boolean32 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass31);
        java.lang.Class<?> wildcardClass33 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(type14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(type16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(type30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test2461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2461");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        boolean boolean6 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        boolean boolean8 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type11 = typeCircularBuffer10.get();
        boolean boolean12 = typeCircularBuffer10.isFull();
        boolean boolean13 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean16 = typeCircularBuffer15.isEmpty();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        boolean boolean19 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass18);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer15.getClass();
        boolean boolean21 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type22 = typeCircularBuffer10.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean27 = typeCircularBuffer26.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass30 = typeCircularBuffer29.getClass();
        boolean boolean31 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass30);
        java.lang.reflect.Type type32 = typeCircularBuffer26.get();
        boolean boolean33 = typeCircularBuffer24.put(type32);
        boolean boolean34 = typeCircularBuffer10.put(type32);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer10.getClass();
        boolean boolean36 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass35);
        java.lang.reflect.Type type37 = typeCircularBuffer1.get();
        java.lang.reflect.Type type38 = typeCircularBuffer1.get();
        boolean boolean39 = typeCircularBuffer1.isFull();
        boolean boolean40 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type41 = typeCircularBuffer1.get();
        boolean boolean42 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(type11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNull(type38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(type41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
    }

    @Test
    public void test2462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2462");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        java.lang.reflect.Type type11 = typeCircularBuffer1.get();
        java.lang.reflect.Type type12 = null;
        boolean boolean13 = typeCircularBuffer1.put(type12);
        boolean boolean14 = typeCircularBuffer1.isEmpty();
        boolean boolean15 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type18 = typeCircularBuffer17.get();
        boolean boolean19 = typeCircularBuffer17.isFull();
        boolean boolean20 = typeCircularBuffer17.isFull();
        boolean boolean21 = typeCircularBuffer17.isFull();
        boolean boolean22 = typeCircularBuffer17.isFull();
        java.lang.reflect.Type type23 = typeCircularBuffer17.get();
        boolean boolean24 = typeCircularBuffer17.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type27 = typeCircularBuffer26.get();
        boolean boolean28 = typeCircularBuffer26.isFull();
        boolean boolean29 = typeCircularBuffer26.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        boolean boolean35 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass34);
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer31.getClass();
        boolean boolean37 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass36);
        java.lang.reflect.Type type38 = typeCircularBuffer26.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean43 = typeCircularBuffer42.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass46 = typeCircularBuffer45.getClass();
        boolean boolean47 = typeCircularBuffer42.put((java.lang.reflect.Type) wildcardClass46);
        java.lang.reflect.Type type48 = typeCircularBuffer42.get();
        boolean boolean49 = typeCircularBuffer40.put(type48);
        boolean boolean50 = typeCircularBuffer26.put(type48);
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer26.getClass();
        boolean boolean52 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass51);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer54 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type55 = typeCircularBuffer54.get();
        boolean boolean56 = typeCircularBuffer54.isFull();
        boolean boolean57 = typeCircularBuffer54.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer59 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean60 = typeCircularBuffer59.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer62 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass63 = typeCircularBuffer62.getClass();
        boolean boolean64 = typeCircularBuffer59.put((java.lang.reflect.Type) wildcardClass63);
        boolean boolean65 = typeCircularBuffer54.put((java.lang.reflect.Type) wildcardClass63);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer67 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer69 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean70 = typeCircularBuffer69.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer72 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass73 = typeCircularBuffer72.getClass();
        boolean boolean74 = typeCircularBuffer69.put((java.lang.reflect.Type) wildcardClass73);
        java.lang.reflect.Type type75 = typeCircularBuffer69.get();
        java.lang.Class<?> wildcardClass76 = typeCircularBuffer69.getClass();
        boolean boolean77 = typeCircularBuffer67.put((java.lang.reflect.Type) wildcardClass76);
        boolean boolean78 = typeCircularBuffer54.put((java.lang.reflect.Type) wildcardClass76);
        boolean boolean79 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass76);
        java.lang.reflect.Type type80 = typeCircularBuffer17.get();
        boolean boolean81 = typeCircularBuffer1.put(type80);
        java.lang.Class<?> wildcardClass82 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(type18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(type55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test2463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2463");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type24 = typeCircularBuffer1.get();
        boolean boolean25 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type28 = typeCircularBuffer27.get();
        boolean boolean29 = typeCircularBuffer27.isFull();
        boolean boolean30 = typeCircularBuffer27.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean33 = typeCircularBuffer32.isEmpty();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        boolean boolean36 = typeCircularBuffer32.put((java.lang.reflect.Type) wildcardClass35);
        java.lang.Class<?> wildcardClass37 = typeCircularBuffer32.getClass();
        boolean boolean38 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass37);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean41 = typeCircularBuffer40.isFull();
        java.lang.reflect.Type type42 = typeCircularBuffer40.get();
        boolean boolean43 = typeCircularBuffer40.isEmpty();
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer40.getClass();
        boolean boolean45 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean46 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass44);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean49 = typeCircularBuffer48.isEmpty();
        java.lang.reflect.Type type50 = typeCircularBuffer48.get();
        java.lang.reflect.Type type51 = typeCircularBuffer48.get();
        java.lang.reflect.Type type52 = typeCircularBuffer48.get();
        boolean boolean53 = typeCircularBuffer48.isFull();
        boolean boolean54 = typeCircularBuffer48.isFull();
        boolean boolean55 = typeCircularBuffer48.isFull();
        java.lang.reflect.Type type56 = typeCircularBuffer48.get();
        java.lang.Class<?> wildcardClass57 = typeCircularBuffer48.getClass();
        boolean boolean58 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass57);
        java.lang.reflect.Type type59 = typeCircularBuffer1.get();
        boolean boolean60 = typeCircularBuffer1.isEmpty();
        boolean boolean61 = typeCircularBuffer1.isEmpty();
        boolean boolean62 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(type28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(type42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(type50);
        org.junit.Assert.assertNull(type51);
        org.junit.Assert.assertNull(type52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(type56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test2464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2464");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type10 = typeCircularBuffer9.get();
        boolean boolean11 = typeCircularBuffer9.isFull();
        boolean boolean12 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer14.getClass();
        boolean boolean20 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass19);
        boolean boolean21 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean24 = typeCircularBuffer23.isFull();
        boolean boolean25 = typeCircularBuffer23.isEmpty();
        java.lang.reflect.Type type26 = typeCircularBuffer23.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean31 = typeCircularBuffer30.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass34 = typeCircularBuffer33.getClass();
        boolean boolean35 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass34);
        java.lang.reflect.Type type36 = typeCircularBuffer30.get();
        boolean boolean37 = typeCircularBuffer28.put(type36);
        java.lang.Class<?> wildcardClass38 = typeCircularBuffer28.getClass();
        boolean boolean39 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass38);
        boolean boolean40 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass38);
        boolean boolean41 = typeCircularBuffer7.put((java.lang.reflect.Type) wildcardClass38);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean44 = typeCircularBuffer43.isFull();
        java.lang.reflect.Type type45 = typeCircularBuffer43.get();
        boolean boolean46 = typeCircularBuffer43.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean49 = typeCircularBuffer48.isEmpty();
        java.lang.reflect.Type type50 = typeCircularBuffer48.get();
        java.lang.reflect.Type type51 = typeCircularBuffer48.get();
        java.lang.reflect.Type type52 = typeCircularBuffer48.get();
        boolean boolean53 = typeCircularBuffer48.isFull();
        boolean boolean54 = typeCircularBuffer48.isFull();
        java.lang.reflect.Type type55 = typeCircularBuffer48.get();
        boolean boolean56 = typeCircularBuffer48.isFull();
        boolean boolean57 = typeCircularBuffer48.isEmpty();
        java.lang.Class<?> wildcardClass58 = typeCircularBuffer48.getClass();
        boolean boolean59 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass58);
        boolean boolean60 = typeCircularBuffer7.put((java.lang.reflect.Type) wildcardClass58);
        boolean boolean61 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass58);
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(type26);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(type45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(type50);
        org.junit.Assert.assertNull(type51);
        org.junit.Assert.assertNull(type52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(type55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
    }

    @Test
    public void test2465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2465");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        boolean boolean7 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        boolean boolean9 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test2466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2466");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer5 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean6 = typeCircularBuffer5.isEmpty();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = typeCircularBuffer5.put((java.lang.reflect.Type) wildcardClass8);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer5.getClass();
        boolean boolean11 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass10);
        boolean boolean12 = typeCircularBuffer1.isEmpty();
        boolean boolean13 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type14 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type17 = typeCircularBuffer16.get();
        boolean boolean18 = typeCircularBuffer16.isFull();
        boolean boolean19 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean22 = typeCircularBuffer21.isEmpty();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass24);
        java.lang.Class<?> wildcardClass26 = typeCircularBuffer21.getClass();
        boolean boolean27 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass26);
        boolean boolean28 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass26);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean31 = typeCircularBuffer30.isEmpty();
        java.lang.reflect.Type type32 = typeCircularBuffer30.get();
        java.lang.reflect.Type type33 = typeCircularBuffer30.get();
        java.lang.reflect.Type type34 = typeCircularBuffer30.get();
        boolean boolean35 = typeCircularBuffer30.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean38 = typeCircularBuffer37.isFull();
        java.lang.reflect.Type type39 = typeCircularBuffer37.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean42 = typeCircularBuffer41.isEmpty();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        boolean boolean45 = typeCircularBuffer41.put((java.lang.reflect.Type) wildcardClass44);
        java.lang.Class<?> wildcardClass46 = typeCircularBuffer41.getClass();
        boolean boolean47 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass46);
        boolean boolean48 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass46);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '#');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer52 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer54 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean55 = typeCircularBuffer54.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer57 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass58 = typeCircularBuffer57.getClass();
        boolean boolean59 = typeCircularBuffer54.put((java.lang.reflect.Type) wildcardClass58);
        java.lang.reflect.Type type60 = typeCircularBuffer54.get();
        boolean boolean61 = typeCircularBuffer52.put(type60);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer63 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer65 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean66 = typeCircularBuffer65.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer68 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass69 = typeCircularBuffer68.getClass();
        boolean boolean70 = typeCircularBuffer65.put((java.lang.reflect.Type) wildcardClass69);
        java.lang.reflect.Type type71 = typeCircularBuffer65.get();
        boolean boolean72 = typeCircularBuffer63.put(type71);
        java.lang.Class<?> wildcardClass73 = typeCircularBuffer63.getClass();
        boolean boolean74 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass73);
        boolean boolean75 = typeCircularBuffer50.put((java.lang.reflect.Type) wildcardClass73);
        boolean boolean76 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass73);
        java.lang.reflect.Type type77 = typeCircularBuffer30.get();
        java.lang.Class<?> wildcardClass78 = type77.getClass();
        boolean boolean79 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass78);
        boolean boolean80 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type81 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer83 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type84 = typeCircularBuffer83.get();
        boolean boolean85 = typeCircularBuffer83.isFull();
        boolean boolean86 = typeCircularBuffer83.isFull();
        boolean boolean87 = typeCircularBuffer83.isFull();
        boolean boolean88 = typeCircularBuffer83.isFull();
        java.lang.Class<?> wildcardClass89 = typeCircularBuffer83.getClass();
        boolean boolean90 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass89);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNull(type17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(type32);
        org.junit.Assert.assertNull(type33);
        org.junit.Assert.assertNull(type34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(type39);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(type81);
        org.junit.Assert.assertNull(type84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
    }

    @Test
    public void test2467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2467");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type12 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type15 = typeCircularBuffer14.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer20.getClass();
        boolean boolean22 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type23 = typeCircularBuffer17.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type26 = typeCircularBuffer25.get();
        boolean boolean27 = typeCircularBuffer25.isFull();
        boolean boolean28 = typeCircularBuffer25.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean31 = typeCircularBuffer30.isEmpty();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        boolean boolean34 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass33);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer30.getClass();
        boolean boolean36 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass35);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean39 = typeCircularBuffer38.isEmpty();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        boolean boolean42 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass41);
        java.lang.Class<?> wildcardClass43 = typeCircularBuffer38.getClass();
        boolean boolean44 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass43);
        boolean boolean45 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass43);
        boolean boolean46 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass43);
        boolean boolean47 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass43);
        boolean boolean48 = typeCircularBuffer1.isFull();
        boolean boolean49 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass50 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNull(type15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNull(type26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test2468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2468");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type24 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer31.getClass();
        boolean boolean33 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass32);
        java.lang.reflect.Type type34 = typeCircularBuffer28.get();
        boolean boolean35 = typeCircularBuffer26.put(type34);
        boolean boolean36 = typeCircularBuffer26.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean39 = typeCircularBuffer38.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass42 = typeCircularBuffer41.getClass();
        boolean boolean43 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass42);
        java.lang.reflect.Type type44 = typeCircularBuffer38.get();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        boolean boolean47 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass46);
        boolean boolean48 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass46);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean51 = typeCircularBuffer50.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer53 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass54 = typeCircularBuffer53.getClass();
        boolean boolean55 = typeCircularBuffer50.put((java.lang.reflect.Type) wildcardClass54);
        java.lang.reflect.Type type56 = typeCircularBuffer50.get();
        boolean boolean57 = typeCircularBuffer26.put(type56);
        boolean boolean58 = typeCircularBuffer26.isEmpty();
        java.lang.reflect.Type type59 = typeCircularBuffer26.get();
        boolean boolean60 = typeCircularBuffer1.put(type59);
        boolean boolean61 = typeCircularBuffer1.isFull();
        boolean boolean62 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test2469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2469");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        boolean boolean8 = typeCircularBuffer1.isEmpty();
        boolean boolean9 = typeCircularBuffer1.isEmpty();
        boolean boolean10 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test2470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2470");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass21);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean26 = typeCircularBuffer25.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass29 = typeCircularBuffer28.getClass();
        boolean boolean30 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass29);
        java.lang.reflect.Type type31 = typeCircularBuffer25.get();
        boolean boolean32 = typeCircularBuffer1.put(type31);
        boolean boolean33 = typeCircularBuffer1.isEmpty();
        boolean boolean34 = typeCircularBuffer1.isEmpty();
        boolean boolean35 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type36 = typeCircularBuffer1.get();
        boolean boolean37 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass38 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test2471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2471");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        boolean boolean6 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        java.lang.reflect.Type type11 = typeCircularBuffer9.get();
        java.lang.reflect.Type type12 = typeCircularBuffer9.get();
        java.lang.reflect.Type type13 = typeCircularBuffer9.get();
        java.lang.reflect.Type type14 = typeCircularBuffer9.get();
        boolean boolean15 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer20.getClass();
        boolean boolean22 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass21);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean27 = typeCircularBuffer26.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass30 = typeCircularBuffer29.getClass();
        boolean boolean31 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass30);
        java.lang.reflect.Type type32 = typeCircularBuffer26.get();
        boolean boolean33 = typeCircularBuffer24.put(type32);
        boolean boolean34 = typeCircularBuffer24.isFull();
        java.lang.reflect.Type type35 = typeCircularBuffer24.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean38 = typeCircularBuffer37.isEmpty();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        boolean boolean41 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass40);
        boolean boolean42 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass40);
        boolean boolean43 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass40);
        boolean boolean44 = typeCircularBuffer17.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean47 = typeCircularBuffer46.isFull();
        boolean boolean48 = typeCircularBuffer46.isEmpty();
        boolean boolean49 = typeCircularBuffer46.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean52 = typeCircularBuffer51.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer54 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass55 = typeCircularBuffer54.getClass();
        boolean boolean56 = typeCircularBuffer51.put((java.lang.reflect.Type) wildcardClass55);
        java.lang.reflect.Type type57 = typeCircularBuffer51.get();
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        boolean boolean60 = typeCircularBuffer51.put((java.lang.reflect.Type) wildcardClass59);
        boolean boolean61 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass59);
        boolean boolean62 = typeCircularBuffer46.isFull();
        java.lang.reflect.Type type63 = typeCircularBuffer46.get();
        boolean boolean64 = typeCircularBuffer17.put(type63);
        boolean boolean65 = typeCircularBuffer9.put(type63);
        java.lang.Class<?> wildcardClass66 = typeCircularBuffer9.getClass();
        boolean boolean67 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass66);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer69 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean70 = typeCircularBuffer69.isEmpty();
        java.lang.Object obj71 = new java.lang.Object();
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        boolean boolean73 = typeCircularBuffer69.put((java.lang.reflect.Type) wildcardClass72);
        java.lang.reflect.Type type74 = typeCircularBuffer69.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer76 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type77 = typeCircularBuffer76.get();
        boolean boolean78 = typeCircularBuffer76.isFull();
        boolean boolean79 = typeCircularBuffer76.isFull();
        boolean boolean80 = typeCircularBuffer76.isEmpty();
        java.lang.reflect.Type type81 = typeCircularBuffer76.get();
        java.lang.reflect.Type type82 = typeCircularBuffer76.get();
        java.lang.Class<?> wildcardClass83 = typeCircularBuffer76.getClass();
        boolean boolean84 = typeCircularBuffer69.put((java.lang.reflect.Type) wildcardClass83);
        java.lang.Class<?> wildcardClass85 = typeCircularBuffer69.getClass();
        boolean boolean86 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass85);
        java.lang.reflect.Type type87 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass88 = type87.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(type11);
        org.junit.Assert.assertNull(type12);
        org.junit.Assert.assertNull(type13);
        org.junit.Assert.assertNull(type14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertNull(type77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNull(type81);
        org.junit.Assert.assertNull(type82);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(type87);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test2472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2472");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean13 = typeCircularBuffer12.isFull();
        boolean boolean14 = typeCircularBuffer12.isEmpty();
        java.lang.reflect.Type type15 = typeCircularBuffer12.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean20 = typeCircularBuffer19.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass23 = typeCircularBuffer22.getClass();
        boolean boolean24 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass23);
        java.lang.reflect.Type type25 = typeCircularBuffer19.get();
        boolean boolean26 = typeCircularBuffer17.put(type25);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer17.getClass();
        boolean boolean28 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean30 = typeCircularBuffer1.isEmpty();
        boolean boolean31 = typeCircularBuffer1.isEmpty();
        boolean boolean32 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type33 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(type15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(type33);
    }

    @Test
    public void test2473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2473");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer5 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean6 = typeCircularBuffer5.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass9 = typeCircularBuffer8.getClass();
        boolean boolean10 = typeCircularBuffer5.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.reflect.Type type11 = typeCircularBuffer5.get();
        boolean boolean12 = typeCircularBuffer1.put(type11);
        boolean boolean13 = typeCircularBuffer1.isFull();
        boolean boolean14 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type15 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type18 = typeCircularBuffer17.get();
        boolean boolean19 = typeCircularBuffer17.isFull();
        boolean boolean20 = typeCircularBuffer17.isFull();
        boolean boolean21 = typeCircularBuffer17.isFull();
        java.lang.reflect.Type type22 = typeCircularBuffer17.get();
        boolean boolean23 = typeCircularBuffer17.isEmpty();
        boolean boolean24 = typeCircularBuffer17.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer31.getClass();
        boolean boolean33 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass32);
        java.lang.reflect.Type type34 = typeCircularBuffer28.get();
        boolean boolean35 = typeCircularBuffer26.put(type34);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean40 = typeCircularBuffer39.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass43 = typeCircularBuffer42.getClass();
        boolean boolean44 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass43);
        java.lang.reflect.Type type45 = typeCircularBuffer39.get();
        boolean boolean46 = typeCircularBuffer37.put(type45);
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer37.getClass();
        boolean boolean48 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass47);
        boolean boolean49 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass47);
        boolean boolean50 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNull(type18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(type22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
    }

    @Test
    public void test2474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2474");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean10 = typeCircularBuffer9.isFull();
        boolean boolean11 = typeCircularBuffer9.isEmpty();
        java.lang.reflect.Type type12 = typeCircularBuffer9.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer19.getClass();
        boolean boolean21 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type22 = typeCircularBuffer16.get();
        boolean boolean23 = typeCircularBuffer14.put(type22);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer14.getClass();
        boolean boolean25 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean26 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean27 = typeCircularBuffer1.isEmpty();
        boolean boolean28 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type29 = typeCircularBuffer1.get();
        boolean boolean30 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type33 = typeCircularBuffer32.get();
        boolean boolean34 = typeCircularBuffer32.isFull();
        boolean boolean35 = typeCircularBuffer32.isFull();
        boolean boolean36 = typeCircularBuffer32.isFull();
        java.lang.reflect.Type type37 = typeCircularBuffer32.get();
        boolean boolean38 = typeCircularBuffer32.isEmpty();
        boolean boolean39 = typeCircularBuffer32.isEmpty();
        boolean boolean40 = typeCircularBuffer32.isFull();
        boolean boolean41 = typeCircularBuffer32.isFull();
        boolean boolean42 = typeCircularBuffer32.isFull();
        java.lang.reflect.Type type43 = null;
        boolean boolean44 = typeCircularBuffer32.put(type43);
        java.lang.Class<?> wildcardClass45 = typeCircularBuffer32.getClass();
        boolean boolean46 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass45);
        boolean boolean47 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(type12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(type33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(type37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test2475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2475");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) ' ');
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass4 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test2476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2476");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        java.lang.reflect.Type type11 = typeCircularBuffer1.get();
        java.lang.reflect.Type type12 = null;
        boolean boolean13 = typeCircularBuffer1.put(type12);
        boolean boolean14 = typeCircularBuffer1.isFull();
        boolean boolean15 = typeCircularBuffer1.isFull();
        boolean boolean16 = typeCircularBuffer1.isFull();
        boolean boolean17 = typeCircularBuffer1.isFull();
        boolean boolean18 = typeCircularBuffer1.isFull();
        boolean boolean19 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type20 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(type20);
    }

    @Test
    public void test2477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2477");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer6.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.reflect.Type type13 = typeCircularBuffer1.get();
        boolean boolean14 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer19.getClass();
        boolean boolean21 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean22 = typeCircularBuffer16.isEmpty();
        java.lang.reflect.Type type23 = typeCircularBuffer16.get();
        boolean boolean24 = typeCircularBuffer1.put(type23);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type27 = typeCircularBuffer26.get();
        boolean boolean28 = typeCircularBuffer26.isFull();
        boolean boolean29 = typeCircularBuffer26.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        boolean boolean35 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass34);
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer31.getClass();
        boolean boolean37 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass36);
        java.lang.reflect.Type type38 = typeCircularBuffer26.get();
        boolean boolean39 = typeCircularBuffer26.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type42 = typeCircularBuffer41.get();
        boolean boolean43 = typeCircularBuffer41.isFull();
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer41.getClass();
        boolean boolean45 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean46 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean47 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type48 = typeCircularBuffer1.get();
        boolean boolean49 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean52 = typeCircularBuffer51.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer54 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass55 = typeCircularBuffer54.getClass();
        boolean boolean56 = typeCircularBuffer51.put((java.lang.reflect.Type) wildcardClass55);
        java.lang.reflect.Type type57 = typeCircularBuffer51.get();
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        boolean boolean60 = typeCircularBuffer51.put((java.lang.reflect.Type) wildcardClass59);
        java.lang.reflect.Type type61 = typeCircularBuffer51.get();
        boolean boolean62 = typeCircularBuffer51.isFull();
        java.lang.Class<?> wildcardClass63 = typeCircularBuffer51.getClass();
        boolean boolean64 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass63);
        boolean boolean65 = typeCircularBuffer1.isFull();
        boolean boolean66 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type67 = typeCircularBuffer1.get();
        boolean boolean68 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type69 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(type42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNull(type69);
    }

    @Test
    public void test2478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2478");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        boolean boolean15 = typeCircularBuffer13.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type18 = typeCircularBuffer17.get();
        boolean boolean19 = typeCircularBuffer17.isFull();
        boolean boolean20 = typeCircularBuffer17.isFull();
        boolean boolean21 = typeCircularBuffer17.isEmpty();
        java.lang.reflect.Type type22 = typeCircularBuffer17.get();
        java.lang.Class<?> wildcardClass23 = typeCircularBuffer17.getClass();
        boolean boolean24 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass23);
        boolean boolean25 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass23);
        java.lang.reflect.Type type26 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        java.lang.reflect.Type type30 = typeCircularBuffer28.get();
        java.lang.reflect.Type type31 = typeCircularBuffer28.get();
        java.lang.reflect.Type type32 = typeCircularBuffer28.get();
        boolean boolean33 = typeCircularBuffer28.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean36 = typeCircularBuffer35.isFull();
        java.lang.reflect.Type type37 = typeCircularBuffer35.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean40 = typeCircularBuffer39.isEmpty();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        boolean boolean43 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass42);
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer39.getClass();
        boolean boolean45 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean46 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean47 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean48 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(type18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(type22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(type30);
        org.junit.Assert.assertNull(type31);
        org.junit.Assert.assertNull(type32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(type37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test2479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2479");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        boolean boolean5 = typeCircularBuffer1.isFull();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        boolean boolean8 = typeCircularBuffer1.isFull();
        boolean boolean9 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type10 = typeCircularBuffer1.get();
        boolean boolean11 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test2480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2480");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass6 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test2481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2481");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        boolean boolean7 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean19 = typeCircularBuffer18.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer21.getClass();
        boolean boolean23 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass22);
        java.lang.reflect.Type type24 = typeCircularBuffer18.get();
        boolean boolean25 = typeCircularBuffer16.put(type24);
        boolean boolean26 = typeCircularBuffer16.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer31.getClass();
        boolean boolean33 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass32);
        java.lang.reflect.Type type34 = typeCircularBuffer28.get();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        boolean boolean37 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean38 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean39 = typeCircularBuffer16.isEmpty();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        boolean boolean42 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean43 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean44 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass41);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean47 = typeCircularBuffer46.isEmpty();
        boolean boolean48 = typeCircularBuffer46.isFull();
        java.lang.reflect.Type type49 = typeCircularBuffer46.get();
        boolean boolean50 = typeCircularBuffer46.isFull();
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer46.getClass();
        boolean boolean52 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass51);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer54 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type55 = typeCircularBuffer54.get();
        boolean boolean56 = typeCircularBuffer54.isFull();
        boolean boolean57 = typeCircularBuffer54.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer59 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean60 = typeCircularBuffer59.isEmpty();
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        boolean boolean63 = typeCircularBuffer59.put((java.lang.reflect.Type) wildcardClass62);
        java.lang.Class<?> wildcardClass64 = typeCircularBuffer59.getClass();
        boolean boolean65 = typeCircularBuffer54.put((java.lang.reflect.Type) wildcardClass64);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer67 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean68 = typeCircularBuffer67.isEmpty();
        java.lang.Object obj69 = new java.lang.Object();
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        boolean boolean71 = typeCircularBuffer67.put((java.lang.reflect.Type) wildcardClass70);
        java.lang.Class<?> wildcardClass72 = typeCircularBuffer67.getClass();
        boolean boolean73 = typeCircularBuffer54.put((java.lang.reflect.Type) wildcardClass72);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer75 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer77 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean78 = typeCircularBuffer77.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer80 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass81 = typeCircularBuffer80.getClass();
        boolean boolean82 = typeCircularBuffer77.put((java.lang.reflect.Type) wildcardClass81);
        java.lang.reflect.Type type83 = typeCircularBuffer77.get();
        boolean boolean84 = typeCircularBuffer75.put(type83);
        java.lang.Class<?> wildcardClass85 = typeCircularBuffer75.getClass();
        boolean boolean86 = typeCircularBuffer54.put((java.lang.reflect.Type) wildcardClass85);
        boolean boolean87 = typeCircularBuffer54.isFull();
        java.lang.Class<?> wildcardClass88 = typeCircularBuffer54.getClass();
        boolean boolean89 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass88);
        java.lang.Class<?> wildcardClass90 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(type49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(type55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(type83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test2482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2482");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer6.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.reflect.Type type13 = typeCircularBuffer1.get();
        boolean boolean14 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type17 = typeCircularBuffer16.get();
        boolean boolean18 = typeCircularBuffer16.isFull();
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer16.getClass();
        boolean boolean20 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass19);
        java.lang.reflect.Type type21 = typeCircularBuffer1.get();
        java.lang.reflect.Type type22 = typeCircularBuffer1.get();
        boolean boolean23 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(type17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNull(type22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test2483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2483");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type8 = typeCircularBuffer7.get();
        boolean boolean9 = typeCircularBuffer7.isFull();
        boolean boolean10 = typeCircularBuffer7.isEmpty();
        boolean boolean11 = typeCircularBuffer7.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer7.put((java.lang.reflect.Type) wildcardClass14);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean18 = typeCircularBuffer17.isFull();
        boolean boolean19 = typeCircularBuffer17.isEmpty();
        boolean boolean20 = typeCircularBuffer17.isFull();
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer17.getClass();
        boolean boolean22 = typeCircularBuffer7.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type23 = typeCircularBuffer7.get();
        boolean boolean24 = typeCircularBuffer1.put(type23);
        boolean boolean25 = typeCircularBuffer1.isFull();
        boolean boolean26 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    }

    @Test
    public void test2484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2484");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        boolean boolean7 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean19 = typeCircularBuffer18.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer21.getClass();
        boolean boolean23 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass22);
        java.lang.reflect.Type type24 = typeCircularBuffer18.get();
        boolean boolean25 = typeCircularBuffer16.put(type24);
        boolean boolean26 = typeCircularBuffer16.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer31.getClass();
        boolean boolean33 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass32);
        java.lang.reflect.Type type34 = typeCircularBuffer28.get();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        boolean boolean37 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean38 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean39 = typeCircularBuffer16.isEmpty();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        boolean boolean42 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean43 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean44 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean45 = typeCircularBuffer1.isFull();
        boolean boolean46 = typeCircularBuffer1.isEmpty();
        boolean boolean47 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type48 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass49 = type48.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test2485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2485");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        java.lang.reflect.Type type15 = typeCircularBuffer9.get();
        boolean boolean16 = typeCircularBuffer7.put(type15);
        boolean boolean17 = typeCircularBuffer7.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean20 = typeCircularBuffer19.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass23 = typeCircularBuffer22.getClass();
        boolean boolean24 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass23);
        java.lang.reflect.Type type25 = typeCircularBuffer19.get();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        boolean boolean28 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer7.put((java.lang.reflect.Type) wildcardClass27);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer34.getClass();
        boolean boolean36 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass35);
        java.lang.reflect.Type type37 = typeCircularBuffer31.get();
        boolean boolean38 = typeCircularBuffer7.put(type37);
        java.lang.reflect.Type type39 = typeCircularBuffer7.get();
        boolean boolean40 = typeCircularBuffer1.put(type39);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean43 = typeCircularBuffer42.isFull();
        java.lang.reflect.Type type44 = typeCircularBuffer42.get();
        boolean boolean45 = typeCircularBuffer42.isEmpty();
        boolean boolean46 = typeCircularBuffer42.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        boolean boolean49 = typeCircularBuffer48.isEmpty();
        java.lang.Class<?> wildcardClass50 = typeCircularBuffer48.getClass();
        boolean boolean51 = typeCircularBuffer42.put((java.lang.reflect.Type) wildcardClass50);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer53 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean54 = typeCircularBuffer53.isFull();
        boolean boolean55 = typeCircularBuffer53.isEmpty();
        boolean boolean56 = typeCircularBuffer53.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer58 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean59 = typeCircularBuffer58.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer61 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass62 = typeCircularBuffer61.getClass();
        boolean boolean63 = typeCircularBuffer58.put((java.lang.reflect.Type) wildcardClass62);
        java.lang.reflect.Type type64 = typeCircularBuffer58.get();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        boolean boolean67 = typeCircularBuffer58.put((java.lang.reflect.Type) wildcardClass66);
        boolean boolean68 = typeCircularBuffer53.put((java.lang.reflect.Type) wildcardClass66);
        boolean boolean69 = typeCircularBuffer42.put((java.lang.reflect.Type) wildcardClass66);
        boolean boolean70 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass66);
        java.lang.reflect.Type type71 = typeCircularBuffer1.get();
        boolean boolean72 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass73 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(type44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test2486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2486");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean8 = typeCircularBuffer7.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer10.getClass();
        boolean boolean12 = typeCircularBuffer7.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.reflect.Type type13 = typeCircularBuffer7.get();
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        boolean boolean16 = typeCircularBuffer7.put((java.lang.reflect.Type) wildcardClass15);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean19 = typeCircularBuffer18.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer21.getClass();
        boolean boolean23 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass22);
        java.lang.reflect.Type type24 = typeCircularBuffer18.get();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        boolean boolean27 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass26);
        java.lang.reflect.Type type28 = typeCircularBuffer18.get();
        boolean boolean29 = typeCircularBuffer7.put(type28);
        java.lang.Class<?> wildcardClass30 = typeCircularBuffer7.getClass();
        boolean boolean31 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass30);
        java.lang.reflect.Type type32 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean35 = typeCircularBuffer34.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass38 = typeCircularBuffer37.getClass();
        boolean boolean39 = typeCircularBuffer34.put((java.lang.reflect.Type) wildcardClass38);
        java.lang.reflect.Type type40 = typeCircularBuffer34.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type43 = typeCircularBuffer42.get();
        boolean boolean44 = typeCircularBuffer42.isFull();
        boolean boolean45 = typeCircularBuffer42.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean48 = typeCircularBuffer47.isEmpty();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        boolean boolean51 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass50);
        java.lang.Class<?> wildcardClass52 = typeCircularBuffer47.getClass();
        boolean boolean53 = typeCircularBuffer42.put((java.lang.reflect.Type) wildcardClass52);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer55 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean56 = typeCircularBuffer55.isEmpty();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        boolean boolean59 = typeCircularBuffer55.put((java.lang.reflect.Type) wildcardClass58);
        java.lang.Class<?> wildcardClass60 = typeCircularBuffer55.getClass();
        boolean boolean61 = typeCircularBuffer42.put((java.lang.reflect.Type) wildcardClass60);
        boolean boolean62 = typeCircularBuffer34.put((java.lang.reflect.Type) wildcardClass60);
        java.lang.reflect.Type type63 = typeCircularBuffer34.get();
        boolean boolean64 = typeCircularBuffer34.isFull();
        java.lang.Class<?> wildcardClass65 = typeCircularBuffer34.getClass();
        boolean boolean66 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNull(type43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
    }

    @Test
    public void test2487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2487");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        boolean boolean15 = typeCircularBuffer13.isFull();
        java.lang.reflect.Type type16 = typeCircularBuffer13.get();
        boolean boolean17 = typeCircularBuffer13.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean20 = typeCircularBuffer19.isFull();
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer19.getClass();
        boolean boolean22 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type24 = typeCircularBuffer1.get();
        boolean boolean25 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.Comparable<java.lang.String>> strComparableCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.Comparable<java.lang.String>>((int) (short) 1);
        java.lang.Class<?> wildcardClass28 = strComparableCircularBuffer27.getClass();
        boolean boolean29 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass28);
        boolean boolean30 = typeCircularBuffer1.isEmpty();
        boolean boolean31 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test2488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2488");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer17.getClass();
        boolean boolean19 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass18);
        java.lang.reflect.Type type20 = typeCircularBuffer14.get();
        boolean boolean21 = typeCircularBuffer12.put(type20);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer12.getClass();
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass22);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean26 = typeCircularBuffer25.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass29 = typeCircularBuffer28.getClass();
        boolean boolean30 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass29);
        java.lang.reflect.Type type31 = typeCircularBuffer25.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type34 = typeCircularBuffer33.get();
        boolean boolean35 = typeCircularBuffer33.isFull();
        boolean boolean36 = typeCircularBuffer33.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean39 = typeCircularBuffer38.isEmpty();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        boolean boolean42 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass41);
        java.lang.Class<?> wildcardClass43 = typeCircularBuffer38.getClass();
        boolean boolean44 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass43);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean47 = typeCircularBuffer46.isEmpty();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        boolean boolean50 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass49);
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer46.getClass();
        boolean boolean52 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean53 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass51);
        java.lang.reflect.Type type54 = typeCircularBuffer25.get();
        boolean boolean55 = typeCircularBuffer1.put(type54);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer57 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean58 = typeCircularBuffer57.isFull();
        java.lang.reflect.Type type59 = typeCircularBuffer57.get();
        boolean boolean60 = typeCircularBuffer57.isFull();
        java.lang.reflect.Type type61 = typeCircularBuffer57.get();
        boolean boolean62 = typeCircularBuffer57.isFull();
        boolean boolean63 = typeCircularBuffer57.isEmpty();
        boolean boolean64 = typeCircularBuffer57.isFull();
        java.lang.Class<?> wildcardClass65 = typeCircularBuffer57.getClass();
        boolean boolean66 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass65);
        java.lang.reflect.Type type67 = typeCircularBuffer1.get();
        java.lang.reflect.Type type68 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNull(type34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(type59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(type61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNull(type68);
    }

    @Test
    public void test2489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2489");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean24 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type27 = typeCircularBuffer26.get();
        boolean boolean28 = typeCircularBuffer26.isFull();
        boolean boolean29 = typeCircularBuffer26.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        boolean boolean35 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass34);
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer31.getClass();
        boolean boolean37 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass36);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean40 = typeCircularBuffer39.isEmpty();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        boolean boolean43 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass42);
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer39.getClass();
        boolean boolean45 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean46 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean47 = typeCircularBuffer1.isEmpty();
        boolean boolean48 = typeCircularBuffer1.isEmpty();
        boolean boolean49 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean52 = typeCircularBuffer51.isEmpty();
        java.lang.reflect.Type type53 = typeCircularBuffer51.get();
        java.lang.reflect.Type type54 = typeCircularBuffer51.get();
        java.lang.reflect.Type type55 = typeCircularBuffer51.get();
        java.lang.reflect.Type type56 = typeCircularBuffer51.get();
        boolean boolean57 = typeCircularBuffer51.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer59 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) ' ');
        java.lang.reflect.Type type60 = typeCircularBuffer59.get();
        java.lang.Class<?> wildcardClass61 = typeCircularBuffer59.getClass();
        boolean boolean62 = typeCircularBuffer51.put((java.lang.reflect.Type) wildcardClass61);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer64 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer66 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean67 = typeCircularBuffer66.isFull();
        boolean boolean68 = typeCircularBuffer66.isEmpty();
        java.lang.reflect.Type type69 = typeCircularBuffer66.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer71 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer73 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean74 = typeCircularBuffer73.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer76 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass77 = typeCircularBuffer76.getClass();
        boolean boolean78 = typeCircularBuffer73.put((java.lang.reflect.Type) wildcardClass77);
        java.lang.reflect.Type type79 = typeCircularBuffer73.get();
        boolean boolean80 = typeCircularBuffer71.put(type79);
        java.lang.Class<?> wildcardClass81 = typeCircularBuffer71.getClass();
        boolean boolean82 = typeCircularBuffer66.put((java.lang.reflect.Type) wildcardClass81);
        boolean boolean83 = typeCircularBuffer64.put((java.lang.reflect.Type) wildcardClass81);
        boolean boolean84 = typeCircularBuffer51.put((java.lang.reflect.Type) wildcardClass81);
        java.lang.reflect.Type type85 = typeCircularBuffer51.get();
        java.lang.Class<?> wildcardClass86 = typeCircularBuffer51.getClass();
        boolean boolean87 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass86);
        java.lang.reflect.Type type88 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass89 = type88.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(type53);
        org.junit.Assert.assertNull(type54);
        org.junit.Assert.assertNull(type55);
        org.junit.Assert.assertNull(type56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(type60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNull(type69);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(type85);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(type88);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test2490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2490");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean9 = typeCircularBuffer8.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass12 = typeCircularBuffer11.getClass();
        boolean boolean13 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass12);
        java.lang.reflect.Type type14 = typeCircularBuffer8.get();
        boolean boolean15 = typeCircularBuffer6.put(type14);
        java.lang.Class<?> wildcardClass16 = typeCircularBuffer6.getClass();
        boolean boolean17 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass16);
        boolean boolean18 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type19 = typeCircularBuffer1.get();
        boolean boolean20 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type21 = typeCircularBuffer1.get();
        boolean boolean22 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(type21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test2491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2491");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type7 = typeCircularBuffer6.get();
        boolean boolean8 = typeCircularBuffer6.isFull();
        boolean boolean9 = typeCircularBuffer6.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean12 = typeCircularBuffer11.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass15 = typeCircularBuffer14.getClass();
        boolean boolean16 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass15);
        boolean boolean17 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass15);
        boolean boolean18 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass26 = typeCircularBuffer25.getClass();
        boolean boolean27 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass26);
        java.lang.reflect.Type type28 = typeCircularBuffer22.get();
        boolean boolean29 = typeCircularBuffer20.put(type28);
        boolean boolean30 = typeCircularBuffer20.isFull();
        java.lang.reflect.Type type31 = typeCircularBuffer20.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean34 = typeCircularBuffer33.isEmpty();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        boolean boolean37 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean38 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass36);
        java.lang.reflect.Type type39 = typeCircularBuffer20.get();
        boolean boolean40 = typeCircularBuffer6.put(type39);
        java.lang.reflect.Type type41 = typeCircularBuffer6.get();
        java.lang.reflect.Type type42 = typeCircularBuffer6.get();
        java.lang.Class<?> wildcardClass43 = typeCircularBuffer6.getClass();
        boolean boolean44 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass43);
        java.lang.reflect.Type type45 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(type41);
        org.junit.Assert.assertNull(type42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(type45);
    }

    @Test
    public void test2492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2492");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>((int) '4');
        java.lang.Class<?> wildcardClass9 = wildcardClassOfFieldCircularBuffer8.getClass();
        boolean boolean10 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass9);
        boolean boolean11 = typeCircularBuffer1.isEmpty();
        boolean boolean12 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test2493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2493");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean19 = typeCircularBuffer18.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer21.getClass();
        boolean boolean23 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass22);
        java.lang.reflect.Type type24 = typeCircularBuffer18.get();
        boolean boolean25 = typeCircularBuffer16.put(type24);
        boolean boolean26 = typeCircularBuffer16.isFull();
        java.lang.reflect.Type type27 = typeCircularBuffer16.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean30 = typeCircularBuffer29.isEmpty();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        boolean boolean33 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean35 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean36 = typeCircularBuffer9.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean39 = typeCircularBuffer38.isFull();
        boolean boolean40 = typeCircularBuffer38.isEmpty();
        boolean boolean41 = typeCircularBuffer38.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer46.getClass();
        boolean boolean48 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass47);
        java.lang.reflect.Type type49 = typeCircularBuffer43.get();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        boolean boolean52 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean53 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean54 = typeCircularBuffer38.isFull();
        java.lang.reflect.Type type55 = typeCircularBuffer38.get();
        boolean boolean56 = typeCircularBuffer9.put(type55);
        boolean boolean57 = typeCircularBuffer1.put(type55);
        boolean boolean58 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type59 = typeCircularBuffer1.get();
        boolean boolean60 = typeCircularBuffer1.isEmpty();
        boolean boolean61 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass62 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test2494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2494");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer6.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.reflect.Type type13 = typeCircularBuffer1.get();
        boolean boolean14 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type17 = typeCircularBuffer16.get();
        boolean boolean18 = typeCircularBuffer16.isFull();
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer16.getClass();
        boolean boolean20 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass19);
        java.lang.reflect.Type type21 = typeCircularBuffer1.get();
        java.lang.reflect.Type type22 = typeCircularBuffer1.get();
        java.lang.reflect.Type type23 = typeCircularBuffer1.get();
        java.lang.reflect.Type type24 = null;
        boolean boolean25 = typeCircularBuffer1.put(type24);
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(type17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNull(type22);
        org.junit.Assert.assertNull(type23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test2495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2495");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        boolean boolean8 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass9 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test2496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2496");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type12 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        boolean boolean19 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass17);
        boolean boolean20 = typeCircularBuffer1.isEmpty();
        boolean boolean21 = typeCircularBuffer1.isEmpty();
        boolean boolean22 = typeCircularBuffer1.isEmpty();
        boolean boolean23 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean28 = typeCircularBuffer27.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass31 = typeCircularBuffer30.getClass();
        boolean boolean32 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass31);
        java.lang.reflect.Type type33 = typeCircularBuffer27.get();
        boolean boolean34 = typeCircularBuffer25.put(type33);
        boolean boolean35 = typeCircularBuffer25.isEmpty();
        boolean boolean36 = typeCircularBuffer25.isFull();
        boolean boolean37 = typeCircularBuffer25.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean40 = typeCircularBuffer39.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass43 = typeCircularBuffer42.getClass();
        boolean boolean44 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass43);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean49 = typeCircularBuffer48.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass52 = typeCircularBuffer51.getClass();
        boolean boolean53 = typeCircularBuffer48.put((java.lang.reflect.Type) wildcardClass52);
        java.lang.reflect.Type type54 = typeCircularBuffer48.get();
        boolean boolean55 = typeCircularBuffer46.put(type54);
        boolean boolean56 = typeCircularBuffer46.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer58 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean59 = typeCircularBuffer58.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer61 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass62 = typeCircularBuffer61.getClass();
        boolean boolean63 = typeCircularBuffer58.put((java.lang.reflect.Type) wildcardClass62);
        java.lang.reflect.Type type64 = typeCircularBuffer58.get();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        boolean boolean67 = typeCircularBuffer58.put((java.lang.reflect.Type) wildcardClass66);
        boolean boolean68 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass66);
        boolean boolean69 = typeCircularBuffer46.isEmpty();
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        boolean boolean72 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass71);
        boolean boolean73 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass71);
        boolean boolean74 = typeCircularBuffer39.isEmpty();
        boolean boolean75 = typeCircularBuffer39.isEmpty();
        boolean boolean76 = typeCircularBuffer39.isEmpty();
        java.lang.Class<?> wildcardClass77 = typeCircularBuffer39.getClass();
        boolean boolean78 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass77);
        boolean boolean79 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass77);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer81 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean82 = typeCircularBuffer81.isFull();
        java.lang.reflect.Type type83 = typeCircularBuffer81.get();
        java.lang.reflect.Type type84 = typeCircularBuffer81.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer86 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean87 = typeCircularBuffer86.isFull();
        java.lang.reflect.Type type88 = typeCircularBuffer86.get();
        boolean boolean89 = typeCircularBuffer86.isEmpty();
        java.lang.Class<?> wildcardClass90 = typeCircularBuffer86.getClass();
        boolean boolean91 = typeCircularBuffer81.put((java.lang.reflect.Type) wildcardClass90);
        boolean boolean92 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass90);
        boolean boolean93 = typeCircularBuffer1.isEmpty();
        boolean boolean94 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNull(type83);
        org.junit.Assert.assertNull(type84);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNull(type88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test2497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2497");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer5 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean6 = typeCircularBuffer5.isEmpty();
        boolean boolean7 = typeCircularBuffer5.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        java.lang.reflect.Type type15 = typeCircularBuffer9.get();
        boolean boolean16 = typeCircularBuffer5.put(type15);
        boolean boolean17 = typeCircularBuffer5.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean20 = typeCircularBuffer19.isFull();
        boolean boolean21 = typeCircularBuffer19.isEmpty();
        boolean boolean22 = typeCircularBuffer19.isFull();
        java.lang.reflect.Type type23 = null;
        boolean boolean24 = typeCircularBuffer19.put(type23);
        boolean boolean25 = typeCircularBuffer19.isFull();
        java.lang.Class<?> wildcardClass26 = typeCircularBuffer19.getClass();
        boolean boolean27 = typeCircularBuffer5.put((java.lang.reflect.Type) wildcardClass26);
        boolean boolean28 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass26);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean31 = typeCircularBuffer30.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass34 = typeCircularBuffer33.getClass();
        boolean boolean35 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass34);
        java.lang.reflect.Type type36 = typeCircularBuffer30.get();
        java.lang.Class<?> wildcardClass37 = type36.getClass();
        boolean boolean38 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass37);
        java.lang.reflect.Type type39 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean42 = typeCircularBuffer41.isFull();
        java.lang.reflect.Type type43 = typeCircularBuffer41.get();
        boolean boolean44 = typeCircularBuffer41.isEmpty();
        java.lang.reflect.Type type45 = typeCircularBuffer41.get();
        java.lang.reflect.Type type46 = typeCircularBuffer41.get();
        boolean boolean47 = typeCircularBuffer41.isEmpty();
        java.lang.reflect.Type type48 = typeCircularBuffer41.get();
        java.lang.reflect.Type type49 = typeCircularBuffer41.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer53 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type54 = typeCircularBuffer53.get();
        boolean boolean55 = typeCircularBuffer53.isFull();
        boolean boolean56 = typeCircularBuffer53.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer58 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean59 = typeCircularBuffer58.isEmpty();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        boolean boolean62 = typeCircularBuffer58.put((java.lang.reflect.Type) wildcardClass61);
        java.lang.Class<?> wildcardClass63 = typeCircularBuffer58.getClass();
        boolean boolean64 = typeCircularBuffer53.put((java.lang.reflect.Type) wildcardClass63);
        boolean boolean65 = typeCircularBuffer53.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer67 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean68 = typeCircularBuffer67.isFull();
        boolean boolean69 = typeCircularBuffer67.isEmpty();
        java.lang.reflect.Type type70 = typeCircularBuffer67.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer72 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer74 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean75 = typeCircularBuffer74.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer77 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass78 = typeCircularBuffer77.getClass();
        boolean boolean79 = typeCircularBuffer74.put((java.lang.reflect.Type) wildcardClass78);
        java.lang.reflect.Type type80 = typeCircularBuffer74.get();
        boolean boolean81 = typeCircularBuffer72.put(type80);
        java.lang.Class<?> wildcardClass82 = typeCircularBuffer72.getClass();
        boolean boolean83 = typeCircularBuffer67.put((java.lang.reflect.Type) wildcardClass82);
        boolean boolean84 = typeCircularBuffer53.put((java.lang.reflect.Type) wildcardClass82);
        boolean boolean85 = typeCircularBuffer51.put((java.lang.reflect.Type) wildcardClass82);
        boolean boolean86 = typeCircularBuffer51.isFull();
        java.lang.reflect.Type type87 = typeCircularBuffer51.get();
        java.lang.Class<?> wildcardClass88 = typeCircularBuffer51.getClass();
        boolean boolean89 = typeCircularBuffer41.put((java.lang.reflect.Type) wildcardClass88);
        boolean boolean90 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass88);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(type39);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(type43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(type45);
        org.junit.Assert.assertNull(type46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(type48);
        org.junit.Assert.assertNull(type49);
        org.junit.Assert.assertNull(type54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNull(type70);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNull(type87);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test2498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2498");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer6.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        boolean boolean13 = typeCircularBuffer1.isFull();
        boolean boolean14 = typeCircularBuffer1.isFull();
        boolean boolean15 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test2499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2499");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        java.lang.reflect.Type type11 = typeCircularBuffer1.get();
        java.lang.reflect.Type type12 = null;
        boolean boolean13 = typeCircularBuffer1.put(type12);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type16 = typeCircularBuffer15.get();
        boolean boolean17 = typeCircularBuffer15.isFull();
        boolean boolean18 = typeCircularBuffer15.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean21 = typeCircularBuffer20.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer23.getClass();
        boolean boolean25 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean26 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean27 = typeCircularBuffer15.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) ' ');
        java.lang.reflect.Type type30 = typeCircularBuffer29.get();
        java.lang.Class<?> wildcardClass31 = typeCircularBuffer29.getClass();
        boolean boolean32 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass31);
        boolean boolean33 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass31);
        java.lang.reflect.Type type34 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean37 = typeCircularBuffer36.isFull();
        java.lang.reflect.Type type38 = typeCircularBuffer36.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean41 = typeCircularBuffer40.isEmpty();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        boolean boolean44 = typeCircularBuffer40.put((java.lang.reflect.Type) wildcardClass43);
        java.lang.Class<?> wildcardClass45 = typeCircularBuffer40.getClass();
        boolean boolean46 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass45);
        boolean boolean47 = typeCircularBuffer36.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer49 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        java.lang.reflect.Type type50 = typeCircularBuffer49.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer52 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean53 = typeCircularBuffer52.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer55 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass56 = typeCircularBuffer55.getClass();
        boolean boolean57 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass56);
        java.lang.reflect.Type type58 = typeCircularBuffer52.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer60 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type61 = typeCircularBuffer60.get();
        boolean boolean62 = typeCircularBuffer60.isFull();
        boolean boolean63 = typeCircularBuffer60.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer65 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean66 = typeCircularBuffer65.isEmpty();
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        boolean boolean69 = typeCircularBuffer65.put((java.lang.reflect.Type) wildcardClass68);
        java.lang.Class<?> wildcardClass70 = typeCircularBuffer65.getClass();
        boolean boolean71 = typeCircularBuffer60.put((java.lang.reflect.Type) wildcardClass70);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer73 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean74 = typeCircularBuffer73.isEmpty();
        java.lang.Object obj75 = new java.lang.Object();
        java.lang.Class<?> wildcardClass76 = obj75.getClass();
        boolean boolean77 = typeCircularBuffer73.put((java.lang.reflect.Type) wildcardClass76);
        java.lang.Class<?> wildcardClass78 = typeCircularBuffer73.getClass();
        boolean boolean79 = typeCircularBuffer60.put((java.lang.reflect.Type) wildcardClass78);
        boolean boolean80 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass78);
        java.lang.Class<?> wildcardClass81 = typeCircularBuffer52.getClass();
        boolean boolean82 = typeCircularBuffer49.put((java.lang.reflect.Type) wildcardClass81);
        java.lang.reflect.Type type83 = typeCircularBuffer49.get();
        boolean boolean84 = typeCircularBuffer36.put(type83);
        boolean boolean85 = typeCircularBuffer1.put(type83);
        boolean boolean86 = typeCircularBuffer1.isEmpty();
        boolean boolean87 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(type30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(type34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(type38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(type50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNull(type61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(type83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
    }

    @Test
    public void test2500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2500");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean9 = typeCircularBuffer8.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass12 = typeCircularBuffer11.getClass();
        boolean boolean13 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass12);
        java.lang.reflect.Type type14 = typeCircularBuffer8.get();
        boolean boolean15 = typeCircularBuffer6.put(type14);
        boolean boolean16 = typeCircularBuffer6.isEmpty();
        java.lang.reflect.Type type17 = typeCircularBuffer6.get();
        boolean boolean18 = typeCircularBuffer1.put(type17);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }
}

