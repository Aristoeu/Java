package buffers;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest2 {

    public static boolean debug = false;

    @Test
    public void test1001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1001");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        java.lang.reflect.Type type3 = null;
        boolean boolean4 = typeCircularBuffer1.put(type3);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test1002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1002");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        java.lang.reflect.Type type12 = typeCircularBuffer6.get();
        boolean boolean13 = typeCircularBuffer4.put(type12);
        boolean boolean14 = typeCircularBuffer4.isFull();
        java.lang.reflect.Type type15 = typeCircularBuffer4.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        boolean boolean21 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean22 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean24 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type25 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean30 = typeCircularBuffer29.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass33 = typeCircularBuffer32.getClass();
        boolean boolean34 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass33);
        java.lang.reflect.Type type35 = typeCircularBuffer29.get();
        boolean boolean36 = typeCircularBuffer27.put(type35);
        boolean boolean37 = typeCircularBuffer27.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean40 = typeCircularBuffer39.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass43 = typeCircularBuffer42.getClass();
        boolean boolean44 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass43);
        java.lang.reflect.Type type45 = typeCircularBuffer39.get();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        boolean boolean48 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass47);
        boolean boolean49 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass47);
        boolean boolean50 = typeCircularBuffer27.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer52 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type53 = typeCircularBuffer52.get();
        boolean boolean54 = typeCircularBuffer52.isFull();
        boolean boolean55 = typeCircularBuffer52.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer57 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean58 = typeCircularBuffer57.isEmpty();
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        boolean boolean61 = typeCircularBuffer57.put((java.lang.reflect.Type) wildcardClass60);
        java.lang.Class<?> wildcardClass62 = typeCircularBuffer57.getClass();
        boolean boolean63 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass62);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer65 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean66 = typeCircularBuffer65.isEmpty();
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        boolean boolean69 = typeCircularBuffer65.put((java.lang.reflect.Type) wildcardClass68);
        java.lang.Class<?> wildcardClass70 = typeCircularBuffer65.getClass();
        boolean boolean71 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass70);
        boolean boolean72 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass70);
        java.lang.reflect.Type type73 = typeCircularBuffer27.get();
        boolean boolean74 = typeCircularBuffer1.put(type73);
        boolean boolean75 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type76 = typeCircularBuffer1.get();
        boolean boolean77 = typeCircularBuffer1.isEmpty();
        boolean boolean78 = typeCircularBuffer1.isFull();
        boolean boolean79 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(type53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test1003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1003");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer5 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean8 = typeCircularBuffer7.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer10.getClass();
        boolean boolean12 = typeCircularBuffer7.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.reflect.Type type13 = typeCircularBuffer7.get();
        boolean boolean14 = typeCircularBuffer5.put(type13);
        boolean boolean15 = typeCircularBuffer5.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer20.getClass();
        boolean boolean22 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type23 = typeCircularBuffer17.get();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        boolean boolean26 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass25);
        boolean boolean27 = typeCircularBuffer5.put((java.lang.reflect.Type) wildcardClass25);
        boolean boolean28 = typeCircularBuffer5.isEmpty();
        java.lang.reflect.Type type29 = typeCircularBuffer5.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer34.getClass();
        boolean boolean36 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass35);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean41 = typeCircularBuffer40.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer43.getClass();
        boolean boolean45 = typeCircularBuffer40.put((java.lang.reflect.Type) wildcardClass44);
        java.lang.reflect.Type type46 = typeCircularBuffer40.get();
        boolean boolean47 = typeCircularBuffer38.put(type46);
        boolean boolean48 = typeCircularBuffer38.isFull();
        java.lang.reflect.Type type49 = typeCircularBuffer38.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean52 = typeCircularBuffer51.isEmpty();
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        boolean boolean55 = typeCircularBuffer51.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean56 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean57 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean58 = typeCircularBuffer31.isFull();
        boolean boolean59 = typeCircularBuffer31.isFull();
        java.lang.Class<?> wildcardClass60 = typeCircularBuffer31.getClass();
        boolean boolean61 = typeCircularBuffer5.put((java.lang.reflect.Type) wildcardClass60);
        java.lang.reflect.Type type62 = typeCircularBuffer5.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer64 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean65 = typeCircularBuffer64.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer67 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass68 = typeCircularBuffer67.getClass();
        boolean boolean69 = typeCircularBuffer64.put((java.lang.reflect.Type) wildcardClass68);
        java.lang.reflect.Type type70 = typeCircularBuffer64.get();
        boolean boolean71 = typeCircularBuffer64.isFull();
        java.lang.reflect.Type type72 = typeCircularBuffer64.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer74 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean75 = typeCircularBuffer74.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer77 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass78 = typeCircularBuffer77.getClass();
        boolean boolean79 = typeCircularBuffer74.put((java.lang.reflect.Type) wildcardClass78);
        java.lang.reflect.Type type80 = typeCircularBuffer74.get();
        java.lang.Object obj81 = new java.lang.Object();
        java.lang.Class<?> wildcardClass82 = obj81.getClass();
        boolean boolean83 = typeCircularBuffer74.put((java.lang.reflect.Type) wildcardClass82);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer85 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean86 = typeCircularBuffer85.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer88 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass89 = typeCircularBuffer88.getClass();
        boolean boolean90 = typeCircularBuffer85.put((java.lang.reflect.Type) wildcardClass89);
        java.lang.Class<?> wildcardClass91 = typeCircularBuffer85.getClass();
        boolean boolean92 = typeCircularBuffer74.put((java.lang.reflect.Type) wildcardClass91);
        boolean boolean93 = typeCircularBuffer64.put((java.lang.reflect.Type) wildcardClass91);
        java.lang.reflect.Type type94 = typeCircularBuffer64.get();
        boolean boolean95 = typeCircularBuffer5.put(type94);
        boolean boolean96 = typeCircularBuffer1.put(type94);
        java.lang.Class<?> wildcardClass97 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNull(type72);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertNotNull(type94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1004");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        boolean boolean8 = typeCircularBuffer1.isEmpty();
        boolean boolean9 = typeCircularBuffer1.isFull();
        boolean boolean10 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test1005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1005");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer17.getClass();
        boolean boolean19 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass18);
        java.lang.reflect.Type type20 = typeCircularBuffer14.get();
        boolean boolean21 = typeCircularBuffer12.put(type20);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer12.getClass();
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass22);
        boolean boolean24 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type25 = typeCircularBuffer1.get();
        boolean boolean26 = typeCircularBuffer1.isFull();
        boolean boolean27 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test1006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1006");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean4 = typeCircularBuffer3.isFull();
        boolean boolean5 = typeCircularBuffer3.isEmpty();
        java.lang.reflect.Type type6 = typeCircularBuffer3.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer10.get();
        boolean boolean17 = typeCircularBuffer8.put(type16);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer8.getClass();
        boolean boolean19 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass18);
        boolean boolean20 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass18);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type23 = typeCircularBuffer22.get();
        boolean boolean24 = typeCircularBuffer22.isFull();
        boolean boolean25 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean28 = typeCircularBuffer27.isEmpty();
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        boolean boolean31 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass30);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer27.getClass();
        boolean boolean33 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean37 = typeCircularBuffer36.isFull();
        boolean boolean38 = typeCircularBuffer36.isEmpty();
        java.lang.reflect.Type type39 = typeCircularBuffer36.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer46.getClass();
        boolean boolean48 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass47);
        java.lang.reflect.Type type49 = typeCircularBuffer43.get();
        boolean boolean50 = typeCircularBuffer41.put(type49);
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer41.getClass();
        boolean boolean52 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean53 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass51);
        java.lang.Class<?> wildcardClass54 = typeCircularBuffer22.getClass();
        boolean boolean55 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean56 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer58 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer60 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean61 = typeCircularBuffer60.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer63 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass64 = typeCircularBuffer63.getClass();
        boolean boolean65 = typeCircularBuffer60.put((java.lang.reflect.Type) wildcardClass64);
        java.lang.reflect.Type type66 = typeCircularBuffer60.get();
        boolean boolean67 = typeCircularBuffer58.put(type66);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer69 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer71 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean72 = typeCircularBuffer71.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer74 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass75 = typeCircularBuffer74.getClass();
        boolean boolean76 = typeCircularBuffer71.put((java.lang.reflect.Type) wildcardClass75);
        java.lang.reflect.Type type77 = typeCircularBuffer71.get();
        boolean boolean78 = typeCircularBuffer69.put(type77);
        java.lang.Class<?> wildcardClass79 = typeCircularBuffer69.getClass();
        boolean boolean80 = typeCircularBuffer58.put((java.lang.reflect.Type) wildcardClass79);
        boolean boolean81 = typeCircularBuffer58.isFull();
        java.lang.reflect.Type type82 = typeCircularBuffer58.get();
        java.lang.Class<?> wildcardClass83 = typeCircularBuffer58.getClass();
        boolean boolean84 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass83);
        java.lang.reflect.Type type85 = typeCircularBuffer1.get();
        java.lang.reflect.Type type86 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(type39);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(type85);
        org.junit.Assert.assertNotNull(type86);
    }

    @Test
    public void test1007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1007");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        boolean boolean5 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass8 = typeCircularBuffer7.getClass();
        boolean boolean9 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass8);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean12 = typeCircularBuffer11.isFull();
        boolean boolean13 = typeCircularBuffer11.isEmpty();
        boolean boolean14 = typeCircularBuffer11.isFull();
        java.lang.Class<?> wildcardClass15 = typeCircularBuffer11.getClass();
        boolean boolean16 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass15);
        java.lang.reflect.Type type17 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean22 = typeCircularBuffer21.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass25 = typeCircularBuffer24.getClass();
        boolean boolean26 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.reflect.Type type27 = typeCircularBuffer21.get();
        boolean boolean28 = typeCircularBuffer19.put(type27);
        boolean boolean29 = typeCircularBuffer19.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer34.getClass();
        boolean boolean36 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass35);
        java.lang.reflect.Type type37 = typeCircularBuffer31.get();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        boolean boolean40 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass39);
        boolean boolean41 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass39);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer46.getClass();
        boolean boolean48 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass47);
        java.lang.reflect.Type type49 = typeCircularBuffer43.get();
        boolean boolean50 = typeCircularBuffer19.put(type49);
        java.lang.reflect.Type type51 = typeCircularBuffer19.get();
        boolean boolean52 = typeCircularBuffer1.put(type51);
        boolean boolean53 = typeCircularBuffer1.isFull();
        boolean boolean54 = typeCircularBuffer1.isFull();
        boolean boolean55 = typeCircularBuffer1.isFull();
        boolean boolean56 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
    }

    @Test
    public void test1008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1008");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        boolean boolean6 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        java.lang.reflect.Type type10 = typeCircularBuffer9.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean13 = typeCircularBuffer12.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass16 = typeCircularBuffer15.getClass();
        boolean boolean17 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass16);
        java.lang.reflect.Type type18 = typeCircularBuffer12.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type21 = typeCircularBuffer20.get();
        boolean boolean22 = typeCircularBuffer20.isFull();
        boolean boolean23 = typeCircularBuffer20.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean26 = typeCircularBuffer25.isEmpty();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        boolean boolean29 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.Class<?> wildcardClass30 = typeCircularBuffer25.getClass();
        boolean boolean31 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass30);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean34 = typeCircularBuffer33.isEmpty();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        boolean boolean37 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass36);
        java.lang.Class<?> wildcardClass38 = typeCircularBuffer33.getClass();
        boolean boolean39 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass38);
        boolean boolean40 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass38);
        java.lang.Class<?> wildcardClass41 = typeCircularBuffer12.getClass();
        boolean boolean42 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass41);
        java.lang.reflect.Type type43 = typeCircularBuffer9.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean46 = typeCircularBuffer45.isEmpty();
        java.lang.reflect.Type type47 = typeCircularBuffer45.get();
        java.lang.reflect.Type type48 = typeCircularBuffer45.get();
        boolean boolean49 = typeCircularBuffer45.isEmpty();
        java.lang.Class<?> wildcardClass50 = typeCircularBuffer45.getClass();
        boolean boolean51 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass50);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer53 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean54 = typeCircularBuffer53.isFull();
        java.lang.reflect.Type type55 = typeCircularBuffer53.get();
        boolean boolean56 = typeCircularBuffer53.isFull();
        java.lang.reflect.Type type57 = typeCircularBuffer53.get();
        boolean boolean58 = typeCircularBuffer53.isFull();
        boolean boolean59 = typeCircularBuffer53.isEmpty();
        java.lang.Class<?> wildcardClass60 = typeCircularBuffer53.getClass();
        boolean boolean61 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass60);
        boolean boolean62 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass60);
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNull(type21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(type47);
        org.junit.Assert.assertNull(type48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(type55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(type57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
    }

    @Test
    public void test1009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1009");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.Comparable<java.lang.String>> strComparableCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.Comparable<java.lang.String>>((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1010");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        boolean boolean7 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test1011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1011");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        boolean boolean5 = typeCircularBuffer1.isFull();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test1012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1012");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass21);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean26 = typeCircularBuffer25.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass29 = typeCircularBuffer28.getClass();
        boolean boolean30 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass29);
        java.lang.reflect.Type type31 = typeCircularBuffer25.get();
        boolean boolean32 = typeCircularBuffer1.put(type31);
        boolean boolean33 = typeCircularBuffer1.isEmpty();
        boolean boolean34 = typeCircularBuffer1.isEmpty();
        boolean boolean35 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type36 = typeCircularBuffer1.get();
        java.lang.reflect.Type type37 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNull(type37);
    }

    @Test
    public void test1013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1013");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        boolean boolean15 = typeCircularBuffer13.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type18 = typeCircularBuffer17.get();
        boolean boolean19 = typeCircularBuffer17.isFull();
        boolean boolean20 = typeCircularBuffer17.isFull();
        boolean boolean21 = typeCircularBuffer17.isEmpty();
        java.lang.reflect.Type type22 = typeCircularBuffer17.get();
        java.lang.Class<?> wildcardClass23 = typeCircularBuffer17.getClass();
        boolean boolean24 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass23);
        boolean boolean25 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass23);
        boolean boolean26 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(type18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(type22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test1014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1014");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer6.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        boolean boolean13 = typeCircularBuffer1.isFull();
        boolean boolean14 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type15 = typeCircularBuffer1.get();
        boolean boolean16 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test1015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1015");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        java.lang.reflect.Type type15 = typeCircularBuffer9.get();
        boolean boolean16 = typeCircularBuffer7.put(type15);
        boolean boolean17 = typeCircularBuffer7.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean20 = typeCircularBuffer19.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass23 = typeCircularBuffer22.getClass();
        boolean boolean24 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass23);
        java.lang.reflect.Type type25 = typeCircularBuffer19.get();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        boolean boolean28 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer7.put((java.lang.reflect.Type) wildcardClass27);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer34.getClass();
        boolean boolean36 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass35);
        java.lang.reflect.Type type37 = typeCircularBuffer31.get();
        boolean boolean38 = typeCircularBuffer7.put(type37);
        java.lang.reflect.Type type39 = typeCircularBuffer7.get();
        boolean boolean40 = typeCircularBuffer1.put(type39);
        boolean boolean41 = typeCircularBuffer1.isEmpty();
        boolean boolean42 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>(1);
        java.lang.Class<?> wildcardClass45 = wildcardClassOfFieldCircularBuffer44.getClass();
        boolean boolean46 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass45);
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test1016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1016");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean9 = typeCircularBuffer8.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass12 = typeCircularBuffer11.getClass();
        boolean boolean13 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass12);
        java.lang.reflect.Type type14 = typeCircularBuffer8.get();
        boolean boolean15 = typeCircularBuffer6.put(type14);
        java.lang.Class<?> wildcardClass16 = typeCircularBuffer6.getClass();
        boolean boolean17 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass16);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(10);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer19.getClass();
        boolean boolean21 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type22 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass23 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test1017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1017");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean8 = typeCircularBuffer7.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer10.getClass();
        boolean boolean12 = typeCircularBuffer7.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.reflect.Type type13 = typeCircularBuffer7.get();
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        boolean boolean16 = typeCircularBuffer7.put((java.lang.reflect.Type) wildcardClass15);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean19 = typeCircularBuffer18.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer21.getClass();
        boolean boolean23 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass22);
        java.lang.reflect.Type type24 = typeCircularBuffer18.get();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        boolean boolean27 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass26);
        java.lang.reflect.Type type28 = typeCircularBuffer18.get();
        boolean boolean29 = typeCircularBuffer7.put(type28);
        java.lang.Class<?> wildcardClass30 = typeCircularBuffer7.getClass();
        boolean boolean31 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass30);
        java.lang.reflect.Type type32 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type35 = typeCircularBuffer34.get();
        boolean boolean36 = typeCircularBuffer34.isFull();
        boolean boolean37 = typeCircularBuffer34.isFull();
        boolean boolean38 = typeCircularBuffer34.isFull();
        java.lang.reflect.Type type39 = typeCircularBuffer34.get();
        boolean boolean40 = typeCircularBuffer34.isEmpty();
        boolean boolean41 = typeCircularBuffer34.isEmpty();
        boolean boolean42 = typeCircularBuffer34.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type45 = typeCircularBuffer44.get();
        boolean boolean46 = typeCircularBuffer44.isFull();
        boolean boolean47 = typeCircularBuffer44.isFull();
        boolean boolean48 = typeCircularBuffer44.isFull();
        boolean boolean49 = typeCircularBuffer44.isFull();
        boolean boolean50 = typeCircularBuffer44.isFull();
        boolean boolean51 = typeCircularBuffer44.isEmpty();
        java.lang.reflect.Type type52 = typeCircularBuffer44.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer54 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean55 = typeCircularBuffer54.isEmpty();
        java.lang.reflect.Type type56 = typeCircularBuffer54.get();
        boolean boolean57 = typeCircularBuffer54.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer59 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type60 = typeCircularBuffer59.get();
        boolean boolean61 = typeCircularBuffer59.isFull();
        boolean boolean62 = typeCircularBuffer59.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer64 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean65 = typeCircularBuffer64.isEmpty();
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        boolean boolean68 = typeCircularBuffer64.put((java.lang.reflect.Type) wildcardClass67);
        java.lang.Class<?> wildcardClass69 = typeCircularBuffer64.getClass();
        boolean boolean70 = typeCircularBuffer59.put((java.lang.reflect.Type) wildcardClass69);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer72 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean73 = typeCircularBuffer72.isEmpty();
        java.lang.Object obj74 = new java.lang.Object();
        java.lang.Class<?> wildcardClass75 = obj74.getClass();
        boolean boolean76 = typeCircularBuffer72.put((java.lang.reflect.Type) wildcardClass75);
        java.lang.Class<?> wildcardClass77 = typeCircularBuffer72.getClass();
        boolean boolean78 = typeCircularBuffer59.put((java.lang.reflect.Type) wildcardClass77);
        boolean boolean79 = typeCircularBuffer54.put((java.lang.reflect.Type) wildcardClass77);
        boolean boolean80 = typeCircularBuffer44.put((java.lang.reflect.Type) wildcardClass77);
        boolean boolean81 = typeCircularBuffer34.put((java.lang.reflect.Type) wildcardClass77);
        java.lang.reflect.Type type82 = typeCircularBuffer34.get();
        boolean boolean83 = typeCircularBuffer1.put(type82);
        java.lang.reflect.Type type84 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNull(type35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(type39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(type45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNull(type52);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(type56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(type60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(type84);
    }

    @Test
    public void test1018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1018");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        boolean boolean5 = typeCircularBuffer1.isFull();
        boolean boolean6 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(type7);
    }

    @Test
    public void test1019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1019");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer5 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean6 = typeCircularBuffer5.isEmpty();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = typeCircularBuffer5.put((java.lang.reflect.Type) wildcardClass8);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer5.getClass();
        boolean boolean11 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass10);
        boolean boolean12 = typeCircularBuffer1.isFull();
        boolean boolean13 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test1020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1020");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean13 = typeCircularBuffer12.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass16 = typeCircularBuffer15.getClass();
        boolean boolean17 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass16);
        java.lang.reflect.Type type18 = typeCircularBuffer12.get();
        boolean boolean19 = typeCircularBuffer10.put(type18);
        boolean boolean20 = typeCircularBuffer10.isEmpty();
        boolean boolean21 = typeCircularBuffer10.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean24 = typeCircularBuffer23.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer26.getClass();
        boolean boolean28 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass27);
        java.lang.reflect.Type type29 = typeCircularBuffer23.get();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        boolean boolean32 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass31);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean35 = typeCircularBuffer34.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass38 = typeCircularBuffer37.getClass();
        boolean boolean39 = typeCircularBuffer34.put((java.lang.reflect.Type) wildcardClass38);
        java.lang.reflect.Type type40 = typeCircularBuffer34.get();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        boolean boolean43 = typeCircularBuffer34.put((java.lang.reflect.Type) wildcardClass42);
        java.lang.reflect.Type type44 = typeCircularBuffer34.get();
        boolean boolean45 = typeCircularBuffer23.put(type44);
        boolean boolean46 = typeCircularBuffer10.put(type44);
        boolean boolean47 = typeCircularBuffer10.isEmpty();
        java.lang.reflect.Type type48 = typeCircularBuffer10.get();
        boolean boolean49 = typeCircularBuffer1.put(type48);
        boolean boolean50 = typeCircularBuffer1.isFull();
        boolean boolean51 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass52 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test1021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1021");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        boolean boolean12 = typeCircularBuffer6.isFull();
        java.lang.reflect.Type type13 = typeCircularBuffer6.get();
        boolean boolean14 = typeCircularBuffer1.put(type13);
        boolean boolean15 = typeCircularBuffer1.isEmpty();
        boolean boolean16 = typeCircularBuffer1.isEmpty();
        boolean boolean17 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean20 = typeCircularBuffer19.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass23 = typeCircularBuffer22.getClass();
        boolean boolean24 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass23);
        java.lang.reflect.Type type25 = typeCircularBuffer19.get();
        boolean boolean26 = typeCircularBuffer19.isFull();
        java.lang.reflect.Type type27 = typeCircularBuffer19.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean30 = typeCircularBuffer29.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass33 = typeCircularBuffer32.getClass();
        boolean boolean34 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass33);
        java.lang.reflect.Type type35 = typeCircularBuffer29.get();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        boolean boolean38 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass37);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean41 = typeCircularBuffer40.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer43.getClass();
        boolean boolean45 = typeCircularBuffer40.put((java.lang.reflect.Type) wildcardClass44);
        java.lang.Class<?> wildcardClass46 = typeCircularBuffer40.getClass();
        boolean boolean47 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass46);
        boolean boolean48 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass46);
        java.lang.reflect.Type type49 = typeCircularBuffer19.get();
        java.lang.Class<?> wildcardClass50 = type49.getClass();
        boolean boolean51 = typeCircularBuffer1.put(type49);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(type27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test1022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1022");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass6 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test1023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1023");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type7 = typeCircularBuffer6.get();
        boolean boolean8 = typeCircularBuffer6.isFull();
        boolean boolean9 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean12 = typeCircularBuffer11.isEmpty();
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        boolean boolean15 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.Class<?> wildcardClass16 = typeCircularBuffer11.getClass();
        boolean boolean17 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass16);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean20 = typeCircularBuffer19.isEmpty();
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        boolean boolean23 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass22);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer19.getClass();
        boolean boolean25 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean26 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass24);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean29 = typeCircularBuffer28.isFull();
        java.lang.reflect.Type type30 = typeCircularBuffer28.get();
        boolean boolean31 = typeCircularBuffer28.isFull();
        java.lang.reflect.Type type32 = typeCircularBuffer28.get();
        boolean boolean33 = typeCircularBuffer28.isFull();
        boolean boolean34 = typeCircularBuffer28.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean37 = typeCircularBuffer36.isFull();
        boolean boolean38 = typeCircularBuffer36.isEmpty();
        java.lang.reflect.Type type39 = typeCircularBuffer36.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer46.getClass();
        boolean boolean48 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass47);
        java.lang.reflect.Type type49 = typeCircularBuffer43.get();
        boolean boolean50 = typeCircularBuffer41.put(type49);
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer41.getClass();
        boolean boolean52 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean53 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass51);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer55 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) ' ');
        java.lang.Class<?> wildcardClass56 = typeCircularBuffer55.getClass();
        boolean boolean57 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass56);
        java.lang.Class<?> wildcardClass58 = typeCircularBuffer28.getClass();
        boolean boolean59 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass58);
        boolean boolean60 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(type32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(type39);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test1024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1024");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        boolean boolean7 = typeCircularBuffer6.isFull();
        boolean boolean8 = typeCircularBuffer6.isEmpty();
        java.lang.Class<?> wildcardClass9 = typeCircularBuffer6.getClass();
        boolean boolean10 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type14 = typeCircularBuffer13.get();
        boolean boolean15 = typeCircularBuffer13.isFull();
        boolean boolean16 = typeCircularBuffer13.isFull();
        boolean boolean17 = typeCircularBuffer13.isEmpty();
        java.lang.reflect.Type type18 = typeCircularBuffer13.get();
        boolean boolean19 = typeCircularBuffer13.isEmpty();
        java.lang.reflect.Type type20 = typeCircularBuffer13.get();
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer13.getClass();
        boolean boolean22 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(type14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(type18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(type20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test1025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1025");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer10.get();
        boolean boolean17 = typeCircularBuffer8.put(type16);
        boolean boolean18 = typeCircularBuffer8.isFull();
        java.lang.reflect.Type type19 = typeCircularBuffer8.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean22 = typeCircularBuffer21.isEmpty();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean26 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean27 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean28 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean31 = typeCircularBuffer30.isFull();
        boolean boolean32 = typeCircularBuffer30.isEmpty();
        boolean boolean33 = typeCircularBuffer30.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean36 = typeCircularBuffer35.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass39 = typeCircularBuffer38.getClass();
        boolean boolean40 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass39);
        java.lang.reflect.Type type41 = typeCircularBuffer35.get();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        boolean boolean44 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass43);
        boolean boolean45 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass43);
        boolean boolean46 = typeCircularBuffer30.isFull();
        java.lang.reflect.Type type47 = typeCircularBuffer30.get();
        boolean boolean48 = typeCircularBuffer1.put(type47);
        boolean boolean49 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean52 = typeCircularBuffer51.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer54 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass55 = typeCircularBuffer54.getClass();
        boolean boolean56 = typeCircularBuffer51.put((java.lang.reflect.Type) wildcardClass55);
        java.lang.reflect.Type type57 = typeCircularBuffer51.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer59 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type60 = typeCircularBuffer59.get();
        boolean boolean61 = typeCircularBuffer59.isFull();
        boolean boolean62 = typeCircularBuffer59.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer64 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean65 = typeCircularBuffer64.isEmpty();
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        boolean boolean68 = typeCircularBuffer64.put((java.lang.reflect.Type) wildcardClass67);
        java.lang.Class<?> wildcardClass69 = typeCircularBuffer64.getClass();
        boolean boolean70 = typeCircularBuffer59.put((java.lang.reflect.Type) wildcardClass69);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer72 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean73 = typeCircularBuffer72.isEmpty();
        java.lang.Object obj74 = new java.lang.Object();
        java.lang.Class<?> wildcardClass75 = obj74.getClass();
        boolean boolean76 = typeCircularBuffer72.put((java.lang.reflect.Type) wildcardClass75);
        java.lang.Class<?> wildcardClass77 = typeCircularBuffer72.getClass();
        boolean boolean78 = typeCircularBuffer59.put((java.lang.reflect.Type) wildcardClass77);
        boolean boolean79 = typeCircularBuffer51.put((java.lang.reflect.Type) wildcardClass77);
        boolean boolean80 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass77);
        boolean boolean81 = typeCircularBuffer1.isEmpty();
        boolean boolean82 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type83 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNull(type60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(type83);
    }

    @Test
    public void test1026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1026");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = null;
        boolean boolean8 = typeCircularBuffer1.put(type7);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean13 = typeCircularBuffer12.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass16 = typeCircularBuffer15.getClass();
        boolean boolean17 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass16);
        java.lang.reflect.Type type18 = typeCircularBuffer12.get();
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer12.getClass();
        boolean boolean20 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass19);
        boolean boolean21 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass19);
        boolean boolean22 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type25 = typeCircularBuffer24.get();
        boolean boolean26 = typeCircularBuffer24.isFull();
        boolean boolean27 = typeCircularBuffer24.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean30 = typeCircularBuffer29.isEmpty();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        boolean boolean33 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass32);
        java.lang.Class<?> wildcardClass34 = typeCircularBuffer29.getClass();
        boolean boolean35 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass34);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean38 = typeCircularBuffer37.isEmpty();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        boolean boolean41 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass40);
        java.lang.Class<?> wildcardClass42 = typeCircularBuffer37.getClass();
        boolean boolean43 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass42);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean46 = typeCircularBuffer45.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass49 = typeCircularBuffer48.getClass();
        boolean boolean50 = typeCircularBuffer45.put((java.lang.reflect.Type) wildcardClass49);
        boolean boolean51 = typeCircularBuffer45.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.GenericDeclaration> genericDeclarationCircularBuffer53 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.GenericDeclaration>((int) (short) 100);
        java.lang.Class<?> wildcardClass54 = genericDeclarationCircularBuffer53.getClass();
        boolean boolean55 = typeCircularBuffer45.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean56 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean57 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean58 = typeCircularBuffer1.isEmpty();
        boolean boolean59 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(type25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test1027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1027");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) 'a');
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type11 = typeCircularBuffer10.get();
        boolean boolean12 = typeCircularBuffer10.isFull();
        boolean boolean13 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean16 = typeCircularBuffer15.isEmpty();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        boolean boolean19 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass18);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer15.getClass();
        boolean boolean21 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean22 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean25 = typeCircularBuffer24.isFull();
        boolean boolean26 = typeCircularBuffer24.isEmpty();
        java.lang.reflect.Type type27 = typeCircularBuffer24.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer34.getClass();
        boolean boolean36 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass35);
        java.lang.reflect.Type type37 = typeCircularBuffer31.get();
        boolean boolean38 = typeCircularBuffer29.put(type37);
        java.lang.Class<?> wildcardClass39 = typeCircularBuffer29.getClass();
        boolean boolean40 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass39);
        boolean boolean41 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass39);
        boolean boolean42 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass39);
        boolean boolean43 = typeCircularBuffer8.isFull();
        boolean boolean44 = typeCircularBuffer8.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean47 = typeCircularBuffer46.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer49 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass50 = typeCircularBuffer49.getClass();
        boolean boolean51 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass50);
        java.lang.reflect.Type type52 = typeCircularBuffer46.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer54 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type55 = typeCircularBuffer54.get();
        boolean boolean56 = typeCircularBuffer54.isFull();
        boolean boolean57 = typeCircularBuffer54.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer59 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean60 = typeCircularBuffer59.isEmpty();
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        boolean boolean63 = typeCircularBuffer59.put((java.lang.reflect.Type) wildcardClass62);
        java.lang.Class<?> wildcardClass64 = typeCircularBuffer59.getClass();
        boolean boolean65 = typeCircularBuffer54.put((java.lang.reflect.Type) wildcardClass64);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer67 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean68 = typeCircularBuffer67.isEmpty();
        java.lang.Object obj69 = new java.lang.Object();
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        boolean boolean71 = typeCircularBuffer67.put((java.lang.reflect.Type) wildcardClass70);
        java.lang.Class<?> wildcardClass72 = typeCircularBuffer67.getClass();
        boolean boolean73 = typeCircularBuffer54.put((java.lang.reflect.Type) wildcardClass72);
        boolean boolean74 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass72);
        java.lang.reflect.Type type75 = typeCircularBuffer46.get();
        boolean boolean76 = typeCircularBuffer8.put(type75);
        java.lang.reflect.Type type77 = typeCircularBuffer8.get();
        boolean boolean78 = typeCircularBuffer8.isFull();
        java.lang.Class<?> wildcardClass79 = typeCircularBuffer8.getClass();
        boolean boolean80 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass79);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(type11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(type27);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNull(type55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNull(type77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
    }

    @Test
    public void test1028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1028");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer10.get();
        boolean boolean17 = typeCircularBuffer8.put(type16);
        boolean boolean18 = typeCircularBuffer8.isFull();
        java.lang.reflect.Type type19 = typeCircularBuffer8.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean22 = typeCircularBuffer21.isEmpty();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean26 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean27 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean28 = typeCircularBuffer1.isFull();
        boolean boolean29 = typeCircularBuffer1.isFull();
        boolean boolean30 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean35 = typeCircularBuffer34.isFull();
        boolean boolean36 = typeCircularBuffer34.isEmpty();
        java.lang.reflect.Type type37 = typeCircularBuffer34.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean42 = typeCircularBuffer41.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass45 = typeCircularBuffer44.getClass();
        boolean boolean46 = typeCircularBuffer41.put((java.lang.reflect.Type) wildcardClass45);
        java.lang.reflect.Type type47 = typeCircularBuffer41.get();
        boolean boolean48 = typeCircularBuffer39.put(type47);
        java.lang.Class<?> wildcardClass49 = typeCircularBuffer39.getClass();
        boolean boolean50 = typeCircularBuffer34.put((java.lang.reflect.Type) wildcardClass49);
        boolean boolean51 = typeCircularBuffer32.put((java.lang.reflect.Type) wildcardClass49);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer53 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type54 = typeCircularBuffer53.get();
        boolean boolean55 = typeCircularBuffer53.isFull();
        boolean boolean56 = typeCircularBuffer53.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer58 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean59 = typeCircularBuffer58.isEmpty();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        boolean boolean62 = typeCircularBuffer58.put((java.lang.reflect.Type) wildcardClass61);
        java.lang.Class<?> wildcardClass63 = typeCircularBuffer58.getClass();
        boolean boolean64 = typeCircularBuffer53.put((java.lang.reflect.Type) wildcardClass63);
        boolean boolean65 = typeCircularBuffer53.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer67 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean68 = typeCircularBuffer67.isFull();
        boolean boolean69 = typeCircularBuffer67.isEmpty();
        java.lang.reflect.Type type70 = typeCircularBuffer67.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer72 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer74 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean75 = typeCircularBuffer74.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer77 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass78 = typeCircularBuffer77.getClass();
        boolean boolean79 = typeCircularBuffer74.put((java.lang.reflect.Type) wildcardClass78);
        java.lang.reflect.Type type80 = typeCircularBuffer74.get();
        boolean boolean81 = typeCircularBuffer72.put(type80);
        java.lang.Class<?> wildcardClass82 = typeCircularBuffer72.getClass();
        boolean boolean83 = typeCircularBuffer67.put((java.lang.reflect.Type) wildcardClass82);
        boolean boolean84 = typeCircularBuffer53.put((java.lang.reflect.Type) wildcardClass82);
        java.lang.Class<?> wildcardClass85 = typeCircularBuffer53.getClass();
        boolean boolean86 = typeCircularBuffer32.put((java.lang.reflect.Type) wildcardClass85);
        boolean boolean87 = typeCircularBuffer32.isEmpty();
        boolean boolean88 = typeCircularBuffer32.isFull();
        boolean boolean89 = typeCircularBuffer32.isFull();
        java.lang.reflect.Type type90 = typeCircularBuffer32.get();
        boolean boolean91 = typeCircularBuffer1.put(type90);
        boolean boolean92 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(type37);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNull(type54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNull(type70);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(type90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
    }

    @Test
    public void test1029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1029");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass7 = type6.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(type6);
    }

    @Test
    public void test1030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1030");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type7 = typeCircularBuffer6.get();
        boolean boolean8 = typeCircularBuffer6.isFull();
        boolean boolean9 = typeCircularBuffer6.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean12 = typeCircularBuffer11.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass15 = typeCircularBuffer14.getClass();
        boolean boolean16 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass15);
        boolean boolean17 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass15);
        boolean boolean18 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass26 = typeCircularBuffer25.getClass();
        boolean boolean27 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass26);
        java.lang.reflect.Type type28 = typeCircularBuffer22.get();
        boolean boolean29 = typeCircularBuffer20.put(type28);
        boolean boolean30 = typeCircularBuffer20.isFull();
        java.lang.reflect.Type type31 = typeCircularBuffer20.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean34 = typeCircularBuffer33.isEmpty();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        boolean boolean37 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean38 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass36);
        java.lang.reflect.Type type39 = typeCircularBuffer20.get();
        boolean boolean40 = typeCircularBuffer6.put(type39);
        java.lang.reflect.Type type41 = typeCircularBuffer6.get();
        java.lang.Class<?> wildcardClass42 = typeCircularBuffer6.getClass();
        boolean boolean43 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass42);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type46 = typeCircularBuffer45.get();
        boolean boolean47 = typeCircularBuffer45.isFull();
        boolean boolean48 = typeCircularBuffer45.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean51 = typeCircularBuffer50.isEmpty();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        boolean boolean54 = typeCircularBuffer50.put((java.lang.reflect.Type) wildcardClass53);
        java.lang.Class<?> wildcardClass55 = typeCircularBuffer50.getClass();
        boolean boolean56 = typeCircularBuffer45.put((java.lang.reflect.Type) wildcardClass55);
        java.lang.reflect.Type type57 = typeCircularBuffer45.get();
        boolean boolean58 = typeCircularBuffer45.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer60 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean61 = typeCircularBuffer60.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer63 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass64 = typeCircularBuffer63.getClass();
        boolean boolean65 = typeCircularBuffer60.put((java.lang.reflect.Type) wildcardClass64);
        boolean boolean66 = typeCircularBuffer60.isEmpty();
        java.lang.reflect.Type type67 = typeCircularBuffer60.get();
        boolean boolean68 = typeCircularBuffer45.put(type67);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer70 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type71 = typeCircularBuffer70.get();
        boolean boolean72 = typeCircularBuffer70.isFull();
        boolean boolean73 = typeCircularBuffer70.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer75 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean76 = typeCircularBuffer75.isEmpty();
        java.lang.Object obj77 = new java.lang.Object();
        java.lang.Class<?> wildcardClass78 = obj77.getClass();
        boolean boolean79 = typeCircularBuffer75.put((java.lang.reflect.Type) wildcardClass78);
        java.lang.Class<?> wildcardClass80 = typeCircularBuffer75.getClass();
        boolean boolean81 = typeCircularBuffer70.put((java.lang.reflect.Type) wildcardClass80);
        java.lang.reflect.Type type82 = typeCircularBuffer70.get();
        boolean boolean83 = typeCircularBuffer70.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer85 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type86 = typeCircularBuffer85.get();
        boolean boolean87 = typeCircularBuffer85.isFull();
        java.lang.Class<?> wildcardClass88 = typeCircularBuffer85.getClass();
        boolean boolean89 = typeCircularBuffer70.put((java.lang.reflect.Type) wildcardClass88);
        boolean boolean90 = typeCircularBuffer45.put((java.lang.reflect.Type) wildcardClass88);
        boolean boolean91 = typeCircularBuffer45.isEmpty();
        java.lang.reflect.Type type92 = typeCircularBuffer45.get();
        boolean boolean93 = typeCircularBuffer1.put(type92);
        java.lang.Class<?> wildcardClass94 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(type41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(type46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNull(type71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNull(type86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(type92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1031");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        boolean boolean5 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass8 = typeCircularBuffer7.getClass();
        boolean boolean9 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass8);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean12 = typeCircularBuffer11.isFull();
        boolean boolean13 = typeCircularBuffer11.isEmpty();
        boolean boolean14 = typeCircularBuffer11.isFull();
        java.lang.Class<?> wildcardClass15 = typeCircularBuffer11.getClass();
        boolean boolean16 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass15);
        java.lang.reflect.Type type17 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean22 = typeCircularBuffer21.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass25 = typeCircularBuffer24.getClass();
        boolean boolean26 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.reflect.Type type27 = typeCircularBuffer21.get();
        boolean boolean28 = typeCircularBuffer19.put(type27);
        boolean boolean29 = typeCircularBuffer19.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer34.getClass();
        boolean boolean36 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass35);
        java.lang.reflect.Type type37 = typeCircularBuffer31.get();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        boolean boolean40 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass39);
        boolean boolean41 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass39);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer46.getClass();
        boolean boolean48 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass47);
        java.lang.reflect.Type type49 = typeCircularBuffer43.get();
        boolean boolean50 = typeCircularBuffer19.put(type49);
        java.lang.reflect.Type type51 = typeCircularBuffer19.get();
        boolean boolean52 = typeCircularBuffer1.put(type51);
        boolean boolean53 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type54 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer56 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer58 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean59 = typeCircularBuffer58.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer61 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass62 = typeCircularBuffer61.getClass();
        boolean boolean63 = typeCircularBuffer58.put((java.lang.reflect.Type) wildcardClass62);
        java.lang.reflect.Type type64 = typeCircularBuffer58.get();
        boolean boolean65 = typeCircularBuffer56.put(type64);
        boolean boolean66 = typeCircularBuffer56.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer68 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 1);
        boolean boolean69 = typeCircularBuffer68.isEmpty();
        boolean boolean70 = typeCircularBuffer68.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer72 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type73 = typeCircularBuffer72.get();
        boolean boolean74 = typeCircularBuffer72.isFull();
        boolean boolean75 = typeCircularBuffer72.isFull();
        boolean boolean76 = typeCircularBuffer72.isEmpty();
        java.lang.reflect.Type type77 = typeCircularBuffer72.get();
        java.lang.Class<?> wildcardClass78 = typeCircularBuffer72.getClass();
        boolean boolean79 = typeCircularBuffer68.put((java.lang.reflect.Type) wildcardClass78);
        boolean boolean80 = typeCircularBuffer56.put((java.lang.reflect.Type) wildcardClass78);
        java.lang.reflect.Type type81 = typeCircularBuffer56.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer83 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type84 = typeCircularBuffer83.get();
        boolean boolean85 = typeCircularBuffer83.isFull();
        boolean boolean86 = typeCircularBuffer83.isEmpty();
        java.lang.Class<?> wildcardClass87 = typeCircularBuffer83.getClass();
        boolean boolean88 = typeCircularBuffer56.put((java.lang.reflect.Type) wildcardClass87);
        boolean boolean89 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass87);
        boolean boolean90 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type91 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass92 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(type73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNull(type77);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(type81);
        org.junit.Assert.assertNull(type84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(type91);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test1032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1032");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        boolean boolean8 = typeCircularBuffer1.isEmpty();
        boolean boolean9 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type12 = typeCircularBuffer11.get();
        boolean boolean13 = typeCircularBuffer11.isFull();
        boolean boolean14 = typeCircularBuffer11.isFull();
        boolean boolean15 = typeCircularBuffer11.isFull();
        boolean boolean16 = typeCircularBuffer11.isFull();
        boolean boolean17 = typeCircularBuffer11.isFull();
        boolean boolean18 = typeCircularBuffer11.isEmpty();
        java.lang.reflect.Type type19 = typeCircularBuffer11.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean22 = typeCircularBuffer21.isEmpty();
        java.lang.reflect.Type type23 = typeCircularBuffer21.get();
        boolean boolean24 = typeCircularBuffer21.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type27 = typeCircularBuffer26.get();
        boolean boolean28 = typeCircularBuffer26.isFull();
        boolean boolean29 = typeCircularBuffer26.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        boolean boolean35 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass34);
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer31.getClass();
        boolean boolean37 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass36);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean40 = typeCircularBuffer39.isEmpty();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        boolean boolean43 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass42);
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer39.getClass();
        boolean boolean45 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean46 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean47 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean48 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass44);
        java.lang.reflect.Type type49 = null;
        boolean boolean50 = typeCircularBuffer1.put(type49);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer52 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean53 = typeCircularBuffer52.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer55 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass56 = typeCircularBuffer55.getClass();
        boolean boolean57 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass56);
        java.lang.reflect.Type type58 = typeCircularBuffer52.get();
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        boolean boolean61 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass60);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer63 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean64 = typeCircularBuffer63.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer66 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass67 = typeCircularBuffer66.getClass();
        boolean boolean68 = typeCircularBuffer63.put((java.lang.reflect.Type) wildcardClass67);
        java.lang.Class<?> wildcardClass69 = typeCircularBuffer63.getClass();
        boolean boolean70 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass69);
        java.lang.Class<?> wildcardClass71 = typeCircularBuffer52.getClass();
        boolean boolean72 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass71);
        java.lang.reflect.Type type73 = typeCircularBuffer1.get();
        boolean boolean74 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(type19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test1033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1033");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = null;
        boolean boolean8 = typeCircularBuffer1.put(type7);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean13 = typeCircularBuffer12.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass16 = typeCircularBuffer15.getClass();
        boolean boolean17 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass16);
        java.lang.reflect.Type type18 = typeCircularBuffer12.get();
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer12.getClass();
        boolean boolean20 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass19);
        boolean boolean21 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass19);
        java.lang.reflect.Type type22 = typeCircularBuffer1.get();
        java.lang.reflect.Type type23 = typeCircularBuffer1.get();
        boolean boolean24 = typeCircularBuffer1.isFull();
        boolean boolean25 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass26 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test1034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1034");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        java.lang.reflect.Type type11 = typeCircularBuffer1.get();
        boolean boolean12 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test1035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1035");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass10);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer19.getClass();
        boolean boolean21 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type22 = typeCircularBuffer16.get();
        java.lang.Class<?> wildcardClass23 = typeCircularBuffer16.getClass();
        boolean boolean24 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass23);
        boolean boolean25 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass23);
        java.lang.reflect.Type type26 = typeCircularBuffer1.get();
        boolean boolean27 = typeCircularBuffer1.isFull();
        boolean boolean28 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(type26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
    }

    @Test
    public void test1036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1036");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        java.lang.reflect.Type type15 = typeCircularBuffer9.get();
        boolean boolean16 = typeCircularBuffer7.put(type15);
        boolean boolean17 = typeCircularBuffer7.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean20 = typeCircularBuffer19.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass23 = typeCircularBuffer22.getClass();
        boolean boolean24 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass23);
        java.lang.reflect.Type type25 = typeCircularBuffer19.get();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        boolean boolean28 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer7.put((java.lang.reflect.Type) wildcardClass27);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer34.getClass();
        boolean boolean36 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass35);
        java.lang.reflect.Type type37 = typeCircularBuffer31.get();
        boolean boolean38 = typeCircularBuffer7.put(type37);
        java.lang.reflect.Type type39 = typeCircularBuffer7.get();
        boolean boolean40 = typeCircularBuffer1.put(type39);
        boolean boolean41 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(100);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type46 = typeCircularBuffer45.get();
        boolean boolean47 = typeCircularBuffer45.isFull();
        boolean boolean48 = typeCircularBuffer45.isFull();
        boolean boolean49 = typeCircularBuffer45.isEmpty();
        java.lang.reflect.Type type50 = typeCircularBuffer45.get();
        boolean boolean51 = typeCircularBuffer45.isEmpty();
        boolean boolean52 = typeCircularBuffer45.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer54 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type55 = typeCircularBuffer54.get();
        boolean boolean56 = typeCircularBuffer54.isFull();
        boolean boolean57 = typeCircularBuffer54.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer59 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean60 = typeCircularBuffer59.isEmpty();
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        boolean boolean63 = typeCircularBuffer59.put((java.lang.reflect.Type) wildcardClass62);
        java.lang.Class<?> wildcardClass64 = typeCircularBuffer59.getClass();
        boolean boolean65 = typeCircularBuffer54.put((java.lang.reflect.Type) wildcardClass64);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer67 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean68 = typeCircularBuffer67.isEmpty();
        java.lang.Object obj69 = new java.lang.Object();
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        boolean boolean71 = typeCircularBuffer67.put((java.lang.reflect.Type) wildcardClass70);
        java.lang.Class<?> wildcardClass72 = typeCircularBuffer67.getClass();
        boolean boolean73 = typeCircularBuffer54.put((java.lang.reflect.Type) wildcardClass72);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer75 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean76 = typeCircularBuffer75.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer78 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass79 = typeCircularBuffer78.getClass();
        boolean boolean80 = typeCircularBuffer75.put((java.lang.reflect.Type) wildcardClass79);
        boolean boolean81 = typeCircularBuffer75.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.GenericDeclaration> genericDeclarationCircularBuffer83 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.GenericDeclaration>((int) (short) 100);
        java.lang.Class<?> wildcardClass84 = genericDeclarationCircularBuffer83.getClass();
        boolean boolean85 = typeCircularBuffer75.put((java.lang.reflect.Type) wildcardClass84);
        boolean boolean86 = typeCircularBuffer54.put((java.lang.reflect.Type) wildcardClass84);
        boolean boolean87 = typeCircularBuffer45.put((java.lang.reflect.Type) wildcardClass84);
        boolean boolean88 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass84);
        boolean boolean89 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass84);
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(type46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(type50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(type55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test1037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1037");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean24 = typeCircularBuffer1.isEmpty();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        boolean boolean27 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass26);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer34.getClass();
        boolean boolean36 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass35);
        java.lang.reflect.Type type37 = typeCircularBuffer31.get();
        boolean boolean38 = typeCircularBuffer29.put(type37);
        boolean boolean39 = typeCircularBuffer29.isFull();
        java.lang.reflect.Type type40 = typeCircularBuffer29.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type43 = typeCircularBuffer42.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean46 = typeCircularBuffer45.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass49 = typeCircularBuffer48.getClass();
        boolean boolean50 = typeCircularBuffer45.put((java.lang.reflect.Type) wildcardClass49);
        java.lang.reflect.Type type51 = typeCircularBuffer45.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer53 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type54 = typeCircularBuffer53.get();
        boolean boolean55 = typeCircularBuffer53.isFull();
        boolean boolean56 = typeCircularBuffer53.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer58 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean59 = typeCircularBuffer58.isEmpty();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        boolean boolean62 = typeCircularBuffer58.put((java.lang.reflect.Type) wildcardClass61);
        java.lang.Class<?> wildcardClass63 = typeCircularBuffer58.getClass();
        boolean boolean64 = typeCircularBuffer53.put((java.lang.reflect.Type) wildcardClass63);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer66 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean67 = typeCircularBuffer66.isEmpty();
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        boolean boolean70 = typeCircularBuffer66.put((java.lang.reflect.Type) wildcardClass69);
        java.lang.Class<?> wildcardClass71 = typeCircularBuffer66.getClass();
        boolean boolean72 = typeCircularBuffer53.put((java.lang.reflect.Type) wildcardClass71);
        boolean boolean73 = typeCircularBuffer45.put((java.lang.reflect.Type) wildcardClass71);
        boolean boolean74 = typeCircularBuffer42.put((java.lang.reflect.Type) wildcardClass71);
        boolean boolean75 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass71);
        boolean boolean76 = typeCircularBuffer29.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer78 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean79 = typeCircularBuffer78.isEmpty();
        boolean boolean80 = typeCircularBuffer78.isEmpty();
        java.lang.reflect.Type type81 = typeCircularBuffer78.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer83 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean84 = typeCircularBuffer83.isEmpty();
        java.lang.Object obj85 = new java.lang.Object();
        java.lang.Class<?> wildcardClass86 = obj85.getClass();
        boolean boolean87 = typeCircularBuffer83.put((java.lang.reflect.Type) wildcardClass86);
        boolean boolean88 = typeCircularBuffer83.isFull();
        java.lang.Class<?> wildcardClass89 = typeCircularBuffer83.getClass();
        boolean boolean90 = typeCircularBuffer78.put((java.lang.reflect.Type) wildcardClass89);
        boolean boolean91 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass89);
        boolean boolean92 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass89);
        java.lang.reflect.Type type93 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNull(type43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNull(type54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNull(type81);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(type93);
    }

    @Test
    public void test1038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1038");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer6.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.reflect.Type type13 = typeCircularBuffer1.get();
        boolean boolean14 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer19.getClass();
        boolean boolean21 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean22 = typeCircularBuffer16.isEmpty();
        java.lang.reflect.Type type23 = typeCircularBuffer16.get();
        boolean boolean24 = typeCircularBuffer1.put(type23);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type27 = typeCircularBuffer26.get();
        boolean boolean28 = typeCircularBuffer26.isFull();
        boolean boolean29 = typeCircularBuffer26.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        boolean boolean35 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass34);
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer31.getClass();
        boolean boolean37 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass36);
        java.lang.reflect.Type type38 = typeCircularBuffer26.get();
        boolean boolean39 = typeCircularBuffer26.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type42 = typeCircularBuffer41.get();
        boolean boolean43 = typeCircularBuffer41.isFull();
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer41.getClass();
        boolean boolean45 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean46 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean47 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type48 = typeCircularBuffer1.get();
        boolean boolean49 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean52 = typeCircularBuffer51.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer54 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass55 = typeCircularBuffer54.getClass();
        boolean boolean56 = typeCircularBuffer51.put((java.lang.reflect.Type) wildcardClass55);
        java.lang.reflect.Type type57 = typeCircularBuffer51.get();
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        boolean boolean60 = typeCircularBuffer51.put((java.lang.reflect.Type) wildcardClass59);
        java.lang.reflect.Type type61 = typeCircularBuffer51.get();
        boolean boolean62 = typeCircularBuffer51.isFull();
        java.lang.Class<?> wildcardClass63 = typeCircularBuffer51.getClass();
        boolean boolean64 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass63);
        boolean boolean65 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer67 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer69 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean70 = typeCircularBuffer69.isFull();
        java.lang.reflect.Type type71 = typeCircularBuffer69.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer73 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean74 = typeCircularBuffer73.isEmpty();
        java.lang.Object obj75 = new java.lang.Object();
        java.lang.Class<?> wildcardClass76 = obj75.getClass();
        boolean boolean77 = typeCircularBuffer73.put((java.lang.reflect.Type) wildcardClass76);
        java.lang.Class<?> wildcardClass78 = typeCircularBuffer73.getClass();
        boolean boolean79 = typeCircularBuffer69.put((java.lang.reflect.Type) wildcardClass78);
        boolean boolean80 = typeCircularBuffer67.put((java.lang.reflect.Type) wildcardClass78);
        boolean boolean81 = typeCircularBuffer67.isEmpty();
        boolean boolean82 = typeCircularBuffer67.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer84 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean85 = typeCircularBuffer84.isEmpty();
        boolean boolean86 = typeCircularBuffer84.isFull();
        java.lang.reflect.Type type87 = typeCircularBuffer84.get();
        boolean boolean88 = typeCircularBuffer84.isFull();
        boolean boolean89 = typeCircularBuffer84.isEmpty();
        boolean boolean90 = typeCircularBuffer84.isFull();
        boolean boolean91 = typeCircularBuffer84.isEmpty();
        java.lang.Class<?> wildcardClass92 = typeCircularBuffer84.getClass();
        boolean boolean93 = typeCircularBuffer67.put((java.lang.reflect.Type) wildcardClass92);
        boolean boolean94 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass92);
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(type42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(type71);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNull(type87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test1039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1039");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        java.lang.reflect.Type type12 = typeCircularBuffer6.get();
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        boolean boolean15 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass14);
        boolean boolean16 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass14);
        boolean boolean17 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean22 = typeCircularBuffer21.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass25 = typeCircularBuffer24.getClass();
        boolean boolean26 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.reflect.Type type27 = typeCircularBuffer21.get();
        boolean boolean28 = typeCircularBuffer19.put(type27);
        boolean boolean29 = typeCircularBuffer19.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer34.getClass();
        boolean boolean36 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass35);
        java.lang.reflect.Type type37 = typeCircularBuffer31.get();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        boolean boolean40 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass39);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean43 = typeCircularBuffer42.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass46 = typeCircularBuffer45.getClass();
        boolean boolean47 = typeCircularBuffer42.put((java.lang.reflect.Type) wildcardClass46);
        java.lang.Class<?> wildcardClass48 = typeCircularBuffer42.getClass();
        boolean boolean49 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass48);
        boolean boolean50 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass48);
        boolean boolean51 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass48);
        boolean boolean52 = typeCircularBuffer1.isEmpty();
        boolean boolean53 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer55 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean56 = typeCircularBuffer55.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer58 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass59 = typeCircularBuffer58.getClass();
        boolean boolean60 = typeCircularBuffer55.put((java.lang.reflect.Type) wildcardClass59);
        boolean boolean61 = typeCircularBuffer55.isFull();
        java.lang.reflect.Type type62 = typeCircularBuffer55.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer64 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass65 = typeCircularBuffer64.getClass();
        boolean boolean66 = typeCircularBuffer55.put((java.lang.reflect.Type) wildcardClass65);
        boolean boolean67 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass65);
        java.lang.reflect.Type type68 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(type68);
    }

    @Test
    public void test1040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1040");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        boolean boolean6 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertNull(type9);
    }

    @Test
    public void test1041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1041");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        boolean boolean8 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        java.lang.reflect.Type type10 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test1042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1042");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type10 = typeCircularBuffer9.get();
        boolean boolean11 = typeCircularBuffer9.isFull();
        boolean boolean12 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer14.getClass();
        boolean boolean20 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass19);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        boolean boolean26 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer22.getClass();
        boolean boolean28 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass27);
        java.lang.reflect.Type type30 = typeCircularBuffer1.get();
        java.lang.reflect.Type type31 = typeCircularBuffer1.get();
        boolean boolean32 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        boolean boolean35 = typeCircularBuffer34.isEmpty();
        boolean boolean36 = typeCircularBuffer34.isEmpty();
        boolean boolean37 = typeCircularBuffer34.isFull();
        java.lang.reflect.Type type38 = typeCircularBuffer34.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean41 = typeCircularBuffer40.isFull();
        java.lang.reflect.Type type42 = typeCircularBuffer40.get();
        boolean boolean43 = typeCircularBuffer40.isFull();
        boolean boolean44 = typeCircularBuffer40.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean47 = typeCircularBuffer46.isEmpty();
        java.lang.reflect.Type type48 = typeCircularBuffer46.get();
        java.lang.reflect.Type type49 = typeCircularBuffer46.get();
        java.lang.reflect.Type type50 = typeCircularBuffer46.get();
        boolean boolean51 = typeCircularBuffer46.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer53 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean54 = typeCircularBuffer53.isFull();
        java.lang.reflect.Type type55 = typeCircularBuffer53.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer57 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean58 = typeCircularBuffer57.isEmpty();
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        boolean boolean61 = typeCircularBuffer57.put((java.lang.reflect.Type) wildcardClass60);
        java.lang.Class<?> wildcardClass62 = typeCircularBuffer57.getClass();
        boolean boolean63 = typeCircularBuffer53.put((java.lang.reflect.Type) wildcardClass62);
        boolean boolean64 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass62);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer66 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '#');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer68 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer70 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean71 = typeCircularBuffer70.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer73 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass74 = typeCircularBuffer73.getClass();
        boolean boolean75 = typeCircularBuffer70.put((java.lang.reflect.Type) wildcardClass74);
        java.lang.reflect.Type type76 = typeCircularBuffer70.get();
        boolean boolean77 = typeCircularBuffer68.put(type76);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer79 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer81 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean82 = typeCircularBuffer81.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer84 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass85 = typeCircularBuffer84.getClass();
        boolean boolean86 = typeCircularBuffer81.put((java.lang.reflect.Type) wildcardClass85);
        java.lang.reflect.Type type87 = typeCircularBuffer81.get();
        boolean boolean88 = typeCircularBuffer79.put(type87);
        java.lang.Class<?> wildcardClass89 = typeCircularBuffer79.getClass();
        boolean boolean90 = typeCircularBuffer68.put((java.lang.reflect.Type) wildcardClass89);
        boolean boolean91 = typeCircularBuffer66.put((java.lang.reflect.Type) wildcardClass89);
        boolean boolean92 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass89);
        boolean boolean93 = typeCircularBuffer40.put((java.lang.reflect.Type) wildcardClass89);
        java.lang.reflect.Type type94 = typeCircularBuffer40.get();
        boolean boolean95 = typeCircularBuffer34.put(type94);
        java.lang.Class<?> wildcardClass96 = typeCircularBuffer34.getClass();
        boolean boolean97 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass96);
        java.lang.Class<?> wildcardClass98 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNull(type31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(type38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(type42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(type48);
        org.junit.Assert.assertNull(type49);
        org.junit.Assert.assertNull(type50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(type55);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(type87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertNotNull(type94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test1043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1043");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        java.lang.reflect.Type type11 = typeCircularBuffer1.get();
        java.lang.reflect.Type type12 = typeCircularBuffer1.get();
        boolean boolean13 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type14 = typeCircularBuffer1.get();
        java.lang.reflect.Type type15 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(type14);
        org.junit.Assert.assertNull(type15);
    }

    @Test
    public void test1044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1044");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type4 = typeCircularBuffer3.get();
        boolean boolean5 = typeCircularBuffer3.isFull();
        boolean boolean6 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean9 = typeCircularBuffer8.isEmpty();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer8.getClass();
        boolean boolean14 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass13);
        boolean boolean15 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean18 = typeCircularBuffer17.isFull();
        boolean boolean19 = typeCircularBuffer17.isEmpty();
        java.lang.reflect.Type type20 = typeCircularBuffer17.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean25 = typeCircularBuffer24.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer27.getClass();
        boolean boolean29 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.reflect.Type type30 = typeCircularBuffer24.get();
        boolean boolean31 = typeCircularBuffer22.put(type30);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer22.getClass();
        boolean boolean33 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean35 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean36 = typeCircularBuffer1.isFull();
        boolean boolean37 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean40 = typeCircularBuffer39.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass43 = typeCircularBuffer42.getClass();
        boolean boolean44 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass43);
        java.lang.reflect.Type type45 = typeCircularBuffer39.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type48 = typeCircularBuffer47.get();
        boolean boolean49 = typeCircularBuffer47.isFull();
        boolean boolean50 = typeCircularBuffer47.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer52 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean53 = typeCircularBuffer52.isEmpty();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        boolean boolean56 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass55);
        java.lang.Class<?> wildcardClass57 = typeCircularBuffer52.getClass();
        boolean boolean58 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass57);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer60 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean61 = typeCircularBuffer60.isEmpty();
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        boolean boolean64 = typeCircularBuffer60.put((java.lang.reflect.Type) wildcardClass63);
        java.lang.Class<?> wildcardClass65 = typeCircularBuffer60.getClass();
        boolean boolean66 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass65);
        boolean boolean67 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass65);
        java.lang.reflect.Type type68 = typeCircularBuffer39.get();
        boolean boolean69 = typeCircularBuffer1.put(type68);
        java.lang.reflect.Type type70 = typeCircularBuffer1.get();
        boolean boolean71 = typeCircularBuffer1.isFull();
        boolean boolean72 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type73 = typeCircularBuffer1.get();
        java.lang.reflect.Type type74 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(type20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNull(type48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(type70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNull(type73);
        org.junit.Assert.assertNull(type74);
    }

    @Test
    public void test1045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1045");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer6.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.reflect.Type type13 = typeCircularBuffer1.get();
        boolean boolean14 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type17 = typeCircularBuffer16.get();
        boolean boolean18 = typeCircularBuffer16.isFull();
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer16.getClass();
        boolean boolean20 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass19);
        java.lang.reflect.Type type21 = typeCircularBuffer1.get();
        java.lang.reflect.Type type22 = typeCircularBuffer1.get();
        boolean boolean23 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type24 = typeCircularBuffer1.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass25 = type24.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(type17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNull(type22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(type24);
    }

    @Test
    public void test1046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1046");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type12 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        boolean boolean19 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass17);
        boolean boolean20 = typeCircularBuffer1.isEmpty();
        boolean boolean21 = typeCircularBuffer1.isEmpty();
        boolean boolean22 = typeCircularBuffer1.isEmpty();
        boolean boolean23 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean28 = typeCircularBuffer27.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass31 = typeCircularBuffer30.getClass();
        boolean boolean32 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass31);
        java.lang.reflect.Type type33 = typeCircularBuffer27.get();
        boolean boolean34 = typeCircularBuffer25.put(type33);
        boolean boolean35 = typeCircularBuffer25.isEmpty();
        boolean boolean36 = typeCircularBuffer25.isFull();
        boolean boolean37 = typeCircularBuffer25.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean40 = typeCircularBuffer39.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass43 = typeCircularBuffer42.getClass();
        boolean boolean44 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass43);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean49 = typeCircularBuffer48.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass52 = typeCircularBuffer51.getClass();
        boolean boolean53 = typeCircularBuffer48.put((java.lang.reflect.Type) wildcardClass52);
        java.lang.reflect.Type type54 = typeCircularBuffer48.get();
        boolean boolean55 = typeCircularBuffer46.put(type54);
        boolean boolean56 = typeCircularBuffer46.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer58 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean59 = typeCircularBuffer58.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer61 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass62 = typeCircularBuffer61.getClass();
        boolean boolean63 = typeCircularBuffer58.put((java.lang.reflect.Type) wildcardClass62);
        java.lang.reflect.Type type64 = typeCircularBuffer58.get();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        boolean boolean67 = typeCircularBuffer58.put((java.lang.reflect.Type) wildcardClass66);
        boolean boolean68 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass66);
        boolean boolean69 = typeCircularBuffer46.isEmpty();
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        boolean boolean72 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass71);
        boolean boolean73 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass71);
        boolean boolean74 = typeCircularBuffer39.isEmpty();
        boolean boolean75 = typeCircularBuffer39.isEmpty();
        boolean boolean76 = typeCircularBuffer39.isEmpty();
        java.lang.Class<?> wildcardClass77 = typeCircularBuffer39.getClass();
        boolean boolean78 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass77);
        boolean boolean79 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass77);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer81 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean82 = typeCircularBuffer81.isFull();
        java.lang.reflect.Type type83 = typeCircularBuffer81.get();
        java.lang.reflect.Type type84 = typeCircularBuffer81.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer86 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean87 = typeCircularBuffer86.isFull();
        java.lang.reflect.Type type88 = typeCircularBuffer86.get();
        boolean boolean89 = typeCircularBuffer86.isEmpty();
        java.lang.Class<?> wildcardClass90 = typeCircularBuffer86.getClass();
        boolean boolean91 = typeCircularBuffer81.put((java.lang.reflect.Type) wildcardClass90);
        boolean boolean92 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass90);
        boolean boolean93 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass94 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNull(type83);
        org.junit.Assert.assertNull(type84);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNull(type88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1047");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean12 = typeCircularBuffer11.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass15 = typeCircularBuffer14.getClass();
        boolean boolean16 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass15);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean21 = typeCircularBuffer20.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer23.getClass();
        boolean boolean25 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass24);
        java.lang.reflect.Type type26 = typeCircularBuffer20.get();
        boolean boolean27 = typeCircularBuffer18.put(type26);
        boolean boolean28 = typeCircularBuffer18.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean31 = typeCircularBuffer30.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass34 = typeCircularBuffer33.getClass();
        boolean boolean35 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass34);
        java.lang.reflect.Type type36 = typeCircularBuffer30.get();
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        boolean boolean39 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass38);
        boolean boolean40 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass38);
        boolean boolean41 = typeCircularBuffer18.isEmpty();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        boolean boolean44 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass43);
        boolean boolean45 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass43);
        boolean boolean46 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass43);
        boolean boolean47 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer49 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 1);
        java.lang.reflect.Type type50 = typeCircularBuffer49.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer52 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean53 = typeCircularBuffer52.isFull();
        boolean boolean54 = typeCircularBuffer52.isEmpty();
        java.lang.reflect.Type type55 = typeCircularBuffer52.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer57 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer59 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean60 = typeCircularBuffer59.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer62 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass63 = typeCircularBuffer62.getClass();
        boolean boolean64 = typeCircularBuffer59.put((java.lang.reflect.Type) wildcardClass63);
        java.lang.reflect.Type type65 = typeCircularBuffer59.get();
        boolean boolean66 = typeCircularBuffer57.put(type65);
        java.lang.Class<?> wildcardClass67 = typeCircularBuffer57.getClass();
        boolean boolean68 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass67);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer70 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(10);
        java.lang.Class<?> wildcardClass71 = typeCircularBuffer70.getClass();
        boolean boolean72 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass71);
        boolean boolean73 = typeCircularBuffer49.put((java.lang.reflect.Type) wildcardClass71);
        boolean boolean74 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass71);
        java.lang.reflect.Type type75 = typeCircularBuffer1.get();
        boolean boolean76 = typeCircularBuffer1.isEmpty();
        boolean boolean77 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(type50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNull(type55);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
    }

    @Test
    public void test1048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1048");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        boolean boolean5 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        java.lang.reflect.Type type15 = typeCircularBuffer9.get();
        boolean boolean16 = typeCircularBuffer7.put(type15);
        boolean boolean17 = typeCircularBuffer7.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean20 = typeCircularBuffer19.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass23 = typeCircularBuffer22.getClass();
        boolean boolean24 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass23);
        java.lang.reflect.Type type25 = typeCircularBuffer19.get();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        boolean boolean28 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer7.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean30 = typeCircularBuffer7.isEmpty();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        boolean boolean33 = typeCircularBuffer7.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass32);
        java.lang.reflect.Type type35 = typeCircularBuffer1.get();
        boolean boolean36 = typeCircularBuffer1.isEmpty();
        boolean boolean37 = typeCircularBuffer1.isFull();
        boolean boolean38 = typeCircularBuffer1.isEmpty();
        boolean boolean39 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
    }

    @Test
    public void test1049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1049");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '#');
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.GenericDeclaration> genericDeclarationCircularBuffer5 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.GenericDeclaration>((int) (byte) 1);
        java.lang.Class<?> wildcardClass6 = genericDeclarationCircularBuffer5.getClass();
        boolean boolean7 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass6);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        boolean boolean11 = typeCircularBuffer9.isFull();
        boolean boolean12 = typeCircularBuffer9.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type15 = typeCircularBuffer14.get();
        boolean boolean16 = typeCircularBuffer14.isFull();
        boolean boolean17 = typeCircularBuffer14.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean20 = typeCircularBuffer19.isEmpty();
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        boolean boolean23 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass22);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer19.getClass();
        boolean boolean25 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass24);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean28 = typeCircularBuffer27.isEmpty();
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        boolean boolean31 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass30);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer27.getClass();
        boolean boolean33 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass32);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean38 = typeCircularBuffer37.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass41 = typeCircularBuffer40.getClass();
        boolean boolean42 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass41);
        java.lang.reflect.Type type43 = typeCircularBuffer37.get();
        boolean boolean44 = typeCircularBuffer35.put(type43);
        java.lang.Class<?> wildcardClass45 = typeCircularBuffer35.getClass();
        boolean boolean46 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass45);
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer14.getClass();
        boolean boolean48 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass47);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type51 = typeCircularBuffer50.get();
        boolean boolean52 = typeCircularBuffer50.isFull();
        boolean boolean53 = typeCircularBuffer50.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer55 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean56 = typeCircularBuffer55.isEmpty();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        boolean boolean59 = typeCircularBuffer55.put((java.lang.reflect.Type) wildcardClass58);
        java.lang.Class<?> wildcardClass60 = typeCircularBuffer55.getClass();
        boolean boolean61 = typeCircularBuffer50.put((java.lang.reflect.Type) wildcardClass60);
        java.lang.reflect.Type type62 = typeCircularBuffer50.get();
        boolean boolean63 = typeCircularBuffer50.isFull();
        java.lang.Class<?> wildcardClass64 = typeCircularBuffer50.getClass();
        boolean boolean65 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass64);
        boolean boolean66 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(type15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(type51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
    }

    @Test
    public void test1050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1050");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean9 = typeCircularBuffer8.isEmpty();
        boolean boolean10 = typeCircularBuffer8.isEmpty();
        boolean boolean11 = typeCircularBuffer8.isEmpty();
        boolean boolean12 = typeCircularBuffer8.isEmpty();
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer8.getClass();
        boolean boolean14 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass13);
        boolean boolean15 = typeCircularBuffer1.isFull();
        boolean boolean16 = typeCircularBuffer1.isFull();
        boolean boolean17 = typeCircularBuffer1.isFull();
        boolean boolean18 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type19 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(type19);
    }

    @Test
    public void test1051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1051");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean9 = typeCircularBuffer8.isFull();
        java.lang.reflect.Type type10 = typeCircularBuffer8.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean13 = typeCircularBuffer12.isEmpty();
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        boolean boolean16 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass15);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer12.getClass();
        boolean boolean18 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass17);
        boolean boolean19 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type20 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass26 = typeCircularBuffer25.getClass();
        boolean boolean27 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass26);
        java.lang.reflect.Type type28 = typeCircularBuffer22.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type31 = typeCircularBuffer30.get();
        boolean boolean32 = typeCircularBuffer30.isFull();
        boolean boolean33 = typeCircularBuffer30.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean36 = typeCircularBuffer35.isEmpty();
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        boolean boolean39 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass38);
        java.lang.Class<?> wildcardClass40 = typeCircularBuffer35.getClass();
        boolean boolean41 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass40);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        boolean boolean47 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass46);
        java.lang.Class<?> wildcardClass48 = typeCircularBuffer43.getClass();
        boolean boolean49 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass48);
        boolean boolean50 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass48);
        java.lang.reflect.Type type51 = typeCircularBuffer22.get();
        java.lang.reflect.Type type52 = typeCircularBuffer22.get();
        boolean boolean53 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer55 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass56 = typeCircularBuffer55.getClass();
        boolean boolean57 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass56);
        boolean boolean58 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass56);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer60 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean61 = typeCircularBuffer60.isFull();
        boolean boolean62 = typeCircularBuffer60.isEmpty();
        java.lang.reflect.Type type63 = typeCircularBuffer60.get();
        boolean boolean64 = typeCircularBuffer60.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer66 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        boolean boolean67 = typeCircularBuffer66.isEmpty();
        java.lang.Class<?> wildcardClass68 = typeCircularBuffer66.getClass();
        boolean boolean69 = typeCircularBuffer60.put((java.lang.reflect.Type) wildcardClass68);
        boolean boolean70 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass68);
        java.lang.Class<?> wildcardClass71 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNull(type31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNull(type52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNull(type63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test1052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1052");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        java.lang.reflect.Type type10 = typeCircularBuffer1.get();
        java.lang.reflect.Type type11 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.AnnotatedElement> annotatedElementCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.AnnotatedElement>(0);
        java.lang.Class<?> wildcardClass14 = annotatedElementCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertNull(type11);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
    }

    @Test
    public void test1053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1053");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type12 = typeCircularBuffer1.get();
        boolean boolean13 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type14 = typeCircularBuffer1.get();
        java.lang.reflect.Type type15 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean20 = typeCircularBuffer19.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass23 = typeCircularBuffer22.getClass();
        boolean boolean24 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass23);
        java.lang.reflect.Type type25 = typeCircularBuffer19.get();
        boolean boolean26 = typeCircularBuffer17.put(type25);
        boolean boolean27 = typeCircularBuffer17.isEmpty();
        boolean boolean28 = typeCircularBuffer17.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean31 = typeCircularBuffer30.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass34 = typeCircularBuffer33.getClass();
        boolean boolean35 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass34);
        java.lang.reflect.Type type36 = typeCircularBuffer30.get();
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        boolean boolean39 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass38);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean42 = typeCircularBuffer41.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass45 = typeCircularBuffer44.getClass();
        boolean boolean46 = typeCircularBuffer41.put((java.lang.reflect.Type) wildcardClass45);
        java.lang.reflect.Type type47 = typeCircularBuffer41.get();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        boolean boolean50 = typeCircularBuffer41.put((java.lang.reflect.Type) wildcardClass49);
        java.lang.reflect.Type type51 = typeCircularBuffer41.get();
        boolean boolean52 = typeCircularBuffer30.put(type51);
        boolean boolean53 = typeCircularBuffer17.put(type51);
        boolean boolean54 = typeCircularBuffer17.isEmpty();
        java.lang.reflect.Type type55 = typeCircularBuffer17.get();
        boolean boolean56 = typeCircularBuffer1.put(type55);
        boolean boolean57 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type58 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass59 = type58.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(type14);
        org.junit.Assert.assertNull(type15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test1054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1054");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type4 = typeCircularBuffer3.get();
        boolean boolean5 = typeCircularBuffer3.isFull();
        boolean boolean6 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean9 = typeCircularBuffer8.isEmpty();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer8.getClass();
        boolean boolean14 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass13);
        boolean boolean15 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean18 = typeCircularBuffer17.isFull();
        boolean boolean19 = typeCircularBuffer17.isEmpty();
        java.lang.reflect.Type type20 = typeCircularBuffer17.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean25 = typeCircularBuffer24.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer27.getClass();
        boolean boolean29 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.reflect.Type type30 = typeCircularBuffer24.get();
        boolean boolean31 = typeCircularBuffer22.put(type30);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer22.getClass();
        boolean boolean33 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean35 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean36 = typeCircularBuffer1.isFull();
        boolean boolean37 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean42 = typeCircularBuffer41.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass45 = typeCircularBuffer44.getClass();
        boolean boolean46 = typeCircularBuffer41.put((java.lang.reflect.Type) wildcardClass45);
        java.lang.reflect.Type type47 = typeCircularBuffer41.get();
        boolean boolean48 = typeCircularBuffer39.put(type47);
        java.lang.reflect.Type type49 = typeCircularBuffer39.get();
        boolean boolean50 = typeCircularBuffer39.isFull();
        boolean boolean51 = typeCircularBuffer39.isEmpty();
        java.lang.Class<?> wildcardClass52 = typeCircularBuffer39.getClass();
        boolean boolean53 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass52);
        boolean boolean54 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(type20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
    }

    @Test
    public void test1055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1055");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer5 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean6 = typeCircularBuffer5.isEmpty();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = typeCircularBuffer5.put((java.lang.reflect.Type) wildcardClass8);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer5.getClass();
        boolean boolean11 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass10);
        boolean boolean12 = typeCircularBuffer1.isEmpty();
        boolean boolean13 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type14 = typeCircularBuffer1.get();
        java.lang.reflect.Type type15 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        java.lang.reflect.Type type19 = typeCircularBuffer17.get();
        java.lang.reflect.Type type20 = typeCircularBuffer17.get();
        java.lang.reflect.Type type21 = typeCircularBuffer17.get();
        boolean boolean22 = typeCircularBuffer17.isFull();
        boolean boolean23 = typeCircularBuffer17.isFull();
        java.lang.reflect.Type type24 = typeCircularBuffer17.get();
        boolean boolean25 = typeCircularBuffer17.isFull();
        java.lang.Class<?> wildcardClass26 = typeCircularBuffer17.getClass();
        boolean boolean27 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass26);
        boolean boolean28 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass29 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNull(type15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(type19);
        org.junit.Assert.assertNull(type20);
        org.junit.Assert.assertNull(type21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test1056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1056");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        java.lang.reflect.Type type11 = typeCircularBuffer1.get();
        java.lang.reflect.Type type12 = typeCircularBuffer1.get();
        boolean boolean13 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test1057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1057");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        boolean boolean5 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        java.lang.reflect.Type type15 = typeCircularBuffer9.get();
        boolean boolean16 = typeCircularBuffer7.put(type15);
        boolean boolean17 = typeCircularBuffer7.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean20 = typeCircularBuffer19.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass23 = typeCircularBuffer22.getClass();
        boolean boolean24 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass23);
        java.lang.reflect.Type type25 = typeCircularBuffer19.get();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        boolean boolean28 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer7.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean30 = typeCircularBuffer7.isEmpty();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        boolean boolean33 = typeCircularBuffer7.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean35 = typeCircularBuffer1.isFull();
        boolean boolean36 = typeCircularBuffer1.isFull();
        boolean boolean37 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test1058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1058");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        boolean boolean8 = typeCircularBuffer1.isEmpty();
        boolean boolean9 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test1059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1059");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer6.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean15 = typeCircularBuffer14.isFull();
        java.lang.reflect.Type type16 = typeCircularBuffer14.get();
        boolean boolean17 = typeCircularBuffer14.isEmpty();
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer14.getClass();
        boolean boolean19 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass18);
        boolean boolean20 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type21 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(type21);
    }

    @Test
    public void test1060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1060");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        boolean boolean8 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass9 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1061");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        boolean boolean5 = typeCircularBuffer1.isFull();
        boolean boolean6 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type9 = typeCircularBuffer8.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        boolean boolean20 = typeCircularBuffer11.put(type19);
        boolean boolean21 = typeCircularBuffer11.isFull();
        java.lang.reflect.Type type22 = typeCircularBuffer11.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean25 = typeCircularBuffer24.isEmpty();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        boolean boolean28 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean30 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass27);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 0);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer34.getClass();
        boolean boolean36 = typeCircularBuffer32.put((java.lang.reflect.Type) wildcardClass35);
        boolean boolean37 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass35);
        boolean boolean38 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass35);
        java.lang.reflect.Type type39 = null;
        boolean boolean40 = typeCircularBuffer1.put(type39);
        java.lang.reflect.Type type41 = null;
        boolean boolean42 = typeCircularBuffer1.put(type41);
        boolean boolean43 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean46 = typeCircularBuffer45.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass49 = typeCircularBuffer48.getClass();
        boolean boolean50 = typeCircularBuffer45.put((java.lang.reflect.Type) wildcardClass49);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer52 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer54 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean55 = typeCircularBuffer54.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer57 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass58 = typeCircularBuffer57.getClass();
        boolean boolean59 = typeCircularBuffer54.put((java.lang.reflect.Type) wildcardClass58);
        java.lang.reflect.Type type60 = typeCircularBuffer54.get();
        boolean boolean61 = typeCircularBuffer52.put(type60);
        boolean boolean62 = typeCircularBuffer52.isFull();
        java.lang.reflect.Type type63 = typeCircularBuffer52.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer65 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean66 = typeCircularBuffer65.isEmpty();
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        boolean boolean69 = typeCircularBuffer65.put((java.lang.reflect.Type) wildcardClass68);
        boolean boolean70 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass68);
        boolean boolean71 = typeCircularBuffer45.put((java.lang.reflect.Type) wildcardClass68);
        boolean boolean72 = typeCircularBuffer45.isFull();
        java.lang.reflect.Type type73 = typeCircularBuffer45.get();
        java.lang.Class<?> wildcardClass74 = typeCircularBuffer45.getClass();
        boolean boolean75 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass74);
        java.lang.reflect.Type type76 = typeCircularBuffer1.get();
        java.lang.reflect.Type type77 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertNull(type77);
    }

    @Test
    public void test1062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1062");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) 'a');
        boolean boolean7 = typeCircularBuffer6.isFull();
        java.lang.Class<?> wildcardClass8 = typeCircularBuffer6.getClass();
        boolean boolean9 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass8);
        boolean boolean10 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test1063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1063");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type10 = typeCircularBuffer9.get();
        boolean boolean11 = typeCircularBuffer9.isFull();
        boolean boolean12 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer14.getClass();
        boolean boolean20 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass19);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        boolean boolean26 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer22.getClass();
        boolean boolean28 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass27);
        java.lang.reflect.Type type30 = typeCircularBuffer1.get();
        java.lang.reflect.Type type31 = typeCircularBuffer1.get();
        boolean boolean32 = typeCircularBuffer1.isFull();
        boolean boolean33 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNull(type31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    }

    @Test
    public void test1064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1064");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        boolean boolean8 = typeCircularBuffer1.isEmpty();
        boolean boolean9 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type12 = typeCircularBuffer11.get();
        boolean boolean13 = typeCircularBuffer11.isFull();
        boolean boolean14 = typeCircularBuffer11.isFull();
        boolean boolean15 = typeCircularBuffer11.isFull();
        boolean boolean16 = typeCircularBuffer11.isFull();
        boolean boolean17 = typeCircularBuffer11.isFull();
        boolean boolean18 = typeCircularBuffer11.isEmpty();
        java.lang.reflect.Type type19 = typeCircularBuffer11.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean22 = typeCircularBuffer21.isEmpty();
        java.lang.reflect.Type type23 = typeCircularBuffer21.get();
        boolean boolean24 = typeCircularBuffer21.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type27 = typeCircularBuffer26.get();
        boolean boolean28 = typeCircularBuffer26.isFull();
        boolean boolean29 = typeCircularBuffer26.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        boolean boolean35 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass34);
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer31.getClass();
        boolean boolean37 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass36);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean40 = typeCircularBuffer39.isEmpty();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        boolean boolean43 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass42);
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer39.getClass();
        boolean boolean45 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean46 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean47 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean48 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean49 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass50 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(type19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test1065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1065");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean24 = typeCircularBuffer1.isEmpty();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        boolean boolean27 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass26);
        java.lang.reflect.Type type28 = typeCircularBuffer1.get();
        boolean boolean29 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass30 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test1066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1066");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        boolean boolean9 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean12 = typeCircularBuffer11.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer19.getClass();
        boolean boolean21 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type22 = typeCircularBuffer16.get();
        boolean boolean23 = typeCircularBuffer14.put(type22);
        boolean boolean24 = typeCircularBuffer14.isFull();
        java.lang.reflect.Type type25 = typeCircularBuffer14.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type28 = typeCircularBuffer27.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean31 = typeCircularBuffer30.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass34 = typeCircularBuffer33.getClass();
        boolean boolean35 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass34);
        java.lang.reflect.Type type36 = typeCircularBuffer30.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type39 = typeCircularBuffer38.get();
        boolean boolean40 = typeCircularBuffer38.isFull();
        boolean boolean41 = typeCircularBuffer38.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        boolean boolean47 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass46);
        java.lang.Class<?> wildcardClass48 = typeCircularBuffer43.getClass();
        boolean boolean49 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass48);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean52 = typeCircularBuffer51.isEmpty();
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        boolean boolean55 = typeCircularBuffer51.put((java.lang.reflect.Type) wildcardClass54);
        java.lang.Class<?> wildcardClass56 = typeCircularBuffer51.getClass();
        boolean boolean57 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass56);
        boolean boolean58 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass56);
        boolean boolean59 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass56);
        boolean boolean60 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass56);
        boolean boolean61 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass56);
        boolean boolean62 = typeCircularBuffer11.isEmpty();
        java.lang.Class<?> wildcardClass63 = typeCircularBuffer11.getClass();
        boolean boolean64 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass63);
        boolean boolean65 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type66 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNull(type28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNull(type39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(type66);
    }

    @Test
    public void test1067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1067");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean9 = typeCircularBuffer8.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass12 = typeCircularBuffer11.getClass();
        boolean boolean13 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass12);
        java.lang.reflect.Type type14 = typeCircularBuffer8.get();
        boolean boolean15 = typeCircularBuffer6.put(type14);
        java.lang.Class<?> wildcardClass16 = typeCircularBuffer6.getClass();
        boolean boolean17 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass16);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type20 = typeCircularBuffer19.get();
        boolean boolean21 = typeCircularBuffer19.isFull();
        boolean boolean22 = typeCircularBuffer19.isFull();
        boolean boolean23 = typeCircularBuffer19.isFull();
        java.lang.reflect.Type type24 = typeCircularBuffer19.get();
        boolean boolean25 = typeCircularBuffer19.isEmpty();
        java.lang.reflect.Type type26 = typeCircularBuffer19.get();
        java.lang.reflect.Type type27 = typeCircularBuffer19.get();
        boolean boolean28 = typeCircularBuffer19.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean33 = typeCircularBuffer32.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer35.getClass();
        boolean boolean37 = typeCircularBuffer32.put((java.lang.reflect.Type) wildcardClass36);
        java.lang.reflect.Type type38 = typeCircularBuffer32.get();
        boolean boolean39 = typeCircularBuffer30.put(type38);
        boolean boolean40 = typeCircularBuffer30.isFull();
        java.lang.reflect.Type type41 = typeCircularBuffer30.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        boolean boolean47 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass46);
        boolean boolean48 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass46);
        boolean boolean49 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass46);
        java.lang.Class<?> wildcardClass50 = typeCircularBuffer19.getClass();
        boolean boolean51 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass50);
        java.lang.reflect.Type type52 = typeCircularBuffer1.get();
        java.lang.reflect.Type type53 = typeCircularBuffer1.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass54 = type53.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(type20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(type26);
        org.junit.Assert.assertNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(type52);
        org.junit.Assert.assertNull(type53);
    }

    @Test
    public void test1068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1068");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>((int) ' ');
    }

    @Test
    public void test1069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1069");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        java.lang.reflect.Type type12 = typeCircularBuffer6.get();
        boolean boolean13 = typeCircularBuffer4.put(type12);
        boolean boolean14 = typeCircularBuffer4.isFull();
        java.lang.reflect.Type type15 = typeCircularBuffer4.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        boolean boolean21 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean22 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean24 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type25 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean30 = typeCircularBuffer29.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass33 = typeCircularBuffer32.getClass();
        boolean boolean34 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass33);
        java.lang.reflect.Type type35 = typeCircularBuffer29.get();
        boolean boolean36 = typeCircularBuffer27.put(type35);
        boolean boolean37 = typeCircularBuffer27.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean40 = typeCircularBuffer39.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass43 = typeCircularBuffer42.getClass();
        boolean boolean44 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass43);
        java.lang.reflect.Type type45 = typeCircularBuffer39.get();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        boolean boolean48 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass47);
        boolean boolean49 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass47);
        boolean boolean50 = typeCircularBuffer27.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer52 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type53 = typeCircularBuffer52.get();
        boolean boolean54 = typeCircularBuffer52.isFull();
        boolean boolean55 = typeCircularBuffer52.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer57 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean58 = typeCircularBuffer57.isEmpty();
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        boolean boolean61 = typeCircularBuffer57.put((java.lang.reflect.Type) wildcardClass60);
        java.lang.Class<?> wildcardClass62 = typeCircularBuffer57.getClass();
        boolean boolean63 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass62);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer65 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean66 = typeCircularBuffer65.isEmpty();
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        boolean boolean69 = typeCircularBuffer65.put((java.lang.reflect.Type) wildcardClass68);
        java.lang.Class<?> wildcardClass70 = typeCircularBuffer65.getClass();
        boolean boolean71 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass70);
        boolean boolean72 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass70);
        java.lang.reflect.Type type73 = typeCircularBuffer27.get();
        boolean boolean74 = typeCircularBuffer1.put(type73);
        boolean boolean75 = typeCircularBuffer1.isEmpty();
        boolean boolean76 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(type53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test1070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1070");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.io.Serializable> serializableCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.io.Serializable>((int) ' ');
        java.lang.Class<?> wildcardClass2 = serializableCircularBuffer1.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test1071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1071");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        java.lang.reflect.Type type15 = typeCircularBuffer9.get();
        boolean boolean16 = typeCircularBuffer7.put(type15);
        boolean boolean17 = typeCircularBuffer7.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean20 = typeCircularBuffer19.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass23 = typeCircularBuffer22.getClass();
        boolean boolean24 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass23);
        java.lang.reflect.Type type25 = typeCircularBuffer19.get();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        boolean boolean28 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer7.put((java.lang.reflect.Type) wildcardClass27);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer34.getClass();
        boolean boolean36 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass35);
        java.lang.reflect.Type type37 = typeCircularBuffer31.get();
        boolean boolean38 = typeCircularBuffer7.put(type37);
        java.lang.reflect.Type type39 = typeCircularBuffer7.get();
        boolean boolean40 = typeCircularBuffer1.put(type39);
        boolean boolean41 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type42 = typeCircularBuffer1.get();
        boolean boolean43 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test1072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1072");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        boolean boolean9 = typeCircularBuffer1.isEmpty();
        boolean boolean10 = typeCircularBuffer1.isFull();
        boolean boolean11 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type14 = typeCircularBuffer13.get();
        boolean boolean15 = typeCircularBuffer13.isFull();
        boolean boolean16 = typeCircularBuffer13.isEmpty();
        boolean boolean17 = typeCircularBuffer13.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer19.getClass();
        boolean boolean21 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass20);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean24 = typeCircularBuffer23.isFull();
        boolean boolean25 = typeCircularBuffer23.isEmpty();
        boolean boolean26 = typeCircularBuffer23.isFull();
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer23.getClass();
        boolean boolean28 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass27);
        java.lang.reflect.Type type29 = typeCircularBuffer13.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean34 = typeCircularBuffer33.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass37 = typeCircularBuffer36.getClass();
        boolean boolean38 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass37);
        java.lang.reflect.Type type39 = typeCircularBuffer33.get();
        boolean boolean40 = typeCircularBuffer31.put(type39);
        boolean boolean41 = typeCircularBuffer31.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer46.getClass();
        boolean boolean48 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass47);
        java.lang.reflect.Type type49 = typeCircularBuffer43.get();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        boolean boolean52 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean53 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass51);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer55 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean56 = typeCircularBuffer55.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer58 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass59 = typeCircularBuffer58.getClass();
        boolean boolean60 = typeCircularBuffer55.put((java.lang.reflect.Type) wildcardClass59);
        java.lang.reflect.Type type61 = typeCircularBuffer55.get();
        boolean boolean62 = typeCircularBuffer31.put(type61);
        java.lang.reflect.Type type63 = typeCircularBuffer31.get();
        boolean boolean64 = typeCircularBuffer13.put(type63);
        boolean boolean65 = typeCircularBuffer1.put(type63);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer67 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type68 = typeCircularBuffer67.get();
        boolean boolean69 = typeCircularBuffer67.isFull();
        boolean boolean70 = typeCircularBuffer67.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer72 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean73 = typeCircularBuffer72.isEmpty();
        java.lang.Object obj74 = new java.lang.Object();
        java.lang.Class<?> wildcardClass75 = obj74.getClass();
        boolean boolean76 = typeCircularBuffer72.put((java.lang.reflect.Type) wildcardClass75);
        java.lang.Class<?> wildcardClass77 = typeCircularBuffer72.getClass();
        boolean boolean78 = typeCircularBuffer67.put((java.lang.reflect.Type) wildcardClass77);
        java.lang.reflect.Type type79 = typeCircularBuffer67.get();
        java.lang.Class<?> wildcardClass80 = type79.getClass();
        boolean boolean81 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass80);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(type14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(type68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test1073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1073");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type24 = typeCircularBuffer1.get();
        boolean boolean25 = typeCircularBuffer1.isFull();
        boolean boolean26 = typeCircularBuffer1.isEmpty();
        boolean boolean27 = typeCircularBuffer1.isEmpty();
        boolean boolean28 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type29 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(type29);
    }

    @Test
    public void test1074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1074");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isFull();
        boolean boolean8 = typeCircularBuffer1.isEmpty();
        boolean boolean9 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test1075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1075");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isEmpty();
        boolean boolean12 = typeCircularBuffer1.isFull();
        boolean boolean13 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer20.getClass();
        boolean boolean22 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type23 = typeCircularBuffer17.get();
        boolean boolean24 = typeCircularBuffer15.put(type23);
        boolean boolean25 = typeCircularBuffer15.isFull();
        java.lang.reflect.Type type26 = typeCircularBuffer15.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer31.getClass();
        boolean boolean33 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer28.isFull();
        java.lang.reflect.Type type35 = typeCircularBuffer28.get();
        boolean boolean36 = typeCircularBuffer15.put(type35);
        boolean boolean37 = typeCircularBuffer1.put(type35);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean40 = typeCircularBuffer39.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass43 = typeCircularBuffer42.getClass();
        boolean boolean44 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass43);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean49 = typeCircularBuffer48.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass52 = typeCircularBuffer51.getClass();
        boolean boolean53 = typeCircularBuffer48.put((java.lang.reflect.Type) wildcardClass52);
        java.lang.reflect.Type type54 = typeCircularBuffer48.get();
        boolean boolean55 = typeCircularBuffer46.put(type54);
        boolean boolean56 = typeCircularBuffer46.isFull();
        java.lang.reflect.Type type57 = typeCircularBuffer46.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer59 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean60 = typeCircularBuffer59.isEmpty();
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        boolean boolean63 = typeCircularBuffer59.put((java.lang.reflect.Type) wildcardClass62);
        boolean boolean64 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass62);
        boolean boolean65 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass62);
        boolean boolean66 = typeCircularBuffer39.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer68 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean69 = typeCircularBuffer68.isFull();
        boolean boolean70 = typeCircularBuffer68.isEmpty();
        boolean boolean71 = typeCircularBuffer68.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer73 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean74 = typeCircularBuffer73.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer76 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass77 = typeCircularBuffer76.getClass();
        boolean boolean78 = typeCircularBuffer73.put((java.lang.reflect.Type) wildcardClass77);
        java.lang.reflect.Type type79 = typeCircularBuffer73.get();
        java.lang.Object obj80 = new java.lang.Object();
        java.lang.Class<?> wildcardClass81 = obj80.getClass();
        boolean boolean82 = typeCircularBuffer73.put((java.lang.reflect.Type) wildcardClass81);
        boolean boolean83 = typeCircularBuffer68.put((java.lang.reflect.Type) wildcardClass81);
        boolean boolean84 = typeCircularBuffer68.isFull();
        java.lang.reflect.Type type85 = typeCircularBuffer68.get();
        boolean boolean86 = typeCircularBuffer39.put(type85);
        boolean boolean87 = typeCircularBuffer1.put(type85);
        boolean boolean88 = typeCircularBuffer1.isFull();
        boolean boolean89 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer91 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean92 = typeCircularBuffer91.isFull();
        java.lang.Class<?> wildcardClass93 = typeCircularBuffer91.getClass();
        boolean boolean94 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass93);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(type85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test1076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1076");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        boolean boolean7 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 10);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) 'a');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer11.get();
        java.lang.reflect.Type type17 = typeCircularBuffer11.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type20 = typeCircularBuffer19.get();
        boolean boolean21 = typeCircularBuffer19.isFull();
        boolean boolean22 = typeCircularBuffer19.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean25 = typeCircularBuffer24.isEmpty();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        boolean boolean28 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass27);
        java.lang.Class<?> wildcardClass29 = typeCircularBuffer24.getClass();
        boolean boolean30 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass29);
        java.lang.reflect.Type type31 = typeCircularBuffer19.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean36 = typeCircularBuffer35.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass39 = typeCircularBuffer38.getClass();
        boolean boolean40 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass39);
        java.lang.reflect.Type type41 = typeCircularBuffer35.get();
        boolean boolean42 = typeCircularBuffer33.put(type41);
        boolean boolean43 = typeCircularBuffer19.put(type41);
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer19.getClass();
        boolean boolean45 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass44);
        java.lang.Class<?> wildcardClass46 = typeCircularBuffer11.getClass();
        boolean boolean47 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass46);
        boolean boolean48 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass46);
        java.lang.reflect.Type type49 = null;
        boolean boolean50 = typeCircularBuffer1.put(type49);
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNull(type17);
        org.junit.Assert.assertNull(type20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test1077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1077");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type10 = typeCircularBuffer9.get();
        boolean boolean11 = typeCircularBuffer9.isFull();
        boolean boolean12 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer14.getClass();
        boolean boolean20 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass19);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        boolean boolean26 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer22.getClass();
        boolean boolean28 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean30 = typeCircularBuffer1.isEmpty();
        boolean boolean31 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type32 = typeCircularBuffer1.get();
        java.lang.reflect.Type type33 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNull(type33);
    }

    @Test
    public void test1078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1078");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass10);
        boolean boolean13 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type14 = typeCircularBuffer1.get();
        boolean boolean15 = typeCircularBuffer1.isEmpty();
        boolean boolean16 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type17 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(type14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(type17);
    }

    @Test
    public void test1079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1079");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) ' ');
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test1080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1080");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type10 = typeCircularBuffer9.get();
        boolean boolean11 = typeCircularBuffer9.isFull();
        boolean boolean12 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer14.getClass();
        boolean boolean20 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass19);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        boolean boolean26 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer22.getClass();
        boolean boolean28 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass27);
        java.lang.reflect.Type type30 = typeCircularBuffer1.get();
        java.lang.reflect.Type type31 = typeCircularBuffer1.get();
        boolean boolean32 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer34.getClass();
        boolean boolean36 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass35);
        boolean boolean37 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean40 = typeCircularBuffer39.isFull();
        java.lang.reflect.Type type41 = typeCircularBuffer39.get();
        boolean boolean42 = typeCircularBuffer39.isFull();
        java.lang.reflect.Type type43 = typeCircularBuffer39.get();
        boolean boolean44 = typeCircularBuffer39.isFull();
        boolean boolean45 = typeCircularBuffer39.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean48 = typeCircularBuffer47.isFull();
        boolean boolean49 = typeCircularBuffer47.isEmpty();
        java.lang.reflect.Type type50 = typeCircularBuffer47.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer52 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer54 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean55 = typeCircularBuffer54.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer57 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass58 = typeCircularBuffer57.getClass();
        boolean boolean59 = typeCircularBuffer54.put((java.lang.reflect.Type) wildcardClass58);
        java.lang.reflect.Type type60 = typeCircularBuffer54.get();
        boolean boolean61 = typeCircularBuffer52.put(type60);
        java.lang.Class<?> wildcardClass62 = typeCircularBuffer52.getClass();
        boolean boolean63 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass62);
        boolean boolean64 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass62);
        boolean boolean65 = typeCircularBuffer39.isEmpty();
        boolean boolean66 = typeCircularBuffer39.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer68 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer70 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean71 = typeCircularBuffer70.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer73 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass74 = typeCircularBuffer73.getClass();
        boolean boolean75 = typeCircularBuffer70.put((java.lang.reflect.Type) wildcardClass74);
        java.lang.reflect.Type type76 = typeCircularBuffer70.get();
        boolean boolean77 = typeCircularBuffer68.put(type76);
        java.lang.reflect.Type type78 = typeCircularBuffer68.get();
        java.lang.reflect.Type type79 = null;
        boolean boolean80 = typeCircularBuffer68.put(type79);
        boolean boolean81 = typeCircularBuffer68.isEmpty();
        java.lang.Class<?> wildcardClass82 = typeCircularBuffer68.getClass();
        boolean boolean83 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass82);
        boolean boolean84 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass82);
        boolean boolean85 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNull(type31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(type41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(type43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(type50);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test1081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1081");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type10 = typeCircularBuffer9.get();
        boolean boolean11 = typeCircularBuffer9.isFull();
        boolean boolean12 = typeCircularBuffer9.isFull();
        boolean boolean13 = typeCircularBuffer9.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer20.getClass();
        boolean boolean22 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type23 = typeCircularBuffer17.get();
        boolean boolean24 = typeCircularBuffer15.put(type23);
        boolean boolean25 = typeCircularBuffer15.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean28 = typeCircularBuffer27.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass31 = typeCircularBuffer30.getClass();
        boolean boolean32 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass31);
        java.lang.reflect.Type type33 = typeCircularBuffer27.get();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        boolean boolean36 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass35);
        boolean boolean37 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass35);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean40 = typeCircularBuffer39.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass43 = typeCircularBuffer42.getClass();
        boolean boolean44 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass43);
        java.lang.reflect.Type type45 = typeCircularBuffer39.get();
        boolean boolean46 = typeCircularBuffer15.put(type45);
        java.lang.reflect.Type type47 = typeCircularBuffer15.get();
        boolean boolean48 = typeCircularBuffer9.put(type47);
        boolean boolean49 = typeCircularBuffer1.put(type47);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.invoke.TypeDescriptor> typeDescriptorCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.invoke.TypeDescriptor>(10);
        java.lang.Class<?> wildcardClass52 = typeDescriptorCircularBuffer51.getClass();
        boolean boolean53 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass52);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer55 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean56 = typeCircularBuffer55.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer58 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass59 = typeCircularBuffer58.getClass();
        boolean boolean60 = typeCircularBuffer55.put((java.lang.reflect.Type) wildcardClass59);
        boolean boolean61 = typeCircularBuffer55.isFull();
        boolean boolean62 = typeCircularBuffer55.isFull();
        boolean boolean63 = typeCircularBuffer55.isFull();
        java.lang.Class<?> wildcardClass64 = typeCircularBuffer55.getClass();
        boolean boolean65 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass64);
        java.lang.reflect.Type type66 = typeCircularBuffer1.get();
        boolean boolean67 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
    }

    @Test
    public void test1082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1082");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        boolean boolean5 = typeCircularBuffer1.isFull();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test1083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1083");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        java.lang.reflect.Type type11 = typeCircularBuffer1.get();
        java.lang.reflect.Type type12 = null;
        boolean boolean13 = typeCircularBuffer1.put(type12);
        boolean boolean14 = typeCircularBuffer1.isEmpty();
        boolean boolean15 = typeCircularBuffer1.isFull();
        boolean boolean16 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type17 = null;
        boolean boolean18 = typeCircularBuffer1.put(type17);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test1084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1084");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.Class<?> wildcardClass2 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test1085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1085");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer6.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        boolean boolean13 = typeCircularBuffer1.isFull();
        boolean boolean14 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        boolean boolean20 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass19);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean23 = typeCircularBuffer22.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type26 = typeCircularBuffer25.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean31 = typeCircularBuffer30.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass34 = typeCircularBuffer33.getClass();
        boolean boolean35 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass34);
        java.lang.reflect.Type type36 = typeCircularBuffer30.get();
        boolean boolean37 = typeCircularBuffer28.put(type36);
        boolean boolean38 = typeCircularBuffer28.isFull();
        java.lang.reflect.Type type39 = typeCircularBuffer28.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean42 = typeCircularBuffer41.isEmpty();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        boolean boolean45 = typeCircularBuffer41.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean46 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean47 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean48 = typeCircularBuffer25.isEmpty();
        java.lang.Class<?> wildcardClass49 = typeCircularBuffer25.getClass();
        boolean boolean50 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass49);
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer22.getClass();
        boolean boolean52 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass51);
        java.lang.Class<?> wildcardClass53 = typeCircularBuffer16.getClass();
        boolean boolean54 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass53);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer56 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean57 = typeCircularBuffer56.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer59 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass60 = typeCircularBuffer59.getClass();
        boolean boolean61 = typeCircularBuffer56.put((java.lang.reflect.Type) wildcardClass60);
        boolean boolean62 = typeCircularBuffer56.isFull();
        java.lang.reflect.Type type63 = typeCircularBuffer56.get();
        java.lang.Class<?> wildcardClass64 = type63.getClass();
        boolean boolean65 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass64);
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(type26);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test1086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1086");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type10 = typeCircularBuffer9.get();
        boolean boolean11 = typeCircularBuffer9.isFull();
        boolean boolean12 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer14.getClass();
        boolean boolean20 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass19);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        boolean boolean26 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer22.getClass();
        boolean boolean28 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass27);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean34 = typeCircularBuffer33.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass37 = typeCircularBuffer36.getClass();
        boolean boolean38 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass37);
        java.lang.reflect.Type type39 = typeCircularBuffer33.get();
        boolean boolean40 = typeCircularBuffer31.put(type39);
        boolean boolean41 = typeCircularBuffer31.isFull();
        java.lang.reflect.Type type42 = typeCircularBuffer31.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type45 = typeCircularBuffer44.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean48 = typeCircularBuffer47.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer50.getClass();
        boolean boolean52 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass51);
        java.lang.reflect.Type type53 = typeCircularBuffer47.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer55 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type56 = typeCircularBuffer55.get();
        boolean boolean57 = typeCircularBuffer55.isFull();
        boolean boolean58 = typeCircularBuffer55.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer60 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean61 = typeCircularBuffer60.isEmpty();
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        boolean boolean64 = typeCircularBuffer60.put((java.lang.reflect.Type) wildcardClass63);
        java.lang.Class<?> wildcardClass65 = typeCircularBuffer60.getClass();
        boolean boolean66 = typeCircularBuffer55.put((java.lang.reflect.Type) wildcardClass65);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer68 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean69 = typeCircularBuffer68.isEmpty();
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        boolean boolean72 = typeCircularBuffer68.put((java.lang.reflect.Type) wildcardClass71);
        java.lang.Class<?> wildcardClass73 = typeCircularBuffer68.getClass();
        boolean boolean74 = typeCircularBuffer55.put((java.lang.reflect.Type) wildcardClass73);
        boolean boolean75 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass73);
        boolean boolean76 = typeCircularBuffer44.put((java.lang.reflect.Type) wildcardClass73);
        boolean boolean77 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass73);
        boolean boolean78 = typeCircularBuffer31.isEmpty();
        java.lang.Class<?> wildcardClass79 = typeCircularBuffer31.getClass();
        boolean boolean80 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass79);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer82 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) ' ');
        boolean boolean83 = typeCircularBuffer82.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer85 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean86 = typeCircularBuffer85.isEmpty();
        java.lang.Object obj87 = new java.lang.Object();
        java.lang.Class<?> wildcardClass88 = obj87.getClass();
        boolean boolean89 = typeCircularBuffer85.put((java.lang.reflect.Type) wildcardClass88);
        java.lang.Class<?> wildcardClass90 = typeCircularBuffer85.getClass();
        boolean boolean91 = typeCircularBuffer82.put((java.lang.reflect.Type) wildcardClass90);
        java.lang.Class<?> wildcardClass92 = typeCircularBuffer82.getClass();
        boolean boolean93 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass92);
        java.lang.reflect.Type type94 = typeCircularBuffer1.get();
        java.lang.reflect.Type type95 = typeCircularBuffer1.get();
        boolean boolean96 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNull(type45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNull(type56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(type94);
        org.junit.Assert.assertNull(type95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
    }

    @Test
    public void test1087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1087");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass10);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer19.getClass();
        boolean boolean21 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type22 = typeCircularBuffer16.get();
        java.lang.Class<?> wildcardClass23 = typeCircularBuffer16.getClass();
        boolean boolean24 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass23);
        boolean boolean25 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass23);
        boolean boolean26 = typeCircularBuffer1.isFull();
        boolean boolean27 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test1088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1088");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean19 = typeCircularBuffer18.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer21.getClass();
        boolean boolean23 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass22);
        java.lang.reflect.Type type24 = typeCircularBuffer18.get();
        boolean boolean25 = typeCircularBuffer16.put(type24);
        boolean boolean26 = typeCircularBuffer16.isFull();
        java.lang.reflect.Type type27 = typeCircularBuffer16.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean30 = typeCircularBuffer29.isEmpty();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        boolean boolean33 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean35 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean36 = typeCircularBuffer9.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean39 = typeCircularBuffer38.isFull();
        boolean boolean40 = typeCircularBuffer38.isEmpty();
        boolean boolean41 = typeCircularBuffer38.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer46.getClass();
        boolean boolean48 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass47);
        java.lang.reflect.Type type49 = typeCircularBuffer43.get();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        boolean boolean52 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean53 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean54 = typeCircularBuffer38.isFull();
        java.lang.reflect.Type type55 = typeCircularBuffer38.get();
        boolean boolean56 = typeCircularBuffer9.put(type55);
        boolean boolean57 = typeCircularBuffer1.put(type55);
        boolean boolean58 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type59 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(type59);
    }

    @Test
    public void test1089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1089");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.AnnotatedElement> annotatedElementCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.AnnotatedElement>((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1090");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        java.lang.reflect.Type type12 = typeCircularBuffer6.get();
        boolean boolean13 = typeCircularBuffer4.put(type12);
        boolean boolean14 = typeCircularBuffer4.isFull();
        java.lang.reflect.Type type15 = typeCircularBuffer4.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        boolean boolean21 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean22 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type24 = typeCircularBuffer1.get();
        boolean boolean25 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type26 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer31.getClass();
        boolean boolean33 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass32);
        java.lang.reflect.Type type34 = typeCircularBuffer28.get();
        boolean boolean35 = typeCircularBuffer28.isFull();
        boolean boolean36 = typeCircularBuffer28.isFull();
        java.lang.reflect.Type type37 = typeCircularBuffer28.get();
        boolean boolean38 = typeCircularBuffer28.isFull();
        boolean boolean39 = typeCircularBuffer28.isEmpty();
        java.lang.Class<?> wildcardClass40 = typeCircularBuffer28.getClass();
        boolean boolean41 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass40);
        java.lang.reflect.Type type42 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass43 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(type26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(type37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test1091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1091");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        boolean boolean8 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        boolean boolean10 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type15 = typeCircularBuffer14.get();
        boolean boolean16 = typeCircularBuffer14.isFull();
        boolean boolean17 = typeCircularBuffer14.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean20 = typeCircularBuffer19.isEmpty();
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        boolean boolean23 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass22);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer19.getClass();
        boolean boolean25 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean26 = typeCircularBuffer14.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean29 = typeCircularBuffer28.isFull();
        boolean boolean30 = typeCircularBuffer28.isEmpty();
        java.lang.reflect.Type type31 = typeCircularBuffer28.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean36 = typeCircularBuffer35.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass39 = typeCircularBuffer38.getClass();
        boolean boolean40 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass39);
        java.lang.reflect.Type type41 = typeCircularBuffer35.get();
        boolean boolean42 = typeCircularBuffer33.put(type41);
        java.lang.Class<?> wildcardClass43 = typeCircularBuffer33.getClass();
        boolean boolean44 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass43);
        boolean boolean45 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass43);
        boolean boolean46 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass43);
        boolean boolean47 = typeCircularBuffer12.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer49 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean52 = typeCircularBuffer51.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer54 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass55 = typeCircularBuffer54.getClass();
        boolean boolean56 = typeCircularBuffer51.put((java.lang.reflect.Type) wildcardClass55);
        java.lang.reflect.Type type57 = typeCircularBuffer51.get();
        boolean boolean58 = typeCircularBuffer49.put(type57);
        boolean boolean59 = typeCircularBuffer49.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer61 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean62 = typeCircularBuffer61.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer64 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass65 = typeCircularBuffer64.getClass();
        boolean boolean66 = typeCircularBuffer61.put((java.lang.reflect.Type) wildcardClass65);
        java.lang.reflect.Type type67 = typeCircularBuffer61.get();
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        boolean boolean70 = typeCircularBuffer61.put((java.lang.reflect.Type) wildcardClass69);
        boolean boolean71 = typeCircularBuffer49.put((java.lang.reflect.Type) wildcardClass69);
        boolean boolean72 = typeCircularBuffer49.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer74 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type75 = typeCircularBuffer74.get();
        boolean boolean76 = typeCircularBuffer74.isFull();
        boolean boolean77 = typeCircularBuffer74.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer79 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean80 = typeCircularBuffer79.isEmpty();
        java.lang.Object obj81 = new java.lang.Object();
        java.lang.Class<?> wildcardClass82 = obj81.getClass();
        boolean boolean83 = typeCircularBuffer79.put((java.lang.reflect.Type) wildcardClass82);
        java.lang.Class<?> wildcardClass84 = typeCircularBuffer79.getClass();
        boolean boolean85 = typeCircularBuffer74.put((java.lang.reflect.Type) wildcardClass84);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer87 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean88 = typeCircularBuffer87.isEmpty();
        java.lang.Object obj89 = new java.lang.Object();
        java.lang.Class<?> wildcardClass90 = obj89.getClass();
        boolean boolean91 = typeCircularBuffer87.put((java.lang.reflect.Type) wildcardClass90);
        java.lang.Class<?> wildcardClass92 = typeCircularBuffer87.getClass();
        boolean boolean93 = typeCircularBuffer74.put((java.lang.reflect.Type) wildcardClass92);
        boolean boolean94 = typeCircularBuffer49.put((java.lang.reflect.Type) wildcardClass92);
        java.lang.reflect.Type type95 = typeCircularBuffer49.get();
        java.lang.Class<?> wildcardClass96 = typeCircularBuffer49.getClass();
        boolean boolean97 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass96);
        boolean boolean98 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass96);
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(type15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(type31);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNull(type75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(type95);
        org.junit.Assert.assertNotNull(wildcardClass96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
    }

    @Test
    public void test1092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1092");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer10.get();
        boolean boolean17 = typeCircularBuffer8.put(type16);
        boolean boolean18 = typeCircularBuffer8.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean21 = typeCircularBuffer20.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer23.getClass();
        boolean boolean25 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass24);
        java.lang.reflect.Type type26 = typeCircularBuffer20.get();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        boolean boolean29 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass28);
        boolean boolean30 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass28);
        boolean boolean31 = typeCircularBuffer8.isEmpty();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        boolean boolean34 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass33);
        boolean boolean35 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass33);
        boolean boolean36 = typeCircularBuffer1.isFull();
        boolean boolean37 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type38 = typeCircularBuffer1.get();
        boolean boolean39 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
    }

    @Test
    public void test1093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1093");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        boolean boolean10 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer17.getClass();
        boolean boolean19 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass18);
        java.lang.reflect.Type type20 = typeCircularBuffer14.get();
        boolean boolean21 = typeCircularBuffer12.put(type20);
        boolean boolean22 = typeCircularBuffer12.isFull();
        java.lang.reflect.Type type23 = typeCircularBuffer12.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean26 = typeCircularBuffer25.isEmpty();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        boolean boolean29 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass28);
        boolean boolean30 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass28);
        boolean boolean31 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.reflect.Type type32 = typeCircularBuffer1.get();
        boolean boolean33 = typeCircularBuffer1.isFull();
        boolean boolean34 = typeCircularBuffer1.isFull();
        boolean boolean35 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type38 = typeCircularBuffer37.get();
        boolean boolean39 = typeCircularBuffer37.isFull();
        boolean boolean40 = typeCircularBuffer37.isFull();
        boolean boolean41 = typeCircularBuffer37.isFull();
        boolean boolean42 = typeCircularBuffer37.isFull();
        java.lang.reflect.Type type43 = typeCircularBuffer37.get();
        boolean boolean44 = typeCircularBuffer37.isEmpty();
        boolean boolean45 = typeCircularBuffer37.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean48 = typeCircularBuffer47.isFull();
        boolean boolean49 = typeCircularBuffer47.isEmpty();
        java.lang.reflect.Type type50 = typeCircularBuffer47.get();
        boolean boolean51 = typeCircularBuffer47.isEmpty();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        boolean boolean54 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass53);
        boolean boolean55 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass53);
        boolean boolean56 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass53);
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(type38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(type43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(type50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
    }

    @Test
    public void test1094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1094");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass10);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer19.getClass();
        boolean boolean21 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type22 = typeCircularBuffer16.get();
        java.lang.Class<?> wildcardClass23 = typeCircularBuffer16.getClass();
        boolean boolean24 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass23);
        boolean boolean25 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass23);
        java.lang.reflect.Type type26 = typeCircularBuffer1.get();
        boolean boolean27 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(100);
        java.lang.reflect.Type type30 = typeCircularBuffer29.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean33 = typeCircularBuffer32.isFull();
        boolean boolean34 = typeCircularBuffer32.isEmpty();
        boolean boolean35 = typeCircularBuffer32.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean38 = typeCircularBuffer37.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass41 = typeCircularBuffer40.getClass();
        boolean boolean42 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass41);
        java.lang.reflect.Type type43 = typeCircularBuffer37.get();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        boolean boolean46 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass45);
        boolean boolean47 = typeCircularBuffer32.put((java.lang.reflect.Type) wildcardClass45);
        boolean boolean48 = typeCircularBuffer32.isFull();
        java.lang.reflect.Type type49 = typeCircularBuffer32.get();
        java.lang.Class<?> wildcardClass50 = typeCircularBuffer32.getClass();
        boolean boolean51 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass50);
        java.lang.Class<?> wildcardClass52 = typeCircularBuffer29.getClass();
        boolean boolean53 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass52);
        java.lang.Class<?> wildcardClass54 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(type26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(type30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test1095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1095");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.GenericDeclaration> genericDeclarationCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.GenericDeclaration>(100);
    }

    @Test
    public void test1096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1096");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer10.get();
        boolean boolean17 = typeCircularBuffer8.put(type16);
        boolean boolean18 = typeCircularBuffer8.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean21 = typeCircularBuffer20.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer23.getClass();
        boolean boolean25 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass24);
        java.lang.reflect.Type type26 = typeCircularBuffer20.get();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        boolean boolean29 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass28);
        boolean boolean30 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass28);
        boolean boolean31 = typeCircularBuffer8.isEmpty();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        boolean boolean34 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass33);
        boolean boolean35 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass33);
        boolean boolean36 = typeCircularBuffer1.isFull();
        boolean boolean37 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type38 = typeCircularBuffer1.get();
        java.lang.reflect.Type type39 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNull(type39);
    }

    @Test
    public void test1097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1097");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean4 = typeCircularBuffer3.isFull();
        boolean boolean5 = typeCircularBuffer3.isEmpty();
        java.lang.reflect.Type type6 = typeCircularBuffer3.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer10.get();
        boolean boolean17 = typeCircularBuffer8.put(type16);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer8.getClass();
        boolean boolean19 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass18);
        boolean boolean20 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass18);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type23 = typeCircularBuffer22.get();
        boolean boolean24 = typeCircularBuffer22.isFull();
        boolean boolean25 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean28 = typeCircularBuffer27.isEmpty();
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        boolean boolean31 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass30);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer27.getClass();
        boolean boolean33 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean37 = typeCircularBuffer36.isFull();
        boolean boolean38 = typeCircularBuffer36.isEmpty();
        java.lang.reflect.Type type39 = typeCircularBuffer36.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer46.getClass();
        boolean boolean48 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass47);
        java.lang.reflect.Type type49 = typeCircularBuffer43.get();
        boolean boolean50 = typeCircularBuffer41.put(type49);
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer41.getClass();
        boolean boolean52 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean53 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass51);
        java.lang.Class<?> wildcardClass54 = typeCircularBuffer22.getClass();
        boolean boolean55 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean56 = typeCircularBuffer1.isFull();
        boolean boolean57 = typeCircularBuffer1.isFull();
        boolean boolean58 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(type39);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test1098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1098");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.constant.Constable> constableCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.constant.Constable>((int) (byte) 1);
        java.lang.Class<?> wildcardClass2 = constableCircularBuffer1.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test1099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1099");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean24 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type25 = typeCircularBuffer1.get();
        boolean boolean26 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type27 = typeCircularBuffer1.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass28 = type27.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(type27);
    }

    @Test
    public void test1100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1100");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.constant.Constable> constableCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.constant.Constable>((int) (byte) 10);
    }

    @Test
    public void test1101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1101");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean4 = typeCircularBuffer3.isFull();
        boolean boolean5 = typeCircularBuffer3.isEmpty();
        java.lang.reflect.Type type6 = typeCircularBuffer3.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer10.get();
        boolean boolean17 = typeCircularBuffer8.put(type16);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer8.getClass();
        boolean boolean19 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass18);
        boolean boolean20 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass18);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type23 = typeCircularBuffer22.get();
        boolean boolean24 = typeCircularBuffer22.isFull();
        boolean boolean25 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean28 = typeCircularBuffer27.isEmpty();
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        boolean boolean31 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass30);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer27.getClass();
        boolean boolean33 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean37 = typeCircularBuffer36.isFull();
        boolean boolean38 = typeCircularBuffer36.isEmpty();
        java.lang.reflect.Type type39 = typeCircularBuffer36.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer46.getClass();
        boolean boolean48 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass47);
        java.lang.reflect.Type type49 = typeCircularBuffer43.get();
        boolean boolean50 = typeCircularBuffer41.put(type49);
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer41.getClass();
        boolean boolean52 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean53 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass51);
        java.lang.Class<?> wildcardClass54 = typeCircularBuffer22.getClass();
        boolean boolean55 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean56 = typeCircularBuffer1.isEmpty();
        boolean boolean57 = typeCircularBuffer1.isEmpty();
        boolean boolean58 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer60 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type61 = typeCircularBuffer60.get();
        boolean boolean62 = typeCircularBuffer60.isFull();
        boolean boolean63 = typeCircularBuffer60.isEmpty();
        boolean boolean64 = typeCircularBuffer60.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer66 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass67 = typeCircularBuffer66.getClass();
        boolean boolean68 = typeCircularBuffer60.put((java.lang.reflect.Type) wildcardClass67);
        boolean boolean69 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass67);
        java.lang.reflect.Type type70 = typeCircularBuffer1.get();
        java.lang.reflect.Type type71 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(type39);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(type61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(type71);
    }

    @Test
    public void test1102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1102");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean5 = typeCircularBuffer4.isFull();
        boolean boolean6 = typeCircularBuffer4.isEmpty();
        boolean boolean7 = typeCircularBuffer4.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        java.lang.reflect.Type type15 = typeCircularBuffer9.get();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass17);
        boolean boolean19 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass17);
        boolean boolean20 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass17);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass26 = typeCircularBuffer25.getClass();
        boolean boolean27 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass26);
        java.lang.reflect.Type type28 = typeCircularBuffer22.get();
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        boolean boolean31 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass30);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean34 = typeCircularBuffer33.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass37 = typeCircularBuffer36.getClass();
        boolean boolean38 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass37);
        java.lang.Class<?> wildcardClass39 = typeCircularBuffer33.getClass();
        boolean boolean40 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass39);
        java.lang.reflect.Type type41 = typeCircularBuffer22.get();
        java.lang.Class<?> wildcardClass42 = typeCircularBuffer22.getClass();
        boolean boolean43 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass42);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean48 = typeCircularBuffer47.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer50.getClass();
        boolean boolean52 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass51);
        java.lang.reflect.Type type53 = typeCircularBuffer47.get();
        boolean boolean54 = typeCircularBuffer45.put(type53);
        boolean boolean55 = typeCircularBuffer45.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer57 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean58 = typeCircularBuffer57.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer60 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass61 = typeCircularBuffer60.getClass();
        boolean boolean62 = typeCircularBuffer57.put((java.lang.reflect.Type) wildcardClass61);
        java.lang.reflect.Type type63 = typeCircularBuffer57.get();
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        boolean boolean66 = typeCircularBuffer57.put((java.lang.reflect.Type) wildcardClass65);
        boolean boolean67 = typeCircularBuffer45.put((java.lang.reflect.Type) wildcardClass65);
        boolean boolean68 = typeCircularBuffer45.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer70 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type71 = typeCircularBuffer70.get();
        boolean boolean72 = typeCircularBuffer70.isFull();
        boolean boolean73 = typeCircularBuffer70.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer75 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean76 = typeCircularBuffer75.isEmpty();
        java.lang.Object obj77 = new java.lang.Object();
        java.lang.Class<?> wildcardClass78 = obj77.getClass();
        boolean boolean79 = typeCircularBuffer75.put((java.lang.reflect.Type) wildcardClass78);
        java.lang.Class<?> wildcardClass80 = typeCircularBuffer75.getClass();
        boolean boolean81 = typeCircularBuffer70.put((java.lang.reflect.Type) wildcardClass80);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer83 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean84 = typeCircularBuffer83.isEmpty();
        java.lang.Object obj85 = new java.lang.Object();
        java.lang.Class<?> wildcardClass86 = obj85.getClass();
        boolean boolean87 = typeCircularBuffer83.put((java.lang.reflect.Type) wildcardClass86);
        java.lang.Class<?> wildcardClass88 = typeCircularBuffer83.getClass();
        boolean boolean89 = typeCircularBuffer70.put((java.lang.reflect.Type) wildcardClass88);
        boolean boolean90 = typeCircularBuffer45.put((java.lang.reflect.Type) wildcardClass88);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer92 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass93 = typeCircularBuffer92.getClass();
        boolean boolean94 = typeCircularBuffer45.put((java.lang.reflect.Type) wildcardClass93);
        java.lang.Class<?> wildcardClass95 = typeCircularBuffer45.getClass();
        boolean boolean96 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass95);
        boolean boolean97 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(type71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(wildcardClass95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test1103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1103");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        boolean boolean7 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean19 = typeCircularBuffer18.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer21.getClass();
        boolean boolean23 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass22);
        java.lang.reflect.Type type24 = typeCircularBuffer18.get();
        boolean boolean25 = typeCircularBuffer16.put(type24);
        boolean boolean26 = typeCircularBuffer16.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer31.getClass();
        boolean boolean33 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass32);
        java.lang.reflect.Type type34 = typeCircularBuffer28.get();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        boolean boolean37 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean38 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean39 = typeCircularBuffer16.isEmpty();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        boolean boolean42 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean43 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean44 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass41);
        java.lang.reflect.Type type45 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean48 = typeCircularBuffer47.isEmpty();
        java.lang.reflect.Type type49 = typeCircularBuffer47.get();
        java.lang.reflect.Type type50 = typeCircularBuffer47.get();
        java.lang.reflect.Type type51 = typeCircularBuffer47.get();
        boolean boolean52 = typeCircularBuffer47.isFull();
        boolean boolean53 = typeCircularBuffer47.isFull();
        java.lang.reflect.Type type54 = typeCircularBuffer47.get();
        boolean boolean55 = typeCircularBuffer47.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer57 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer59 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean60 = typeCircularBuffer59.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer62 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass63 = typeCircularBuffer62.getClass();
        boolean boolean64 = typeCircularBuffer59.put((java.lang.reflect.Type) wildcardClass63);
        java.lang.reflect.Type type65 = typeCircularBuffer59.get();
        java.lang.Class<?> wildcardClass66 = typeCircularBuffer59.getClass();
        boolean boolean67 = typeCircularBuffer57.put((java.lang.reflect.Type) wildcardClass66);
        boolean boolean68 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass66);
        boolean boolean69 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass66);
        java.lang.reflect.Type type70 = typeCircularBuffer1.get();
        boolean boolean71 = typeCircularBuffer1.isEmpty();
        boolean boolean72 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type73 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(type49);
        org.junit.Assert.assertNull(type50);
        org.junit.Assert.assertNull(type51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(type54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNull(type73);
    }

    @Test
    public void test1104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1104");
        com.thealgorithms.datastructures.buffers.CircularBuffer<com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>> typeCircularBufferCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>>((int) (byte) 10);
    }

    @Test
    public void test1105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1105");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isFull();
        boolean boolean8 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean12 = typeCircularBuffer11.isEmpty();
        java.lang.reflect.Type type13 = typeCircularBuffer11.get();
        boolean boolean14 = typeCircularBuffer11.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type17 = typeCircularBuffer16.get();
        boolean boolean18 = typeCircularBuffer16.isFull();
        boolean boolean19 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean22 = typeCircularBuffer21.isEmpty();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass24);
        java.lang.Class<?> wildcardClass26 = typeCircularBuffer21.getClass();
        boolean boolean27 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass26);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean30 = typeCircularBuffer29.isEmpty();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        boolean boolean33 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass32);
        java.lang.Class<?> wildcardClass34 = typeCircularBuffer29.getClass();
        boolean boolean35 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass34);
        boolean boolean36 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass34);
        boolean boolean37 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass34);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean40 = typeCircularBuffer39.isEmpty();
        java.lang.reflect.Type type41 = typeCircularBuffer39.get();
        java.lang.reflect.Type type42 = typeCircularBuffer39.get();
        java.lang.reflect.Type type43 = typeCircularBuffer39.get();
        boolean boolean44 = typeCircularBuffer39.isFull();
        boolean boolean45 = typeCircularBuffer39.isFull();
        java.lang.reflect.Type type46 = typeCircularBuffer39.get();
        boolean boolean47 = typeCircularBuffer39.isFull();
        boolean boolean48 = typeCircularBuffer39.isEmpty();
        boolean boolean49 = typeCircularBuffer39.isFull();
        java.lang.Class<?> wildcardClass50 = typeCircularBuffer39.getClass();
        boolean boolean51 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass50);
        boolean boolean52 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type53 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(type13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(type17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(type41);
        org.junit.Assert.assertNull(type42);
        org.junit.Assert.assertNull(type43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(type46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(type53);
    }

    @Test
    public void test1106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1106");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '#');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) ' ');
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer3.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        boolean boolean7 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 10);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type12 = typeCircularBuffer11.get();
        boolean boolean13 = typeCircularBuffer11.isFull();
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer11.getClass();
        boolean boolean15 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass14);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type18 = typeCircularBuffer17.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass26 = typeCircularBuffer25.getClass();
        boolean boolean27 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass26);
        java.lang.reflect.Type type28 = typeCircularBuffer22.get();
        boolean boolean29 = typeCircularBuffer20.put(type28);
        boolean boolean30 = typeCircularBuffer20.isFull();
        java.lang.reflect.Type type31 = typeCircularBuffer20.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean34 = typeCircularBuffer33.isEmpty();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        boolean boolean37 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean38 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean39 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean40 = typeCircularBuffer17.isEmpty();
        java.lang.reflect.Type type41 = typeCircularBuffer17.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean46 = typeCircularBuffer45.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass49 = typeCircularBuffer48.getClass();
        boolean boolean50 = typeCircularBuffer45.put((java.lang.reflect.Type) wildcardClass49);
        java.lang.reflect.Type type51 = typeCircularBuffer45.get();
        boolean boolean52 = typeCircularBuffer43.put(type51);
        boolean boolean53 = typeCircularBuffer43.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer55 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean56 = typeCircularBuffer55.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer58 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass59 = typeCircularBuffer58.getClass();
        boolean boolean60 = typeCircularBuffer55.put((java.lang.reflect.Type) wildcardClass59);
        java.lang.reflect.Type type61 = typeCircularBuffer55.get();
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        boolean boolean64 = typeCircularBuffer55.put((java.lang.reflect.Type) wildcardClass63);
        boolean boolean65 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass63);
        boolean boolean66 = typeCircularBuffer43.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer68 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type69 = typeCircularBuffer68.get();
        boolean boolean70 = typeCircularBuffer68.isFull();
        boolean boolean71 = typeCircularBuffer68.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer73 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean74 = typeCircularBuffer73.isEmpty();
        java.lang.Object obj75 = new java.lang.Object();
        java.lang.Class<?> wildcardClass76 = obj75.getClass();
        boolean boolean77 = typeCircularBuffer73.put((java.lang.reflect.Type) wildcardClass76);
        java.lang.Class<?> wildcardClass78 = typeCircularBuffer73.getClass();
        boolean boolean79 = typeCircularBuffer68.put((java.lang.reflect.Type) wildcardClass78);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer81 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean82 = typeCircularBuffer81.isEmpty();
        java.lang.Object obj83 = new java.lang.Object();
        java.lang.Class<?> wildcardClass84 = obj83.getClass();
        boolean boolean85 = typeCircularBuffer81.put((java.lang.reflect.Type) wildcardClass84);
        java.lang.Class<?> wildcardClass86 = typeCircularBuffer81.getClass();
        boolean boolean87 = typeCircularBuffer68.put((java.lang.reflect.Type) wildcardClass86);
        boolean boolean88 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass86);
        java.lang.reflect.Type type89 = typeCircularBuffer43.get();
        boolean boolean90 = typeCircularBuffer17.put(type89);
        boolean boolean91 = typeCircularBuffer9.put(type89);
        java.lang.reflect.Type type92 = typeCircularBuffer9.get();
        boolean boolean93 = typeCircularBuffer1.put(type92);
        java.lang.Class<?> wildcardClass94 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(type18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(type69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(type89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(type92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1107");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        java.lang.reflect.Type type12 = typeCircularBuffer6.get();
        boolean boolean13 = typeCircularBuffer4.put(type12);
        boolean boolean14 = typeCircularBuffer4.isFull();
        java.lang.reflect.Type type15 = typeCircularBuffer4.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        boolean boolean21 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean22 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean24 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type25 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean30 = typeCircularBuffer29.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass33 = typeCircularBuffer32.getClass();
        boolean boolean34 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass33);
        java.lang.reflect.Type type35 = typeCircularBuffer29.get();
        boolean boolean36 = typeCircularBuffer27.put(type35);
        boolean boolean37 = typeCircularBuffer27.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean40 = typeCircularBuffer39.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass43 = typeCircularBuffer42.getClass();
        boolean boolean44 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass43);
        java.lang.reflect.Type type45 = typeCircularBuffer39.get();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        boolean boolean48 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass47);
        boolean boolean49 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass47);
        boolean boolean50 = typeCircularBuffer27.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer52 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type53 = typeCircularBuffer52.get();
        boolean boolean54 = typeCircularBuffer52.isFull();
        boolean boolean55 = typeCircularBuffer52.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer57 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean58 = typeCircularBuffer57.isEmpty();
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        boolean boolean61 = typeCircularBuffer57.put((java.lang.reflect.Type) wildcardClass60);
        java.lang.Class<?> wildcardClass62 = typeCircularBuffer57.getClass();
        boolean boolean63 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass62);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer65 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean66 = typeCircularBuffer65.isEmpty();
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        boolean boolean69 = typeCircularBuffer65.put((java.lang.reflect.Type) wildcardClass68);
        java.lang.Class<?> wildcardClass70 = typeCircularBuffer65.getClass();
        boolean boolean71 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass70);
        boolean boolean72 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass70);
        java.lang.reflect.Type type73 = typeCircularBuffer27.get();
        boolean boolean74 = typeCircularBuffer1.put(type73);
        java.lang.reflect.Type type75 = typeCircularBuffer1.get();
        boolean boolean76 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type77 = typeCircularBuffer1.get();
        java.lang.reflect.Type type78 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(type53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNull(type77);
        org.junit.Assert.assertNull(type78);
    }

    @Test
    public void test1108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1108");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean4 = typeCircularBuffer3.isFull();
        boolean boolean5 = typeCircularBuffer3.isEmpty();
        java.lang.reflect.Type type6 = typeCircularBuffer3.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer10.get();
        boolean boolean17 = typeCircularBuffer8.put(type16);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer8.getClass();
        boolean boolean19 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass18);
        boolean boolean20 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass18);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type23 = typeCircularBuffer22.get();
        boolean boolean24 = typeCircularBuffer22.isFull();
        boolean boolean25 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean28 = typeCircularBuffer27.isEmpty();
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        boolean boolean31 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass30);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer27.getClass();
        boolean boolean33 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean37 = typeCircularBuffer36.isFull();
        boolean boolean38 = typeCircularBuffer36.isEmpty();
        java.lang.reflect.Type type39 = typeCircularBuffer36.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer46.getClass();
        boolean boolean48 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass47);
        java.lang.reflect.Type type49 = typeCircularBuffer43.get();
        boolean boolean50 = typeCircularBuffer41.put(type49);
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer41.getClass();
        boolean boolean52 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean53 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass51);
        java.lang.Class<?> wildcardClass54 = typeCircularBuffer22.getClass();
        boolean boolean55 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean56 = typeCircularBuffer1.isEmpty();
        boolean boolean57 = typeCircularBuffer1.isEmpty();
        boolean boolean58 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer60 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type61 = typeCircularBuffer60.get();
        boolean boolean62 = typeCircularBuffer60.isFull();
        boolean boolean63 = typeCircularBuffer60.isEmpty();
        boolean boolean64 = typeCircularBuffer60.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer66 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass67 = typeCircularBuffer66.getClass();
        boolean boolean68 = typeCircularBuffer60.put((java.lang.reflect.Type) wildcardClass67);
        boolean boolean69 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass67);
        java.lang.reflect.Type type70 = typeCircularBuffer1.get();
        boolean boolean71 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(type39);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(type61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test1109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1109");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        boolean boolean8 = typeCircularBuffer7.isEmpty();
        java.lang.Class<?> wildcardClass9 = typeCircularBuffer7.getClass();
        boolean boolean10 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass9);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean13 = typeCircularBuffer12.isFull();
        boolean boolean14 = typeCircularBuffer12.isEmpty();
        boolean boolean15 = typeCircularBuffer12.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer20.getClass();
        boolean boolean22 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type23 = typeCircularBuffer17.get();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        boolean boolean26 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass25);
        boolean boolean27 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass25);
        boolean boolean28 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.reflect.Type type29 = typeCircularBuffer1.get();
        boolean boolean30 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type31 = typeCircularBuffer1.get();
        boolean boolean32 = typeCircularBuffer1.isEmpty();
        boolean boolean33 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test1110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1110");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass21);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean25 = typeCircularBuffer24.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer27.getClass();
        boolean boolean29 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.Class<?> wildcardClass30 = typeCircularBuffer24.getClass();
        boolean boolean31 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass30);
        boolean boolean32 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass30);
        boolean boolean33 = typeCircularBuffer1.isEmpty();
        boolean boolean34 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
    }

    @Test
    public void test1111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1111");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer5 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean8 = typeCircularBuffer7.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer10.getClass();
        boolean boolean12 = typeCircularBuffer7.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.reflect.Type type13 = typeCircularBuffer7.get();
        boolean boolean14 = typeCircularBuffer5.put(type13);
        java.lang.reflect.Type type15 = typeCircularBuffer5.get();
        java.lang.reflect.Type type16 = null;
        boolean boolean17 = typeCircularBuffer5.put(type16);
        boolean boolean18 = typeCircularBuffer5.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 10);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type23 = typeCircularBuffer22.get();
        boolean boolean24 = typeCircularBuffer22.isFull();
        java.lang.Class<?> wildcardClass25 = typeCircularBuffer22.getClass();
        boolean boolean26 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass25);
        boolean boolean27 = typeCircularBuffer5.put((java.lang.reflect.Type) wildcardClass25);
        boolean boolean28 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass25);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean31 = typeCircularBuffer30.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass34 = typeCircularBuffer33.getClass();
        boolean boolean35 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass34);
        java.lang.reflect.Type type36 = null;
        boolean boolean37 = typeCircularBuffer30.put(type36);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean42 = typeCircularBuffer41.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass45 = typeCircularBuffer44.getClass();
        boolean boolean46 = typeCircularBuffer41.put((java.lang.reflect.Type) wildcardClass45);
        java.lang.reflect.Type type47 = typeCircularBuffer41.get();
        java.lang.Class<?> wildcardClass48 = typeCircularBuffer41.getClass();
        boolean boolean49 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass48);
        boolean boolean50 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass48);
        boolean boolean51 = typeCircularBuffer30.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer53 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type54 = typeCircularBuffer53.get();
        boolean boolean55 = typeCircularBuffer53.isFull();
        boolean boolean56 = typeCircularBuffer53.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer58 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean59 = typeCircularBuffer58.isEmpty();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        boolean boolean62 = typeCircularBuffer58.put((java.lang.reflect.Type) wildcardClass61);
        java.lang.Class<?> wildcardClass63 = typeCircularBuffer58.getClass();
        boolean boolean64 = typeCircularBuffer53.put((java.lang.reflect.Type) wildcardClass63);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer66 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean67 = typeCircularBuffer66.isEmpty();
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        boolean boolean70 = typeCircularBuffer66.put((java.lang.reflect.Type) wildcardClass69);
        java.lang.Class<?> wildcardClass71 = typeCircularBuffer66.getClass();
        boolean boolean72 = typeCircularBuffer53.put((java.lang.reflect.Type) wildcardClass71);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer74 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean75 = typeCircularBuffer74.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer77 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass78 = typeCircularBuffer77.getClass();
        boolean boolean79 = typeCircularBuffer74.put((java.lang.reflect.Type) wildcardClass78);
        boolean boolean80 = typeCircularBuffer74.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.GenericDeclaration> genericDeclarationCircularBuffer82 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.GenericDeclaration>((int) (short) 100);
        java.lang.Class<?> wildcardClass83 = genericDeclarationCircularBuffer82.getClass();
        boolean boolean84 = typeCircularBuffer74.put((java.lang.reflect.Type) wildcardClass83);
        boolean boolean85 = typeCircularBuffer53.put((java.lang.reflect.Type) wildcardClass83);
        boolean boolean86 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass83);
        boolean boolean87 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass83);
        java.lang.Class<?> wildcardClass88 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNull(type54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test1112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1112");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isFull();
        boolean boolean8 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        boolean boolean10 = typeCircularBuffer1.isFull();
        boolean boolean11 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test1113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1113");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        boolean boolean5 = typeCircularBuffer1.isFull();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        boolean boolean9 = typeCircularBuffer1.isFull();
        boolean boolean10 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test1114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1114");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        java.lang.reflect.Type type15 = typeCircularBuffer9.get();
        boolean boolean16 = typeCircularBuffer7.put(type15);
        boolean boolean17 = typeCircularBuffer7.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean20 = typeCircularBuffer19.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass23 = typeCircularBuffer22.getClass();
        boolean boolean24 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass23);
        java.lang.reflect.Type type25 = typeCircularBuffer19.get();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        boolean boolean28 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer7.put((java.lang.reflect.Type) wildcardClass27);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer34.getClass();
        boolean boolean36 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass35);
        java.lang.reflect.Type type37 = typeCircularBuffer31.get();
        boolean boolean38 = typeCircularBuffer7.put(type37);
        java.lang.reflect.Type type39 = typeCircularBuffer7.get();
        boolean boolean40 = typeCircularBuffer1.put(type39);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean43 = typeCircularBuffer42.isFull();
        java.lang.reflect.Type type44 = typeCircularBuffer42.get();
        boolean boolean45 = typeCircularBuffer42.isEmpty();
        boolean boolean46 = typeCircularBuffer42.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        boolean boolean49 = typeCircularBuffer48.isEmpty();
        java.lang.Class<?> wildcardClass50 = typeCircularBuffer48.getClass();
        boolean boolean51 = typeCircularBuffer42.put((java.lang.reflect.Type) wildcardClass50);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer53 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean54 = typeCircularBuffer53.isFull();
        boolean boolean55 = typeCircularBuffer53.isEmpty();
        boolean boolean56 = typeCircularBuffer53.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer58 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean59 = typeCircularBuffer58.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer61 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass62 = typeCircularBuffer61.getClass();
        boolean boolean63 = typeCircularBuffer58.put((java.lang.reflect.Type) wildcardClass62);
        java.lang.reflect.Type type64 = typeCircularBuffer58.get();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        boolean boolean67 = typeCircularBuffer58.put((java.lang.reflect.Type) wildcardClass66);
        boolean boolean68 = typeCircularBuffer53.put((java.lang.reflect.Type) wildcardClass66);
        boolean boolean69 = typeCircularBuffer42.put((java.lang.reflect.Type) wildcardClass66);
        boolean boolean70 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass66);
        boolean boolean71 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(type44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test1115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1115");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type10 = typeCircularBuffer9.get();
        boolean boolean11 = typeCircularBuffer9.isFull();
        boolean boolean12 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer14.getClass();
        boolean boolean20 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass19);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        boolean boolean26 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer22.getClass();
        boolean boolean28 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass27);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean34 = typeCircularBuffer33.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass37 = typeCircularBuffer36.getClass();
        boolean boolean38 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass37);
        java.lang.reflect.Type type39 = typeCircularBuffer33.get();
        boolean boolean40 = typeCircularBuffer31.put(type39);
        boolean boolean41 = typeCircularBuffer31.isFull();
        java.lang.reflect.Type type42 = typeCircularBuffer31.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type45 = typeCircularBuffer44.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean48 = typeCircularBuffer47.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer50.getClass();
        boolean boolean52 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass51);
        java.lang.reflect.Type type53 = typeCircularBuffer47.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer55 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type56 = typeCircularBuffer55.get();
        boolean boolean57 = typeCircularBuffer55.isFull();
        boolean boolean58 = typeCircularBuffer55.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer60 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean61 = typeCircularBuffer60.isEmpty();
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        boolean boolean64 = typeCircularBuffer60.put((java.lang.reflect.Type) wildcardClass63);
        java.lang.Class<?> wildcardClass65 = typeCircularBuffer60.getClass();
        boolean boolean66 = typeCircularBuffer55.put((java.lang.reflect.Type) wildcardClass65);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer68 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean69 = typeCircularBuffer68.isEmpty();
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        boolean boolean72 = typeCircularBuffer68.put((java.lang.reflect.Type) wildcardClass71);
        java.lang.Class<?> wildcardClass73 = typeCircularBuffer68.getClass();
        boolean boolean74 = typeCircularBuffer55.put((java.lang.reflect.Type) wildcardClass73);
        boolean boolean75 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass73);
        boolean boolean76 = typeCircularBuffer44.put((java.lang.reflect.Type) wildcardClass73);
        boolean boolean77 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass73);
        boolean boolean78 = typeCircularBuffer31.isEmpty();
        java.lang.Class<?> wildcardClass79 = typeCircularBuffer31.getClass();
        boolean boolean80 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass79);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer82 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) ' ');
        boolean boolean83 = typeCircularBuffer82.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer85 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean86 = typeCircularBuffer85.isEmpty();
        java.lang.Object obj87 = new java.lang.Object();
        java.lang.Class<?> wildcardClass88 = obj87.getClass();
        boolean boolean89 = typeCircularBuffer85.put((java.lang.reflect.Type) wildcardClass88);
        java.lang.Class<?> wildcardClass90 = typeCircularBuffer85.getClass();
        boolean boolean91 = typeCircularBuffer82.put((java.lang.reflect.Type) wildcardClass90);
        java.lang.Class<?> wildcardClass92 = typeCircularBuffer82.getClass();
        boolean boolean93 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass92);
        boolean boolean94 = typeCircularBuffer1.isEmpty();
        boolean boolean95 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type96 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNull(type45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNull(type56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(type96);
    }

    @Test
    public void test1116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1116");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        boolean boolean7 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type8 = null;
        boolean boolean9 = typeCircularBuffer1.put(type8);
        boolean boolean10 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test1117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1117");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        boolean boolean8 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        java.lang.reflect.Type type10 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean13 = typeCircularBuffer12.isEmpty();
        java.lang.reflect.Type type14 = typeCircularBuffer12.get();
        java.lang.reflect.Type type15 = typeCircularBuffer12.get();
        java.lang.reflect.Type type16 = typeCircularBuffer12.get();
        java.lang.reflect.Type type17 = typeCircularBuffer12.get();
        boolean boolean18 = typeCircularBuffer12.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) ' ');
        java.lang.reflect.Type type21 = typeCircularBuffer20.get();
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer20.getClass();
        boolean boolean23 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass22);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean28 = typeCircularBuffer27.isFull();
        boolean boolean29 = typeCircularBuffer27.isEmpty();
        java.lang.reflect.Type type30 = typeCircularBuffer27.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean35 = typeCircularBuffer34.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass38 = typeCircularBuffer37.getClass();
        boolean boolean39 = typeCircularBuffer34.put((java.lang.reflect.Type) wildcardClass38);
        java.lang.reflect.Type type40 = typeCircularBuffer34.get();
        boolean boolean41 = typeCircularBuffer32.put(type40);
        java.lang.Class<?> wildcardClass42 = typeCircularBuffer32.getClass();
        boolean boolean43 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass42);
        boolean boolean44 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass42);
        boolean boolean45 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass42);
        java.lang.Class<?> wildcardClass46 = typeCircularBuffer12.getClass();
        boolean boolean47 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass46);
        java.lang.reflect.Type type48 = typeCircularBuffer1.get();
        boolean boolean49 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(type14);
        org.junit.Assert.assertNull(type15);
        org.junit.Assert.assertNull(type16);
        org.junit.Assert.assertNull(type17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(type21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(type30);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test1118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1118");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean9 = typeCircularBuffer8.isEmpty();
        boolean boolean10 = typeCircularBuffer8.isEmpty();
        java.lang.reflect.Type type11 = typeCircularBuffer8.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass16);
        boolean boolean18 = typeCircularBuffer13.isFull();
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer13.getClass();
        boolean boolean20 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass19);
        boolean boolean21 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass19);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(type11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test1119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1119");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean24 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type25 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean28 = typeCircularBuffer27.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass31 = typeCircularBuffer30.getClass();
        boolean boolean32 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass31);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean37 = typeCircularBuffer36.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass40 = typeCircularBuffer39.getClass();
        boolean boolean41 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass40);
        java.lang.reflect.Type type42 = typeCircularBuffer36.get();
        boolean boolean43 = typeCircularBuffer34.put(type42);
        boolean boolean44 = typeCircularBuffer34.isFull();
        java.lang.reflect.Type type45 = typeCircularBuffer34.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean48 = typeCircularBuffer47.isEmpty();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        boolean boolean51 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass50);
        boolean boolean52 = typeCircularBuffer34.put((java.lang.reflect.Type) wildcardClass50);
        boolean boolean53 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass50);
        boolean boolean54 = typeCircularBuffer27.isFull();
        boolean boolean55 = typeCircularBuffer27.isFull();
        java.lang.Class<?> wildcardClass56 = typeCircularBuffer27.getClass();
        boolean boolean57 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass56);
        boolean boolean58 = typeCircularBuffer1.isEmpty();
        boolean boolean59 = typeCircularBuffer1.isFull();
        boolean boolean60 = typeCircularBuffer1.isEmpty();
        boolean boolean61 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
    }

    @Test
    public void test1120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1120");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isEmpty();
        boolean boolean12 = typeCircularBuffer1.isFull();
        boolean boolean13 = typeCircularBuffer1.isEmpty();
        boolean boolean14 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer19.getClass();
        boolean boolean21 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type22 = typeCircularBuffer16.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type25 = typeCircularBuffer24.get();
        boolean boolean26 = typeCircularBuffer24.isFull();
        boolean boolean27 = typeCircularBuffer24.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean30 = typeCircularBuffer29.isEmpty();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        boolean boolean33 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass32);
        java.lang.Class<?> wildcardClass34 = typeCircularBuffer29.getClass();
        boolean boolean35 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass34);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean38 = typeCircularBuffer37.isEmpty();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        boolean boolean41 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass40);
        java.lang.Class<?> wildcardClass42 = typeCircularBuffer37.getClass();
        boolean boolean43 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass42);
        boolean boolean44 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass42);
        boolean boolean45 = typeCircularBuffer16.isEmpty();
        boolean boolean46 = typeCircularBuffer16.isEmpty();
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer16.getClass();
        boolean boolean48 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass47);
        boolean boolean49 = typeCircularBuffer1.isEmpty();
        boolean boolean50 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type51 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer53 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean54 = typeCircularBuffer53.isFull();
        java.lang.reflect.Type type55 = typeCircularBuffer53.get();
        boolean boolean56 = typeCircularBuffer53.isFull();
        java.lang.reflect.Type type57 = typeCircularBuffer53.get();
        boolean boolean58 = typeCircularBuffer53.isFull();
        boolean boolean59 = typeCircularBuffer53.isEmpty();
        java.lang.reflect.Type type60 = typeCircularBuffer53.get();
        java.lang.Class<?> wildcardClass61 = typeCircularBuffer53.getClass();
        boolean boolean62 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNull(type25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(type55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(type57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(type60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
    }

    @Test
    public void test1121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1121");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 0);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(type4);
    }

    @Test
    public void test1122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1122");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        boolean boolean8 = typeCircularBuffer1.isFull();
        boolean boolean9 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type10 = typeCircularBuffer1.get();
        boolean boolean11 = typeCircularBuffer1.isEmpty();
        boolean boolean12 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test1123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1123");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        boolean boolean8 = typeCircularBuffer1.isEmpty();
        boolean boolean9 = typeCircularBuffer1.isFull();
        boolean boolean10 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean13 = typeCircularBuffer12.isFull();
        java.lang.reflect.Type type14 = typeCircularBuffer12.get();
        boolean boolean15 = typeCircularBuffer12.isEmpty();
        boolean boolean16 = typeCircularBuffer12.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        boolean boolean19 = typeCircularBuffer18.isEmpty();
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer18.getClass();
        boolean boolean21 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass20);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean24 = typeCircularBuffer23.isFull();
        boolean boolean25 = typeCircularBuffer23.isEmpty();
        boolean boolean26 = typeCircularBuffer23.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer31.getClass();
        boolean boolean33 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass32);
        java.lang.reflect.Type type34 = typeCircularBuffer28.get();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        boolean boolean37 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean38 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean39 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean40 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean41 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type42 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass43 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(type14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test1124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1124");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass10);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer19.getClass();
        boolean boolean21 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type22 = typeCircularBuffer16.get();
        java.lang.Class<?> wildcardClass23 = typeCircularBuffer16.getClass();
        boolean boolean24 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass23);
        boolean boolean25 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass23);
        java.lang.reflect.Type type26 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        java.lang.Class<?> wildcardClass30 = typeCircularBuffer28.getClass();
        boolean boolean31 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass30);
        boolean boolean32 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(type26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
    }

    @Test
    public void test1125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1125");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type5 = null;
        boolean boolean6 = typeCircularBuffer1.put(type5);
        boolean boolean7 = typeCircularBuffer1.isFull();
        boolean boolean8 = typeCircularBuffer1.isFull();
        boolean boolean9 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type10 = typeCircularBuffer1.get();
        java.lang.reflect.Type type11 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertNull(type11);
    }

    @Test
    public void test1126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1126");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean8 = typeCircularBuffer7.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer10.getClass();
        boolean boolean12 = typeCircularBuffer7.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.reflect.Type type13 = typeCircularBuffer7.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type16 = typeCircularBuffer15.get();
        boolean boolean17 = typeCircularBuffer15.isFull();
        boolean boolean18 = typeCircularBuffer15.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean21 = typeCircularBuffer20.isEmpty();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        boolean boolean24 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass23);
        java.lang.Class<?> wildcardClass25 = typeCircularBuffer20.getClass();
        boolean boolean26 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass25);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        boolean boolean32 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass31);
        java.lang.Class<?> wildcardClass33 = typeCircularBuffer28.getClass();
        boolean boolean34 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass33);
        boolean boolean35 = typeCircularBuffer7.put((java.lang.reflect.Type) wildcardClass33);
        boolean boolean36 = typeCircularBuffer7.isEmpty();
        boolean boolean37 = typeCircularBuffer7.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type40 = typeCircularBuffer39.get();
        boolean boolean41 = typeCircularBuffer39.isFull();
        boolean boolean42 = typeCircularBuffer39.isFull();
        boolean boolean43 = typeCircularBuffer39.isEmpty();
        java.lang.reflect.Type type44 = typeCircularBuffer39.get();
        boolean boolean45 = typeCircularBuffer39.isEmpty();
        java.lang.Class<?> wildcardClass46 = typeCircularBuffer39.getClass();
        boolean boolean47 = typeCircularBuffer7.put((java.lang.reflect.Type) wildcardClass46);
        boolean boolean48 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass46);
        java.lang.reflect.Type type49 = typeCircularBuffer1.get();
        boolean boolean50 = typeCircularBuffer1.isFull();
        boolean boolean51 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type52 = typeCircularBuffer1.get();
        java.lang.reflect.Type type53 = null;
        boolean boolean54 = typeCircularBuffer1.put(type53);
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(type40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(type44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(type49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNull(type52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test1127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1127");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type10 = typeCircularBuffer9.get();
        boolean boolean11 = typeCircularBuffer9.isFull();
        boolean boolean12 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer14.getClass();
        boolean boolean20 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass19);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        boolean boolean26 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer22.getClass();
        boolean boolean28 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass27);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean34 = typeCircularBuffer33.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass37 = typeCircularBuffer36.getClass();
        boolean boolean38 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass37);
        java.lang.reflect.Type type39 = typeCircularBuffer33.get();
        boolean boolean40 = typeCircularBuffer31.put(type39);
        boolean boolean41 = typeCircularBuffer31.isFull();
        java.lang.reflect.Type type42 = typeCircularBuffer31.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type45 = typeCircularBuffer44.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean48 = typeCircularBuffer47.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer50.getClass();
        boolean boolean52 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass51);
        java.lang.reflect.Type type53 = typeCircularBuffer47.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer55 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type56 = typeCircularBuffer55.get();
        boolean boolean57 = typeCircularBuffer55.isFull();
        boolean boolean58 = typeCircularBuffer55.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer60 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean61 = typeCircularBuffer60.isEmpty();
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        boolean boolean64 = typeCircularBuffer60.put((java.lang.reflect.Type) wildcardClass63);
        java.lang.Class<?> wildcardClass65 = typeCircularBuffer60.getClass();
        boolean boolean66 = typeCircularBuffer55.put((java.lang.reflect.Type) wildcardClass65);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer68 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean69 = typeCircularBuffer68.isEmpty();
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        boolean boolean72 = typeCircularBuffer68.put((java.lang.reflect.Type) wildcardClass71);
        java.lang.Class<?> wildcardClass73 = typeCircularBuffer68.getClass();
        boolean boolean74 = typeCircularBuffer55.put((java.lang.reflect.Type) wildcardClass73);
        boolean boolean75 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass73);
        boolean boolean76 = typeCircularBuffer44.put((java.lang.reflect.Type) wildcardClass73);
        boolean boolean77 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass73);
        boolean boolean78 = typeCircularBuffer31.isEmpty();
        java.lang.Class<?> wildcardClass79 = typeCircularBuffer31.getClass();
        boolean boolean80 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass79);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer82 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) ' ');
        boolean boolean83 = typeCircularBuffer82.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer85 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean86 = typeCircularBuffer85.isEmpty();
        java.lang.Object obj87 = new java.lang.Object();
        java.lang.Class<?> wildcardClass88 = obj87.getClass();
        boolean boolean89 = typeCircularBuffer85.put((java.lang.reflect.Type) wildcardClass88);
        java.lang.Class<?> wildcardClass90 = typeCircularBuffer85.getClass();
        boolean boolean91 = typeCircularBuffer82.put((java.lang.reflect.Type) wildcardClass90);
        java.lang.Class<?> wildcardClass92 = typeCircularBuffer82.getClass();
        boolean boolean93 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass92);
        java.lang.reflect.Type type94 = typeCircularBuffer1.get();
        java.lang.reflect.Type type95 = typeCircularBuffer1.get();
        java.lang.reflect.Type type96 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNull(type45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertNull(type56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(type94);
        org.junit.Assert.assertNull(type95);
        org.junit.Assert.assertNull(type96);
    }

    @Test
    public void test1128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1128");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isEmpty();
        boolean boolean12 = typeCircularBuffer1.isFull();
        boolean boolean13 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test1129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1129");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer5 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean6 = typeCircularBuffer5.isEmpty();
        java.lang.reflect.Type type7 = typeCircularBuffer5.get();
        java.lang.reflect.Type type8 = typeCircularBuffer5.get();
        java.lang.reflect.Type type9 = typeCircularBuffer5.get();
        boolean boolean10 = typeCircularBuffer5.isFull();
        boolean boolean11 = typeCircularBuffer5.isFull();
        java.lang.reflect.Type type12 = typeCircularBuffer5.get();
        boolean boolean13 = typeCircularBuffer5.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer20.getClass();
        boolean boolean22 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type23 = typeCircularBuffer17.get();
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer17.getClass();
        boolean boolean25 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean26 = typeCircularBuffer5.put((java.lang.reflect.Type) wildcardClass24);
        java.lang.reflect.Type type27 = typeCircularBuffer5.get();
        boolean boolean28 = typeCircularBuffer1.put(type27);
        java.lang.reflect.Type type29 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(type29);
    }

    @Test
    public void test1130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1130");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer10.get();
        boolean boolean17 = typeCircularBuffer8.put(type16);
        boolean boolean18 = typeCircularBuffer8.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean21 = typeCircularBuffer20.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer23.getClass();
        boolean boolean25 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass24);
        java.lang.reflect.Type type26 = typeCircularBuffer20.get();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        boolean boolean29 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass28);
        boolean boolean30 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass28);
        boolean boolean31 = typeCircularBuffer8.isEmpty();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        boolean boolean34 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass33);
        boolean boolean35 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass33);
        boolean boolean36 = typeCircularBuffer1.isFull();
        boolean boolean37 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass38 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test1131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1131");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        boolean boolean8 = typeCircularBuffer6.isEmpty();
        boolean boolean9 = typeCircularBuffer6.isEmpty();
        boolean boolean10 = typeCircularBuffer6.isEmpty();
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer6.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        boolean boolean13 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type14 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(type14);
    }

    @Test
    public void test1132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1132");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type12 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        boolean boolean19 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass17);
        boolean boolean20 = typeCircularBuffer1.isEmpty();
        boolean boolean21 = typeCircularBuffer1.isEmpty();
        boolean boolean22 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean25 = typeCircularBuffer24.isEmpty();
        java.lang.reflect.Type type26 = typeCircularBuffer24.get();
        java.lang.reflect.Type type27 = typeCircularBuffer24.get();
        java.lang.reflect.Type type28 = typeCircularBuffer24.get();
        boolean boolean29 = typeCircularBuffer24.isFull();
        boolean boolean30 = typeCircularBuffer24.isFull();
        boolean boolean31 = typeCircularBuffer24.isFull();
        java.lang.reflect.Type type32 = typeCircularBuffer24.get();
        boolean boolean33 = typeCircularBuffer24.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean36 = typeCircularBuffer35.isFull();
        java.lang.reflect.Type type37 = typeCircularBuffer35.get();
        boolean boolean38 = typeCircularBuffer35.isFull();
        java.lang.reflect.Type type39 = typeCircularBuffer35.get();
        boolean boolean40 = typeCircularBuffer35.isFull();
        boolean boolean41 = typeCircularBuffer35.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean44 = typeCircularBuffer43.isFull();
        boolean boolean45 = typeCircularBuffer43.isEmpty();
        java.lang.reflect.Type type46 = typeCircularBuffer43.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean51 = typeCircularBuffer50.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer53 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass54 = typeCircularBuffer53.getClass();
        boolean boolean55 = typeCircularBuffer50.put((java.lang.reflect.Type) wildcardClass54);
        java.lang.reflect.Type type56 = typeCircularBuffer50.get();
        boolean boolean57 = typeCircularBuffer48.put(type56);
        java.lang.Class<?> wildcardClass58 = typeCircularBuffer48.getClass();
        boolean boolean59 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass58);
        boolean boolean60 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass58);
        boolean boolean61 = typeCircularBuffer35.isEmpty();
        boolean boolean62 = typeCircularBuffer35.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer64 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer66 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean67 = typeCircularBuffer66.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer69 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass70 = typeCircularBuffer69.getClass();
        boolean boolean71 = typeCircularBuffer66.put((java.lang.reflect.Type) wildcardClass70);
        java.lang.reflect.Type type72 = typeCircularBuffer66.get();
        boolean boolean73 = typeCircularBuffer64.put(type72);
        java.lang.reflect.Type type74 = typeCircularBuffer64.get();
        java.lang.reflect.Type type75 = null;
        boolean boolean76 = typeCircularBuffer64.put(type75);
        boolean boolean77 = typeCircularBuffer64.isEmpty();
        java.lang.Class<?> wildcardClass78 = typeCircularBuffer64.getClass();
        boolean boolean79 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass78);
        java.lang.Class<?> wildcardClass80 = typeCircularBuffer35.getClass();
        boolean boolean81 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass80);
        java.lang.reflect.Type type82 = typeCircularBuffer24.get();
        boolean boolean83 = typeCircularBuffer1.put(type82);
        boolean boolean84 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(type26);
        org.junit.Assert.assertNull(type27);
        org.junit.Assert.assertNull(type28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(type32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(type37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(type39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(type46);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
    }

    @Test
    public void test1133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1133");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean4 = typeCircularBuffer3.isFull();
        boolean boolean5 = typeCircularBuffer3.isEmpty();
        java.lang.reflect.Type type6 = typeCircularBuffer3.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer10.get();
        boolean boolean17 = typeCircularBuffer8.put(type16);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer8.getClass();
        boolean boolean19 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass18);
        boolean boolean20 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass18);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type23 = typeCircularBuffer22.get();
        boolean boolean24 = typeCircularBuffer22.isFull();
        boolean boolean25 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean28 = typeCircularBuffer27.isEmpty();
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        boolean boolean31 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass30);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer27.getClass();
        boolean boolean33 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean37 = typeCircularBuffer36.isFull();
        boolean boolean38 = typeCircularBuffer36.isEmpty();
        java.lang.reflect.Type type39 = typeCircularBuffer36.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer46.getClass();
        boolean boolean48 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass47);
        java.lang.reflect.Type type49 = typeCircularBuffer43.get();
        boolean boolean50 = typeCircularBuffer41.put(type49);
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer41.getClass();
        boolean boolean52 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean53 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass51);
        java.lang.Class<?> wildcardClass54 = typeCircularBuffer22.getClass();
        boolean boolean55 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean56 = typeCircularBuffer1.isEmpty();
        boolean boolean57 = typeCircularBuffer1.isFull();
        boolean boolean58 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer60 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean61 = typeCircularBuffer60.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer63 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass64 = typeCircularBuffer63.getClass();
        boolean boolean65 = typeCircularBuffer60.put((java.lang.reflect.Type) wildcardClass64);
        java.lang.reflect.Type type66 = typeCircularBuffer60.get();
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        boolean boolean69 = typeCircularBuffer60.put((java.lang.reflect.Type) wildcardClass68);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer71 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean72 = typeCircularBuffer71.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer74 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass75 = typeCircularBuffer74.getClass();
        boolean boolean76 = typeCircularBuffer71.put((java.lang.reflect.Type) wildcardClass75);
        java.lang.Class<?> wildcardClass77 = typeCircularBuffer71.getClass();
        boolean boolean78 = typeCircularBuffer60.put((java.lang.reflect.Type) wildcardClass77);
        java.lang.reflect.Type type79 = typeCircularBuffer60.get();
        boolean boolean80 = typeCircularBuffer1.put(type79);
        java.lang.reflect.Type type81 = null;
        boolean boolean82 = typeCircularBuffer1.put(type81);
        java.lang.Class<?> wildcardClass83 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(type39);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test1134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1134");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type12 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        boolean boolean19 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass17);
        boolean boolean20 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type21 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        boolean boolean24 = typeCircularBuffer23.isEmpty();
        boolean boolean25 = typeCircularBuffer23.isEmpty();
        boolean boolean26 = typeCircularBuffer23.isFull();
        java.lang.reflect.Type type27 = typeCircularBuffer23.get();
        boolean boolean28 = typeCircularBuffer23.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean33 = typeCircularBuffer32.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer35.getClass();
        boolean boolean37 = typeCircularBuffer32.put((java.lang.reflect.Type) wildcardClass36);
        java.lang.reflect.Type type38 = typeCircularBuffer32.get();
        boolean boolean39 = typeCircularBuffer30.put(type38);
        boolean boolean40 = typeCircularBuffer30.isFull();
        java.lang.reflect.Type type41 = typeCircularBuffer30.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean46 = typeCircularBuffer45.isFull();
        boolean boolean47 = typeCircularBuffer45.isEmpty();
        java.lang.reflect.Type type48 = typeCircularBuffer45.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer52 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean53 = typeCircularBuffer52.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer55 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass56 = typeCircularBuffer55.getClass();
        boolean boolean57 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass56);
        java.lang.reflect.Type type58 = typeCircularBuffer52.get();
        boolean boolean59 = typeCircularBuffer50.put(type58);
        java.lang.Class<?> wildcardClass60 = typeCircularBuffer50.getClass();
        boolean boolean61 = typeCircularBuffer45.put((java.lang.reflect.Type) wildcardClass60);
        boolean boolean62 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass60);
        boolean boolean63 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass60);
        boolean boolean64 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass60);
        boolean boolean65 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass60);
        java.lang.Class<?> wildcardClass66 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(type48);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test1135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1135");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass8 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test1136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1136");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type12 = typeCircularBuffer1.get();
        boolean boolean13 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type14 = typeCircularBuffer1.get();
        java.lang.reflect.Type type15 = typeCircularBuffer1.get();
        java.lang.reflect.Type type16 = typeCircularBuffer1.get();
        boolean boolean17 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type18 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(type14);
        org.junit.Assert.assertNull(type15);
        org.junit.Assert.assertNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(type18);
    }

    @Test
    public void test1137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1137");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer5 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean6 = typeCircularBuffer5.isEmpty();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = typeCircularBuffer5.put((java.lang.reflect.Type) wildcardClass8);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer5.getClass();
        boolean boolean11 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass10);
        java.lang.Class<?> wildcardClass12 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test1138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1138");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        boolean boolean8 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        java.lang.reflect.Type type10 = typeCircularBuffer1.get();
        java.lang.reflect.Type type11 = null;
        boolean boolean12 = typeCircularBuffer1.put(type11);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test1139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1139");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        boolean boolean8 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        java.lang.reflect.Type type12 = typeCircularBuffer10.get();
        boolean boolean13 = typeCircularBuffer10.isFull();
        boolean boolean14 = typeCircularBuffer10.isFull();
        java.lang.reflect.Type type15 = typeCircularBuffer10.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean20 = typeCircularBuffer19.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass23 = typeCircularBuffer22.getClass();
        boolean boolean24 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass23);
        java.lang.reflect.Type type25 = typeCircularBuffer19.get();
        boolean boolean26 = typeCircularBuffer17.put(type25);
        boolean boolean27 = typeCircularBuffer17.isFull();
        java.lang.reflect.Type type28 = typeCircularBuffer17.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean31 = typeCircularBuffer30.isEmpty();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        boolean boolean34 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass33);
        boolean boolean35 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass33);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean40 = typeCircularBuffer39.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass43 = typeCircularBuffer42.getClass();
        boolean boolean44 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass43);
        java.lang.reflect.Type type45 = typeCircularBuffer39.get();
        boolean boolean46 = typeCircularBuffer37.put(type45);
        boolean boolean47 = typeCircularBuffer37.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer49 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean50 = typeCircularBuffer49.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer52 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass53 = typeCircularBuffer52.getClass();
        boolean boolean54 = typeCircularBuffer49.put((java.lang.reflect.Type) wildcardClass53);
        java.lang.reflect.Type type55 = typeCircularBuffer49.get();
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        boolean boolean58 = typeCircularBuffer49.put((java.lang.reflect.Type) wildcardClass57);
        boolean boolean59 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass57);
        boolean boolean60 = typeCircularBuffer37.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer62 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type63 = typeCircularBuffer62.get();
        boolean boolean64 = typeCircularBuffer62.isFull();
        boolean boolean65 = typeCircularBuffer62.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer67 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean68 = typeCircularBuffer67.isEmpty();
        java.lang.Object obj69 = new java.lang.Object();
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        boolean boolean71 = typeCircularBuffer67.put((java.lang.reflect.Type) wildcardClass70);
        java.lang.Class<?> wildcardClass72 = typeCircularBuffer67.getClass();
        boolean boolean73 = typeCircularBuffer62.put((java.lang.reflect.Type) wildcardClass72);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer75 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean76 = typeCircularBuffer75.isEmpty();
        java.lang.Object obj77 = new java.lang.Object();
        java.lang.Class<?> wildcardClass78 = obj77.getClass();
        boolean boolean79 = typeCircularBuffer75.put((java.lang.reflect.Type) wildcardClass78);
        java.lang.Class<?> wildcardClass80 = typeCircularBuffer75.getClass();
        boolean boolean81 = typeCircularBuffer62.put((java.lang.reflect.Type) wildcardClass80);
        boolean boolean82 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass80);
        java.lang.reflect.Type type83 = typeCircularBuffer37.get();
        boolean boolean84 = typeCircularBuffer17.put(type83);
        boolean boolean85 = typeCircularBuffer10.put(type83);
        boolean boolean86 = typeCircularBuffer1.put(type83);
        java.lang.Class<?> wildcardClass87 = type83.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(type15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(type63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(type83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test1140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1140");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean12 = typeCircularBuffer11.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass15 = typeCircularBuffer14.getClass();
        boolean boolean16 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass15);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean21 = typeCircularBuffer20.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer23.getClass();
        boolean boolean25 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass24);
        java.lang.reflect.Type type26 = typeCircularBuffer20.get();
        boolean boolean27 = typeCircularBuffer18.put(type26);
        boolean boolean28 = typeCircularBuffer18.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean31 = typeCircularBuffer30.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass34 = typeCircularBuffer33.getClass();
        boolean boolean35 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass34);
        java.lang.reflect.Type type36 = typeCircularBuffer30.get();
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        boolean boolean39 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass38);
        boolean boolean40 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass38);
        boolean boolean41 = typeCircularBuffer18.isEmpty();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        boolean boolean44 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass43);
        boolean boolean45 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass43);
        boolean boolean46 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass43);
        boolean boolean47 = typeCircularBuffer1.isEmpty();
        boolean boolean48 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type49 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(type49);
    }

    @Test
    public void test1141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1141");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        boolean boolean8 = typeCircularBuffer1.isEmpty();
        boolean boolean9 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type12 = typeCircularBuffer11.get();
        boolean boolean13 = typeCircularBuffer11.isFull();
        boolean boolean14 = typeCircularBuffer11.isFull();
        boolean boolean15 = typeCircularBuffer11.isFull();
        boolean boolean16 = typeCircularBuffer11.isFull();
        boolean boolean17 = typeCircularBuffer11.isFull();
        boolean boolean18 = typeCircularBuffer11.isEmpty();
        java.lang.reflect.Type type19 = typeCircularBuffer11.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean22 = typeCircularBuffer21.isEmpty();
        java.lang.reflect.Type type23 = typeCircularBuffer21.get();
        boolean boolean24 = typeCircularBuffer21.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type27 = typeCircularBuffer26.get();
        boolean boolean28 = typeCircularBuffer26.isFull();
        boolean boolean29 = typeCircularBuffer26.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        boolean boolean35 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass34);
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer31.getClass();
        boolean boolean37 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass36);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean40 = typeCircularBuffer39.isEmpty();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        boolean boolean43 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass42);
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer39.getClass();
        boolean boolean45 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean46 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean47 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean48 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass44);
        java.lang.reflect.Type type49 = null;
        boolean boolean50 = typeCircularBuffer1.put(type49);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer52 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type53 = typeCircularBuffer52.get();
        boolean boolean54 = typeCircularBuffer52.isFull();
        boolean boolean55 = typeCircularBuffer52.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer57 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean58 = typeCircularBuffer57.isEmpty();
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        boolean boolean61 = typeCircularBuffer57.put((java.lang.reflect.Type) wildcardClass60);
        java.lang.Class<?> wildcardClass62 = typeCircularBuffer57.getClass();
        boolean boolean63 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass62);
        java.lang.reflect.Type type64 = typeCircularBuffer52.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer66 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer68 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean69 = typeCircularBuffer68.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer71 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass72 = typeCircularBuffer71.getClass();
        boolean boolean73 = typeCircularBuffer68.put((java.lang.reflect.Type) wildcardClass72);
        java.lang.reflect.Type type74 = typeCircularBuffer68.get();
        boolean boolean75 = typeCircularBuffer66.put(type74);
        boolean boolean76 = typeCircularBuffer52.put(type74);
        java.lang.reflect.Type type77 = null;
        boolean boolean78 = typeCircularBuffer52.put(type77);
        java.lang.reflect.Type type79 = typeCircularBuffer52.get();
        boolean boolean80 = typeCircularBuffer1.put(type79);
        java.lang.Class<?> wildcardClass81 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(type19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(type53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test1142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1142");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        boolean boolean7 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean19 = typeCircularBuffer18.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer21.getClass();
        boolean boolean23 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass22);
        java.lang.reflect.Type type24 = typeCircularBuffer18.get();
        boolean boolean25 = typeCircularBuffer16.put(type24);
        boolean boolean26 = typeCircularBuffer16.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer31.getClass();
        boolean boolean33 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass32);
        java.lang.reflect.Type type34 = typeCircularBuffer28.get();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        boolean boolean37 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean38 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean39 = typeCircularBuffer16.isEmpty();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        boolean boolean42 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean43 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean44 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass41);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean47 = typeCircularBuffer46.isEmpty();
        boolean boolean48 = typeCircularBuffer46.isFull();
        java.lang.reflect.Type type49 = typeCircularBuffer46.get();
        boolean boolean50 = typeCircularBuffer46.isFull();
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer46.getClass();
        boolean boolean52 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean53 = typeCircularBuffer1.isFull();
        boolean boolean54 = typeCircularBuffer1.isEmpty();
        boolean boolean55 = typeCircularBuffer1.isFull();
        boolean boolean56 = typeCircularBuffer1.isFull();
        boolean boolean57 = typeCircularBuffer1.isEmpty();
        boolean boolean58 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(type49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
    }

    @Test
    public void test1143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1143");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        boolean boolean8 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        boolean boolean10 = typeCircularBuffer1.isEmpty();
        boolean boolean11 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type14 = typeCircularBuffer13.get();
        boolean boolean15 = typeCircularBuffer13.isFull();
        boolean boolean16 = typeCircularBuffer13.isFull();
        boolean boolean17 = typeCircularBuffer13.isEmpty();
        java.lang.reflect.Type type18 = typeCircularBuffer13.get();
        boolean boolean19 = typeCircularBuffer13.isEmpty();
        boolean boolean20 = typeCircularBuffer13.isFull();
        java.lang.reflect.Type type21 = typeCircularBuffer13.get();
        java.lang.reflect.Type type22 = typeCircularBuffer13.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) 'a');
        boolean boolean25 = typeCircularBuffer24.isFull();
        java.lang.Class<?> wildcardClass26 = typeCircularBuffer24.getClass();
        boolean boolean27 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass26);
        boolean boolean28 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass26);
        java.lang.reflect.Type type29 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(type14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(type18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(type21);
        org.junit.Assert.assertNull(type22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(type29);
    }

    @Test
    public void test1144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1144");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type10 = typeCircularBuffer9.get();
        boolean boolean11 = typeCircularBuffer9.isFull();
        boolean boolean12 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer14.getClass();
        boolean boolean20 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass19);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        boolean boolean26 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer22.getClass();
        boolean boolean28 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass27);
        java.lang.reflect.Type type30 = typeCircularBuffer1.get();
        java.lang.reflect.Type type31 = typeCircularBuffer1.get();
        java.lang.reflect.Type type32 = typeCircularBuffer1.get();
        java.lang.reflect.Type type33 = typeCircularBuffer1.get();
        java.lang.reflect.Type type34 = typeCircularBuffer1.get();
        java.lang.reflect.Type type35 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 10);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type40 = typeCircularBuffer39.get();
        boolean boolean41 = typeCircularBuffer39.isFull();
        java.lang.Class<?> wildcardClass42 = typeCircularBuffer39.getClass();
        boolean boolean43 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass42);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) 'a');
        boolean boolean46 = typeCircularBuffer45.isFull();
        java.lang.reflect.Type type47 = typeCircularBuffer45.get();
        boolean boolean48 = typeCircularBuffer45.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type51 = typeCircularBuffer50.get();
        boolean boolean52 = typeCircularBuffer50.isFull();
        boolean boolean53 = typeCircularBuffer50.isFull();
        boolean boolean54 = typeCircularBuffer50.isFull();
        java.lang.reflect.Type type55 = typeCircularBuffer50.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer57 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type58 = typeCircularBuffer57.get();
        boolean boolean59 = typeCircularBuffer57.isFull();
        boolean boolean60 = typeCircularBuffer57.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer62 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean63 = typeCircularBuffer62.isEmpty();
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        boolean boolean66 = typeCircularBuffer62.put((java.lang.reflect.Type) wildcardClass65);
        java.lang.Class<?> wildcardClass67 = typeCircularBuffer62.getClass();
        boolean boolean68 = typeCircularBuffer57.put((java.lang.reflect.Type) wildcardClass67);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer70 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean71 = typeCircularBuffer70.isEmpty();
        java.lang.Object obj72 = new java.lang.Object();
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        boolean boolean74 = typeCircularBuffer70.put((java.lang.reflect.Type) wildcardClass73);
        java.lang.Class<?> wildcardClass75 = typeCircularBuffer70.getClass();
        boolean boolean76 = typeCircularBuffer57.put((java.lang.reflect.Type) wildcardClass75);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer78 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer80 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean81 = typeCircularBuffer80.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer83 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass84 = typeCircularBuffer83.getClass();
        boolean boolean85 = typeCircularBuffer80.put((java.lang.reflect.Type) wildcardClass84);
        java.lang.reflect.Type type86 = typeCircularBuffer80.get();
        boolean boolean87 = typeCircularBuffer78.put(type86);
        java.lang.Class<?> wildcardClass88 = typeCircularBuffer78.getClass();
        boolean boolean89 = typeCircularBuffer57.put((java.lang.reflect.Type) wildcardClass88);
        java.lang.Class<?> wildcardClass90 = typeCircularBuffer57.getClass();
        boolean boolean91 = typeCircularBuffer50.put((java.lang.reflect.Type) wildcardClass90);
        boolean boolean92 = typeCircularBuffer45.put((java.lang.reflect.Type) wildcardClass90);
        java.lang.reflect.Type type93 = typeCircularBuffer45.get();
        java.lang.Class<?> wildcardClass94 = typeCircularBuffer45.getClass();
        boolean boolean95 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass94);
        boolean boolean96 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass94);
        java.lang.Class<?> wildcardClass97 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNull(type31);
        org.junit.Assert.assertNull(type32);
        org.junit.Assert.assertNull(type33);
        org.junit.Assert.assertNull(type34);
        org.junit.Assert.assertNull(type35);
        org.junit.Assert.assertNull(type40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(type47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(type51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(type55);
        org.junit.Assert.assertNull(type58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(type86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(type93);
        org.junit.Assert.assertNotNull(wildcardClass94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1145");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        java.lang.reflect.Type type12 = typeCircularBuffer6.get();
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        boolean boolean15 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass14);
        boolean boolean16 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass14);
        boolean boolean17 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean22 = typeCircularBuffer21.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass25 = typeCircularBuffer24.getClass();
        boolean boolean26 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.reflect.Type type27 = typeCircularBuffer21.get();
        boolean boolean28 = typeCircularBuffer19.put(type27);
        boolean boolean29 = typeCircularBuffer19.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer34.getClass();
        boolean boolean36 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass35);
        java.lang.reflect.Type type37 = typeCircularBuffer31.get();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        boolean boolean40 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass39);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean43 = typeCircularBuffer42.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass46 = typeCircularBuffer45.getClass();
        boolean boolean47 = typeCircularBuffer42.put((java.lang.reflect.Type) wildcardClass46);
        java.lang.Class<?> wildcardClass48 = typeCircularBuffer42.getClass();
        boolean boolean49 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass48);
        boolean boolean50 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass48);
        boolean boolean51 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass48);
        boolean boolean52 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer54 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type55 = typeCircularBuffer54.get();
        boolean boolean56 = typeCircularBuffer54.isFull();
        boolean boolean57 = typeCircularBuffer54.isFull();
        boolean boolean58 = typeCircularBuffer54.isEmpty();
        boolean boolean59 = typeCircularBuffer54.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer61 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type62 = typeCircularBuffer61.get();
        boolean boolean63 = typeCircularBuffer61.isFull();
        boolean boolean64 = typeCircularBuffer61.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer66 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean67 = typeCircularBuffer66.isEmpty();
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        boolean boolean70 = typeCircularBuffer66.put((java.lang.reflect.Type) wildcardClass69);
        java.lang.Class<?> wildcardClass71 = typeCircularBuffer66.getClass();
        boolean boolean72 = typeCircularBuffer61.put((java.lang.reflect.Type) wildcardClass71);
        java.lang.reflect.Type type73 = typeCircularBuffer61.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer75 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer77 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean78 = typeCircularBuffer77.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer80 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass81 = typeCircularBuffer80.getClass();
        boolean boolean82 = typeCircularBuffer77.put((java.lang.reflect.Type) wildcardClass81);
        java.lang.reflect.Type type83 = typeCircularBuffer77.get();
        boolean boolean84 = typeCircularBuffer75.put(type83);
        boolean boolean85 = typeCircularBuffer61.put(type83);
        java.lang.reflect.Type type86 = null;
        boolean boolean87 = typeCircularBuffer61.put(type86);
        java.lang.reflect.Type type88 = typeCircularBuffer61.get();
        boolean boolean89 = typeCircularBuffer54.put(type88);
        java.lang.Class<?> wildcardClass90 = typeCircularBuffer54.getClass();
        boolean boolean91 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass90);
        boolean boolean92 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type93 = null;
        boolean boolean94 = typeCircularBuffer1.put(type93);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(type55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(type62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(type83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(type88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test1146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1146");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type10 = typeCircularBuffer9.get();
        boolean boolean11 = typeCircularBuffer9.isFull();
        boolean boolean12 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer14.getClass();
        boolean boolean20 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass19);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        boolean boolean26 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer22.getClass();
        boolean boolean28 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean30 = typeCircularBuffer1.isEmpty();
        boolean boolean31 = typeCircularBuffer1.isEmpty();
        boolean boolean32 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
    }

    @Test
    public void test1147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1147");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        boolean boolean8 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        boolean boolean10 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type13 = typeCircularBuffer12.get();
        boolean boolean14 = typeCircularBuffer12.isFull();
        boolean boolean15 = typeCircularBuffer12.isFull();
        boolean boolean16 = typeCircularBuffer12.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean19 = typeCircularBuffer18.isFull();
        java.lang.reflect.Type type20 = typeCircularBuffer18.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        boolean boolean26 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer22.getClass();
        boolean boolean28 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer18.isEmpty();
        boolean boolean30 = typeCircularBuffer18.isFull();
        java.lang.reflect.Type type31 = typeCircularBuffer18.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) ' ');
        boolean boolean34 = typeCircularBuffer33.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean37 = typeCircularBuffer36.isEmpty();
        java.lang.reflect.Type type38 = typeCircularBuffer36.get();
        java.lang.reflect.Type type39 = typeCircularBuffer36.get();
        java.lang.reflect.Type type40 = typeCircularBuffer36.get();
        boolean boolean41 = typeCircularBuffer36.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean44 = typeCircularBuffer43.isFull();
        java.lang.reflect.Type type45 = typeCircularBuffer43.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean48 = typeCircularBuffer47.isEmpty();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        boolean boolean51 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass50);
        java.lang.Class<?> wildcardClass52 = typeCircularBuffer47.getClass();
        boolean boolean53 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass52);
        boolean boolean54 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass52);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer56 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer58 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type59 = typeCircularBuffer58.get();
        boolean boolean60 = typeCircularBuffer58.isFull();
        boolean boolean61 = typeCircularBuffer58.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer63 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean64 = typeCircularBuffer63.isEmpty();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        boolean boolean67 = typeCircularBuffer63.put((java.lang.reflect.Type) wildcardClass66);
        java.lang.Class<?> wildcardClass68 = typeCircularBuffer63.getClass();
        boolean boolean69 = typeCircularBuffer58.put((java.lang.reflect.Type) wildcardClass68);
        boolean boolean70 = typeCircularBuffer58.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer72 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean73 = typeCircularBuffer72.isFull();
        boolean boolean74 = typeCircularBuffer72.isEmpty();
        java.lang.reflect.Type type75 = typeCircularBuffer72.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer77 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer79 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean80 = typeCircularBuffer79.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer82 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass83 = typeCircularBuffer82.getClass();
        boolean boolean84 = typeCircularBuffer79.put((java.lang.reflect.Type) wildcardClass83);
        java.lang.reflect.Type type85 = typeCircularBuffer79.get();
        boolean boolean86 = typeCircularBuffer77.put(type85);
        java.lang.Class<?> wildcardClass87 = typeCircularBuffer77.getClass();
        boolean boolean88 = typeCircularBuffer72.put((java.lang.reflect.Type) wildcardClass87);
        boolean boolean89 = typeCircularBuffer58.put((java.lang.reflect.Type) wildcardClass87);
        boolean boolean90 = typeCircularBuffer56.put((java.lang.reflect.Type) wildcardClass87);
        boolean boolean91 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass87);
        java.lang.Class<?> wildcardClass92 = typeCircularBuffer36.getClass();
        boolean boolean93 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass92);
        boolean boolean94 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass92);
        boolean boolean95 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass92);
        boolean boolean96 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass92);
        java.lang.Class<?> wildcardClass97 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(type13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(type20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(type38);
        org.junit.Assert.assertNull(type39);
        org.junit.Assert.assertNull(type40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(type45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNull(type59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNull(type75);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(type85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1148");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        boolean boolean8 = typeCircularBuffer1.isEmpty();
        boolean boolean9 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean14 = typeCircularBuffer13.isFull();
        boolean boolean15 = typeCircularBuffer13.isEmpty();
        java.lang.reflect.Type type16 = typeCircularBuffer13.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean21 = typeCircularBuffer20.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer23.getClass();
        boolean boolean25 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass24);
        java.lang.reflect.Type type26 = typeCircularBuffer20.get();
        boolean boolean27 = typeCircularBuffer18.put(type26);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer18.getClass();
        boolean boolean29 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass28);
        boolean boolean30 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass28);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type33 = typeCircularBuffer32.get();
        boolean boolean34 = typeCircularBuffer32.isFull();
        boolean boolean35 = typeCircularBuffer32.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean38 = typeCircularBuffer37.isEmpty();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        boolean boolean41 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass40);
        java.lang.Class<?> wildcardClass42 = typeCircularBuffer37.getClass();
        boolean boolean43 = typeCircularBuffer32.put((java.lang.reflect.Type) wildcardClass42);
        boolean boolean44 = typeCircularBuffer32.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean47 = typeCircularBuffer46.isFull();
        boolean boolean48 = typeCircularBuffer46.isEmpty();
        java.lang.reflect.Type type49 = typeCircularBuffer46.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer53 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean54 = typeCircularBuffer53.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer56 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass57 = typeCircularBuffer56.getClass();
        boolean boolean58 = typeCircularBuffer53.put((java.lang.reflect.Type) wildcardClass57);
        java.lang.reflect.Type type59 = typeCircularBuffer53.get();
        boolean boolean60 = typeCircularBuffer51.put(type59);
        java.lang.Class<?> wildcardClass61 = typeCircularBuffer51.getClass();
        boolean boolean62 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass61);
        boolean boolean63 = typeCircularBuffer32.put((java.lang.reflect.Type) wildcardClass61);
        java.lang.Class<?> wildcardClass64 = typeCircularBuffer32.getClass();
        boolean boolean65 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass64);
        boolean boolean66 = typeCircularBuffer11.isFull();
        java.lang.reflect.Type type67 = typeCircularBuffer11.get();
        boolean boolean68 = typeCircularBuffer1.put(type67);
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(type16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(type33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(type49);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
    }

    @Test
    public void test1149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1149");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        boolean boolean6 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        boolean boolean8 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type11 = typeCircularBuffer10.get();
        boolean boolean12 = typeCircularBuffer10.isFull();
        boolean boolean13 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean16 = typeCircularBuffer15.isEmpty();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        boolean boolean19 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass18);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer15.getClass();
        boolean boolean21 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type22 = typeCircularBuffer10.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean27 = typeCircularBuffer26.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass30 = typeCircularBuffer29.getClass();
        boolean boolean31 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass30);
        java.lang.reflect.Type type32 = typeCircularBuffer26.get();
        boolean boolean33 = typeCircularBuffer24.put(type32);
        boolean boolean34 = typeCircularBuffer10.put(type32);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer10.getClass();
        boolean boolean36 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass35);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type39 = typeCircularBuffer38.get();
        boolean boolean40 = typeCircularBuffer38.isFull();
        boolean boolean41 = typeCircularBuffer38.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer46.getClass();
        boolean boolean48 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass47);
        boolean boolean49 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass47);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer53 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean54 = typeCircularBuffer53.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer56 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass57 = typeCircularBuffer56.getClass();
        boolean boolean58 = typeCircularBuffer53.put((java.lang.reflect.Type) wildcardClass57);
        java.lang.reflect.Type type59 = typeCircularBuffer53.get();
        java.lang.Class<?> wildcardClass60 = typeCircularBuffer53.getClass();
        boolean boolean61 = typeCircularBuffer51.put((java.lang.reflect.Type) wildcardClass60);
        boolean boolean62 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass60);
        boolean boolean63 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass60);
        java.lang.reflect.Type type64 = typeCircularBuffer1.get();
        boolean boolean65 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(type11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(type39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
    }

    @Test
    public void test1150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1150");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer5 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean6 = typeCircularBuffer5.isEmpty();
        java.lang.reflect.Type type7 = typeCircularBuffer5.get();
        java.lang.reflect.Type type8 = typeCircularBuffer5.get();
        java.lang.reflect.Type type9 = typeCircularBuffer5.get();
        boolean boolean10 = typeCircularBuffer5.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean13 = typeCircularBuffer12.isFull();
        java.lang.reflect.Type type14 = typeCircularBuffer12.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        boolean boolean20 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass19);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer16.getClass();
        boolean boolean22 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = typeCircularBuffer5.put((java.lang.reflect.Type) wildcardClass21);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type28 = typeCircularBuffer27.get();
        boolean boolean29 = typeCircularBuffer27.isFull();
        boolean boolean30 = typeCircularBuffer27.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean33 = typeCircularBuffer32.isEmpty();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        boolean boolean36 = typeCircularBuffer32.put((java.lang.reflect.Type) wildcardClass35);
        java.lang.Class<?> wildcardClass37 = typeCircularBuffer32.getClass();
        boolean boolean38 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass37);
        boolean boolean39 = typeCircularBuffer27.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean42 = typeCircularBuffer41.isFull();
        boolean boolean43 = typeCircularBuffer41.isEmpty();
        java.lang.reflect.Type type44 = typeCircularBuffer41.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean49 = typeCircularBuffer48.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass52 = typeCircularBuffer51.getClass();
        boolean boolean53 = typeCircularBuffer48.put((java.lang.reflect.Type) wildcardClass52);
        java.lang.reflect.Type type54 = typeCircularBuffer48.get();
        boolean boolean55 = typeCircularBuffer46.put(type54);
        java.lang.Class<?> wildcardClass56 = typeCircularBuffer46.getClass();
        boolean boolean57 = typeCircularBuffer41.put((java.lang.reflect.Type) wildcardClass56);
        boolean boolean58 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass56);
        boolean boolean59 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass56);
        boolean boolean60 = typeCircularBuffer5.put((java.lang.reflect.Type) wildcardClass56);
        boolean boolean61 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass56);
        boolean boolean62 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type63 = null;
        boolean boolean64 = typeCircularBuffer1.put(type63);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(type14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(type28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(type44);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test1151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1151");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        java.lang.reflect.Type type8 = typeCircularBuffer6.get();
        java.lang.reflect.Type type9 = typeCircularBuffer6.get();
        java.lang.reflect.Type type10 = typeCircularBuffer6.get();
        boolean boolean11 = typeCircularBuffer6.isFull();
        boolean boolean12 = typeCircularBuffer6.isFull();
        boolean boolean13 = typeCircularBuffer6.isFull();
        boolean boolean14 = typeCircularBuffer6.isEmpty();
        boolean boolean15 = typeCircularBuffer6.isFull();
        boolean boolean16 = typeCircularBuffer6.isFull();
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer6.getClass();
        boolean boolean18 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test1152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1152");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isFull();
        boolean boolean8 = typeCircularBuffer1.isFull();
        boolean boolean9 = typeCircularBuffer1.isEmpty();
        boolean boolean10 = typeCircularBuffer1.isFull();
        boolean boolean11 = typeCircularBuffer1.isFull();
        boolean boolean12 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test1153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1153");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        java.lang.reflect.Type type12 = typeCircularBuffer6.get();
        boolean boolean13 = typeCircularBuffer4.put(type12);
        boolean boolean14 = typeCircularBuffer4.isFull();
        java.lang.reflect.Type type15 = typeCircularBuffer4.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        boolean boolean21 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean22 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean24 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type25 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean30 = typeCircularBuffer29.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass33 = typeCircularBuffer32.getClass();
        boolean boolean34 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass33);
        java.lang.reflect.Type type35 = typeCircularBuffer29.get();
        boolean boolean36 = typeCircularBuffer27.put(type35);
        boolean boolean37 = typeCircularBuffer27.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean40 = typeCircularBuffer39.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass43 = typeCircularBuffer42.getClass();
        boolean boolean44 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass43);
        java.lang.reflect.Type type45 = typeCircularBuffer39.get();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        boolean boolean48 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass47);
        boolean boolean49 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass47);
        boolean boolean50 = typeCircularBuffer27.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer52 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type53 = typeCircularBuffer52.get();
        boolean boolean54 = typeCircularBuffer52.isFull();
        boolean boolean55 = typeCircularBuffer52.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer57 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean58 = typeCircularBuffer57.isEmpty();
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        boolean boolean61 = typeCircularBuffer57.put((java.lang.reflect.Type) wildcardClass60);
        java.lang.Class<?> wildcardClass62 = typeCircularBuffer57.getClass();
        boolean boolean63 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass62);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer65 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean66 = typeCircularBuffer65.isEmpty();
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        boolean boolean69 = typeCircularBuffer65.put((java.lang.reflect.Type) wildcardClass68);
        java.lang.Class<?> wildcardClass70 = typeCircularBuffer65.getClass();
        boolean boolean71 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass70);
        boolean boolean72 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass70);
        java.lang.reflect.Type type73 = typeCircularBuffer27.get();
        boolean boolean74 = typeCircularBuffer1.put(type73);
        boolean boolean75 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type76 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass77 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(type53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test1154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1154");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean5 = typeCircularBuffer4.isFull();
        boolean boolean6 = typeCircularBuffer4.isEmpty();
        boolean boolean7 = typeCircularBuffer4.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        java.lang.reflect.Type type15 = typeCircularBuffer9.get();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass17);
        boolean boolean19 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass17);
        boolean boolean20 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass17);
        boolean boolean21 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test1155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1155");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) 'a');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass4 = typeCircularBuffer3.getClass();
        boolean boolean5 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass4);
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type10 = typeCircularBuffer9.get();
        boolean boolean11 = typeCircularBuffer9.isFull();
        boolean boolean12 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer14.getClass();
        boolean boolean20 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass19);
        java.lang.reflect.Type type21 = typeCircularBuffer9.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean26 = typeCircularBuffer25.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass29 = typeCircularBuffer28.getClass();
        boolean boolean30 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass29);
        java.lang.reflect.Type type31 = typeCircularBuffer25.get();
        boolean boolean32 = typeCircularBuffer23.put(type31);
        boolean boolean33 = typeCircularBuffer9.put(type31);
        java.lang.Class<?> wildcardClass34 = typeCircularBuffer9.getClass();
        boolean boolean35 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass34);
        java.lang.reflect.Type type36 = typeCircularBuffer1.get();
        java.lang.reflect.Type type37 = typeCircularBuffer1.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass38 = type37.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNull(type37);
    }

    @Test
    public void test1156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1156");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer17.getClass();
        boolean boolean19 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass18);
        java.lang.reflect.Type type20 = typeCircularBuffer14.get();
        boolean boolean21 = typeCircularBuffer12.put(type20);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer12.getClass();
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass22);
        boolean boolean24 = typeCircularBuffer1.isFull();
        boolean boolean25 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type26 = typeCircularBuffer1.get();
        boolean boolean27 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type28 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(type28);
    }

    @Test
    public void test1157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1157");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        boolean boolean7 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean19 = typeCircularBuffer18.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer21.getClass();
        boolean boolean23 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass22);
        java.lang.reflect.Type type24 = typeCircularBuffer18.get();
        boolean boolean25 = typeCircularBuffer16.put(type24);
        boolean boolean26 = typeCircularBuffer16.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer31.getClass();
        boolean boolean33 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass32);
        java.lang.reflect.Type type34 = typeCircularBuffer28.get();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        boolean boolean37 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean38 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean39 = typeCircularBuffer16.isEmpty();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        boolean boolean42 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean43 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean44 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean45 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test1158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1158");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 0);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass3 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test1159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1159");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type12 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type15 = typeCircularBuffer14.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer20.getClass();
        boolean boolean22 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type23 = typeCircularBuffer17.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type26 = typeCircularBuffer25.get();
        boolean boolean27 = typeCircularBuffer25.isFull();
        boolean boolean28 = typeCircularBuffer25.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean31 = typeCircularBuffer30.isEmpty();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        boolean boolean34 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass33);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer30.getClass();
        boolean boolean36 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass35);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean39 = typeCircularBuffer38.isEmpty();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        boolean boolean42 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass41);
        java.lang.Class<?> wildcardClass43 = typeCircularBuffer38.getClass();
        boolean boolean44 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass43);
        boolean boolean45 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass43);
        boolean boolean46 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass43);
        boolean boolean47 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass43);
        boolean boolean48 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type49 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass50 = type49.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNull(type15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNull(type26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test1160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1160");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isEmpty();
        boolean boolean12 = typeCircularBuffer1.isFull();
        boolean boolean13 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer20.getClass();
        boolean boolean22 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type23 = typeCircularBuffer17.get();
        boolean boolean24 = typeCircularBuffer15.put(type23);
        boolean boolean25 = typeCircularBuffer15.isFull();
        java.lang.reflect.Type type26 = typeCircularBuffer15.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer31.getClass();
        boolean boolean33 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer28.isFull();
        java.lang.reflect.Type type35 = typeCircularBuffer28.get();
        boolean boolean36 = typeCircularBuffer15.put(type35);
        boolean boolean37 = typeCircularBuffer1.put(type35);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean40 = typeCircularBuffer39.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass43 = typeCircularBuffer42.getClass();
        boolean boolean44 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass43);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean49 = typeCircularBuffer48.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass52 = typeCircularBuffer51.getClass();
        boolean boolean53 = typeCircularBuffer48.put((java.lang.reflect.Type) wildcardClass52);
        java.lang.reflect.Type type54 = typeCircularBuffer48.get();
        boolean boolean55 = typeCircularBuffer46.put(type54);
        boolean boolean56 = typeCircularBuffer46.isFull();
        java.lang.reflect.Type type57 = typeCircularBuffer46.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer59 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean60 = typeCircularBuffer59.isEmpty();
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        boolean boolean63 = typeCircularBuffer59.put((java.lang.reflect.Type) wildcardClass62);
        boolean boolean64 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass62);
        boolean boolean65 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass62);
        boolean boolean66 = typeCircularBuffer39.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer68 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean69 = typeCircularBuffer68.isFull();
        boolean boolean70 = typeCircularBuffer68.isEmpty();
        boolean boolean71 = typeCircularBuffer68.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer73 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean74 = typeCircularBuffer73.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer76 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass77 = typeCircularBuffer76.getClass();
        boolean boolean78 = typeCircularBuffer73.put((java.lang.reflect.Type) wildcardClass77);
        java.lang.reflect.Type type79 = typeCircularBuffer73.get();
        java.lang.Object obj80 = new java.lang.Object();
        java.lang.Class<?> wildcardClass81 = obj80.getClass();
        boolean boolean82 = typeCircularBuffer73.put((java.lang.reflect.Type) wildcardClass81);
        boolean boolean83 = typeCircularBuffer68.put((java.lang.reflect.Type) wildcardClass81);
        boolean boolean84 = typeCircularBuffer68.isFull();
        java.lang.reflect.Type type85 = typeCircularBuffer68.get();
        boolean boolean86 = typeCircularBuffer39.put(type85);
        boolean boolean87 = typeCircularBuffer1.put(type85);
        boolean boolean88 = typeCircularBuffer1.isFull();
        boolean boolean89 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type90 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass91 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(type85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(type90);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test1161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1161");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer10.get();
        boolean boolean17 = typeCircularBuffer8.put(type16);
        boolean boolean18 = typeCircularBuffer8.isFull();
        java.lang.reflect.Type type19 = typeCircularBuffer8.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean22 = typeCircularBuffer21.isEmpty();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean26 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean27 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean28 = typeCircularBuffer1.isFull();
        boolean boolean29 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type30 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
    }

    @Test
    public void test1162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1162");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        boolean boolean8 = typeCircularBuffer6.isFull();
        java.lang.reflect.Type type9 = typeCircularBuffer6.get();
        boolean boolean10 = typeCircularBuffer6.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer17.getClass();
        boolean boolean19 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass18);
        java.lang.reflect.Type type20 = typeCircularBuffer14.get();
        boolean boolean21 = typeCircularBuffer12.put(type20);
        boolean boolean22 = typeCircularBuffer12.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean25 = typeCircularBuffer24.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer27.getClass();
        boolean boolean29 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.reflect.Type type30 = typeCircularBuffer24.get();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        boolean boolean33 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean35 = typeCircularBuffer12.isEmpty();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        boolean boolean38 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass37);
        boolean boolean39 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass37);
        java.lang.Class<?> wildcardClass40 = typeCircularBuffer6.getClass();
        boolean boolean41 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass40);
        boolean boolean42 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass43 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test1163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1163");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isEmpty();
        boolean boolean12 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer17.getClass();
        boolean boolean19 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass18);
        java.lang.reflect.Type type20 = typeCircularBuffer14.get();
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        boolean boolean23 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass22);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean26 = typeCircularBuffer25.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass29 = typeCircularBuffer28.getClass();
        boolean boolean30 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass29);
        java.lang.reflect.Type type31 = typeCircularBuffer25.get();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        boolean boolean34 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass33);
        java.lang.reflect.Type type35 = typeCircularBuffer25.get();
        boolean boolean36 = typeCircularBuffer14.put(type35);
        boolean boolean37 = typeCircularBuffer1.put(type35);
        boolean boolean38 = typeCircularBuffer1.isEmpty();
        boolean boolean39 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass40 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test1164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1164");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        java.lang.reflect.Type type12 = typeCircularBuffer6.get();
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        boolean boolean15 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass14);
        boolean boolean16 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass14);
        boolean boolean17 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean20 = typeCircularBuffer19.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass23 = typeCircularBuffer22.getClass();
        boolean boolean24 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass23);
        boolean boolean25 = typeCircularBuffer19.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.GenericDeclaration> genericDeclarationCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.GenericDeclaration>((int) (short) 100);
        java.lang.Class<?> wildcardClass28 = genericDeclarationCircularBuffer27.getClass();
        boolean boolean29 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass28);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean32 = typeCircularBuffer31.isFull();
        java.lang.reflect.Type type33 = typeCircularBuffer31.get();
        boolean boolean34 = typeCircularBuffer31.isFull();
        java.lang.reflect.Type type35 = typeCircularBuffer31.get();
        boolean boolean36 = typeCircularBuffer31.isFull();
        boolean boolean37 = typeCircularBuffer31.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean40 = typeCircularBuffer39.isFull();
        boolean boolean41 = typeCircularBuffer39.isEmpty();
        java.lang.reflect.Type type42 = typeCircularBuffer39.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean47 = typeCircularBuffer46.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer49 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass50 = typeCircularBuffer49.getClass();
        boolean boolean51 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass50);
        java.lang.reflect.Type type52 = typeCircularBuffer46.get();
        boolean boolean53 = typeCircularBuffer44.put(type52);
        java.lang.Class<?> wildcardClass54 = typeCircularBuffer44.getClass();
        boolean boolean55 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean56 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean57 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean58 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass54);
        java.lang.reflect.Type type59 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass60 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(type33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(type35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(type42);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test1165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1165");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type10 = typeCircularBuffer9.get();
        boolean boolean11 = typeCircularBuffer9.isFull();
        boolean boolean12 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer14.getClass();
        boolean boolean20 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass19);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        boolean boolean26 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer22.getClass();
        boolean boolean28 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass27);
        java.lang.reflect.Type type30 = typeCircularBuffer1.get();
        java.lang.reflect.Type type31 = typeCircularBuffer1.get();
        java.lang.reflect.Type type32 = typeCircularBuffer1.get();
        java.lang.reflect.Type type33 = typeCircularBuffer1.get();
        boolean boolean34 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type35 = typeCircularBuffer1.get();
        boolean boolean36 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNull(type31);
        org.junit.Assert.assertNull(type32);
        org.junit.Assert.assertNull(type33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(type35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
    }

    @Test
    public void test1166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1166");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        boolean boolean8 = typeCircularBuffer1.isFull();
        boolean boolean9 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type10 = typeCircularBuffer1.get();
        boolean boolean11 = typeCircularBuffer1.isFull();
        boolean boolean12 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type15 = typeCircularBuffer14.get();
        boolean boolean16 = typeCircularBuffer14.isFull();
        boolean boolean17 = typeCircularBuffer14.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean20 = typeCircularBuffer19.isEmpty();
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        boolean boolean23 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass22);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer19.getClass();
        boolean boolean25 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass24);
        java.lang.reflect.Type type26 = typeCircularBuffer14.get();
        boolean boolean27 = typeCircularBuffer14.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type30 = typeCircularBuffer29.get();
        boolean boolean31 = typeCircularBuffer29.isFull();
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer29.getClass();
        boolean boolean33 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer14.isFull();
        java.lang.reflect.Type type35 = typeCircularBuffer14.get();
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer14.getClass();
        boolean boolean37 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean38 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass39 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(type15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test1167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1167");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean9 = typeCircularBuffer8.isFull();
        java.lang.reflect.Type type10 = typeCircularBuffer8.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean13 = typeCircularBuffer12.isEmpty();
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        boolean boolean16 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass15);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer12.getClass();
        boolean boolean18 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass17);
        boolean boolean19 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass17);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '#');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean26 = typeCircularBuffer25.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass29 = typeCircularBuffer28.getClass();
        boolean boolean30 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass29);
        java.lang.reflect.Type type31 = typeCircularBuffer25.get();
        boolean boolean32 = typeCircularBuffer23.put(type31);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean37 = typeCircularBuffer36.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass40 = typeCircularBuffer39.getClass();
        boolean boolean41 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass40);
        java.lang.reflect.Type type42 = typeCircularBuffer36.get();
        boolean boolean43 = typeCircularBuffer34.put(type42);
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer34.getClass();
        boolean boolean45 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean46 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean47 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean48 = typeCircularBuffer1.isFull();
        boolean boolean49 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type50 = typeCircularBuffer1.get();
        boolean boolean51 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer53 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean54 = typeCircularBuffer53.isFull();
        java.lang.reflect.Type type55 = typeCircularBuffer53.get();
        boolean boolean56 = typeCircularBuffer53.isFull();
        java.lang.reflect.Type type57 = typeCircularBuffer53.get();
        java.lang.Class<?> wildcardClass58 = typeCircularBuffer53.getClass();
        boolean boolean59 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(type55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(type57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
    }

    @Test
    public void test1168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1168");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        boolean boolean5 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass4);
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isFull();
        boolean boolean8 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(type9);
    }

    @Test
    public void test1169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1169");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type8 = typeCircularBuffer7.get();
        boolean boolean9 = typeCircularBuffer7.isFull();
        boolean boolean10 = typeCircularBuffer7.isFull();
        boolean boolean11 = typeCircularBuffer7.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean14 = typeCircularBuffer13.isFull();
        java.lang.reflect.Type type15 = typeCircularBuffer13.get();
        boolean boolean16 = typeCircularBuffer13.isFull();
        java.lang.reflect.Type type17 = typeCircularBuffer13.get();
        boolean boolean18 = typeCircularBuffer13.isFull();
        boolean boolean19 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean22 = typeCircularBuffer21.isFull();
        boolean boolean23 = typeCircularBuffer21.isEmpty();
        java.lang.reflect.Type type24 = typeCircularBuffer21.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer31.getClass();
        boolean boolean33 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass32);
        java.lang.reflect.Type type34 = typeCircularBuffer28.get();
        boolean boolean35 = typeCircularBuffer26.put(type34);
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer26.getClass();
        boolean boolean37 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean38 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean39 = typeCircularBuffer13.isEmpty();
        boolean boolean40 = typeCircularBuffer13.isFull();
        java.lang.reflect.Type type41 = typeCircularBuffer13.get();
        boolean boolean42 = typeCircularBuffer7.put(type41);
        java.lang.reflect.Type type43 = typeCircularBuffer7.get();
        boolean boolean44 = typeCircularBuffer1.put(type43);
        boolean boolean45 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(type15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(type17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(type24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
    }

    @Test
    public void test1170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1170");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        boolean boolean9 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test1171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1171");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type12 = typeCircularBuffer1.get();
        java.lang.reflect.Type type13 = typeCircularBuffer1.get();
        java.lang.reflect.Type type14 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean19 = typeCircularBuffer18.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer21.getClass();
        boolean boolean23 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass22);
        java.lang.reflect.Type type24 = typeCircularBuffer18.get();
        boolean boolean25 = typeCircularBuffer16.put(type24);
        java.lang.reflect.Type type26 = typeCircularBuffer16.get();
        java.lang.reflect.Type type27 = null;
        boolean boolean28 = typeCircularBuffer16.put(type27);
        boolean boolean29 = typeCircularBuffer16.isFull();
        boolean boolean30 = typeCircularBuffer16.isFull();
        java.lang.Class<?> wildcardClass31 = typeCircularBuffer16.getClass();
        boolean boolean32 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass31);
        boolean boolean33 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNull(type13);
        org.junit.Assert.assertNull(type14);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    }

    @Test
    public void test1172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1172");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        boolean boolean6 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test1173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1173");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) ' ');
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer5 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type6 = typeCircularBuffer5.get();
        boolean boolean7 = typeCircularBuffer5.isFull();
        boolean boolean8 = typeCircularBuffer5.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        boolean boolean14 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass13);
        java.lang.Class<?> wildcardClass15 = typeCircularBuffer10.getClass();
        boolean boolean16 = typeCircularBuffer5.put((java.lang.reflect.Type) wildcardClass15);
        java.lang.reflect.Type type17 = typeCircularBuffer5.get();
        boolean boolean18 = typeCircularBuffer5.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean21 = typeCircularBuffer20.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer23.getClass();
        boolean boolean25 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean26 = typeCircularBuffer20.isEmpty();
        java.lang.reflect.Type type27 = typeCircularBuffer20.get();
        boolean boolean28 = typeCircularBuffer5.put(type27);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type31 = typeCircularBuffer30.get();
        boolean boolean32 = typeCircularBuffer30.isFull();
        boolean boolean33 = typeCircularBuffer30.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean36 = typeCircularBuffer35.isEmpty();
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        boolean boolean39 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass38);
        java.lang.Class<?> wildcardClass40 = typeCircularBuffer35.getClass();
        boolean boolean41 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass40);
        java.lang.reflect.Type type42 = typeCircularBuffer30.get();
        boolean boolean43 = typeCircularBuffer30.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type46 = typeCircularBuffer45.get();
        boolean boolean47 = typeCircularBuffer45.isFull();
        java.lang.Class<?> wildcardClass48 = typeCircularBuffer45.getClass();
        boolean boolean49 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass48);
        boolean boolean50 = typeCircularBuffer5.put((java.lang.reflect.Type) wildcardClass48);
        boolean boolean51 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass48);
        java.lang.reflect.Type type52 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(type31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(type46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(type52);
    }

    @Test
    public void test1174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1174");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        boolean boolean6 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass9 = type8.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertNull(type8);
    }

    @Test
    public void test1175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1175");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer17.getClass();
        boolean boolean19 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass18);
        java.lang.reflect.Type type20 = typeCircularBuffer14.get();
        boolean boolean21 = typeCircularBuffer12.put(type20);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer12.getClass();
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass22);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean26 = typeCircularBuffer25.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass29 = typeCircularBuffer28.getClass();
        boolean boolean30 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass29);
        java.lang.reflect.Type type31 = typeCircularBuffer25.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type34 = typeCircularBuffer33.get();
        boolean boolean35 = typeCircularBuffer33.isFull();
        boolean boolean36 = typeCircularBuffer33.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean39 = typeCircularBuffer38.isEmpty();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        boolean boolean42 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass41);
        java.lang.Class<?> wildcardClass43 = typeCircularBuffer38.getClass();
        boolean boolean44 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass43);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean47 = typeCircularBuffer46.isEmpty();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        boolean boolean50 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass49);
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer46.getClass();
        boolean boolean52 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean53 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass51);
        java.lang.reflect.Type type54 = typeCircularBuffer25.get();
        boolean boolean55 = typeCircularBuffer1.put(type54);
        java.lang.reflect.Type type56 = typeCircularBuffer1.get();
        java.lang.reflect.Type type57 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNull(type34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNull(type57);
    }

    @Test
    public void test1176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1176");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        java.lang.reflect.Type type11 = typeCircularBuffer1.get();
        java.lang.reflect.Type type12 = null;
        boolean boolean13 = typeCircularBuffer1.put(type12);
        boolean boolean14 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type15 = typeCircularBuffer1.get();
        java.lang.reflect.Type type16 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(type15);
        org.junit.Assert.assertNull(type16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test1177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1177");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean5 = typeCircularBuffer4.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass8 = typeCircularBuffer7.getClass();
        boolean boolean9 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass8);
        java.lang.reflect.Type type10 = typeCircularBuffer4.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type13 = typeCircularBuffer12.get();
        boolean boolean14 = typeCircularBuffer12.isFull();
        boolean boolean15 = typeCircularBuffer12.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        boolean boolean21 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer17.getClass();
        boolean boolean23 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass22);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean26 = typeCircularBuffer25.isEmpty();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        boolean boolean29 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.Class<?> wildcardClass30 = typeCircularBuffer25.getClass();
        boolean boolean31 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass30);
        boolean boolean32 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass30);
        java.lang.Class<?> wildcardClass33 = typeCircularBuffer4.getClass();
        boolean boolean34 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass33);
        boolean boolean35 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean38 = typeCircularBuffer37.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass41 = typeCircularBuffer40.getClass();
        boolean boolean42 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean43 = typeCircularBuffer37.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean46 = typeCircularBuffer45.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass49 = typeCircularBuffer48.getClass();
        boolean boolean50 = typeCircularBuffer45.put((java.lang.reflect.Type) wildcardClass49);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer52 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer54 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean55 = typeCircularBuffer54.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer57 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass58 = typeCircularBuffer57.getClass();
        boolean boolean59 = typeCircularBuffer54.put((java.lang.reflect.Type) wildcardClass58);
        java.lang.reflect.Type type60 = typeCircularBuffer54.get();
        boolean boolean61 = typeCircularBuffer52.put(type60);
        boolean boolean62 = typeCircularBuffer52.isFull();
        java.lang.reflect.Type type63 = typeCircularBuffer52.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer65 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean66 = typeCircularBuffer65.isEmpty();
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        boolean boolean69 = typeCircularBuffer65.put((java.lang.reflect.Type) wildcardClass68);
        boolean boolean70 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass68);
        boolean boolean71 = typeCircularBuffer45.put((java.lang.reflect.Type) wildcardClass68);
        boolean boolean72 = typeCircularBuffer45.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer74 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean75 = typeCircularBuffer74.isFull();
        boolean boolean76 = typeCircularBuffer74.isEmpty();
        boolean boolean77 = typeCircularBuffer74.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer79 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean80 = typeCircularBuffer79.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer82 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass83 = typeCircularBuffer82.getClass();
        boolean boolean84 = typeCircularBuffer79.put((java.lang.reflect.Type) wildcardClass83);
        java.lang.reflect.Type type85 = typeCircularBuffer79.get();
        java.lang.Object obj86 = new java.lang.Object();
        java.lang.Class<?> wildcardClass87 = obj86.getClass();
        boolean boolean88 = typeCircularBuffer79.put((java.lang.reflect.Type) wildcardClass87);
        boolean boolean89 = typeCircularBuffer74.put((java.lang.reflect.Type) wildcardClass87);
        boolean boolean90 = typeCircularBuffer74.isFull();
        java.lang.reflect.Type type91 = typeCircularBuffer74.get();
        boolean boolean92 = typeCircularBuffer45.put(type91);
        java.lang.Class<?> wildcardClass93 = type91.getClass();
        boolean boolean94 = typeCircularBuffer37.put(type91);
        java.lang.reflect.Type type95 = typeCircularBuffer37.get();
        boolean boolean96 = typeCircularBuffer1.put(type95);
        java.lang.Class<?> wildcardClass97 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNull(type13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(type85);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(type91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(type95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1178");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '#');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer5 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean6 = typeCircularBuffer5.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass9 = typeCircularBuffer8.getClass();
        boolean boolean10 = typeCircularBuffer5.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.reflect.Type type11 = typeCircularBuffer5.get();
        boolean boolean12 = typeCircularBuffer3.put(type11);
        boolean boolean13 = typeCircularBuffer3.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean16 = typeCircularBuffer15.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer18.getClass();
        boolean boolean20 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass19);
        java.lang.reflect.Type type21 = typeCircularBuffer15.get();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        boolean boolean24 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass23);
        boolean boolean25 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass23);
        boolean boolean26 = typeCircularBuffer3.isEmpty();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        boolean boolean29 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass28);
        boolean boolean30 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass28);
        boolean boolean31 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type32 = typeCircularBuffer1.get();
        boolean boolean33 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test1179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1179");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 100);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test1180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1180");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.AnnotatedElement> annotatedElementCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.AnnotatedElement>(1);
    }

    @Test
    public void test1181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1181");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        boolean boolean5 = typeCircularBuffer1.isFull();
        boolean boolean6 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type9 = typeCircularBuffer8.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        boolean boolean20 = typeCircularBuffer11.put(type19);
        boolean boolean21 = typeCircularBuffer11.isFull();
        java.lang.reflect.Type type22 = typeCircularBuffer11.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean25 = typeCircularBuffer24.isEmpty();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        boolean boolean28 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean30 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass27);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 0);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer34.getClass();
        boolean boolean36 = typeCircularBuffer32.put((java.lang.reflect.Type) wildcardClass35);
        boolean boolean37 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass35);
        boolean boolean38 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass35);
        java.lang.reflect.Type type39 = typeCircularBuffer1.get();
        java.lang.reflect.Type type40 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean43 = typeCircularBuffer42.isEmpty();
        boolean boolean44 = typeCircularBuffer42.isEmpty();
        java.lang.reflect.Type type45 = typeCircularBuffer42.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean48 = typeCircularBuffer47.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer50.getClass();
        boolean boolean52 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean53 = typeCircularBuffer42.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean54 = typeCircularBuffer42.isEmpty();
        java.lang.Class<?> wildcardClass55 = typeCircularBuffer42.getClass();
        boolean boolean56 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass55);
        boolean boolean57 = typeCircularBuffer1.isFull();
        boolean boolean58 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNull(type40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(type45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
    }

    @Test
    public void test1182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1182");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean16 = typeCircularBuffer15.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer18.getClass();
        boolean boolean20 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass19);
        java.lang.reflect.Type type21 = typeCircularBuffer15.get();
        boolean boolean22 = typeCircularBuffer13.put(type21);
        boolean boolean23 = typeCircularBuffer13.isFull();
        java.lang.reflect.Type type24 = typeCircularBuffer13.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean27 = typeCircularBuffer26.isEmpty();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        boolean boolean30 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass29);
        boolean boolean31 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass29);
        boolean boolean32 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass29);
        boolean boolean33 = typeCircularBuffer6.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean36 = typeCircularBuffer35.isFull();
        boolean boolean37 = typeCircularBuffer35.isEmpty();
        boolean boolean38 = typeCircularBuffer35.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean41 = typeCircularBuffer40.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer43.getClass();
        boolean boolean45 = typeCircularBuffer40.put((java.lang.reflect.Type) wildcardClass44);
        java.lang.reflect.Type type46 = typeCircularBuffer40.get();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        boolean boolean49 = typeCircularBuffer40.put((java.lang.reflect.Type) wildcardClass48);
        boolean boolean50 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass48);
        boolean boolean51 = typeCircularBuffer35.isFull();
        java.lang.reflect.Type type52 = typeCircularBuffer35.get();
        boolean boolean53 = typeCircularBuffer6.put(type52);
        boolean boolean54 = typeCircularBuffer1.put(type52);
        java.lang.reflect.Type type55 = typeCircularBuffer1.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass56 = type55.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(type55);
    }

    @Test
    public void test1183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1183");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type10 = typeCircularBuffer9.get();
        boolean boolean11 = typeCircularBuffer9.isFull();
        boolean boolean12 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer14.getClass();
        boolean boolean20 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass19);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        boolean boolean26 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer22.getClass();
        boolean boolean28 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass27);
        java.lang.reflect.Type type30 = typeCircularBuffer1.get();
        java.lang.reflect.Type type31 = typeCircularBuffer1.get();
        java.lang.reflect.Type type32 = typeCircularBuffer1.get();
        java.lang.reflect.Type type33 = typeCircularBuffer1.get();
        java.lang.reflect.Type type34 = typeCircularBuffer1.get();
        java.lang.reflect.Type type35 = typeCircularBuffer1.get();
        boolean boolean36 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNull(type31);
        org.junit.Assert.assertNull(type32);
        org.junit.Assert.assertNull(type33);
        org.junit.Assert.assertNull(type34);
        org.junit.Assert.assertNull(type35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test1184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1184");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean8 = typeCircularBuffer7.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer10.getClass();
        boolean boolean12 = typeCircularBuffer7.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.reflect.Type type13 = typeCircularBuffer7.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type16 = typeCircularBuffer15.get();
        boolean boolean17 = typeCircularBuffer15.isFull();
        boolean boolean18 = typeCircularBuffer15.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean21 = typeCircularBuffer20.isEmpty();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        boolean boolean24 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass23);
        java.lang.Class<?> wildcardClass25 = typeCircularBuffer20.getClass();
        boolean boolean26 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass25);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        boolean boolean32 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass31);
        java.lang.Class<?> wildcardClass33 = typeCircularBuffer28.getClass();
        boolean boolean34 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass33);
        boolean boolean35 = typeCircularBuffer7.put((java.lang.reflect.Type) wildcardClass33);
        boolean boolean36 = typeCircularBuffer7.isEmpty();
        boolean boolean37 = typeCircularBuffer7.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type40 = typeCircularBuffer39.get();
        boolean boolean41 = typeCircularBuffer39.isFull();
        boolean boolean42 = typeCircularBuffer39.isFull();
        boolean boolean43 = typeCircularBuffer39.isEmpty();
        java.lang.reflect.Type type44 = typeCircularBuffer39.get();
        boolean boolean45 = typeCircularBuffer39.isEmpty();
        java.lang.Class<?> wildcardClass46 = typeCircularBuffer39.getClass();
        boolean boolean47 = typeCircularBuffer7.put((java.lang.reflect.Type) wildcardClass46);
        boolean boolean48 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass46);
        java.lang.reflect.Type type49 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean52 = typeCircularBuffer51.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer54 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass55 = typeCircularBuffer54.getClass();
        boolean boolean56 = typeCircularBuffer51.put((java.lang.reflect.Type) wildcardClass55);
        java.lang.reflect.Type type57 = null;
        boolean boolean58 = typeCircularBuffer51.put(type57);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer60 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer62 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean63 = typeCircularBuffer62.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer65 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass66 = typeCircularBuffer65.getClass();
        boolean boolean67 = typeCircularBuffer62.put((java.lang.reflect.Type) wildcardClass66);
        java.lang.reflect.Type type68 = typeCircularBuffer62.get();
        java.lang.Class<?> wildcardClass69 = typeCircularBuffer62.getClass();
        boolean boolean70 = typeCircularBuffer60.put((java.lang.reflect.Type) wildcardClass69);
        boolean boolean71 = typeCircularBuffer51.put((java.lang.reflect.Type) wildcardClass69);
        java.lang.reflect.Type type72 = typeCircularBuffer51.get();
        java.lang.reflect.Type type73 = typeCircularBuffer51.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer75 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer77 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean78 = typeCircularBuffer77.isFull();
        boolean boolean79 = typeCircularBuffer77.isEmpty();
        java.lang.reflect.Type type80 = typeCircularBuffer77.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer82 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer84 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean85 = typeCircularBuffer84.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer87 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass88 = typeCircularBuffer87.getClass();
        boolean boolean89 = typeCircularBuffer84.put((java.lang.reflect.Type) wildcardClass88);
        java.lang.reflect.Type type90 = typeCircularBuffer84.get();
        boolean boolean91 = typeCircularBuffer82.put(type90);
        java.lang.Class<?> wildcardClass92 = typeCircularBuffer82.getClass();
        boolean boolean93 = typeCircularBuffer77.put((java.lang.reflect.Type) wildcardClass92);
        boolean boolean94 = typeCircularBuffer75.put((java.lang.reflect.Type) wildcardClass92);
        java.lang.Class<?> wildcardClass95 = typeCircularBuffer75.getClass();
        boolean boolean96 = typeCircularBuffer51.put((java.lang.reflect.Type) wildcardClass95);
        boolean boolean97 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass95);
        boolean boolean98 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(type40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(type44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(type49);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertNull(type73);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNull(type80);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(type90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNotNull(wildcardClass95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
    }

    @Test
    public void test1185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1185");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        java.lang.reflect.Type type11 = typeCircularBuffer1.get();
        boolean boolean12 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer17.getClass();
        boolean boolean19 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass18);
        java.lang.reflect.Type type20 = typeCircularBuffer14.get();
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        boolean boolean23 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass22);
        java.lang.reflect.Type type24 = typeCircularBuffer14.get();
        boolean boolean25 = typeCircularBuffer1.put(type24);
        boolean boolean26 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type27 = typeCircularBuffer1.get();
        boolean boolean28 = typeCircularBuffer1.isEmpty();
        boolean boolean29 = typeCircularBuffer1.isFull();
        boolean boolean30 = typeCircularBuffer1.isFull();
        boolean boolean31 = typeCircularBuffer1.isEmpty();
        boolean boolean32 = typeCircularBuffer1.isFull();
        boolean boolean33 = typeCircularBuffer1.isEmpty();
        boolean boolean34 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
    }

    @Test
    public void test1186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1186");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean4 = typeCircularBuffer3.isFull();
        boolean boolean5 = typeCircularBuffer3.isEmpty();
        java.lang.reflect.Type type6 = typeCircularBuffer3.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer10.get();
        boolean boolean17 = typeCircularBuffer8.put(type16);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer8.getClass();
        boolean boolean19 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass18);
        boolean boolean20 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass18);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type23 = typeCircularBuffer22.get();
        boolean boolean24 = typeCircularBuffer22.isFull();
        boolean boolean25 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean28 = typeCircularBuffer27.isEmpty();
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        boolean boolean31 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass30);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer27.getClass();
        boolean boolean33 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean37 = typeCircularBuffer36.isFull();
        boolean boolean38 = typeCircularBuffer36.isEmpty();
        java.lang.reflect.Type type39 = typeCircularBuffer36.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer46.getClass();
        boolean boolean48 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass47);
        java.lang.reflect.Type type49 = typeCircularBuffer43.get();
        boolean boolean50 = typeCircularBuffer41.put(type49);
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer41.getClass();
        boolean boolean52 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean53 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass51);
        java.lang.Class<?> wildcardClass54 = typeCircularBuffer22.getClass();
        boolean boolean55 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean56 = typeCircularBuffer1.isEmpty();
        boolean boolean57 = typeCircularBuffer1.isFull();
        boolean boolean58 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer60 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean61 = typeCircularBuffer60.isFull();
        java.lang.reflect.Type type62 = typeCircularBuffer60.get();
        java.lang.Class<?> wildcardClass63 = typeCircularBuffer60.getClass();
        boolean boolean64 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass63);
        boolean boolean65 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(type39);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(type62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test1187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1187");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type7 = typeCircularBuffer6.get();
        boolean boolean8 = typeCircularBuffer6.isFull();
        boolean boolean9 = typeCircularBuffer6.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean12 = typeCircularBuffer11.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass15 = typeCircularBuffer14.getClass();
        boolean boolean16 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass15);
        boolean boolean17 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass15);
        boolean boolean18 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass26 = typeCircularBuffer25.getClass();
        boolean boolean27 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass26);
        java.lang.reflect.Type type28 = typeCircularBuffer22.get();
        boolean boolean29 = typeCircularBuffer20.put(type28);
        boolean boolean30 = typeCircularBuffer20.isFull();
        java.lang.reflect.Type type31 = typeCircularBuffer20.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean34 = typeCircularBuffer33.isEmpty();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        boolean boolean37 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean38 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass36);
        java.lang.reflect.Type type39 = typeCircularBuffer20.get();
        boolean boolean40 = typeCircularBuffer6.put(type39);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean45 = typeCircularBuffer44.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass48 = typeCircularBuffer47.getClass();
        boolean boolean49 = typeCircularBuffer44.put((java.lang.reflect.Type) wildcardClass48);
        java.lang.reflect.Type type50 = typeCircularBuffer44.get();
        boolean boolean51 = typeCircularBuffer42.put(type50);
        boolean boolean52 = typeCircularBuffer42.isFull();
        java.lang.reflect.Type type53 = typeCircularBuffer42.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer55 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean56 = typeCircularBuffer55.isEmpty();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        boolean boolean59 = typeCircularBuffer55.put((java.lang.reflect.Type) wildcardClass58);
        boolean boolean60 = typeCircularBuffer42.put((java.lang.reflect.Type) wildcardClass58);
        java.lang.reflect.Type type61 = typeCircularBuffer42.get();
        boolean boolean62 = typeCircularBuffer6.put(type61);
        boolean boolean63 = typeCircularBuffer1.put(type61);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer65 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean66 = typeCircularBuffer65.isEmpty();
        boolean boolean67 = typeCircularBuffer65.isEmpty();
        java.lang.reflect.Type type68 = typeCircularBuffer65.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer70 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean71 = typeCircularBuffer70.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer73 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass74 = typeCircularBuffer73.getClass();
        boolean boolean75 = typeCircularBuffer70.put((java.lang.reflect.Type) wildcardClass74);
        boolean boolean76 = typeCircularBuffer65.put((java.lang.reflect.Type) wildcardClass74);
        boolean boolean77 = typeCircularBuffer65.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.invoke.TypeDescriptor> typeDescriptorCircularBuffer79 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.invoke.TypeDescriptor>(100);
        java.lang.Class<?> wildcardClass80 = typeDescriptorCircularBuffer79.getClass();
        boolean boolean81 = typeCircularBuffer65.put((java.lang.reflect.Type) wildcardClass80);
        boolean boolean82 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass80);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer84 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type85 = typeCircularBuffer84.get();
        boolean boolean86 = typeCircularBuffer84.isFull();
        java.lang.reflect.Type type87 = typeCircularBuffer84.get();
        java.lang.Class<?> wildcardClass88 = typeCircularBuffer84.getClass();
        boolean boolean89 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass88);
        boolean boolean90 = typeCircularBuffer1.isEmpty();
        boolean boolean91 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNull(type68);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNull(type85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNull(type87);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
    }

    @Test
    public void test1188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1188");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 10);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) 'a');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer5 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass6 = typeCircularBuffer5.getClass();
        boolean boolean7 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass6);
        java.lang.reflect.Type type8 = typeCircularBuffer3.get();
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type12 = typeCircularBuffer11.get();
        boolean boolean13 = typeCircularBuffer11.isFull();
        boolean boolean14 = typeCircularBuffer11.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        boolean boolean20 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass19);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer16.getClass();
        boolean boolean22 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type23 = typeCircularBuffer11.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean28 = typeCircularBuffer27.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass31 = typeCircularBuffer30.getClass();
        boolean boolean32 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass31);
        java.lang.reflect.Type type33 = typeCircularBuffer27.get();
        boolean boolean34 = typeCircularBuffer25.put(type33);
        boolean boolean35 = typeCircularBuffer11.put(type33);
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer11.getClass();
        boolean boolean37 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass36);
        java.lang.Class<?> wildcardClass38 = typeCircularBuffer3.getClass();
        boolean boolean39 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass38);
        boolean boolean40 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type41 = typeCircularBuffer1.get();
        boolean boolean42 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type43 = typeCircularBuffer1.get();
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(type43);
    }

    @Test
    public void test1189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1189");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        java.lang.reflect.Type type12 = typeCircularBuffer6.get();
        boolean boolean13 = typeCircularBuffer4.put(type12);
        boolean boolean14 = typeCircularBuffer4.isFull();
        java.lang.reflect.Type type15 = typeCircularBuffer4.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        boolean boolean21 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean22 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean24 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type25 = typeCircularBuffer1.get();
        boolean boolean26 = typeCircularBuffer1.isFull();
        boolean boolean27 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test1190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1190");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        boolean boolean8 = typeCircularBuffer1.isEmpty();
        boolean boolean9 = typeCircularBuffer1.isFull();
        boolean boolean10 = typeCircularBuffer1.isFull();
        boolean boolean11 = typeCircularBuffer1.isFull();
        boolean boolean12 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type13 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(type13);
    }

    @Test
    public void test1191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1191");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '#');
        boolean boolean2 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 10);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type7 = typeCircularBuffer6.get();
        boolean boolean8 = typeCircularBuffer6.isFull();
        java.lang.Class<?> wildcardClass9 = typeCircularBuffer6.getClass();
        boolean boolean10 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer4.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer19.getClass();
        boolean boolean21 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type22 = typeCircularBuffer16.get();
        boolean boolean23 = typeCircularBuffer14.put(type22);
        boolean boolean24 = typeCircularBuffer14.isFull();
        java.lang.reflect.Type type25 = typeCircularBuffer14.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean28 = typeCircularBuffer27.isEmpty();
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        boolean boolean31 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass30);
        boolean boolean32 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass30);
        boolean boolean33 = typeCircularBuffer14.isEmpty();
        java.lang.reflect.Type type34 = typeCircularBuffer14.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean37 = typeCircularBuffer36.isFull();
        boolean boolean38 = typeCircularBuffer36.isEmpty();
        boolean boolean39 = typeCircularBuffer36.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean42 = typeCircularBuffer41.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass45 = typeCircularBuffer44.getClass();
        boolean boolean46 = typeCircularBuffer41.put((java.lang.reflect.Type) wildcardClass45);
        java.lang.reflect.Type type47 = typeCircularBuffer41.get();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        boolean boolean50 = typeCircularBuffer41.put((java.lang.reflect.Type) wildcardClass49);
        boolean boolean51 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass49);
        boolean boolean52 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass49);
        java.lang.Class<?> wildcardClass53 = typeCircularBuffer14.getClass();
        boolean boolean54 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass53);
        java.lang.reflect.Type type55 = typeCircularBuffer1.get();
        java.lang.reflect.Type type56 = typeCircularBuffer1.get();
        java.lang.reflect.Type type57 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass58 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNull(type57);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test1192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1192");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass10);
        boolean boolean13 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer20.getClass();
        boolean boolean22 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type23 = typeCircularBuffer17.get();
        boolean boolean24 = typeCircularBuffer15.put(type23);
        boolean boolean25 = typeCircularBuffer15.isFull();
        java.lang.reflect.Type type26 = typeCircularBuffer15.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        boolean boolean32 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass31);
        boolean boolean33 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass31);
        java.lang.reflect.Type type34 = typeCircularBuffer15.get();
        boolean boolean35 = typeCircularBuffer1.put(type34);
        boolean boolean36 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type37 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(type37);
    }

    @Test
    public void test1193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1193");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        boolean boolean5 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass8 = typeCircularBuffer7.getClass();
        boolean boolean9 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass8);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean12 = typeCircularBuffer11.isFull();
        boolean boolean13 = typeCircularBuffer11.isEmpty();
        boolean boolean14 = typeCircularBuffer11.isFull();
        java.lang.Class<?> wildcardClass15 = typeCircularBuffer11.getClass();
        boolean boolean16 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass15);
        java.lang.reflect.Type type17 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean22 = typeCircularBuffer21.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass25 = typeCircularBuffer24.getClass();
        boolean boolean26 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.reflect.Type type27 = typeCircularBuffer21.get();
        boolean boolean28 = typeCircularBuffer19.put(type27);
        boolean boolean29 = typeCircularBuffer19.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer34.getClass();
        boolean boolean36 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass35);
        java.lang.reflect.Type type37 = typeCircularBuffer31.get();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        boolean boolean40 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass39);
        boolean boolean41 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass39);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer46.getClass();
        boolean boolean48 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass47);
        java.lang.reflect.Type type49 = typeCircularBuffer43.get();
        boolean boolean50 = typeCircularBuffer19.put(type49);
        java.lang.reflect.Type type51 = typeCircularBuffer19.get();
        boolean boolean52 = typeCircularBuffer1.put(type51);
        boolean boolean53 = typeCircularBuffer1.isEmpty();
        boolean boolean54 = typeCircularBuffer1.isFull();
        boolean boolean55 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test1194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1194");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        boolean boolean8 = typeCircularBuffer1.isEmpty();
        boolean boolean9 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test1195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1195");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) ' ');
        java.lang.reflect.Type type10 = typeCircularBuffer9.get();
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer9.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean17 = typeCircularBuffer16.isFull();
        boolean boolean18 = typeCircularBuffer16.isEmpty();
        java.lang.reflect.Type type19 = typeCircularBuffer16.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean24 = typeCircularBuffer23.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer26.getClass();
        boolean boolean28 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass27);
        java.lang.reflect.Type type29 = typeCircularBuffer23.get();
        boolean boolean30 = typeCircularBuffer21.put(type29);
        java.lang.Class<?> wildcardClass31 = typeCircularBuffer21.getClass();
        boolean boolean32 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass31);
        boolean boolean33 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass31);
        boolean boolean34 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass31);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.CharSequence> charSequenceCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.CharSequence>((int) (short) 100);
        java.lang.Class<?> wildcardClass37 = charSequenceCircularBuffer36.getClass();
        boolean boolean38 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass37);
        java.lang.reflect.Type type39 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass40 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(type19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test1196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1196");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type12 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type15 = typeCircularBuffer14.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer20.getClass();
        boolean boolean22 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type23 = typeCircularBuffer17.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type26 = typeCircularBuffer25.get();
        boolean boolean27 = typeCircularBuffer25.isFull();
        boolean boolean28 = typeCircularBuffer25.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean31 = typeCircularBuffer30.isEmpty();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        boolean boolean34 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass33);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer30.getClass();
        boolean boolean36 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass35);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean39 = typeCircularBuffer38.isEmpty();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        boolean boolean42 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass41);
        java.lang.Class<?> wildcardClass43 = typeCircularBuffer38.getClass();
        boolean boolean44 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass43);
        boolean boolean45 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass43);
        boolean boolean46 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass43);
        boolean boolean47 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass43);
        boolean boolean48 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean51 = typeCircularBuffer50.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer53 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass54 = typeCircularBuffer53.getClass();
        boolean boolean55 = typeCircularBuffer50.put((java.lang.reflect.Type) wildcardClass54);
        java.lang.reflect.Type type56 = typeCircularBuffer50.get();
        boolean boolean57 = typeCircularBuffer1.put(type56);
        java.lang.Class<?> wildcardClass58 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNull(type15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNull(type26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test1197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1197");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        boolean boolean7 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer10.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type15 = typeCircularBuffer14.get();
        boolean boolean16 = typeCircularBuffer14.isFull();
        boolean boolean17 = typeCircularBuffer14.isEmpty();
        boolean boolean18 = typeCircularBuffer14.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer20.getClass();
        boolean boolean22 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass21);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean25 = typeCircularBuffer24.isFull();
        boolean boolean26 = typeCircularBuffer24.isEmpty();
        boolean boolean27 = typeCircularBuffer24.isFull();
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer24.getClass();
        boolean boolean29 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.reflect.Type type30 = typeCircularBuffer14.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type33 = typeCircularBuffer32.get();
        boolean boolean34 = typeCircularBuffer32.isFull();
        boolean boolean35 = typeCircularBuffer32.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean38 = typeCircularBuffer37.isEmpty();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        boolean boolean41 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass40);
        java.lang.Class<?> wildcardClass42 = typeCircularBuffer37.getClass();
        boolean boolean43 = typeCircularBuffer32.put((java.lang.reflect.Type) wildcardClass42);
        java.lang.reflect.Type type44 = typeCircularBuffer32.get();
        boolean boolean45 = typeCircularBuffer32.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean48 = typeCircularBuffer47.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer50.getClass();
        boolean boolean52 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean53 = typeCircularBuffer47.isEmpty();
        java.lang.reflect.Type type54 = typeCircularBuffer47.get();
        boolean boolean55 = typeCircularBuffer32.put(type54);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer57 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type58 = typeCircularBuffer57.get();
        boolean boolean59 = typeCircularBuffer57.isFull();
        boolean boolean60 = typeCircularBuffer57.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer62 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean63 = typeCircularBuffer62.isEmpty();
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        boolean boolean66 = typeCircularBuffer62.put((java.lang.reflect.Type) wildcardClass65);
        java.lang.Class<?> wildcardClass67 = typeCircularBuffer62.getClass();
        boolean boolean68 = typeCircularBuffer57.put((java.lang.reflect.Type) wildcardClass67);
        java.lang.reflect.Type type69 = typeCircularBuffer57.get();
        boolean boolean70 = typeCircularBuffer57.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer72 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type73 = typeCircularBuffer72.get();
        boolean boolean74 = typeCircularBuffer72.isFull();
        java.lang.Class<?> wildcardClass75 = typeCircularBuffer72.getClass();
        boolean boolean76 = typeCircularBuffer57.put((java.lang.reflect.Type) wildcardClass75);
        boolean boolean77 = typeCircularBuffer32.put((java.lang.reflect.Type) wildcardClass75);
        java.lang.reflect.Type type78 = typeCircularBuffer32.get();
        boolean boolean79 = typeCircularBuffer14.put(type78);
        boolean boolean80 = typeCircularBuffer1.put(type78);
        java.lang.Class<?> wildcardClass81 = type78.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(type15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNull(type33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(type58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(type73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(type78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test1198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1198");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        boolean boolean9 = typeCircularBuffer1.isFull();
        boolean boolean10 = typeCircularBuffer1.isEmpty();
        boolean boolean11 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type22 = typeCircularBuffer21.get();
        boolean boolean23 = typeCircularBuffer21.isFull();
        boolean boolean24 = typeCircularBuffer21.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean27 = typeCircularBuffer26.isEmpty();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        boolean boolean30 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass29);
        java.lang.Class<?> wildcardClass31 = typeCircularBuffer26.getClass();
        boolean boolean32 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass31);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean35 = typeCircularBuffer34.isEmpty();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        boolean boolean38 = typeCircularBuffer34.put((java.lang.reflect.Type) wildcardClass37);
        java.lang.Class<?> wildcardClass39 = typeCircularBuffer34.getClass();
        boolean boolean40 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass39);
        boolean boolean41 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass39);
        boolean boolean42 = typeCircularBuffer13.isEmpty();
        boolean boolean43 = typeCircularBuffer13.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean48 = typeCircularBuffer47.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer50.getClass();
        boolean boolean52 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass51);
        java.lang.reflect.Type type53 = typeCircularBuffer47.get();
        boolean boolean54 = typeCircularBuffer45.put(type53);
        boolean boolean55 = typeCircularBuffer45.isEmpty();
        boolean boolean56 = typeCircularBuffer45.isFull();
        boolean boolean57 = typeCircularBuffer45.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer59 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer61 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean62 = typeCircularBuffer61.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer64 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass65 = typeCircularBuffer64.getClass();
        boolean boolean66 = typeCircularBuffer61.put((java.lang.reflect.Type) wildcardClass65);
        java.lang.reflect.Type type67 = typeCircularBuffer61.get();
        boolean boolean68 = typeCircularBuffer59.put(type67);
        boolean boolean69 = typeCircularBuffer59.isFull();
        java.lang.reflect.Type type70 = typeCircularBuffer59.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer72 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean73 = typeCircularBuffer72.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer75 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass76 = typeCircularBuffer75.getClass();
        boolean boolean77 = typeCircularBuffer72.put((java.lang.reflect.Type) wildcardClass76);
        boolean boolean78 = typeCircularBuffer72.isFull();
        java.lang.reflect.Type type79 = typeCircularBuffer72.get();
        boolean boolean80 = typeCircularBuffer59.put(type79);
        boolean boolean81 = typeCircularBuffer45.put(type79);
        boolean boolean82 = typeCircularBuffer13.put(type79);
        boolean boolean83 = typeCircularBuffer1.put(type79);
        boolean boolean84 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type85 = typeCircularBuffer1.get();
        java.lang.reflect.Type type86 = typeCircularBuffer1.get();
        java.lang.reflect.Type type87 = typeCircularBuffer1.get();
        boolean boolean88 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type89 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNull(type22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(type85);
        org.junit.Assert.assertNull(type86);
        org.junit.Assert.assertNull(type87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNull(type89);
    }

    @Test
    public void test1199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1199");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        boolean boolean8 = typeCircularBuffer1.isEmpty();
        boolean boolean9 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type12 = typeCircularBuffer11.get();
        boolean boolean13 = typeCircularBuffer11.isFull();
        boolean boolean14 = typeCircularBuffer11.isFull();
        boolean boolean15 = typeCircularBuffer11.isFull();
        boolean boolean16 = typeCircularBuffer11.isFull();
        boolean boolean17 = typeCircularBuffer11.isFull();
        boolean boolean18 = typeCircularBuffer11.isEmpty();
        java.lang.reflect.Type type19 = typeCircularBuffer11.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean22 = typeCircularBuffer21.isEmpty();
        java.lang.reflect.Type type23 = typeCircularBuffer21.get();
        boolean boolean24 = typeCircularBuffer21.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type27 = typeCircularBuffer26.get();
        boolean boolean28 = typeCircularBuffer26.isFull();
        boolean boolean29 = typeCircularBuffer26.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        boolean boolean35 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass34);
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer31.getClass();
        boolean boolean37 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass36);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean40 = typeCircularBuffer39.isEmpty();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        boolean boolean43 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass42);
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer39.getClass();
        boolean boolean45 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean46 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean47 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean48 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass44);
        java.lang.reflect.Type type49 = typeCircularBuffer1.get();
        boolean boolean50 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(type19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
    }

    @Test
    public void test1200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1200");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        java.lang.reflect.Type type12 = typeCircularBuffer6.get();
        boolean boolean13 = typeCircularBuffer4.put(type12);
        boolean boolean14 = typeCircularBuffer4.isFull();
        java.lang.reflect.Type type15 = typeCircularBuffer4.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        boolean boolean21 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean22 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean24 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type25 = typeCircularBuffer1.get();
        boolean boolean26 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type27 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(type27);
    }

    @Test
    public void test1201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1201");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        boolean boolean7 = typeCircularBuffer1.isFull();
        boolean boolean8 = typeCircularBuffer1.isFull();
        boolean boolean9 = typeCircularBuffer1.isFull();
        boolean boolean10 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test1202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1202");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean24 = typeCircularBuffer1.isEmpty();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        boolean boolean27 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass26);
        java.lang.reflect.Type type28 = typeCircularBuffer1.get();
        boolean boolean29 = typeCircularBuffer1.isEmpty();
        boolean boolean30 = typeCircularBuffer1.isFull();
        boolean boolean31 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean34 = typeCircularBuffer33.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass37 = typeCircularBuffer36.getClass();
        boolean boolean38 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass37);
        java.lang.reflect.Type type39 = null;
        boolean boolean40 = typeCircularBuffer33.put(type39);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean45 = typeCircularBuffer44.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass48 = typeCircularBuffer47.getClass();
        boolean boolean49 = typeCircularBuffer44.put((java.lang.reflect.Type) wildcardClass48);
        java.lang.reflect.Type type50 = typeCircularBuffer44.get();
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer44.getClass();
        boolean boolean52 = typeCircularBuffer42.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean53 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean54 = typeCircularBuffer33.isFull();
        boolean boolean55 = typeCircularBuffer33.isEmpty();
        java.lang.reflect.Type type56 = typeCircularBuffer33.get();
        boolean boolean57 = typeCircularBuffer1.put(type56);
        java.lang.Class<?> wildcardClass58 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test1203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1203");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        boolean boolean5 = typeCircularBuffer1.isFull();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test1204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1204");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer6.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean15 = typeCircularBuffer14.isFull();
        java.lang.reflect.Type type16 = typeCircularBuffer14.get();
        boolean boolean17 = typeCircularBuffer14.isEmpty();
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer14.getClass();
        boolean boolean19 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass18);
        boolean boolean20 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean23 = typeCircularBuffer22.isFull();
        java.lang.reflect.Type type24 = typeCircularBuffer22.get();
        boolean boolean25 = typeCircularBuffer22.isFull();
        boolean boolean26 = typeCircularBuffer22.isFull();
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer22.getClass();
        boolean boolean28 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer1.isEmpty();
        boolean boolean30 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass31 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test1205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1205");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        boolean boolean8 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass7);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean13 = typeCircularBuffer12.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass16 = typeCircularBuffer15.getClass();
        boolean boolean17 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass16);
        java.lang.reflect.Type type18 = typeCircularBuffer12.get();
        boolean boolean19 = typeCircularBuffer10.put(type18);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer10.getClass();
        boolean boolean21 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass20);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean24 = typeCircularBuffer23.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer26.getClass();
        boolean boolean28 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass27);
        java.lang.reflect.Type type29 = typeCircularBuffer23.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type32 = typeCircularBuffer31.get();
        boolean boolean33 = typeCircularBuffer31.isFull();
        boolean boolean34 = typeCircularBuffer31.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean37 = typeCircularBuffer36.isEmpty();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        boolean boolean40 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass39);
        java.lang.Class<?> wildcardClass41 = typeCircularBuffer36.getClass();
        boolean boolean42 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass41);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean45 = typeCircularBuffer44.isEmpty();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        boolean boolean48 = typeCircularBuffer44.put((java.lang.reflect.Type) wildcardClass47);
        java.lang.Class<?> wildcardClass49 = typeCircularBuffer44.getClass();
        boolean boolean50 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass49);
        boolean boolean51 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass49);
        java.lang.reflect.Type type52 = typeCircularBuffer23.get();
        java.lang.reflect.Type type53 = typeCircularBuffer23.get();
        java.lang.Class<?> wildcardClass54 = typeCircularBuffer23.getClass();
        boolean boolean55 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean56 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer58 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean59 = typeCircularBuffer58.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer61 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass62 = typeCircularBuffer61.getClass();
        boolean boolean63 = typeCircularBuffer58.put((java.lang.reflect.Type) wildcardClass62);
        boolean boolean64 = typeCircularBuffer58.isFull();
        java.lang.Class<?> wildcardClass65 = typeCircularBuffer58.getClass();
        boolean boolean66 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNull(type32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNull(type53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test1206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1206");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        boolean boolean7 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer10.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        boolean boolean13 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean16 = typeCircularBuffer15.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer18.getClass();
        boolean boolean20 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass19);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer15.getClass();
        boolean boolean22 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type24 = typeCircularBuffer1.get();
        java.lang.reflect.Type type25 = typeCircularBuffer1.get();
        boolean boolean26 = typeCircularBuffer1.isFull();
        boolean boolean27 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNull(type25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test1207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1207");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test1208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1208");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type9 = typeCircularBuffer8.get();
        boolean boolean10 = typeCircularBuffer8.isFull();
        boolean boolean11 = typeCircularBuffer8.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass16);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer13.getClass();
        boolean boolean19 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass18);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean22 = typeCircularBuffer21.isEmpty();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass24);
        java.lang.Class<?> wildcardClass26 = typeCircularBuffer21.getClass();
        boolean boolean27 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass26);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer34.getClass();
        boolean boolean36 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass35);
        java.lang.reflect.Type type37 = typeCircularBuffer31.get();
        boolean boolean38 = typeCircularBuffer29.put(type37);
        java.lang.Class<?> wildcardClass39 = typeCircularBuffer29.getClass();
        boolean boolean40 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass39);
        java.lang.Class<?> wildcardClass41 = typeCircularBuffer8.getClass();
        boolean boolean42 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean43 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type44 = typeCircularBuffer1.get();
        boolean boolean45 = typeCircularBuffer1.isFull();
        boolean boolean46 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type49 = typeCircularBuffer48.get();
        boolean boolean50 = typeCircularBuffer48.isFull();
        boolean boolean51 = typeCircularBuffer48.isEmpty();
        boolean boolean52 = typeCircularBuffer48.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer54 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass55 = typeCircularBuffer54.getClass();
        boolean boolean56 = typeCircularBuffer48.put((java.lang.reflect.Type) wildcardClass55);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer58 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean59 = typeCircularBuffer58.isFull();
        boolean boolean60 = typeCircularBuffer58.isEmpty();
        boolean boolean61 = typeCircularBuffer58.isFull();
        java.lang.Class<?> wildcardClass62 = typeCircularBuffer58.getClass();
        boolean boolean63 = typeCircularBuffer48.put((java.lang.reflect.Type) wildcardClass62);
        boolean boolean64 = typeCircularBuffer48.isFull();
        java.lang.reflect.Type type65 = typeCircularBuffer48.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer67 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer69 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean70 = typeCircularBuffer69.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer72 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass73 = typeCircularBuffer72.getClass();
        boolean boolean74 = typeCircularBuffer69.put((java.lang.reflect.Type) wildcardClass73);
        java.lang.reflect.Type type75 = typeCircularBuffer69.get();
        boolean boolean76 = typeCircularBuffer67.put(type75);
        boolean boolean77 = typeCircularBuffer67.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer79 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean80 = typeCircularBuffer79.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer82 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass83 = typeCircularBuffer82.getClass();
        boolean boolean84 = typeCircularBuffer79.put((java.lang.reflect.Type) wildcardClass83);
        java.lang.reflect.Type type85 = typeCircularBuffer79.get();
        java.lang.Object obj86 = new java.lang.Object();
        java.lang.Class<?> wildcardClass87 = obj86.getClass();
        boolean boolean88 = typeCircularBuffer79.put((java.lang.reflect.Type) wildcardClass87);
        boolean boolean89 = typeCircularBuffer67.put((java.lang.reflect.Type) wildcardClass87);
        boolean boolean90 = typeCircularBuffer67.isEmpty();
        java.lang.Object obj91 = new java.lang.Object();
        java.lang.Class<?> wildcardClass92 = obj91.getClass();
        boolean boolean93 = typeCircularBuffer67.put((java.lang.reflect.Type) wildcardClass92);
        java.lang.reflect.Type type94 = typeCircularBuffer67.get();
        boolean boolean95 = typeCircularBuffer48.put(type94);
        java.lang.Class<?> wildcardClass96 = typeCircularBuffer48.getClass();
        boolean boolean97 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass96);
        java.lang.reflect.Type type98 = typeCircularBuffer1.get();
        boolean boolean99 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(type49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(type85);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(type94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
        org.junit.Assert.assertNotNull(type98);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + true + "'", boolean99 == true);
    }

    @Test
    public void test1209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1209");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        boolean boolean8 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test1210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1210");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer6.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.reflect.Type type13 = typeCircularBuffer1.get();
        boolean boolean14 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer19.getClass();
        boolean boolean21 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean22 = typeCircularBuffer16.isEmpty();
        java.lang.reflect.Type type23 = typeCircularBuffer16.get();
        boolean boolean24 = typeCircularBuffer1.put(type23);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type27 = typeCircularBuffer26.get();
        boolean boolean28 = typeCircularBuffer26.isFull();
        boolean boolean29 = typeCircularBuffer26.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        boolean boolean35 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass34);
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer31.getClass();
        boolean boolean37 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass36);
        java.lang.reflect.Type type38 = typeCircularBuffer26.get();
        boolean boolean39 = typeCircularBuffer26.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type42 = typeCircularBuffer41.get();
        boolean boolean43 = typeCircularBuffer41.isFull();
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer41.getClass();
        boolean boolean45 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean46 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean47 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer49 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean52 = typeCircularBuffer51.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer54 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass55 = typeCircularBuffer54.getClass();
        boolean boolean56 = typeCircularBuffer51.put((java.lang.reflect.Type) wildcardClass55);
        java.lang.reflect.Type type57 = typeCircularBuffer51.get();
        boolean boolean58 = typeCircularBuffer49.put(type57);
        boolean boolean59 = typeCircularBuffer49.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer61 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean62 = typeCircularBuffer61.isEmpty();
        boolean boolean63 = typeCircularBuffer61.isFull();
        java.lang.reflect.Type type64 = typeCircularBuffer61.get();
        boolean boolean65 = typeCircularBuffer61.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer67 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean68 = typeCircularBuffer67.isFull();
        java.lang.Class<?> wildcardClass69 = typeCircularBuffer67.getClass();
        boolean boolean70 = typeCircularBuffer61.put((java.lang.reflect.Type) wildcardClass69);
        boolean boolean71 = typeCircularBuffer49.put((java.lang.reflect.Type) wildcardClass69);
        java.lang.reflect.Type type72 = typeCircularBuffer49.get();
        boolean boolean73 = typeCircularBuffer1.put(type72);
        java.lang.reflect.Type type74 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(type42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(type64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(type74);
    }

    @Test
    public void test1211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1211");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean8 = typeCircularBuffer7.isEmpty();
        java.lang.reflect.Type type9 = typeCircularBuffer7.get();
        java.lang.reflect.Type type10 = typeCircularBuffer7.get();
        java.lang.reflect.Type type11 = typeCircularBuffer7.get();
        boolean boolean12 = typeCircularBuffer7.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean15 = typeCircularBuffer14.isFull();
        java.lang.reflect.Type type16 = typeCircularBuffer14.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean19 = typeCircularBuffer18.isEmpty();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.Class<?> wildcardClass23 = typeCircularBuffer18.getClass();
        boolean boolean24 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass23);
        boolean boolean25 = typeCircularBuffer7.put((java.lang.reflect.Type) wildcardClass23);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '#');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer34.getClass();
        boolean boolean36 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass35);
        java.lang.reflect.Type type37 = typeCircularBuffer31.get();
        boolean boolean38 = typeCircularBuffer29.put(type37);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean43 = typeCircularBuffer42.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass46 = typeCircularBuffer45.getClass();
        boolean boolean47 = typeCircularBuffer42.put((java.lang.reflect.Type) wildcardClass46);
        java.lang.reflect.Type type48 = typeCircularBuffer42.get();
        boolean boolean49 = typeCircularBuffer40.put(type48);
        java.lang.Class<?> wildcardClass50 = typeCircularBuffer40.getClass();
        boolean boolean51 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass50);
        boolean boolean52 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass50);
        boolean boolean53 = typeCircularBuffer7.put((java.lang.reflect.Type) wildcardClass50);
        boolean boolean54 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass50);
        java.lang.reflect.Type type55 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass56 = type55.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertNull(type11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(type16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test1212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1212");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type10 = typeCircularBuffer9.get();
        boolean boolean11 = typeCircularBuffer9.isFull();
        boolean boolean12 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer14.getClass();
        boolean boolean20 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass19);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        boolean boolean26 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer22.getClass();
        boolean boolean28 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass27);
        java.lang.reflect.Type type30 = typeCircularBuffer1.get();
        boolean boolean31 = typeCircularBuffer1.isFull();
        boolean boolean32 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type33 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(type33);
    }

    @Test
    public void test1213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1213");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) ' ');
        java.lang.reflect.Type type10 = typeCircularBuffer9.get();
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer9.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.reflect.Type type13 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type16 = typeCircularBuffer15.get();
        boolean boolean17 = typeCircularBuffer15.isFull();
        boolean boolean18 = typeCircularBuffer15.isFull();
        boolean boolean19 = typeCircularBuffer15.isFull();
        boolean boolean20 = typeCircularBuffer15.isEmpty();
        boolean boolean21 = typeCircularBuffer15.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type24 = typeCircularBuffer23.get();
        boolean boolean25 = typeCircularBuffer23.isFull();
        boolean boolean26 = typeCircularBuffer23.isFull();
        boolean boolean27 = typeCircularBuffer23.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer34.getClass();
        boolean boolean36 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass35);
        java.lang.reflect.Type type37 = typeCircularBuffer31.get();
        boolean boolean38 = typeCircularBuffer29.put(type37);
        boolean boolean39 = typeCircularBuffer29.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean42 = typeCircularBuffer41.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass45 = typeCircularBuffer44.getClass();
        boolean boolean46 = typeCircularBuffer41.put((java.lang.reflect.Type) wildcardClass45);
        java.lang.reflect.Type type47 = typeCircularBuffer41.get();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        boolean boolean50 = typeCircularBuffer41.put((java.lang.reflect.Type) wildcardClass49);
        boolean boolean51 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass49);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer53 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean54 = typeCircularBuffer53.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer56 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass57 = typeCircularBuffer56.getClass();
        boolean boolean58 = typeCircularBuffer53.put((java.lang.reflect.Type) wildcardClass57);
        java.lang.reflect.Type type59 = typeCircularBuffer53.get();
        boolean boolean60 = typeCircularBuffer29.put(type59);
        java.lang.reflect.Type type61 = typeCircularBuffer29.get();
        boolean boolean62 = typeCircularBuffer23.put(type61);
        boolean boolean63 = typeCircularBuffer15.put(type61);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.invoke.TypeDescriptor> typeDescriptorCircularBuffer65 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.invoke.TypeDescriptor>(10);
        java.lang.Class<?> wildcardClass66 = typeDescriptorCircularBuffer65.getClass();
        boolean boolean67 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass66);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer69 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean70 = typeCircularBuffer69.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer72 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass73 = typeCircularBuffer72.getClass();
        boolean boolean74 = typeCircularBuffer69.put((java.lang.reflect.Type) wildcardClass73);
        boolean boolean75 = typeCircularBuffer69.isFull();
        boolean boolean76 = typeCircularBuffer69.isFull();
        boolean boolean77 = typeCircularBuffer69.isFull();
        java.lang.Class<?> wildcardClass78 = typeCircularBuffer69.getClass();
        boolean boolean79 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass78);
        boolean boolean80 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
    }

    @Test
    public void test1214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1214");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        boolean boolean6 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        boolean boolean8 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer10.get();
        boolean boolean17 = typeCircularBuffer10.isFull();
        java.lang.reflect.Type type18 = typeCircularBuffer10.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean21 = typeCircularBuffer20.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer23.getClass();
        boolean boolean25 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass24);
        java.lang.reflect.Type type26 = typeCircularBuffer20.get();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        boolean boolean29 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass28);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer34.getClass();
        boolean boolean36 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass35);
        java.lang.Class<?> wildcardClass37 = typeCircularBuffer31.getClass();
        boolean boolean38 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass37);
        boolean boolean39 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass37);
        boolean boolean40 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass37);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.String> strCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.String>((int) (short) 10);
        java.lang.Class<?> wildcardClass43 = strCircularBuffer42.getClass();
        boolean boolean44 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass43);
        boolean boolean45 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(type18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
    }

    @Test
    public void test1215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1215");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) 'a');
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type7 = typeCircularBuffer6.get();
        boolean boolean8 = typeCircularBuffer6.isFull();
        boolean boolean9 = typeCircularBuffer6.isFull();
        boolean boolean10 = typeCircularBuffer6.isFull();
        java.lang.reflect.Type type11 = typeCircularBuffer6.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type14 = typeCircularBuffer13.get();
        boolean boolean15 = typeCircularBuffer13.isFull();
        boolean boolean16 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean19 = typeCircularBuffer18.isEmpty();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.Class<?> wildcardClass23 = typeCircularBuffer18.getClass();
        boolean boolean24 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass23);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean27 = typeCircularBuffer26.isEmpty();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        boolean boolean30 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass29);
        java.lang.Class<?> wildcardClass31 = typeCircularBuffer26.getClass();
        boolean boolean32 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass31);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean37 = typeCircularBuffer36.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass40 = typeCircularBuffer39.getClass();
        boolean boolean41 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass40);
        java.lang.reflect.Type type42 = typeCircularBuffer36.get();
        boolean boolean43 = typeCircularBuffer34.put(type42);
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer34.getClass();
        boolean boolean45 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass44);
        java.lang.Class<?> wildcardClass46 = typeCircularBuffer13.getClass();
        boolean boolean47 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass46);
        boolean boolean48 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass46);
        boolean boolean49 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(type11);
        org.junit.Assert.assertNull(type14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test1216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1216");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass9);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean13 = typeCircularBuffer12.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass16 = typeCircularBuffer15.getClass();
        boolean boolean17 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass16);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer12.getClass();
        boolean boolean19 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass18);
        boolean boolean20 = typeCircularBuffer1.isFull();
        boolean boolean21 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type22 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass23 = type22.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test1217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1217");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '#');
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean7 = typeCircularBuffer6.isFull();
        java.lang.reflect.Type type8 = typeCircularBuffer6.get();
        boolean boolean9 = typeCircularBuffer6.isEmpty();
        boolean boolean10 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        boolean boolean13 = typeCircularBuffer12.isEmpty();
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer12.getClass();
        boolean boolean15 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass14);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean18 = typeCircularBuffer17.isFull();
        boolean boolean19 = typeCircularBuffer17.isEmpty();
        boolean boolean20 = typeCircularBuffer17.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass26 = typeCircularBuffer25.getClass();
        boolean boolean27 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass26);
        java.lang.reflect.Type type28 = typeCircularBuffer22.get();
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        boolean boolean31 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass30);
        boolean boolean32 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass30);
        boolean boolean33 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass30);
        java.lang.reflect.Type type34 = typeCircularBuffer6.get();
        boolean boolean35 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean40 = typeCircularBuffer39.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass43 = typeCircularBuffer42.getClass();
        boolean boolean44 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass43);
        java.lang.reflect.Type type45 = typeCircularBuffer39.get();
        boolean boolean46 = typeCircularBuffer37.put(type45);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean49 = typeCircularBuffer48.isFull();
        boolean boolean50 = typeCircularBuffer48.isEmpty();
        java.lang.reflect.Type type51 = typeCircularBuffer48.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer53 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer55 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean56 = typeCircularBuffer55.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer58 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass59 = typeCircularBuffer58.getClass();
        boolean boolean60 = typeCircularBuffer55.put((java.lang.reflect.Type) wildcardClass59);
        java.lang.reflect.Type type61 = typeCircularBuffer55.get();
        boolean boolean62 = typeCircularBuffer53.put(type61);
        java.lang.Class<?> wildcardClass63 = typeCircularBuffer53.getClass();
        boolean boolean64 = typeCircularBuffer48.put((java.lang.reflect.Type) wildcardClass63);
        boolean boolean65 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass63);
        boolean boolean66 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass63);
        boolean boolean67 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(type51);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
    }

    @Test
    public void test1218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1218");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type4 = typeCircularBuffer3.get();
        boolean boolean5 = typeCircularBuffer3.isFull();
        boolean boolean6 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean9 = typeCircularBuffer8.isEmpty();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer8.getClass();
        boolean boolean14 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass13);
        boolean boolean15 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean18 = typeCircularBuffer17.isFull();
        boolean boolean19 = typeCircularBuffer17.isEmpty();
        java.lang.reflect.Type type20 = typeCircularBuffer17.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean25 = typeCircularBuffer24.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer27.getClass();
        boolean boolean29 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.reflect.Type type30 = typeCircularBuffer24.get();
        boolean boolean31 = typeCircularBuffer22.put(type30);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer22.getClass();
        boolean boolean33 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean35 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean36 = typeCircularBuffer1.isFull();
        boolean boolean37 = typeCircularBuffer1.isEmpty();
        boolean boolean38 = typeCircularBuffer1.isFull();
        boolean boolean39 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type40 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(type20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(type40);
    }

    @Test
    public void test1219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1219");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        boolean boolean9 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type10 = typeCircularBuffer1.get();
        boolean boolean11 = typeCircularBuffer1.isEmpty();
        boolean boolean12 = typeCircularBuffer1.isEmpty();
        boolean boolean13 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1220");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isEmpty();
        boolean boolean12 = typeCircularBuffer1.isFull();
        boolean boolean13 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type14 = typeCircularBuffer1.get();
        boolean boolean15 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean20 = typeCircularBuffer19.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass23 = typeCircularBuffer22.getClass();
        boolean boolean24 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass23);
        java.lang.reflect.Type type25 = typeCircularBuffer19.get();
        boolean boolean26 = typeCircularBuffer17.put(type25);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean31 = typeCircularBuffer30.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass34 = typeCircularBuffer33.getClass();
        boolean boolean35 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass34);
        java.lang.reflect.Type type36 = typeCircularBuffer30.get();
        boolean boolean37 = typeCircularBuffer28.put(type36);
        java.lang.Class<?> wildcardClass38 = typeCircularBuffer28.getClass();
        boolean boolean39 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass38);
        boolean boolean40 = typeCircularBuffer17.isEmpty();
        java.lang.reflect.Type type41 = typeCircularBuffer17.get();
        boolean boolean42 = typeCircularBuffer1.put(type41);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
    }

    @Test
    public void test1221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1221");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type10 = typeCircularBuffer9.get();
        boolean boolean11 = typeCircularBuffer9.isFull();
        boolean boolean12 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer14.getClass();
        boolean boolean20 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass19);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        boolean boolean26 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer22.getClass();
        boolean boolean28 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass27);
        java.lang.reflect.Type type30 = typeCircularBuffer1.get();
        java.lang.reflect.Type type31 = typeCircularBuffer1.get();
        java.lang.reflect.Type type32 = typeCircularBuffer1.get();
        boolean boolean33 = typeCircularBuffer1.isFull();
        boolean boolean34 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean37 = typeCircularBuffer36.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean40 = typeCircularBuffer39.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass43 = typeCircularBuffer42.getClass();
        boolean boolean44 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass43);
        boolean boolean45 = typeCircularBuffer39.isFull();
        java.lang.reflect.Type type46 = typeCircularBuffer39.get();
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer39.getClass();
        boolean boolean48 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass47);
        java.lang.Class<?> wildcardClass49 = typeCircularBuffer36.getClass();
        boolean boolean50 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNull(type31);
        org.junit.Assert.assertNull(type32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
    }

    @Test
    public void test1222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1222");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        boolean boolean8 = typeCircularBuffer1.isFull();
        boolean boolean9 = typeCircularBuffer1.isFull();
        boolean boolean10 = typeCircularBuffer1.isEmpty();
        boolean boolean11 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test1223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1223");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type10 = typeCircularBuffer9.get();
        boolean boolean11 = typeCircularBuffer9.isFull();
        boolean boolean12 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer14.getClass();
        boolean boolean20 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass19);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        boolean boolean26 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer22.getClass();
        boolean boolean28 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean30 = typeCircularBuffer1.isEmpty();
        boolean boolean31 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type32 = typeCircularBuffer1.get();
        boolean boolean33 = typeCircularBuffer1.isEmpty();
        boolean boolean34 = typeCircularBuffer1.isFull();
        boolean boolean35 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test1224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1224");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type7 = typeCircularBuffer6.get();
        boolean boolean8 = typeCircularBuffer6.isFull();
        boolean boolean9 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean12 = typeCircularBuffer11.isEmpty();
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        boolean boolean15 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.Class<?> wildcardClass16 = typeCircularBuffer11.getClass();
        boolean boolean17 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass16);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean20 = typeCircularBuffer19.isEmpty();
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        boolean boolean23 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass22);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer19.getClass();
        boolean boolean25 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass24);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean30 = typeCircularBuffer29.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass33 = typeCircularBuffer32.getClass();
        boolean boolean34 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass33);
        java.lang.reflect.Type type35 = typeCircularBuffer29.get();
        boolean boolean36 = typeCircularBuffer27.put(type35);
        java.lang.Class<?> wildcardClass37 = typeCircularBuffer27.getClass();
        boolean boolean38 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass37);
        java.lang.Class<?> wildcardClass39 = typeCircularBuffer6.getClass();
        boolean boolean40 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass39);
        boolean boolean41 = typeCircularBuffer1.isFull();
        boolean boolean42 = typeCircularBuffer1.isFull();
        boolean boolean43 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test1225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1225");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer5 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean6 = typeCircularBuffer5.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass9 = typeCircularBuffer8.getClass();
        boolean boolean10 = typeCircularBuffer5.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.reflect.Type type11 = typeCircularBuffer5.get();
        boolean boolean12 = typeCircularBuffer1.put(type11);
        boolean boolean13 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean16 = typeCircularBuffer15.isFull();
        boolean boolean17 = typeCircularBuffer15.isEmpty();
        boolean boolean18 = typeCircularBuffer15.isFull();
        java.lang.reflect.Type type19 = null;
        boolean boolean20 = typeCircularBuffer15.put(type19);
        boolean boolean21 = typeCircularBuffer15.isFull();
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer15.getClass();
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass22);
        boolean boolean24 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean27 = typeCircularBuffer26.isEmpty();
        boolean boolean28 = typeCircularBuffer26.isFull();
        java.lang.reflect.Type type29 = typeCircularBuffer26.get();
        boolean boolean30 = typeCircularBuffer26.isFull();
        boolean boolean31 = typeCircularBuffer26.isEmpty();
        boolean boolean32 = typeCircularBuffer26.isFull();
        boolean boolean33 = typeCircularBuffer26.isEmpty();
        java.lang.Class<?> wildcardClass34 = typeCircularBuffer26.getClass();
        boolean boolean35 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(type29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test1226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1226");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean10 = typeCircularBuffer9.isFull();
        boolean boolean11 = typeCircularBuffer9.isEmpty();
        java.lang.reflect.Type type12 = typeCircularBuffer9.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer19.getClass();
        boolean boolean21 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type22 = typeCircularBuffer16.get();
        boolean boolean23 = typeCircularBuffer14.put(type22);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer14.getClass();
        boolean boolean25 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean26 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass24);
        java.lang.reflect.Type type27 = typeCircularBuffer1.get();
        boolean boolean28 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass29 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(type12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test1227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1227");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '#');
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test1228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1228");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer6.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        boolean boolean13 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean16 = typeCircularBuffer15.isFull();
        boolean boolean17 = typeCircularBuffer15.isEmpty();
        java.lang.reflect.Type type18 = typeCircularBuffer15.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass26 = typeCircularBuffer25.getClass();
        boolean boolean27 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass26);
        java.lang.reflect.Type type28 = typeCircularBuffer22.get();
        boolean boolean29 = typeCircularBuffer20.put(type28);
        java.lang.Class<?> wildcardClass30 = typeCircularBuffer20.getClass();
        boolean boolean31 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass30);
        boolean boolean32 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass30);
        java.lang.reflect.Type type33 = typeCircularBuffer1.get();
        boolean boolean34 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(type18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test1229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1229");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.io.Serializable> serializableCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.io.Serializable>((int) (byte) 10);
        java.lang.Class<?> wildcardClass2 = serializableCircularBuffer1.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test1230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1230");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        boolean boolean6 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        boolean boolean8 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        boolean boolean14 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass13);
        boolean boolean15 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass13);
        java.lang.reflect.Type type16 = typeCircularBuffer1.get();
        boolean boolean17 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type18 = typeCircularBuffer1.get();
        boolean boolean19 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(type18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test1231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1231");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type24 = typeCircularBuffer1.get();
        boolean boolean25 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type28 = typeCircularBuffer27.get();
        boolean boolean29 = typeCircularBuffer27.isFull();
        boolean boolean30 = typeCircularBuffer27.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean33 = typeCircularBuffer32.isEmpty();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        boolean boolean36 = typeCircularBuffer32.put((java.lang.reflect.Type) wildcardClass35);
        java.lang.Class<?> wildcardClass37 = typeCircularBuffer32.getClass();
        boolean boolean38 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass37);
        java.lang.reflect.Type type39 = typeCircularBuffer27.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer46.getClass();
        boolean boolean48 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass47);
        java.lang.reflect.Type type49 = typeCircularBuffer43.get();
        boolean boolean50 = typeCircularBuffer41.put(type49);
        boolean boolean51 = typeCircularBuffer27.put(type49);
        java.lang.reflect.Type type52 = typeCircularBuffer27.get();
        boolean boolean53 = typeCircularBuffer1.put(type52);
        java.lang.reflect.Type type54 = typeCircularBuffer1.get();
        boolean boolean55 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(type28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test1232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1232");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        java.lang.reflect.Type type12 = typeCircularBuffer6.get();
        boolean boolean13 = typeCircularBuffer4.put(type12);
        boolean boolean14 = typeCircularBuffer4.isFull();
        java.lang.reflect.Type type15 = typeCircularBuffer4.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        boolean boolean21 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean22 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type24 = typeCircularBuffer1.get();
        boolean boolean25 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type26 = typeCircularBuffer1.get();
        boolean boolean27 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type28 = typeCircularBuffer1.get();
        boolean boolean29 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass30 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(type26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(type28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test1233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1233");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean4 = typeCircularBuffer3.isFull();
        java.lang.reflect.Type type5 = typeCircularBuffer3.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean8 = typeCircularBuffer7.isEmpty();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        boolean boolean11 = typeCircularBuffer7.put((java.lang.reflect.Type) wildcardClass10);
        java.lang.Class<?> wildcardClass12 = typeCircularBuffer7.getClass();
        boolean boolean13 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass12);
        boolean boolean14 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass12);
        boolean boolean15 = typeCircularBuffer1.isFull();
        boolean boolean16 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type19 = typeCircularBuffer18.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean24 = typeCircularBuffer23.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer26.getClass();
        boolean boolean28 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass27);
        java.lang.reflect.Type type29 = typeCircularBuffer23.get();
        boolean boolean30 = typeCircularBuffer21.put(type29);
        boolean boolean31 = typeCircularBuffer21.isFull();
        java.lang.reflect.Type type32 = typeCircularBuffer21.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean35 = typeCircularBuffer34.isEmpty();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        boolean boolean38 = typeCircularBuffer34.put((java.lang.reflect.Type) wildcardClass37);
        boolean boolean39 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass37);
        boolean boolean40 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass37);
        java.lang.reflect.Type type41 = typeCircularBuffer18.get();
        boolean boolean42 = typeCircularBuffer18.isFull();
        java.lang.reflect.Type type43 = typeCircularBuffer18.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean46 = typeCircularBuffer45.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass49 = typeCircularBuffer48.getClass();
        boolean boolean50 = typeCircularBuffer45.put((java.lang.reflect.Type) wildcardClass49);
        java.lang.reflect.Type type51 = typeCircularBuffer45.get();
        boolean boolean52 = typeCircularBuffer45.isFull();
        boolean boolean53 = typeCircularBuffer45.isFull();
        java.lang.reflect.Type type54 = typeCircularBuffer45.get();
        boolean boolean55 = typeCircularBuffer45.isFull();
        boolean boolean56 = typeCircularBuffer45.isEmpty();
        java.lang.Class<?> wildcardClass57 = typeCircularBuffer45.getClass();
        boolean boolean58 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass57);
        boolean boolean59 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(type19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(type43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(type54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test1234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1234");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        boolean boolean8 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test1235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1235");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        boolean boolean5 = typeCircularBuffer1.isFull();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertNull(type8);
    }

    @Test
    public void test1236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1236");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        boolean boolean8 = typeCircularBuffer1.isEmpty();
        boolean boolean9 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type12 = typeCircularBuffer11.get();
        boolean boolean13 = typeCircularBuffer11.isFull();
        boolean boolean14 = typeCircularBuffer11.isFull();
        boolean boolean15 = typeCircularBuffer11.isFull();
        boolean boolean16 = typeCircularBuffer11.isFull();
        boolean boolean17 = typeCircularBuffer11.isFull();
        boolean boolean18 = typeCircularBuffer11.isEmpty();
        java.lang.reflect.Type type19 = typeCircularBuffer11.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean22 = typeCircularBuffer21.isEmpty();
        java.lang.reflect.Type type23 = typeCircularBuffer21.get();
        boolean boolean24 = typeCircularBuffer21.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type27 = typeCircularBuffer26.get();
        boolean boolean28 = typeCircularBuffer26.isFull();
        boolean boolean29 = typeCircularBuffer26.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        boolean boolean35 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass34);
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer31.getClass();
        boolean boolean37 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass36);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean40 = typeCircularBuffer39.isEmpty();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        boolean boolean43 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass42);
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer39.getClass();
        boolean boolean45 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean46 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean47 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean48 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass44);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean51 = typeCircularBuffer50.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer53 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass54 = typeCircularBuffer53.getClass();
        boolean boolean55 = typeCircularBuffer50.put((java.lang.reflect.Type) wildcardClass54);
        java.lang.reflect.Type type56 = null;
        boolean boolean57 = typeCircularBuffer50.put(type56);
        java.lang.Class<?> wildcardClass58 = typeCircularBuffer50.getClass();
        boolean boolean59 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass58);
        boolean boolean60 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass61 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(type19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test1237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1237");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        boolean boolean7 = typeCircularBuffer1.isFull();
        boolean boolean8 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass9 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1238");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        boolean boolean5 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test1239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1239");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass9);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean13 = typeCircularBuffer12.isEmpty();
        java.lang.reflect.Type type14 = typeCircularBuffer12.get();
        java.lang.reflect.Type type15 = typeCircularBuffer12.get();
        java.lang.reflect.Type type16 = typeCircularBuffer12.get();
        boolean boolean17 = typeCircularBuffer12.isFull();
        java.lang.reflect.Type type18 = typeCircularBuffer12.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean21 = typeCircularBuffer20.isEmpty();
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer20.getClass();
        boolean boolean23 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass22);
        boolean boolean24 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass22);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer31.getClass();
        boolean boolean33 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass32);
        java.lang.reflect.Type type34 = typeCircularBuffer28.get();
        boolean boolean35 = typeCircularBuffer26.put(type34);
        boolean boolean36 = typeCircularBuffer26.isFull();
        java.lang.reflect.Type type37 = typeCircularBuffer26.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean40 = typeCircularBuffer39.isEmpty();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        boolean boolean43 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass42);
        boolean boolean44 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass42);
        java.lang.Class<?> wildcardClass45 = typeCircularBuffer26.getClass();
        boolean boolean46 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass45);
        java.lang.reflect.Type type47 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass48 = type47.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(type14);
        org.junit.Assert.assertNull(type15);
        org.junit.Assert.assertNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(type18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test1240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1240");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) ' ');
        boolean boolean9 = typeCircularBuffer8.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean12 = typeCircularBuffer11.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass15 = typeCircularBuffer14.getClass();
        boolean boolean16 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass15);
        java.lang.reflect.Type type17 = typeCircularBuffer11.get();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        boolean boolean20 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass19);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass26 = typeCircularBuffer25.getClass();
        boolean boolean27 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass26);
        java.lang.reflect.Type type28 = typeCircularBuffer22.get();
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        boolean boolean31 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass30);
        java.lang.reflect.Type type32 = typeCircularBuffer22.get();
        boolean boolean33 = typeCircularBuffer11.put(type32);
        boolean boolean34 = typeCircularBuffer8.put(type32);
        boolean boolean35 = typeCircularBuffer1.put(type32);
        java.lang.reflect.Type type36 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(type36);
    }

    @Test
    public void test1241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1241");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean5 = typeCircularBuffer4.isFull();
        boolean boolean6 = typeCircularBuffer4.isEmpty();
        boolean boolean7 = typeCircularBuffer4.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        java.lang.reflect.Type type15 = typeCircularBuffer9.get();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass17);
        boolean boolean19 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass17);
        boolean boolean20 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type21 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass22 = type21.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test1242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1242");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1243");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        boolean boolean5 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test1244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1244");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer6.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.reflect.Type type13 = typeCircularBuffer1.get();
        boolean boolean14 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type17 = typeCircularBuffer16.get();
        boolean boolean18 = typeCircularBuffer16.isFull();
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer16.getClass();
        boolean boolean20 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass19);
        java.lang.reflect.Type type21 = typeCircularBuffer1.get();
        boolean boolean22 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean25 = typeCircularBuffer24.isEmpty();
        java.lang.reflect.Type type26 = typeCircularBuffer24.get();
        java.lang.reflect.Type type27 = typeCircularBuffer24.get();
        java.lang.reflect.Type type28 = typeCircularBuffer24.get();
        boolean boolean29 = typeCircularBuffer24.isFull();
        boolean boolean30 = typeCircularBuffer24.isFull();
        java.lang.reflect.Type type31 = typeCircularBuffer24.get();
        boolean boolean32 = typeCircularBuffer24.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean37 = typeCircularBuffer36.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass40 = typeCircularBuffer39.getClass();
        boolean boolean41 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass40);
        java.lang.reflect.Type type42 = typeCircularBuffer36.get();
        java.lang.Class<?> wildcardClass43 = typeCircularBuffer36.getClass();
        boolean boolean44 = typeCircularBuffer34.put((java.lang.reflect.Type) wildcardClass43);
        boolean boolean45 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass43);
        boolean boolean46 = typeCircularBuffer24.isEmpty();
        java.lang.reflect.Type type47 = typeCircularBuffer24.get();
        boolean boolean48 = typeCircularBuffer1.put(type47);
        java.lang.Class<?> wildcardClass49 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(type17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(type26);
        org.junit.Assert.assertNull(type27);
        org.junit.Assert.assertNull(type28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(type31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test1245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1245");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test1246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1246");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type4 = typeCircularBuffer3.get();
        boolean boolean5 = typeCircularBuffer3.isFull();
        boolean boolean6 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean9 = typeCircularBuffer8.isEmpty();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer8.getClass();
        boolean boolean14 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass13);
        boolean boolean15 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean18 = typeCircularBuffer17.isFull();
        boolean boolean19 = typeCircularBuffer17.isEmpty();
        java.lang.reflect.Type type20 = typeCircularBuffer17.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean25 = typeCircularBuffer24.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer27.getClass();
        boolean boolean29 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.reflect.Type type30 = typeCircularBuffer24.get();
        boolean boolean31 = typeCircularBuffer22.put(type30);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer22.getClass();
        boolean boolean33 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean35 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass32);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean38 = typeCircularBuffer37.isFull();
        java.lang.reflect.Type type39 = typeCircularBuffer37.get();
        boolean boolean40 = typeCircularBuffer37.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean43 = typeCircularBuffer42.isEmpty();
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer42.getClass();
        boolean boolean45 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass44);
        java.lang.Class<?> wildcardClass46 = typeCircularBuffer37.getClass();
        boolean boolean47 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass46);
        boolean boolean48 = typeCircularBuffer1.isFull();
        boolean boolean49 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer53 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean54 = typeCircularBuffer53.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer56 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass57 = typeCircularBuffer56.getClass();
        boolean boolean58 = typeCircularBuffer53.put((java.lang.reflect.Type) wildcardClass57);
        java.lang.reflect.Type type59 = typeCircularBuffer53.get();
        boolean boolean60 = typeCircularBuffer51.put(type59);
        boolean boolean61 = typeCircularBuffer51.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer63 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean64 = typeCircularBuffer63.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer66 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass67 = typeCircularBuffer66.getClass();
        boolean boolean68 = typeCircularBuffer63.put((java.lang.reflect.Type) wildcardClass67);
        java.lang.reflect.Type type69 = typeCircularBuffer63.get();
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        boolean boolean72 = typeCircularBuffer63.put((java.lang.reflect.Type) wildcardClass71);
        boolean boolean73 = typeCircularBuffer51.put((java.lang.reflect.Type) wildcardClass71);
        boolean boolean74 = typeCircularBuffer51.isEmpty();
        java.lang.Object obj75 = new java.lang.Object();
        java.lang.Class<?> wildcardClass76 = obj75.getClass();
        boolean boolean77 = typeCircularBuffer51.put((java.lang.reflect.Type) wildcardClass76);
        java.lang.Class<?> wildcardClass78 = typeCircularBuffer51.getClass();
        boolean boolean79 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass78);
        boolean boolean80 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer82 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean83 = typeCircularBuffer82.isFull();
        java.lang.reflect.Type type84 = typeCircularBuffer82.get();
        boolean boolean85 = typeCircularBuffer82.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer87 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean88 = typeCircularBuffer87.isFull();
        boolean boolean89 = typeCircularBuffer87.isEmpty();
        boolean boolean90 = typeCircularBuffer87.isFull();
        java.lang.reflect.Type type91 = null;
        boolean boolean92 = typeCircularBuffer87.put(type91);
        boolean boolean93 = typeCircularBuffer87.isFull();
        boolean boolean94 = typeCircularBuffer87.isFull();
        java.lang.Class<?> wildcardClass95 = typeCircularBuffer87.getClass();
        boolean boolean96 = typeCircularBuffer82.put((java.lang.reflect.Type) wildcardClass95);
        boolean boolean97 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass95);
        boolean boolean98 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass99 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(type20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(type39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNull(type84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNotNull(wildcardClass95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1247");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean10 = typeCircularBuffer9.isFull();
        boolean boolean11 = typeCircularBuffer9.isEmpty();
        java.lang.reflect.Type type12 = typeCircularBuffer9.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer19.getClass();
        boolean boolean21 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type22 = typeCircularBuffer16.get();
        boolean boolean23 = typeCircularBuffer14.put(type22);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer14.getClass();
        boolean boolean25 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean26 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass24);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) ' ');
        java.lang.Class<?> wildcardClass29 = typeCircularBuffer28.getClass();
        boolean boolean30 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass29);
        boolean boolean31 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean36 = typeCircularBuffer35.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass39 = typeCircularBuffer38.getClass();
        boolean boolean40 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass39);
        java.lang.reflect.Type type41 = typeCircularBuffer35.get();
        boolean boolean42 = typeCircularBuffer33.put(type41);
        boolean boolean43 = typeCircularBuffer33.isFull();
        java.lang.reflect.Type type44 = typeCircularBuffer33.get();
        boolean boolean45 = typeCircularBuffer33.isFull();
        boolean boolean46 = typeCircularBuffer33.isFull();
        boolean boolean47 = typeCircularBuffer33.isFull();
        boolean boolean48 = typeCircularBuffer33.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer52 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean53 = typeCircularBuffer52.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer55 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass56 = typeCircularBuffer55.getClass();
        boolean boolean57 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass56);
        java.lang.reflect.Type type58 = typeCircularBuffer52.get();
        boolean boolean59 = typeCircularBuffer50.put(type58);
        boolean boolean60 = typeCircularBuffer50.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer62 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean63 = typeCircularBuffer62.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer65 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass66 = typeCircularBuffer65.getClass();
        boolean boolean67 = typeCircularBuffer62.put((java.lang.reflect.Type) wildcardClass66);
        java.lang.reflect.Type type68 = typeCircularBuffer62.get();
        java.lang.Object obj69 = new java.lang.Object();
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        boolean boolean71 = typeCircularBuffer62.put((java.lang.reflect.Type) wildcardClass70);
        boolean boolean72 = typeCircularBuffer50.put((java.lang.reflect.Type) wildcardClass70);
        boolean boolean73 = typeCircularBuffer50.isEmpty();
        java.lang.Object obj74 = new java.lang.Object();
        java.lang.Class<?> wildcardClass75 = obj74.getClass();
        boolean boolean76 = typeCircularBuffer50.put((java.lang.reflect.Type) wildcardClass75);
        java.lang.reflect.Type type77 = typeCircularBuffer50.get();
        java.lang.reflect.Type type78 = typeCircularBuffer50.get();
        boolean boolean79 = typeCircularBuffer50.isFull();
        java.lang.Class<?> wildcardClass80 = typeCircularBuffer50.getClass();
        boolean boolean81 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass80);
        boolean boolean82 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass80);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(type12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertNull(type78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test1248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1248");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass3 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test1249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1249");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        java.lang.reflect.Type type12 = typeCircularBuffer6.get();
        boolean boolean13 = typeCircularBuffer4.put(type12);
        boolean boolean14 = typeCircularBuffer4.isFull();
        java.lang.reflect.Type type15 = typeCircularBuffer4.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        boolean boolean21 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean22 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean24 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type25 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean30 = typeCircularBuffer29.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass33 = typeCircularBuffer32.getClass();
        boolean boolean34 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass33);
        java.lang.reflect.Type type35 = typeCircularBuffer29.get();
        boolean boolean36 = typeCircularBuffer27.put(type35);
        boolean boolean37 = typeCircularBuffer27.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean40 = typeCircularBuffer39.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass43 = typeCircularBuffer42.getClass();
        boolean boolean44 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass43);
        java.lang.reflect.Type type45 = typeCircularBuffer39.get();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        boolean boolean48 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass47);
        boolean boolean49 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass47);
        boolean boolean50 = typeCircularBuffer27.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer52 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type53 = typeCircularBuffer52.get();
        boolean boolean54 = typeCircularBuffer52.isFull();
        boolean boolean55 = typeCircularBuffer52.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer57 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean58 = typeCircularBuffer57.isEmpty();
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        boolean boolean61 = typeCircularBuffer57.put((java.lang.reflect.Type) wildcardClass60);
        java.lang.Class<?> wildcardClass62 = typeCircularBuffer57.getClass();
        boolean boolean63 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass62);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer65 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean66 = typeCircularBuffer65.isEmpty();
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        boolean boolean69 = typeCircularBuffer65.put((java.lang.reflect.Type) wildcardClass68);
        java.lang.Class<?> wildcardClass70 = typeCircularBuffer65.getClass();
        boolean boolean71 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass70);
        boolean boolean72 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass70);
        java.lang.reflect.Type type73 = typeCircularBuffer27.get();
        boolean boolean74 = typeCircularBuffer1.put(type73);
        java.lang.reflect.Type type75 = typeCircularBuffer1.get();
        boolean boolean76 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type77 = typeCircularBuffer1.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass78 = type77.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(type53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNull(type77);
    }

    @Test
    public void test1250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1250");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        boolean boolean6 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertNull(type8);
    }

    @Test
    public void test1251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1251");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer6.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.reflect.Type type13 = typeCircularBuffer1.get();
        boolean boolean14 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type17 = typeCircularBuffer16.get();
        boolean boolean18 = typeCircularBuffer16.isFull();
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer16.getClass();
        boolean boolean20 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass19);
        boolean boolean21 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type24 = typeCircularBuffer23.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean27 = typeCircularBuffer26.isEmpty();
        boolean boolean28 = typeCircularBuffer26.isFull();
        java.lang.reflect.Type type29 = typeCircularBuffer26.get();
        boolean boolean30 = typeCircularBuffer26.isFull();
        java.lang.Class<?> wildcardClass31 = typeCircularBuffer26.getClass();
        boolean boolean32 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass31);
        java.lang.reflect.Type type33 = typeCircularBuffer23.get();
        boolean boolean34 = typeCircularBuffer1.put(type33);
        java.lang.Class<?> wildcardClass35 = type33.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(type17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(type24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(type29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test1252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1252");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean19 = typeCircularBuffer18.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer21.getClass();
        boolean boolean23 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass22);
        java.lang.reflect.Type type24 = typeCircularBuffer18.get();
        boolean boolean25 = typeCircularBuffer16.put(type24);
        boolean boolean26 = typeCircularBuffer16.isFull();
        java.lang.reflect.Type type27 = typeCircularBuffer16.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean30 = typeCircularBuffer29.isEmpty();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        boolean boolean33 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean35 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean36 = typeCircularBuffer9.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean39 = typeCircularBuffer38.isFull();
        boolean boolean40 = typeCircularBuffer38.isEmpty();
        boolean boolean41 = typeCircularBuffer38.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer46.getClass();
        boolean boolean48 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass47);
        java.lang.reflect.Type type49 = typeCircularBuffer43.get();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        boolean boolean52 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean53 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean54 = typeCircularBuffer38.isFull();
        java.lang.reflect.Type type55 = typeCircularBuffer38.get();
        boolean boolean56 = typeCircularBuffer9.put(type55);
        java.lang.Class<?> wildcardClass57 = type55.getClass();
        boolean boolean58 = typeCircularBuffer1.put(type55);
        java.lang.reflect.Type type59 = typeCircularBuffer1.get();
        boolean boolean60 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass61 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test1253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1253");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        boolean boolean8 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        boolean boolean10 = typeCircularBuffer1.isFull();
        boolean boolean11 = typeCircularBuffer1.isFull();
        boolean boolean12 = typeCircularBuffer1.isEmpty();
        boolean boolean13 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test1254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1254");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean7 = typeCircularBuffer6.isFull();
        boolean boolean8 = typeCircularBuffer6.isEmpty();
        java.lang.reflect.Type type9 = typeCircularBuffer6.get();
        boolean boolean10 = typeCircularBuffer6.isEmpty();
        java.lang.Object obj11 = new java.lang.Object();
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        boolean boolean13 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass12);
        java.lang.reflect.Type type14 = typeCircularBuffer6.get();
        boolean boolean15 = typeCircularBuffer1.put(type14);
        boolean boolean16 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test1255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1255");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        boolean boolean9 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type10 = typeCircularBuffer1.get();
        boolean boolean11 = typeCircularBuffer1.isEmpty();
        boolean boolean12 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type13 = typeCircularBuffer1.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass14 = type13.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(type13);
    }

    @Test
    public void test1256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1256");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '#');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean13 = typeCircularBuffer12.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass16 = typeCircularBuffer15.getClass();
        boolean boolean17 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass16);
        java.lang.reflect.Type type18 = typeCircularBuffer12.get();
        boolean boolean19 = typeCircularBuffer10.put(type18);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean24 = typeCircularBuffer23.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer26.getClass();
        boolean boolean28 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass27);
        java.lang.reflect.Type type29 = typeCircularBuffer23.get();
        boolean boolean30 = typeCircularBuffer21.put(type29);
        java.lang.Class<?> wildcardClass31 = typeCircularBuffer21.getClass();
        boolean boolean32 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass31);
        boolean boolean33 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass31);
        boolean boolean34 = typeCircularBuffer8.isEmpty();
        boolean boolean35 = typeCircularBuffer8.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean40 = typeCircularBuffer39.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass43 = typeCircularBuffer42.getClass();
        boolean boolean44 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass43);
        java.lang.reflect.Type type45 = typeCircularBuffer39.get();
        boolean boolean46 = typeCircularBuffer37.put(type45);
        boolean boolean47 = typeCircularBuffer37.isEmpty();
        java.lang.reflect.Type type48 = typeCircularBuffer37.get();
        boolean boolean49 = typeCircularBuffer8.put(type48);
        boolean boolean50 = typeCircularBuffer1.put(type48);
        java.lang.Class<?> wildcardClass51 = type48.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test1257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1257");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type12 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer17.getClass();
        boolean boolean19 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass18);
        boolean boolean20 = typeCircularBuffer14.isFull();
        java.lang.reflect.Type type21 = typeCircularBuffer14.get();
        boolean boolean22 = typeCircularBuffer1.put(type21);
        java.lang.reflect.Type type23 = typeCircularBuffer1.get();
        boolean boolean24 = typeCircularBuffer1.isFull();
        boolean boolean25 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean28 = typeCircularBuffer27.isEmpty();
        java.lang.reflect.Type type29 = typeCircularBuffer27.get();
        java.lang.reflect.Type type30 = typeCircularBuffer27.get();
        java.lang.reflect.Type type31 = typeCircularBuffer27.get();
        boolean boolean32 = typeCircularBuffer27.isFull();
        java.lang.reflect.Type type33 = typeCircularBuffer27.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean36 = typeCircularBuffer35.isEmpty();
        java.lang.Class<?> wildcardClass37 = typeCircularBuffer35.getClass();
        boolean boolean38 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass37);
        java.lang.reflect.Type type39 = typeCircularBuffer27.get();
        boolean boolean40 = typeCircularBuffer1.put(type39);
        java.lang.Class<?> wildcardClass41 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(type29);
        org.junit.Assert.assertNull(type30);
        org.junit.Assert.assertNull(type31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(type33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test1258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1258");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isFull();
        boolean boolean8 = typeCircularBuffer1.isFull();
        boolean boolean9 = typeCircularBuffer1.isEmpty();
        boolean boolean10 = typeCircularBuffer1.isFull();
        boolean boolean11 = typeCircularBuffer1.isFull();
        boolean boolean12 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type13 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(type13);
    }

    @Test
    public void test1259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1259");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type5 = typeCircularBuffer4.get();
        boolean boolean6 = typeCircularBuffer4.isFull();
        boolean boolean7 = typeCircularBuffer4.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        java.lang.Object obj11 = new java.lang.Object();
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        boolean boolean13 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass12);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer9.getClass();
        boolean boolean15 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass14);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        boolean boolean21 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer17.getClass();
        boolean boolean23 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass22);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) 'a');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer27.getClass();
        boolean boolean29 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass28);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean32 = typeCircularBuffer31.isFull();
        boolean boolean33 = typeCircularBuffer31.isEmpty();
        java.lang.reflect.Type type34 = typeCircularBuffer31.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean39 = typeCircularBuffer38.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass42 = typeCircularBuffer41.getClass();
        boolean boolean43 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass42);
        java.lang.reflect.Type type44 = typeCircularBuffer38.get();
        boolean boolean45 = typeCircularBuffer36.put(type44);
        java.lang.Class<?> wildcardClass46 = typeCircularBuffer36.getClass();
        boolean boolean47 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass46);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer49 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(10);
        java.lang.Class<?> wildcardClass50 = typeCircularBuffer49.getClass();
        boolean boolean51 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass50);
        boolean boolean52 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass50);
        boolean boolean53 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass50);
        boolean boolean54 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass50);
        java.lang.reflect.Type type55 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(type34);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(type55);
    }

    @Test
    public void test1260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1260");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer6.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        boolean boolean13 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean16 = typeCircularBuffer15.isFull();
        boolean boolean17 = typeCircularBuffer15.isEmpty();
        java.lang.reflect.Type type18 = typeCircularBuffer15.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass26 = typeCircularBuffer25.getClass();
        boolean boolean27 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass26);
        java.lang.reflect.Type type28 = typeCircularBuffer22.get();
        boolean boolean29 = typeCircularBuffer20.put(type28);
        java.lang.Class<?> wildcardClass30 = typeCircularBuffer20.getClass();
        boolean boolean31 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass30);
        boolean boolean32 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass30);
        boolean boolean33 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass34 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(type18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test1261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1261");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer5 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean6 = typeCircularBuffer5.isEmpty();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = typeCircularBuffer5.put((java.lang.reflect.Type) wildcardClass8);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer5.getClass();
        boolean boolean11 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass10);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        boolean boolean19 = typeCircularBuffer13.isEmpty();
        java.lang.reflect.Type type20 = typeCircularBuffer13.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        java.lang.reflect.Type type23 = typeCircularBuffer22.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean26 = typeCircularBuffer25.isFull();
        boolean boolean27 = typeCircularBuffer25.isEmpty();
        boolean boolean28 = typeCircularBuffer25.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean31 = typeCircularBuffer30.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass34 = typeCircularBuffer33.getClass();
        boolean boolean35 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass34);
        java.lang.reflect.Type type36 = typeCircularBuffer30.get();
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        boolean boolean39 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass38);
        boolean boolean40 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass38);
        boolean boolean41 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass38);
        java.lang.Class<?> wildcardClass42 = typeCircularBuffer22.getClass();
        boolean boolean43 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass42);
        boolean boolean44 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass42);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type47 = typeCircularBuffer46.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer49 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean52 = typeCircularBuffer51.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer54 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass55 = typeCircularBuffer54.getClass();
        boolean boolean56 = typeCircularBuffer51.put((java.lang.reflect.Type) wildcardClass55);
        java.lang.reflect.Type type57 = typeCircularBuffer51.get();
        boolean boolean58 = typeCircularBuffer49.put(type57);
        boolean boolean59 = typeCircularBuffer49.isFull();
        java.lang.reflect.Type type60 = typeCircularBuffer49.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer62 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean63 = typeCircularBuffer62.isEmpty();
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        boolean boolean66 = typeCircularBuffer62.put((java.lang.reflect.Type) wildcardClass65);
        boolean boolean67 = typeCircularBuffer49.put((java.lang.reflect.Type) wildcardClass65);
        boolean boolean68 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass65);
        boolean boolean69 = typeCircularBuffer46.isEmpty();
        boolean boolean70 = typeCircularBuffer46.isFull();
        boolean boolean71 = typeCircularBuffer46.isFull();
        boolean boolean72 = typeCircularBuffer46.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer74 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean75 = typeCircularBuffer74.isFull();
        java.lang.Class<?> wildcardClass76 = typeCircularBuffer74.getClass();
        boolean boolean77 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass76);
        boolean boolean78 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass76);
        boolean boolean79 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNull(type23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(type47);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test1262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1262");
        // The following exception was thrown during execution in test generation
        try {
            com.thealgorithms.datastructures.buffers.CircularBuffer<java.io.Serializable> serializableCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.io.Serializable>((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1263");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type8 = typeCircularBuffer7.get();
        boolean boolean9 = typeCircularBuffer7.isFull();
        boolean boolean10 = typeCircularBuffer7.isEmpty();
        boolean boolean11 = typeCircularBuffer7.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer7.put((java.lang.reflect.Type) wildcardClass14);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean18 = typeCircularBuffer17.isFull();
        boolean boolean19 = typeCircularBuffer17.isEmpty();
        boolean boolean20 = typeCircularBuffer17.isFull();
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer17.getClass();
        boolean boolean22 = typeCircularBuffer7.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type23 = typeCircularBuffer7.get();
        boolean boolean24 = typeCircularBuffer1.put(type23);
        boolean boolean25 = typeCircularBuffer1.isFull();
        boolean boolean26 = typeCircularBuffer1.isEmpty();
        boolean boolean27 = typeCircularBuffer1.isFull();
        boolean boolean28 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test1264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1264");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) ' ');
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test1265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1265");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean8 = typeCircularBuffer7.isFull();
        boolean boolean9 = typeCircularBuffer7.isEmpty();
        boolean boolean10 = typeCircularBuffer7.isFull();
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer7.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        boolean boolean13 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type18 = typeCircularBuffer17.get();
        boolean boolean19 = typeCircularBuffer17.isFull();
        boolean boolean20 = typeCircularBuffer17.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        boolean boolean26 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer22.getClass();
        boolean boolean28 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer17.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean32 = typeCircularBuffer31.isFull();
        boolean boolean33 = typeCircularBuffer31.isEmpty();
        java.lang.reflect.Type type34 = typeCircularBuffer31.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean39 = typeCircularBuffer38.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass42 = typeCircularBuffer41.getClass();
        boolean boolean43 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass42);
        java.lang.reflect.Type type44 = typeCircularBuffer38.get();
        boolean boolean45 = typeCircularBuffer36.put(type44);
        java.lang.Class<?> wildcardClass46 = typeCircularBuffer36.getClass();
        boolean boolean47 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass46);
        boolean boolean48 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass46);
        boolean boolean49 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass46);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean52 = typeCircularBuffer51.isFull();
        java.lang.reflect.Type type53 = typeCircularBuffer51.get();
        boolean boolean54 = typeCircularBuffer51.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer56 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean57 = typeCircularBuffer56.isEmpty();
        java.lang.Class<?> wildcardClass58 = typeCircularBuffer56.getClass();
        boolean boolean59 = typeCircularBuffer51.put((java.lang.reflect.Type) wildcardClass58);
        java.lang.Class<?> wildcardClass60 = typeCircularBuffer51.getClass();
        boolean boolean61 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass60);
        boolean boolean62 = typeCircularBuffer15.isFull();
        boolean boolean63 = typeCircularBuffer15.isEmpty();
        java.lang.Class<?> wildcardClass64 = typeCircularBuffer15.getClass();
        boolean boolean65 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass64);
        boolean boolean66 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(type18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(type34);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(type53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test1266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1266");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        boolean boolean7 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean19 = typeCircularBuffer18.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer21.getClass();
        boolean boolean23 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass22);
        java.lang.reflect.Type type24 = typeCircularBuffer18.get();
        boolean boolean25 = typeCircularBuffer16.put(type24);
        boolean boolean26 = typeCircularBuffer16.isFull();
        java.lang.reflect.Type type27 = typeCircularBuffer16.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean30 = typeCircularBuffer29.isEmpty();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        boolean boolean33 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean35 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean36 = typeCircularBuffer9.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean39 = typeCircularBuffer38.isFull();
        boolean boolean40 = typeCircularBuffer38.isEmpty();
        boolean boolean41 = typeCircularBuffer38.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer46.getClass();
        boolean boolean48 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass47);
        java.lang.reflect.Type type49 = typeCircularBuffer43.get();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        boolean boolean52 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean53 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean54 = typeCircularBuffer38.isFull();
        java.lang.reflect.Type type55 = typeCircularBuffer38.get();
        boolean boolean56 = typeCircularBuffer9.put(type55);
        boolean boolean57 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer59 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean60 = typeCircularBuffer59.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer62 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass63 = typeCircularBuffer62.getClass();
        boolean boolean64 = typeCircularBuffer59.put((java.lang.reflect.Type) wildcardClass63);
        java.lang.reflect.Type type65 = typeCircularBuffer59.get();
        boolean boolean66 = typeCircularBuffer59.isFull();
        java.lang.reflect.Type type67 = typeCircularBuffer59.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer69 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean70 = typeCircularBuffer69.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer72 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass73 = typeCircularBuffer72.getClass();
        boolean boolean74 = typeCircularBuffer69.put((java.lang.reflect.Type) wildcardClass73);
        java.lang.reflect.Type type75 = typeCircularBuffer69.get();
        java.lang.Object obj76 = new java.lang.Object();
        java.lang.Class<?> wildcardClass77 = obj76.getClass();
        boolean boolean78 = typeCircularBuffer69.put((java.lang.reflect.Type) wildcardClass77);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer80 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean81 = typeCircularBuffer80.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer83 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass84 = typeCircularBuffer83.getClass();
        boolean boolean85 = typeCircularBuffer80.put((java.lang.reflect.Type) wildcardClass84);
        java.lang.Class<?> wildcardClass86 = typeCircularBuffer80.getClass();
        boolean boolean87 = typeCircularBuffer69.put((java.lang.reflect.Type) wildcardClass86);
        boolean boolean88 = typeCircularBuffer59.put((java.lang.reflect.Type) wildcardClass86);
        java.lang.reflect.Type type89 = typeCircularBuffer59.get();
        boolean boolean90 = typeCircularBuffer9.put(type89);
        boolean boolean91 = typeCircularBuffer1.put(type89);
        java.lang.Class<?> wildcardClass92 = type89.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(type67);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(type89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test1267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1267");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass6 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test1268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1268");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean9 = typeCircularBuffer8.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass12 = typeCircularBuffer11.getClass();
        boolean boolean13 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass12);
        java.lang.reflect.Type type14 = typeCircularBuffer8.get();
        boolean boolean15 = typeCircularBuffer6.put(type14);
        java.lang.Class<?> wildcardClass16 = typeCircularBuffer6.getClass();
        boolean boolean17 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass16);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type20 = typeCircularBuffer19.get();
        boolean boolean21 = typeCircularBuffer19.isFull();
        boolean boolean22 = typeCircularBuffer19.isFull();
        boolean boolean23 = typeCircularBuffer19.isFull();
        java.lang.reflect.Type type24 = typeCircularBuffer19.get();
        boolean boolean25 = typeCircularBuffer19.isEmpty();
        java.lang.reflect.Type type26 = typeCircularBuffer19.get();
        java.lang.reflect.Type type27 = typeCircularBuffer19.get();
        boolean boolean28 = typeCircularBuffer19.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean33 = typeCircularBuffer32.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer35.getClass();
        boolean boolean37 = typeCircularBuffer32.put((java.lang.reflect.Type) wildcardClass36);
        java.lang.reflect.Type type38 = typeCircularBuffer32.get();
        boolean boolean39 = typeCircularBuffer30.put(type38);
        boolean boolean40 = typeCircularBuffer30.isFull();
        java.lang.reflect.Type type41 = typeCircularBuffer30.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        boolean boolean47 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass46);
        boolean boolean48 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass46);
        boolean boolean49 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass46);
        java.lang.Class<?> wildcardClass50 = typeCircularBuffer19.getClass();
        boolean boolean51 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass50);
        boolean boolean52 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer54 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer56 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean57 = typeCircularBuffer56.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer59 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass60 = typeCircularBuffer59.getClass();
        boolean boolean61 = typeCircularBuffer56.put((java.lang.reflect.Type) wildcardClass60);
        java.lang.reflect.Type type62 = typeCircularBuffer56.get();
        boolean boolean63 = typeCircularBuffer54.put(type62);
        boolean boolean64 = typeCircularBuffer54.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer66 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean67 = typeCircularBuffer66.isEmpty();
        boolean boolean68 = typeCircularBuffer66.isFull();
        java.lang.reflect.Type type69 = typeCircularBuffer66.get();
        boolean boolean70 = typeCircularBuffer66.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer72 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean73 = typeCircularBuffer72.isFull();
        java.lang.Class<?> wildcardClass74 = typeCircularBuffer72.getClass();
        boolean boolean75 = typeCircularBuffer66.put((java.lang.reflect.Type) wildcardClass74);
        boolean boolean76 = typeCircularBuffer54.put((java.lang.reflect.Type) wildcardClass74);
        java.lang.reflect.Type type77 = typeCircularBuffer54.get();
        java.lang.Class<?> wildcardClass78 = typeCircularBuffer54.getClass();
        boolean boolean79 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass78);
        boolean boolean80 = typeCircularBuffer1.isFull();
        boolean boolean81 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(type20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(type26);
        org.junit.Assert.assertNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(type69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
    }

    @Test
    public void test1269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1269");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        boolean boolean8 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean13 = typeCircularBuffer12.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass16 = typeCircularBuffer15.getClass();
        boolean boolean17 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass16);
        java.lang.reflect.Type type18 = typeCircularBuffer12.get();
        boolean boolean19 = typeCircularBuffer10.put(type18);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean24 = typeCircularBuffer23.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer26.getClass();
        boolean boolean28 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass27);
        java.lang.reflect.Type type29 = typeCircularBuffer23.get();
        boolean boolean30 = typeCircularBuffer21.put(type29);
        java.lang.Class<?> wildcardClass31 = typeCircularBuffer21.getClass();
        boolean boolean32 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass31);
        boolean boolean33 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass31);
        java.lang.reflect.Type type34 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test1270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1270");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        boolean boolean5 = typeCircularBuffer1.isFull();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test1271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1271");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean10 = typeCircularBuffer9.isFull();
        boolean boolean11 = typeCircularBuffer9.isEmpty();
        java.lang.reflect.Type type12 = typeCircularBuffer9.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer19.getClass();
        boolean boolean21 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type22 = typeCircularBuffer16.get();
        boolean boolean23 = typeCircularBuffer14.put(type22);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer14.getClass();
        boolean boolean25 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean26 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean27 = typeCircularBuffer1.isEmpty();
        boolean boolean28 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean33 = typeCircularBuffer32.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer35.getClass();
        boolean boolean37 = typeCircularBuffer32.put((java.lang.reflect.Type) wildcardClass36);
        java.lang.reflect.Type type38 = typeCircularBuffer32.get();
        boolean boolean39 = typeCircularBuffer30.put(type38);
        java.lang.reflect.Type type40 = typeCircularBuffer30.get();
        java.lang.reflect.Type type41 = null;
        boolean boolean42 = typeCircularBuffer30.put(type41);
        boolean boolean43 = typeCircularBuffer30.isEmpty();
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer30.getClass();
        boolean boolean45 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean46 = typeCircularBuffer1.isFull();
        boolean boolean47 = typeCircularBuffer1.isEmpty();
        boolean boolean48 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(type12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
    }

    @Test
    public void test1272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1272");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type4 = typeCircularBuffer3.get();
        boolean boolean5 = typeCircularBuffer3.isFull();
        boolean boolean6 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean9 = typeCircularBuffer8.isEmpty();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer8.getClass();
        boolean boolean14 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass13);
        boolean boolean15 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean18 = typeCircularBuffer17.isFull();
        boolean boolean19 = typeCircularBuffer17.isEmpty();
        java.lang.reflect.Type type20 = typeCircularBuffer17.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean25 = typeCircularBuffer24.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer27.getClass();
        boolean boolean29 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.reflect.Type type30 = typeCircularBuffer24.get();
        boolean boolean31 = typeCircularBuffer22.put(type30);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer22.getClass();
        boolean boolean33 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean35 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass32);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean38 = typeCircularBuffer37.isFull();
        java.lang.reflect.Type type39 = typeCircularBuffer37.get();
        boolean boolean40 = typeCircularBuffer37.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean43 = typeCircularBuffer42.isEmpty();
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer42.getClass();
        boolean boolean45 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass44);
        java.lang.Class<?> wildcardClass46 = typeCircularBuffer37.getClass();
        boolean boolean47 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass46);
        boolean boolean48 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(type20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(type39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
    }

    @Test
    public void test1273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1273");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass9);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean13 = typeCircularBuffer12.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass16 = typeCircularBuffer15.getClass();
        boolean boolean17 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass16);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer12.getClass();
        boolean boolean19 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass18);
        java.lang.reflect.Type type20 = typeCircularBuffer1.get();
        java.lang.reflect.Type type21 = typeCircularBuffer1.get();
        boolean boolean22 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type25 = typeCircularBuffer24.get();
        boolean boolean26 = typeCircularBuffer24.isFull();
        boolean boolean27 = typeCircularBuffer24.isFull();
        boolean boolean28 = typeCircularBuffer24.isEmpty();
        java.lang.reflect.Type type29 = typeCircularBuffer24.get();
        boolean boolean30 = typeCircularBuffer24.isEmpty();
        java.lang.Class<?> wildcardClass31 = typeCircularBuffer24.getClass();
        boolean boolean32 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass31);
        boolean boolean33 = typeCircularBuffer1.isFull();
        boolean boolean34 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type35 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNull(type21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(type25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(type29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(type35);
    }

    @Test
    public void test1274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1274");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        boolean boolean5 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass8 = typeCircularBuffer7.getClass();
        boolean boolean9 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass8);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean12 = typeCircularBuffer11.isFull();
        boolean boolean13 = typeCircularBuffer11.isEmpty();
        boolean boolean14 = typeCircularBuffer11.isFull();
        java.lang.Class<?> wildcardClass15 = typeCircularBuffer11.getClass();
        boolean boolean16 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass15);
        boolean boolean17 = typeCircularBuffer1.isFull();
        boolean boolean18 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type19 = typeCircularBuffer1.get();
        boolean boolean20 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type21 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(type21);
    }

    @Test
    public void test1275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1275");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        boolean boolean7 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean19 = typeCircularBuffer18.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer21.getClass();
        boolean boolean23 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass22);
        java.lang.reflect.Type type24 = typeCircularBuffer18.get();
        boolean boolean25 = typeCircularBuffer16.put(type24);
        boolean boolean26 = typeCircularBuffer16.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer31.getClass();
        boolean boolean33 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass32);
        java.lang.reflect.Type type34 = typeCircularBuffer28.get();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        boolean boolean37 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean38 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean39 = typeCircularBuffer16.isEmpty();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        boolean boolean42 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean43 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean44 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean45 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type46 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass47 = type46.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test1276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1276");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type24 = typeCircularBuffer1.get();
        boolean boolean25 = typeCircularBuffer1.isEmpty();
        boolean boolean26 = typeCircularBuffer1.isEmpty();
        boolean boolean27 = typeCircularBuffer1.isFull();
        boolean boolean28 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type29 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(type29);
    }

    @Test
    public void test1277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1277");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean9 = typeCircularBuffer8.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass12 = typeCircularBuffer11.getClass();
        boolean boolean13 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass12);
        java.lang.reflect.Type type14 = typeCircularBuffer8.get();
        boolean boolean15 = typeCircularBuffer6.put(type14);
        java.lang.Class<?> wildcardClass16 = typeCircularBuffer6.getClass();
        boolean boolean17 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass16);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type20 = typeCircularBuffer19.get();
        boolean boolean21 = typeCircularBuffer19.isFull();
        boolean boolean22 = typeCircularBuffer19.isFull();
        boolean boolean23 = typeCircularBuffer19.isFull();
        java.lang.reflect.Type type24 = typeCircularBuffer19.get();
        boolean boolean25 = typeCircularBuffer19.isEmpty();
        java.lang.reflect.Type type26 = typeCircularBuffer19.get();
        java.lang.reflect.Type type27 = typeCircularBuffer19.get();
        boolean boolean28 = typeCircularBuffer19.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean33 = typeCircularBuffer32.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer35.getClass();
        boolean boolean37 = typeCircularBuffer32.put((java.lang.reflect.Type) wildcardClass36);
        java.lang.reflect.Type type38 = typeCircularBuffer32.get();
        boolean boolean39 = typeCircularBuffer30.put(type38);
        boolean boolean40 = typeCircularBuffer30.isFull();
        java.lang.reflect.Type type41 = typeCircularBuffer30.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        boolean boolean47 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass46);
        boolean boolean48 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass46);
        boolean boolean49 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass46);
        java.lang.Class<?> wildcardClass50 = typeCircularBuffer19.getClass();
        boolean boolean51 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass50);
        boolean boolean52 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer54 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer56 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean57 = typeCircularBuffer56.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer59 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass60 = typeCircularBuffer59.getClass();
        boolean boolean61 = typeCircularBuffer56.put((java.lang.reflect.Type) wildcardClass60);
        java.lang.reflect.Type type62 = typeCircularBuffer56.get();
        boolean boolean63 = typeCircularBuffer54.put(type62);
        boolean boolean64 = typeCircularBuffer54.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer66 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean67 = typeCircularBuffer66.isEmpty();
        boolean boolean68 = typeCircularBuffer66.isFull();
        java.lang.reflect.Type type69 = typeCircularBuffer66.get();
        boolean boolean70 = typeCircularBuffer66.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer72 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean73 = typeCircularBuffer72.isFull();
        java.lang.Class<?> wildcardClass74 = typeCircularBuffer72.getClass();
        boolean boolean75 = typeCircularBuffer66.put((java.lang.reflect.Type) wildcardClass74);
        boolean boolean76 = typeCircularBuffer54.put((java.lang.reflect.Type) wildcardClass74);
        java.lang.reflect.Type type77 = typeCircularBuffer54.get();
        java.lang.Class<?> wildcardClass78 = typeCircularBuffer54.getClass();
        boolean boolean79 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass78);
        boolean boolean80 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type81 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(type20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(type26);
        org.junit.Assert.assertNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(type69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNull(type81);
    }

    @Test
    public void test1278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1278");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.AnnotatedElement> annotatedElementCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.AnnotatedElement>((int) (short) 100);
    }

    @Test
    public void test1279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1279");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        boolean boolean8 = typeCircularBuffer1.isEmpty();
        boolean boolean9 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type10 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(type10);
    }

    @Test
    public void test1280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1280");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        boolean boolean6 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        boolean boolean8 = typeCircularBuffer1.isEmpty();
        boolean boolean9 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type10 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean13 = typeCircularBuffer12.isFull();
        java.lang.reflect.Type type14 = typeCircularBuffer12.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        boolean boolean20 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass19);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer16.getClass();
        boolean boolean22 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass21);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean25 = typeCircularBuffer24.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer27.getClass();
        boolean boolean29 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass28);
        boolean boolean30 = typeCircularBuffer24.isEmpty();
        java.lang.reflect.Type type31 = typeCircularBuffer24.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        java.lang.reflect.Type type34 = typeCircularBuffer33.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean37 = typeCircularBuffer36.isFull();
        boolean boolean38 = typeCircularBuffer36.isEmpty();
        boolean boolean39 = typeCircularBuffer36.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean42 = typeCircularBuffer41.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass45 = typeCircularBuffer44.getClass();
        boolean boolean46 = typeCircularBuffer41.put((java.lang.reflect.Type) wildcardClass45);
        java.lang.reflect.Type type47 = typeCircularBuffer41.get();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        boolean boolean50 = typeCircularBuffer41.put((java.lang.reflect.Type) wildcardClass49);
        boolean boolean51 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass49);
        boolean boolean52 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass49);
        java.lang.Class<?> wildcardClass53 = typeCircularBuffer33.getClass();
        boolean boolean54 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass53);
        boolean boolean55 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass53);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer57 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type58 = typeCircularBuffer57.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer60 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer62 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean63 = typeCircularBuffer62.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer65 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass66 = typeCircularBuffer65.getClass();
        boolean boolean67 = typeCircularBuffer62.put((java.lang.reflect.Type) wildcardClass66);
        java.lang.reflect.Type type68 = typeCircularBuffer62.get();
        boolean boolean69 = typeCircularBuffer60.put(type68);
        boolean boolean70 = typeCircularBuffer60.isFull();
        java.lang.reflect.Type type71 = typeCircularBuffer60.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer73 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean74 = typeCircularBuffer73.isEmpty();
        java.lang.Object obj75 = new java.lang.Object();
        java.lang.Class<?> wildcardClass76 = obj75.getClass();
        boolean boolean77 = typeCircularBuffer73.put((java.lang.reflect.Type) wildcardClass76);
        boolean boolean78 = typeCircularBuffer60.put((java.lang.reflect.Type) wildcardClass76);
        boolean boolean79 = typeCircularBuffer57.put((java.lang.reflect.Type) wildcardClass76);
        boolean boolean80 = typeCircularBuffer57.isEmpty();
        boolean boolean81 = typeCircularBuffer57.isFull();
        boolean boolean82 = typeCircularBuffer57.isFull();
        boolean boolean83 = typeCircularBuffer57.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer85 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean86 = typeCircularBuffer85.isFull();
        java.lang.Class<?> wildcardClass87 = typeCircularBuffer85.getClass();
        boolean boolean88 = typeCircularBuffer57.put((java.lang.reflect.Type) wildcardClass87);
        boolean boolean89 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass87);
        boolean boolean90 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass87);
        java.lang.reflect.Type type91 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(type14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNull(type34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(type58);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(type91);
    }

    @Test
    public void test1281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1281");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        java.lang.reflect.Type type12 = typeCircularBuffer6.get();
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        boolean boolean15 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass14);
        boolean boolean16 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass14);
        boolean boolean17 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean20 = typeCircularBuffer19.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass23 = typeCircularBuffer22.getClass();
        boolean boolean24 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass23);
        boolean boolean25 = typeCircularBuffer19.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.GenericDeclaration> genericDeclarationCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.GenericDeclaration>((int) (short) 100);
        java.lang.Class<?> wildcardClass28 = genericDeclarationCircularBuffer27.getClass();
        boolean boolean29 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass28);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean32 = typeCircularBuffer31.isFull();
        java.lang.reflect.Type type33 = typeCircularBuffer31.get();
        boolean boolean34 = typeCircularBuffer31.isFull();
        java.lang.reflect.Type type35 = typeCircularBuffer31.get();
        boolean boolean36 = typeCircularBuffer31.isFull();
        boolean boolean37 = typeCircularBuffer31.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean40 = typeCircularBuffer39.isFull();
        boolean boolean41 = typeCircularBuffer39.isEmpty();
        java.lang.reflect.Type type42 = typeCircularBuffer39.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean47 = typeCircularBuffer46.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer49 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass50 = typeCircularBuffer49.getClass();
        boolean boolean51 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass50);
        java.lang.reflect.Type type52 = typeCircularBuffer46.get();
        boolean boolean53 = typeCircularBuffer44.put(type52);
        java.lang.Class<?> wildcardClass54 = typeCircularBuffer44.getClass();
        boolean boolean55 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean56 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean57 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean58 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass54);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer60 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type61 = typeCircularBuffer60.get();
        boolean boolean62 = typeCircularBuffer60.isFull();
        boolean boolean63 = typeCircularBuffer60.isEmpty();
        boolean boolean64 = typeCircularBuffer60.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer66 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass67 = typeCircularBuffer66.getClass();
        boolean boolean68 = typeCircularBuffer60.put((java.lang.reflect.Type) wildcardClass67);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer70 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean71 = typeCircularBuffer70.isFull();
        boolean boolean72 = typeCircularBuffer70.isEmpty();
        boolean boolean73 = typeCircularBuffer70.isFull();
        java.lang.Class<?> wildcardClass74 = typeCircularBuffer70.getClass();
        boolean boolean75 = typeCircularBuffer60.put((java.lang.reflect.Type) wildcardClass74);
        boolean boolean76 = typeCircularBuffer60.isFull();
        java.lang.reflect.Type type77 = typeCircularBuffer60.get();
        java.lang.Class<?> wildcardClass78 = type77.getClass();
        boolean boolean79 = typeCircularBuffer1.put(type77);
        java.lang.reflect.Type type80 = typeCircularBuffer1.get();
        boolean boolean81 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(type33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(type35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(type42);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(type61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(type77);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
    }

    @Test
    public void test1282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1282");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        java.lang.reflect.Type type11 = typeCircularBuffer10.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean14 = typeCircularBuffer13.isFull();
        boolean boolean15 = typeCircularBuffer13.isEmpty();
        boolean boolean16 = typeCircularBuffer13.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean19 = typeCircularBuffer18.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer21.getClass();
        boolean boolean23 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass22);
        java.lang.reflect.Type type24 = typeCircularBuffer18.get();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        boolean boolean27 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass26);
        boolean boolean28 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass26);
        boolean boolean29 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass26);
        java.lang.Class<?> wildcardClass30 = typeCircularBuffer10.getClass();
        boolean boolean31 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass30);
        boolean boolean32 = typeCircularBuffer1.isFull();
        boolean boolean33 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass34 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNull(type11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test1283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1283");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) 'a');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass4 = typeCircularBuffer3.getClass();
        boolean boolean5 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass4);
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        java.lang.reflect.Type type15 = null;
        boolean boolean16 = typeCircularBuffer9.put(type15);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean21 = typeCircularBuffer20.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer23.getClass();
        boolean boolean25 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass24);
        java.lang.reflect.Type type26 = typeCircularBuffer20.get();
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer20.getClass();
        boolean boolean28 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean30 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass27);
        java.lang.reflect.Type type31 = typeCircularBuffer1.get();
        java.lang.reflect.Type type32 = typeCircularBuffer1.get();
        boolean boolean33 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNull(type32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test1284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1284");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean9 = typeCircularBuffer8.isFull();
        java.lang.reflect.Type type10 = typeCircularBuffer8.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean13 = typeCircularBuffer12.isEmpty();
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        boolean boolean16 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass15);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer12.getClass();
        boolean boolean18 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass17);
        boolean boolean19 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass17);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '#');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean26 = typeCircularBuffer25.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass29 = typeCircularBuffer28.getClass();
        boolean boolean30 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass29);
        java.lang.reflect.Type type31 = typeCircularBuffer25.get();
        boolean boolean32 = typeCircularBuffer23.put(type31);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean37 = typeCircularBuffer36.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass40 = typeCircularBuffer39.getClass();
        boolean boolean41 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass40);
        java.lang.reflect.Type type42 = typeCircularBuffer36.get();
        boolean boolean43 = typeCircularBuffer34.put(type42);
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer34.getClass();
        boolean boolean45 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean46 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean47 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean48 = typeCircularBuffer1.isFull();
        boolean boolean49 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass50 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test1285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1285");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type5 = typeCircularBuffer4.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        java.lang.reflect.Type type15 = typeCircularBuffer9.get();
        boolean boolean16 = typeCircularBuffer7.put(type15);
        boolean boolean17 = typeCircularBuffer7.isFull();
        java.lang.reflect.Type type18 = typeCircularBuffer7.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean21 = typeCircularBuffer20.isEmpty();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        boolean boolean24 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass23);
        boolean boolean25 = typeCircularBuffer7.put((java.lang.reflect.Type) wildcardClass23);
        boolean boolean26 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass23);
        boolean boolean27 = typeCircularBuffer4.isEmpty();
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer4.getClass();
        boolean boolean29 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass28);
        boolean boolean30 = typeCircularBuffer1.isFull();
        boolean boolean31 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type32 = typeCircularBuffer1.get();
        boolean boolean33 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    }

    @Test
    public void test1286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1286");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type12 = typeCircularBuffer1.get();
        boolean boolean13 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean16 = typeCircularBuffer15.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer18.getClass();
        boolean boolean20 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass19);
        java.lang.reflect.Type type21 = typeCircularBuffer15.get();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        boolean boolean24 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass23);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean27 = typeCircularBuffer26.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass30 = typeCircularBuffer29.getClass();
        boolean boolean31 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass30);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer26.getClass();
        boolean boolean33 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer15.isFull();
        java.lang.reflect.Type type35 = typeCircularBuffer15.get();
        java.lang.Class<?> wildcardClass36 = type35.getClass();
        boolean boolean37 = typeCircularBuffer1.put(type35);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
    }

    @Test
    public void test1287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1287");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type4 = typeCircularBuffer3.get();
        boolean boolean5 = typeCircularBuffer3.isFull();
        boolean boolean6 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean9 = typeCircularBuffer8.isEmpty();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer8.getClass();
        boolean boolean14 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass13);
        boolean boolean15 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean18 = typeCircularBuffer17.isFull();
        boolean boolean19 = typeCircularBuffer17.isEmpty();
        java.lang.reflect.Type type20 = typeCircularBuffer17.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean25 = typeCircularBuffer24.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer27.getClass();
        boolean boolean29 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.reflect.Type type30 = typeCircularBuffer24.get();
        boolean boolean31 = typeCircularBuffer22.put(type30);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer22.getClass();
        boolean boolean33 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean35 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass32);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean38 = typeCircularBuffer37.isFull();
        java.lang.reflect.Type type39 = typeCircularBuffer37.get();
        boolean boolean40 = typeCircularBuffer37.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean43 = typeCircularBuffer42.isEmpty();
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer42.getClass();
        boolean boolean45 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass44);
        java.lang.Class<?> wildcardClass46 = typeCircularBuffer37.getClass();
        boolean boolean47 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass46);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer49 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean50 = typeCircularBuffer49.isFull();
        boolean boolean51 = typeCircularBuffer49.isEmpty();
        boolean boolean52 = typeCircularBuffer49.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer54 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean55 = typeCircularBuffer54.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer57 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass58 = typeCircularBuffer57.getClass();
        boolean boolean59 = typeCircularBuffer54.put((java.lang.reflect.Type) wildcardClass58);
        java.lang.reflect.Type type60 = typeCircularBuffer54.get();
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        boolean boolean63 = typeCircularBuffer54.put((java.lang.reflect.Type) wildcardClass62);
        boolean boolean64 = typeCircularBuffer49.put((java.lang.reflect.Type) wildcardClass62);
        boolean boolean65 = typeCircularBuffer49.isFull();
        java.lang.reflect.Type type66 = typeCircularBuffer49.get();
        boolean boolean67 = typeCircularBuffer1.put(type66);
        boolean boolean68 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(type20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(type39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
    }

    @Test
    public void test1288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1288");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        boolean boolean5 = typeCircularBuffer1.isFull();
        boolean boolean6 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type9 = typeCircularBuffer8.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        boolean boolean20 = typeCircularBuffer11.put(type19);
        boolean boolean21 = typeCircularBuffer11.isFull();
        java.lang.reflect.Type type22 = typeCircularBuffer11.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean25 = typeCircularBuffer24.isEmpty();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        boolean boolean28 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean30 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass27);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 0);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer34.getClass();
        boolean boolean36 = typeCircularBuffer32.put((java.lang.reflect.Type) wildcardClass35);
        boolean boolean37 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass35);
        boolean boolean38 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass35);
        java.lang.reflect.Type type39 = null;
        boolean boolean40 = typeCircularBuffer1.put(type39);
        boolean boolean41 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean46 = typeCircularBuffer45.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass49 = typeCircularBuffer48.getClass();
        boolean boolean50 = typeCircularBuffer45.put((java.lang.reflect.Type) wildcardClass49);
        java.lang.reflect.Type type51 = typeCircularBuffer45.get();
        boolean boolean52 = typeCircularBuffer43.put(type51);
        boolean boolean53 = typeCircularBuffer43.isFull();
        java.lang.reflect.Type type54 = typeCircularBuffer43.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer56 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer58 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean59 = typeCircularBuffer58.isFull();
        boolean boolean60 = typeCircularBuffer58.isEmpty();
        java.lang.reflect.Type type61 = typeCircularBuffer58.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer63 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer65 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean66 = typeCircularBuffer65.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer68 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass69 = typeCircularBuffer68.getClass();
        boolean boolean70 = typeCircularBuffer65.put((java.lang.reflect.Type) wildcardClass69);
        java.lang.reflect.Type type71 = typeCircularBuffer65.get();
        boolean boolean72 = typeCircularBuffer63.put(type71);
        java.lang.Class<?> wildcardClass73 = typeCircularBuffer63.getClass();
        boolean boolean74 = typeCircularBuffer58.put((java.lang.reflect.Type) wildcardClass73);
        boolean boolean75 = typeCircularBuffer56.put((java.lang.reflect.Type) wildcardClass73);
        boolean boolean76 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass73);
        boolean boolean77 = typeCircularBuffer43.isFull();
        boolean boolean78 = typeCircularBuffer43.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer80 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) ' ');
        boolean boolean81 = typeCircularBuffer80.isEmpty();
        java.lang.Class<?> wildcardClass82 = typeCircularBuffer80.getClass();
        boolean boolean83 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass82);
        boolean boolean84 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass82);
        boolean boolean85 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(type61);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
    }

    @Test
    public void test1289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1289");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type10 = typeCircularBuffer9.get();
        boolean boolean11 = typeCircularBuffer9.isFull();
        boolean boolean12 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer14.getClass();
        boolean boolean20 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass19);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        boolean boolean26 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer22.getClass();
        boolean boolean28 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass27);
        java.lang.reflect.Type type30 = typeCircularBuffer1.get();
        java.lang.reflect.Type type31 = typeCircularBuffer1.get();
        java.lang.reflect.Type type32 = typeCircularBuffer1.get();
        java.lang.reflect.Type type33 = typeCircularBuffer1.get();
        java.lang.reflect.Type type34 = typeCircularBuffer1.get();
        boolean boolean35 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNull(type31);
        org.junit.Assert.assertNull(type32);
        org.junit.Assert.assertNull(type33);
        org.junit.Assert.assertNull(type34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test1290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1290");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) 'a');
        boolean boolean2 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean7 = typeCircularBuffer6.isFull();
        boolean boolean8 = typeCircularBuffer6.isEmpty();
        java.lang.reflect.Type type9 = typeCircularBuffer6.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        boolean boolean20 = typeCircularBuffer11.put(type19);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer11.getClass();
        boolean boolean22 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean24 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type25 = typeCircularBuffer1.get();
        boolean boolean26 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type27 = typeCircularBuffer1.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass28 = type27.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(type27);
    }

    @Test
    public void test1291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1291");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '#');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer5 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean6 = typeCircularBuffer5.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass9 = typeCircularBuffer8.getClass();
        boolean boolean10 = typeCircularBuffer5.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.reflect.Type type11 = typeCircularBuffer5.get();
        boolean boolean12 = typeCircularBuffer3.put(type11);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer19.getClass();
        boolean boolean21 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type22 = typeCircularBuffer16.get();
        boolean boolean23 = typeCircularBuffer14.put(type22);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer14.getClass();
        boolean boolean25 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean26 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean27 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type28 = typeCircularBuffer1.get();
        boolean boolean29 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean34 = typeCircularBuffer33.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass37 = typeCircularBuffer36.getClass();
        boolean boolean38 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass37);
        java.lang.reflect.Type type39 = typeCircularBuffer33.get();
        boolean boolean40 = typeCircularBuffer31.put(type39);
        boolean boolean41 = typeCircularBuffer31.isEmpty();
        boolean boolean42 = typeCircularBuffer31.isFull();
        boolean boolean43 = typeCircularBuffer31.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean48 = typeCircularBuffer47.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer50.getClass();
        boolean boolean52 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass51);
        java.lang.reflect.Type type53 = typeCircularBuffer47.get();
        boolean boolean54 = typeCircularBuffer45.put(type53);
        boolean boolean55 = typeCircularBuffer45.isFull();
        java.lang.reflect.Type type56 = typeCircularBuffer45.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer58 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean59 = typeCircularBuffer58.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer61 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass62 = typeCircularBuffer61.getClass();
        boolean boolean63 = typeCircularBuffer58.put((java.lang.reflect.Type) wildcardClass62);
        boolean boolean64 = typeCircularBuffer58.isFull();
        java.lang.reflect.Type type65 = typeCircularBuffer58.get();
        boolean boolean66 = typeCircularBuffer45.put(type65);
        boolean boolean67 = typeCircularBuffer31.put(type65);
        java.lang.Class<?> wildcardClass68 = type65.getClass();
        boolean boolean69 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
    }

    @Test
    public void test1292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1292");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type14 = typeCircularBuffer13.get();
        boolean boolean15 = typeCircularBuffer13.isFull();
        boolean boolean16 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean19 = typeCircularBuffer18.isEmpty();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.Class<?> wildcardClass23 = typeCircularBuffer18.getClass();
        boolean boolean24 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass23);
        boolean boolean25 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean28 = typeCircularBuffer27.isFull();
        boolean boolean29 = typeCircularBuffer27.isEmpty();
        java.lang.reflect.Type type30 = typeCircularBuffer27.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean35 = typeCircularBuffer34.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass38 = typeCircularBuffer37.getClass();
        boolean boolean39 = typeCircularBuffer34.put((java.lang.reflect.Type) wildcardClass38);
        java.lang.reflect.Type type40 = typeCircularBuffer34.get();
        boolean boolean41 = typeCircularBuffer32.put(type40);
        java.lang.Class<?> wildcardClass42 = typeCircularBuffer32.getClass();
        boolean boolean43 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass42);
        boolean boolean44 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass42);
        boolean boolean45 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass42);
        boolean boolean46 = typeCircularBuffer11.isFull();
        java.lang.reflect.Type type47 = typeCircularBuffer11.get();
        java.lang.Class<?> wildcardClass48 = typeCircularBuffer11.getClass();
        boolean boolean49 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass48);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean52 = typeCircularBuffer51.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer54 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass55 = typeCircularBuffer54.getClass();
        boolean boolean56 = typeCircularBuffer51.put((java.lang.reflect.Type) wildcardClass55);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer58 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer60 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean61 = typeCircularBuffer60.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer63 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass64 = typeCircularBuffer63.getClass();
        boolean boolean65 = typeCircularBuffer60.put((java.lang.reflect.Type) wildcardClass64);
        java.lang.reflect.Type type66 = typeCircularBuffer60.get();
        boolean boolean67 = typeCircularBuffer58.put(type66);
        boolean boolean68 = typeCircularBuffer58.isFull();
        java.lang.reflect.Type type69 = typeCircularBuffer58.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer71 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean72 = typeCircularBuffer71.isEmpty();
        java.lang.Object obj73 = new java.lang.Object();
        java.lang.Class<?> wildcardClass74 = obj73.getClass();
        boolean boolean75 = typeCircularBuffer71.put((java.lang.reflect.Type) wildcardClass74);
        boolean boolean76 = typeCircularBuffer58.put((java.lang.reflect.Type) wildcardClass74);
        boolean boolean77 = typeCircularBuffer51.put((java.lang.reflect.Type) wildcardClass74);
        boolean boolean78 = typeCircularBuffer51.isFull();
        boolean boolean79 = typeCircularBuffer51.isFull();
        boolean boolean80 = typeCircularBuffer51.isEmpty();
        boolean boolean81 = typeCircularBuffer51.isFull();
        java.lang.reflect.Type type82 = typeCircularBuffer51.get();
        boolean boolean83 = typeCircularBuffer1.put(type82);
        java.lang.Class<?> wildcardClass84 = type82.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertNull(type14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(type30);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(type47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test1293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1293");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        boolean boolean11 = typeCircularBuffer9.isFull();
        java.lang.reflect.Type type12 = typeCircularBuffer9.get();
        boolean boolean13 = typeCircularBuffer9.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer20.getClass();
        boolean boolean22 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type23 = typeCircularBuffer17.get();
        boolean boolean24 = typeCircularBuffer15.put(type23);
        boolean boolean25 = typeCircularBuffer15.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean28 = typeCircularBuffer27.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass31 = typeCircularBuffer30.getClass();
        boolean boolean32 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass31);
        java.lang.reflect.Type type33 = typeCircularBuffer27.get();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        boolean boolean36 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass35);
        boolean boolean37 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass35);
        boolean boolean38 = typeCircularBuffer15.isEmpty();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        boolean boolean41 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass40);
        boolean boolean42 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass40);
        java.lang.reflect.Type type43 = typeCircularBuffer9.get();
        boolean boolean44 = typeCircularBuffer1.put(type43);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
    }

    @Test
    public void test1294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1294");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass10);
        boolean boolean13 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) ' ');
        java.lang.reflect.Type type16 = typeCircularBuffer15.get();
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer15.getClass();
        boolean boolean18 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer1.get();
        boolean boolean20 = typeCircularBuffer1.isEmpty();
        boolean boolean21 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type22 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(type16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(type19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(type22);
    }

    @Test
    public void test1295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1295");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type9 = typeCircularBuffer8.get();
        boolean boolean10 = typeCircularBuffer8.isFull();
        boolean boolean11 = typeCircularBuffer8.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass16);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer13.getClass();
        boolean boolean19 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass18);
        boolean boolean20 = typeCircularBuffer8.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean23 = typeCircularBuffer22.isFull();
        boolean boolean24 = typeCircularBuffer22.isEmpty();
        java.lang.reflect.Type type25 = typeCircularBuffer22.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean30 = typeCircularBuffer29.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass33 = typeCircularBuffer32.getClass();
        boolean boolean34 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass33);
        java.lang.reflect.Type type35 = typeCircularBuffer29.get();
        boolean boolean36 = typeCircularBuffer27.put(type35);
        java.lang.Class<?> wildcardClass37 = typeCircularBuffer27.getClass();
        boolean boolean38 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass37);
        boolean boolean39 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass37);
        boolean boolean40 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass37);
        boolean boolean41 = typeCircularBuffer6.isFull();
        boolean boolean42 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean45 = typeCircularBuffer44.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass48 = typeCircularBuffer47.getClass();
        boolean boolean49 = typeCircularBuffer44.put((java.lang.reflect.Type) wildcardClass48);
        java.lang.reflect.Type type50 = typeCircularBuffer44.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer52 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type53 = typeCircularBuffer52.get();
        boolean boolean54 = typeCircularBuffer52.isFull();
        boolean boolean55 = typeCircularBuffer52.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer57 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean58 = typeCircularBuffer57.isEmpty();
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        boolean boolean61 = typeCircularBuffer57.put((java.lang.reflect.Type) wildcardClass60);
        java.lang.Class<?> wildcardClass62 = typeCircularBuffer57.getClass();
        boolean boolean63 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass62);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer65 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean66 = typeCircularBuffer65.isEmpty();
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        boolean boolean69 = typeCircularBuffer65.put((java.lang.reflect.Type) wildcardClass68);
        java.lang.Class<?> wildcardClass70 = typeCircularBuffer65.getClass();
        boolean boolean71 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass70);
        boolean boolean72 = typeCircularBuffer44.put((java.lang.reflect.Type) wildcardClass70);
        java.lang.reflect.Type type73 = typeCircularBuffer44.get();
        boolean boolean74 = typeCircularBuffer6.put(type73);
        boolean boolean75 = typeCircularBuffer1.put(type73);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer77 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean78 = typeCircularBuffer77.isEmpty();
        boolean boolean79 = typeCircularBuffer77.isEmpty();
        boolean boolean80 = typeCircularBuffer77.isEmpty();
        boolean boolean81 = typeCircularBuffer77.isFull();
        java.lang.Class<?> wildcardClass82 = typeCircularBuffer77.getClass();
        boolean boolean83 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass82);
        java.lang.reflect.Type type84 = typeCircularBuffer1.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass85 = type84.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(type25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertNull(type53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNull(type84);
    }

    @Test
    public void test1296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1296");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type7 = typeCircularBuffer6.get();
        boolean boolean8 = typeCircularBuffer6.isFull();
        boolean boolean9 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean12 = typeCircularBuffer11.isEmpty();
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        boolean boolean15 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.Class<?> wildcardClass16 = typeCircularBuffer11.getClass();
        boolean boolean17 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass16);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean20 = typeCircularBuffer19.isEmpty();
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        boolean boolean23 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass22);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer19.getClass();
        boolean boolean25 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean26 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean27 = typeCircularBuffer1.isEmpty();
        boolean boolean28 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test1297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1297");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isEmpty();
        boolean boolean12 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer17.getClass();
        boolean boolean19 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass18);
        java.lang.reflect.Type type20 = typeCircularBuffer14.get();
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        boolean boolean23 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass22);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean26 = typeCircularBuffer25.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass29 = typeCircularBuffer28.getClass();
        boolean boolean30 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass29);
        java.lang.reflect.Type type31 = typeCircularBuffer25.get();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        boolean boolean34 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass33);
        java.lang.reflect.Type type35 = typeCircularBuffer25.get();
        boolean boolean36 = typeCircularBuffer14.put(type35);
        boolean boolean37 = typeCircularBuffer1.put(type35);
        boolean boolean38 = typeCircularBuffer1.isEmpty();
        boolean boolean39 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type40 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass41 = type40.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test1298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1298");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        boolean boolean10 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type11 = typeCircularBuffer1.get();
        java.lang.reflect.Type type12 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(type11);
        org.junit.Assert.assertNull(type12);
    }

    @Test
    public void test1299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1299");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isFull();
        boolean boolean8 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(type9);
    }

    @Test
    public void test1300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1300");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass21);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean26 = typeCircularBuffer25.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass29 = typeCircularBuffer28.getClass();
        boolean boolean30 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass29);
        java.lang.reflect.Type type31 = typeCircularBuffer25.get();
        boolean boolean32 = typeCircularBuffer1.put(type31);
        java.lang.reflect.Type type33 = typeCircularBuffer1.get();
        boolean boolean34 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
    }

    @Test
    public void test1301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1301");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer6.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.reflect.Type type13 = typeCircularBuffer1.get();
        boolean boolean14 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type17 = typeCircularBuffer16.get();
        boolean boolean18 = typeCircularBuffer16.isFull();
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer16.getClass();
        boolean boolean20 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass19);
        java.lang.reflect.Type type21 = typeCircularBuffer1.get();
        java.lang.reflect.Type type22 = typeCircularBuffer1.get();
        boolean boolean23 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type24 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) ' ');
        boolean boolean27 = typeCircularBuffer26.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer34.getClass();
        boolean boolean36 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass35);
        java.lang.reflect.Type type37 = typeCircularBuffer31.get();
        boolean boolean38 = typeCircularBuffer29.put(type37);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean43 = typeCircularBuffer42.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass46 = typeCircularBuffer45.getClass();
        boolean boolean47 = typeCircularBuffer42.put((java.lang.reflect.Type) wildcardClass46);
        java.lang.reflect.Type type48 = typeCircularBuffer42.get();
        boolean boolean49 = typeCircularBuffer40.put(type48);
        java.lang.Class<?> wildcardClass50 = typeCircularBuffer40.getClass();
        boolean boolean51 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass50);
        boolean boolean52 = typeCircularBuffer29.isFull();
        java.lang.reflect.Type type53 = typeCircularBuffer29.get();
        boolean boolean54 = typeCircularBuffer26.put(type53);
        boolean boolean55 = typeCircularBuffer1.put(type53);
        java.lang.Class<?> wildcardClass56 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(type17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNull(type22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(type24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test1302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1302");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = null;
        boolean boolean8 = typeCircularBuffer1.put(type7);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean13 = typeCircularBuffer12.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass16 = typeCircularBuffer15.getClass();
        boolean boolean17 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass16);
        java.lang.reflect.Type type18 = typeCircularBuffer12.get();
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer12.getClass();
        boolean boolean20 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass19);
        boolean boolean21 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass19);
        java.lang.reflect.Type type22 = typeCircularBuffer1.get();
        java.lang.reflect.Type type23 = typeCircularBuffer1.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass24 = type23.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNull(type23);
    }

    @Test
    public void test1303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1303");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean24 = typeCircularBuffer1.isEmpty();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        boolean boolean27 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass26);
        java.lang.reflect.Type type28 = typeCircularBuffer1.get();
        boolean boolean29 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer34.getClass();
        boolean boolean36 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass35);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean41 = typeCircularBuffer40.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer43.getClass();
        boolean boolean45 = typeCircularBuffer40.put((java.lang.reflect.Type) wildcardClass44);
        java.lang.reflect.Type type46 = typeCircularBuffer40.get();
        boolean boolean47 = typeCircularBuffer38.put(type46);
        boolean boolean48 = typeCircularBuffer38.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean51 = typeCircularBuffer50.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer53 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass54 = typeCircularBuffer53.getClass();
        boolean boolean55 = typeCircularBuffer50.put((java.lang.reflect.Type) wildcardClass54);
        java.lang.reflect.Type type56 = typeCircularBuffer50.get();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        boolean boolean59 = typeCircularBuffer50.put((java.lang.reflect.Type) wildcardClass58);
        boolean boolean60 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass58);
        boolean boolean61 = typeCircularBuffer38.isEmpty();
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        boolean boolean64 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass63);
        boolean boolean65 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass63);
        boolean boolean66 = typeCircularBuffer31.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer68 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type69 = typeCircularBuffer68.get();
        boolean boolean70 = typeCircularBuffer68.isFull();
        boolean boolean71 = typeCircularBuffer68.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer73 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean74 = typeCircularBuffer73.isEmpty();
        java.lang.Object obj75 = new java.lang.Object();
        java.lang.Class<?> wildcardClass76 = obj75.getClass();
        boolean boolean77 = typeCircularBuffer73.put((java.lang.reflect.Type) wildcardClass76);
        java.lang.Class<?> wildcardClass78 = typeCircularBuffer73.getClass();
        boolean boolean79 = typeCircularBuffer68.put((java.lang.reflect.Type) wildcardClass78);
        java.lang.reflect.Type type80 = typeCircularBuffer68.get();
        boolean boolean81 = typeCircularBuffer68.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer83 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type84 = typeCircularBuffer83.get();
        boolean boolean85 = typeCircularBuffer83.isFull();
        java.lang.Class<?> wildcardClass86 = typeCircularBuffer83.getClass();
        boolean boolean87 = typeCircularBuffer68.put((java.lang.reflect.Type) wildcardClass86);
        java.lang.reflect.Type type88 = typeCircularBuffer68.get();
        boolean boolean89 = typeCircularBuffer31.put(type88);
        boolean boolean90 = typeCircularBuffer1.put(type88);
        java.lang.Class<?> wildcardClass91 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNull(type69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNull(type84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(type88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test1304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1304");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(type5);
    }

    @Test
    public void test1305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1305");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.Comparable<java.lang.String>> strComparableCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.Comparable<java.lang.String>>((int) (byte) 10);
        java.lang.Class<?> wildcardClass2 = strComparableCircularBuffer1.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test1306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1306");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean24 = typeCircularBuffer1.isEmpty();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        boolean boolean27 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass26);
        java.lang.reflect.Type type28 = typeCircularBuffer1.get();
        java.lang.reflect.Type type29 = typeCircularBuffer1.get();
        boolean boolean30 = typeCircularBuffer1.isFull();
        boolean boolean31 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type32 = typeCircularBuffer1.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass33 = type32.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNull(type29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(type32);
    }

    @Test
    public void test1307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1307");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        java.lang.reflect.Type type12 = typeCircularBuffer6.get();
        boolean boolean13 = typeCircularBuffer4.put(type12);
        boolean boolean14 = typeCircularBuffer4.isFull();
        java.lang.reflect.Type type15 = typeCircularBuffer4.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        boolean boolean21 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean22 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass20);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 0);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer27.getClass();
        boolean boolean29 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass28);
        boolean boolean30 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.reflect.Type type31 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean36 = typeCircularBuffer35.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass39 = typeCircularBuffer38.getClass();
        boolean boolean40 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass39);
        java.lang.reflect.Type type41 = typeCircularBuffer35.get();
        boolean boolean42 = typeCircularBuffer33.put(type41);
        java.lang.reflect.Type type43 = typeCircularBuffer33.get();
        boolean boolean44 = typeCircularBuffer33.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean47 = typeCircularBuffer46.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer49 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass50 = typeCircularBuffer49.getClass();
        boolean boolean51 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass50);
        java.lang.reflect.Type type52 = typeCircularBuffer46.get();
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        boolean boolean55 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass54);
        java.lang.reflect.Type type56 = typeCircularBuffer46.get();
        boolean boolean57 = typeCircularBuffer33.put(type56);
        boolean boolean58 = typeCircularBuffer33.isEmpty();
        java.lang.reflect.Type type59 = typeCircularBuffer33.get();
        boolean boolean60 = typeCircularBuffer1.put(type59);
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
    }

    @Test
    public void test1308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1308");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean9 = typeCircularBuffer8.isFull();
        java.lang.reflect.Type type10 = typeCircularBuffer8.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean13 = typeCircularBuffer12.isEmpty();
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        boolean boolean16 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass15);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer12.getClass();
        boolean boolean18 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass17);
        boolean boolean19 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type20 = typeCircularBuffer1.get();
        java.lang.reflect.Type type21 = typeCircularBuffer1.get();
        java.lang.reflect.Type type22 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNull(type21);
        org.junit.Assert.assertNull(type22);
    }

    @Test
    public void test1309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1309");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '#');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer5 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean6 = typeCircularBuffer5.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass9 = typeCircularBuffer8.getClass();
        boolean boolean10 = typeCircularBuffer5.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.reflect.Type type11 = typeCircularBuffer5.get();
        boolean boolean12 = typeCircularBuffer3.put(type11);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer19.getClass();
        boolean boolean21 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type22 = typeCircularBuffer16.get();
        boolean boolean23 = typeCircularBuffer14.put(type22);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer14.getClass();
        boolean boolean25 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean26 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean27 = typeCircularBuffer1.isEmpty();
        boolean boolean28 = typeCircularBuffer1.isFull();
        boolean boolean29 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type30 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass31 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test1310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1310");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        boolean boolean8 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean12 = typeCircularBuffer11.isFull();
        java.lang.reflect.Type type13 = typeCircularBuffer11.get();
        boolean boolean14 = typeCircularBuffer11.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        java.lang.reflect.Type type18 = typeCircularBuffer16.get();
        java.lang.reflect.Type type19 = typeCircularBuffer16.get();
        java.lang.reflect.Type type20 = typeCircularBuffer16.get();
        boolean boolean21 = typeCircularBuffer16.isFull();
        boolean boolean22 = typeCircularBuffer16.isFull();
        java.lang.reflect.Type type23 = typeCircularBuffer16.get();
        boolean boolean24 = typeCircularBuffer16.isFull();
        boolean boolean25 = typeCircularBuffer16.isEmpty();
        java.lang.Class<?> wildcardClass26 = typeCircularBuffer16.getClass();
        boolean boolean27 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass26);
        boolean boolean28 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass26);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type31 = typeCircularBuffer30.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean36 = typeCircularBuffer35.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass39 = typeCircularBuffer38.getClass();
        boolean boolean40 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass39);
        java.lang.reflect.Type type41 = typeCircularBuffer35.get();
        boolean boolean42 = typeCircularBuffer33.put(type41);
        boolean boolean43 = typeCircularBuffer33.isFull();
        java.lang.reflect.Type type44 = typeCircularBuffer33.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean47 = typeCircularBuffer46.isEmpty();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        boolean boolean50 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass49);
        boolean boolean51 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass49);
        boolean boolean52 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass49);
        java.lang.reflect.Type type53 = typeCircularBuffer30.get();
        boolean boolean54 = typeCircularBuffer30.isFull();
        java.lang.reflect.Type type55 = typeCircularBuffer30.get();
        java.lang.Class<?> wildcardClass56 = typeCircularBuffer30.getClass();
        boolean boolean57 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass56);
        java.lang.Class<?> wildcardClass58 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(type13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(type18);
        org.junit.Assert.assertNull(type19);
        org.junit.Assert.assertNull(type20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(type31);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(type55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test1311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1311");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '#');
        boolean boolean2 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 10);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type7 = typeCircularBuffer6.get();
        boolean boolean8 = typeCircularBuffer6.isFull();
        java.lang.Class<?> wildcardClass9 = typeCircularBuffer6.getClass();
        boolean boolean10 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer4.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        boolean boolean13 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1312");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type9 = typeCircularBuffer8.get();
        java.lang.reflect.Type type10 = typeCircularBuffer8.get();
        java.lang.reflect.Type type11 = typeCircularBuffer8.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        boolean boolean15 = typeCircularBuffer13.isEmpty();
        boolean boolean16 = typeCircularBuffer13.isEmpty();
        boolean boolean17 = typeCircularBuffer13.isEmpty();
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer13.getClass();
        boolean boolean19 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass18);
        boolean boolean20 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertNull(type11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test1313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1313");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        java.lang.reflect.Type type12 = typeCircularBuffer6.get();
        boolean boolean13 = typeCircularBuffer4.put(type12);
        boolean boolean14 = typeCircularBuffer4.isFull();
        java.lang.reflect.Type type15 = typeCircularBuffer4.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        boolean boolean21 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean22 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean24 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type25 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean30 = typeCircularBuffer29.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass33 = typeCircularBuffer32.getClass();
        boolean boolean34 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass33);
        java.lang.reflect.Type type35 = typeCircularBuffer29.get();
        boolean boolean36 = typeCircularBuffer27.put(type35);
        boolean boolean37 = typeCircularBuffer27.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean40 = typeCircularBuffer39.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass43 = typeCircularBuffer42.getClass();
        boolean boolean44 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass43);
        java.lang.reflect.Type type45 = typeCircularBuffer39.get();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        boolean boolean48 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass47);
        boolean boolean49 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass47);
        boolean boolean50 = typeCircularBuffer27.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer52 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type53 = typeCircularBuffer52.get();
        boolean boolean54 = typeCircularBuffer52.isFull();
        boolean boolean55 = typeCircularBuffer52.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer57 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean58 = typeCircularBuffer57.isEmpty();
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        boolean boolean61 = typeCircularBuffer57.put((java.lang.reflect.Type) wildcardClass60);
        java.lang.Class<?> wildcardClass62 = typeCircularBuffer57.getClass();
        boolean boolean63 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass62);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer65 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean66 = typeCircularBuffer65.isEmpty();
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        boolean boolean69 = typeCircularBuffer65.put((java.lang.reflect.Type) wildcardClass68);
        java.lang.Class<?> wildcardClass70 = typeCircularBuffer65.getClass();
        boolean boolean71 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass70);
        boolean boolean72 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass70);
        java.lang.reflect.Type type73 = typeCircularBuffer27.get();
        boolean boolean74 = typeCircularBuffer1.put(type73);
        java.lang.reflect.Type type75 = typeCircularBuffer1.get();
        java.lang.reflect.Type type76 = typeCircularBuffer1.get();
        java.lang.reflect.Type type77 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(type53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertNull(type76);
        org.junit.Assert.assertNull(type77);
    }

    @Test
    public void test1314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1314");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isEmpty();
        boolean boolean12 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer17.getClass();
        boolean boolean19 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass18);
        java.lang.reflect.Type type20 = typeCircularBuffer14.get();
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        boolean boolean23 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass22);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean26 = typeCircularBuffer25.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass29 = typeCircularBuffer28.getClass();
        boolean boolean30 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass29);
        java.lang.reflect.Type type31 = typeCircularBuffer25.get();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        boolean boolean34 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass33);
        java.lang.reflect.Type type35 = typeCircularBuffer25.get();
        boolean boolean36 = typeCircularBuffer14.put(type35);
        boolean boolean37 = typeCircularBuffer1.put(type35);
        boolean boolean38 = typeCircularBuffer1.isEmpty();
        boolean boolean39 = typeCircularBuffer1.isEmpty();
        boolean boolean40 = typeCircularBuffer1.isEmpty();
        boolean boolean41 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test1315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1315");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean24 = typeCircularBuffer1.isEmpty();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        boolean boolean27 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass26);
        java.lang.reflect.Type type28 = typeCircularBuffer1.get();
        boolean boolean29 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer34.getClass();
        boolean boolean36 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass35);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean41 = typeCircularBuffer40.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer43.getClass();
        boolean boolean45 = typeCircularBuffer40.put((java.lang.reflect.Type) wildcardClass44);
        java.lang.reflect.Type type46 = typeCircularBuffer40.get();
        boolean boolean47 = typeCircularBuffer38.put(type46);
        boolean boolean48 = typeCircularBuffer38.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean51 = typeCircularBuffer50.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer53 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass54 = typeCircularBuffer53.getClass();
        boolean boolean55 = typeCircularBuffer50.put((java.lang.reflect.Type) wildcardClass54);
        java.lang.reflect.Type type56 = typeCircularBuffer50.get();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        boolean boolean59 = typeCircularBuffer50.put((java.lang.reflect.Type) wildcardClass58);
        boolean boolean60 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass58);
        boolean boolean61 = typeCircularBuffer38.isEmpty();
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        boolean boolean64 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass63);
        boolean boolean65 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass63);
        boolean boolean66 = typeCircularBuffer31.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer68 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type69 = typeCircularBuffer68.get();
        boolean boolean70 = typeCircularBuffer68.isFull();
        boolean boolean71 = typeCircularBuffer68.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer73 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean74 = typeCircularBuffer73.isEmpty();
        java.lang.Object obj75 = new java.lang.Object();
        java.lang.Class<?> wildcardClass76 = obj75.getClass();
        boolean boolean77 = typeCircularBuffer73.put((java.lang.reflect.Type) wildcardClass76);
        java.lang.Class<?> wildcardClass78 = typeCircularBuffer73.getClass();
        boolean boolean79 = typeCircularBuffer68.put((java.lang.reflect.Type) wildcardClass78);
        java.lang.reflect.Type type80 = typeCircularBuffer68.get();
        boolean boolean81 = typeCircularBuffer68.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer83 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type84 = typeCircularBuffer83.get();
        boolean boolean85 = typeCircularBuffer83.isFull();
        java.lang.Class<?> wildcardClass86 = typeCircularBuffer83.getClass();
        boolean boolean87 = typeCircularBuffer68.put((java.lang.reflect.Type) wildcardClass86);
        java.lang.reflect.Type type88 = typeCircularBuffer68.get();
        boolean boolean89 = typeCircularBuffer31.put(type88);
        boolean boolean90 = typeCircularBuffer1.put(type88);
        java.lang.Class<?> wildcardClass91 = type88.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNull(type69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNull(type84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(type88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test1316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1316");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean16 = typeCircularBuffer15.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer18.getClass();
        boolean boolean20 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass19);
        java.lang.reflect.Type type21 = typeCircularBuffer15.get();
        boolean boolean22 = typeCircularBuffer13.put(type21);
        boolean boolean23 = typeCircularBuffer13.isFull();
        java.lang.reflect.Type type24 = typeCircularBuffer13.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean27 = typeCircularBuffer26.isEmpty();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        boolean boolean30 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass29);
        boolean boolean31 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass29);
        boolean boolean32 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass29);
        boolean boolean33 = typeCircularBuffer6.isFull();
        boolean boolean34 = typeCircularBuffer6.isFull();
        boolean boolean35 = typeCircularBuffer6.isEmpty();
        boolean boolean36 = typeCircularBuffer6.isFull();
        java.lang.reflect.Type type37 = typeCircularBuffer6.get();
        boolean boolean38 = typeCircularBuffer1.put(type37);
        boolean boolean39 = typeCircularBuffer1.isEmpty();
        boolean boolean40 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
    }

    @Test
    public void test1317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1317");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer10.get();
        boolean boolean17 = typeCircularBuffer8.put(type16);
        boolean boolean18 = typeCircularBuffer8.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean21 = typeCircularBuffer20.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer23.getClass();
        boolean boolean25 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass24);
        java.lang.reflect.Type type26 = typeCircularBuffer20.get();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        boolean boolean29 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass28);
        boolean boolean30 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass28);
        boolean boolean31 = typeCircularBuffer8.isEmpty();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        boolean boolean34 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass33);
        boolean boolean35 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass33);
        boolean boolean36 = typeCircularBuffer1.isFull();
        boolean boolean37 = typeCircularBuffer1.isEmpty();
        boolean boolean38 = typeCircularBuffer1.isFull();
        boolean boolean39 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
    }

    @Test
    public void test1318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1318");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
    }

    @Test
    public void test1319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1319");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        java.lang.reflect.Type type11 = typeCircularBuffer1.get();
        java.lang.reflect.Type type12 = null;
        boolean boolean13 = typeCircularBuffer1.put(type12);
        boolean boolean14 = typeCircularBuffer1.isFull();
        boolean boolean15 = typeCircularBuffer1.isFull();
        boolean boolean16 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type17 = typeCircularBuffer1.get();
        java.lang.reflect.Type type18 = typeCircularBuffer1.get();
        boolean boolean19 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(type17);
        org.junit.Assert.assertNull(type18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test1320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1320");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer5 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean6 = typeCircularBuffer5.isEmpty();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = typeCircularBuffer5.put((java.lang.reflect.Type) wildcardClass8);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer5.getClass();
        boolean boolean11 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass10);
        boolean boolean12 = typeCircularBuffer1.isEmpty();
        boolean boolean13 = typeCircularBuffer1.isEmpty();
        boolean boolean14 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type15 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(type15);
    }

    @Test
    public void test1321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1321");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isFull();
        boolean boolean8 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        boolean boolean10 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean13 = typeCircularBuffer12.isFull();
        java.lang.reflect.Type type14 = typeCircularBuffer12.get();
        boolean boolean15 = typeCircularBuffer12.isFull();
        java.lang.reflect.Type type16 = typeCircularBuffer12.get();
        boolean boolean17 = typeCircularBuffer12.isFull();
        boolean boolean18 = typeCircularBuffer12.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean21 = typeCircularBuffer20.isFull();
        boolean boolean22 = typeCircularBuffer20.isEmpty();
        java.lang.reflect.Type type23 = typeCircularBuffer20.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean28 = typeCircularBuffer27.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass31 = typeCircularBuffer30.getClass();
        boolean boolean32 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass31);
        java.lang.reflect.Type type33 = typeCircularBuffer27.get();
        boolean boolean34 = typeCircularBuffer25.put(type33);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer25.getClass();
        boolean boolean36 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass35);
        boolean boolean37 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass35);
        boolean boolean38 = typeCircularBuffer12.isEmpty();
        boolean boolean39 = typeCircularBuffer12.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer46.getClass();
        boolean boolean48 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass47);
        java.lang.reflect.Type type49 = typeCircularBuffer43.get();
        boolean boolean50 = typeCircularBuffer41.put(type49);
        java.lang.reflect.Type type51 = typeCircularBuffer41.get();
        java.lang.reflect.Type type52 = null;
        boolean boolean53 = typeCircularBuffer41.put(type52);
        boolean boolean54 = typeCircularBuffer41.isEmpty();
        java.lang.Class<?> wildcardClass55 = typeCircularBuffer41.getClass();
        boolean boolean56 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass55);
        java.lang.Class<?> wildcardClass57 = typeCircularBuffer12.getClass();
        boolean boolean58 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass57);
        java.lang.reflect.Type type59 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer61 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean62 = typeCircularBuffer61.isFull();
        java.lang.reflect.Type type63 = typeCircularBuffer61.get();
        boolean boolean64 = typeCircularBuffer61.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer66 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean67 = typeCircularBuffer66.isEmpty();
        java.lang.Class<?> wildcardClass68 = typeCircularBuffer66.getClass();
        boolean boolean69 = typeCircularBuffer61.put((java.lang.reflect.Type) wildcardClass68);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer71 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 1);
        boolean boolean72 = typeCircularBuffer71.isEmpty();
        boolean boolean73 = typeCircularBuffer71.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer75 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type76 = typeCircularBuffer75.get();
        boolean boolean77 = typeCircularBuffer75.isFull();
        boolean boolean78 = typeCircularBuffer75.isFull();
        boolean boolean79 = typeCircularBuffer75.isEmpty();
        java.lang.reflect.Type type80 = typeCircularBuffer75.get();
        java.lang.Class<?> wildcardClass81 = typeCircularBuffer75.getClass();
        boolean boolean82 = typeCircularBuffer71.put((java.lang.reflect.Type) wildcardClass81);
        boolean boolean83 = typeCircularBuffer61.put((java.lang.reflect.Type) wildcardClass81);
        java.lang.Class<?> wildcardClass84 = typeCircularBuffer61.getClass();
        boolean boolean85 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass84);
        boolean boolean86 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type87 = typeCircularBuffer1.get();
        java.lang.reflect.Type type88 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(type14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(type23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(type63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNull(type76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNull(type80);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(type87);
        org.junit.Assert.assertNull(type88);
    }

    @Test
    public void test1322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1322");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        boolean boolean10 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type11 = typeCircularBuffer1.get();
        boolean boolean12 = typeCircularBuffer1.isFull();
        boolean boolean13 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(type11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1323");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        boolean boolean5 = typeCircularBuffer1.isFull();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        boolean boolean7 = typeCircularBuffer1.isFull();
        boolean boolean8 = typeCircularBuffer1.isEmpty();
        boolean boolean9 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test1324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1324");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type4 = typeCircularBuffer3.get();
        boolean boolean5 = typeCircularBuffer3.isFull();
        boolean boolean6 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean9 = typeCircularBuffer8.isEmpty();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer8.getClass();
        boolean boolean14 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass13);
        boolean boolean15 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean18 = typeCircularBuffer17.isFull();
        boolean boolean19 = typeCircularBuffer17.isEmpty();
        java.lang.reflect.Type type20 = typeCircularBuffer17.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean25 = typeCircularBuffer24.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer27.getClass();
        boolean boolean29 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.reflect.Type type30 = typeCircularBuffer24.get();
        boolean boolean31 = typeCircularBuffer22.put(type30);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer22.getClass();
        boolean boolean33 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean35 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass32);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean38 = typeCircularBuffer37.isFull();
        java.lang.reflect.Type type39 = typeCircularBuffer37.get();
        boolean boolean40 = typeCircularBuffer37.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean43 = typeCircularBuffer42.isEmpty();
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer42.getClass();
        boolean boolean45 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass44);
        java.lang.Class<?> wildcardClass46 = typeCircularBuffer37.getClass();
        boolean boolean47 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass46);
        boolean boolean48 = typeCircularBuffer1.isFull();
        boolean boolean49 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer53 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean54 = typeCircularBuffer53.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer56 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass57 = typeCircularBuffer56.getClass();
        boolean boolean58 = typeCircularBuffer53.put((java.lang.reflect.Type) wildcardClass57);
        java.lang.reflect.Type type59 = typeCircularBuffer53.get();
        boolean boolean60 = typeCircularBuffer51.put(type59);
        boolean boolean61 = typeCircularBuffer51.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer63 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean64 = typeCircularBuffer63.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer66 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass67 = typeCircularBuffer66.getClass();
        boolean boolean68 = typeCircularBuffer63.put((java.lang.reflect.Type) wildcardClass67);
        java.lang.reflect.Type type69 = typeCircularBuffer63.get();
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        boolean boolean72 = typeCircularBuffer63.put((java.lang.reflect.Type) wildcardClass71);
        boolean boolean73 = typeCircularBuffer51.put((java.lang.reflect.Type) wildcardClass71);
        boolean boolean74 = typeCircularBuffer51.isEmpty();
        java.lang.Object obj75 = new java.lang.Object();
        java.lang.Class<?> wildcardClass76 = obj75.getClass();
        boolean boolean77 = typeCircularBuffer51.put((java.lang.reflect.Type) wildcardClass76);
        java.lang.Class<?> wildcardClass78 = typeCircularBuffer51.getClass();
        boolean boolean79 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass78);
        boolean boolean80 = typeCircularBuffer1.isFull();
        boolean boolean81 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(type20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(type39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
    }

    @Test
    public void test1325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1325");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        boolean boolean7 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean19 = typeCircularBuffer18.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer21.getClass();
        boolean boolean23 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass22);
        java.lang.reflect.Type type24 = typeCircularBuffer18.get();
        boolean boolean25 = typeCircularBuffer16.put(type24);
        boolean boolean26 = typeCircularBuffer16.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer31.getClass();
        boolean boolean33 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass32);
        java.lang.reflect.Type type34 = typeCircularBuffer28.get();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        boolean boolean37 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean38 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean39 = typeCircularBuffer16.isEmpty();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        boolean boolean42 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean43 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean44 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass41);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean47 = typeCircularBuffer46.isEmpty();
        boolean boolean48 = typeCircularBuffer46.isFull();
        java.lang.reflect.Type type49 = typeCircularBuffer46.get();
        boolean boolean50 = typeCircularBuffer46.isFull();
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer46.getClass();
        boolean boolean52 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean53 = typeCircularBuffer1.isFull();
        boolean boolean54 = typeCircularBuffer1.isEmpty();
        boolean boolean55 = typeCircularBuffer1.isFull();
        boolean boolean56 = typeCircularBuffer1.isFull();
        boolean boolean57 = typeCircularBuffer1.isFull();
        boolean boolean58 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer60 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        java.lang.reflect.Type type61 = typeCircularBuffer60.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer63 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean64 = typeCircularBuffer63.isFull();
        boolean boolean65 = typeCircularBuffer63.isEmpty();
        boolean boolean66 = typeCircularBuffer63.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer68 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean69 = typeCircularBuffer68.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer71 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass72 = typeCircularBuffer71.getClass();
        boolean boolean73 = typeCircularBuffer68.put((java.lang.reflect.Type) wildcardClass72);
        java.lang.reflect.Type type74 = typeCircularBuffer68.get();
        java.lang.Object obj75 = new java.lang.Object();
        java.lang.Class<?> wildcardClass76 = obj75.getClass();
        boolean boolean77 = typeCircularBuffer68.put((java.lang.reflect.Type) wildcardClass76);
        boolean boolean78 = typeCircularBuffer63.put((java.lang.reflect.Type) wildcardClass76);
        boolean boolean79 = typeCircularBuffer60.put((java.lang.reflect.Type) wildcardClass76);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer81 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass82 = typeCircularBuffer81.getClass();
        boolean boolean83 = typeCircularBuffer60.put((java.lang.reflect.Type) wildcardClass82);
        boolean boolean84 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass82);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(type49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(type61);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test1326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1326");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) 'a');
        boolean boolean7 = typeCircularBuffer6.isFull();
        java.lang.Class<?> wildcardClass8 = typeCircularBuffer6.getClass();
        boolean boolean9 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass8);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        boolean boolean20 = typeCircularBuffer11.put(type19);
        boolean boolean21 = typeCircularBuffer11.isFull();
        java.lang.reflect.Type type22 = typeCircularBuffer11.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean25 = typeCircularBuffer24.isEmpty();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        boolean boolean28 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean30 = typeCircularBuffer11.isEmpty();
        boolean boolean31 = typeCircularBuffer11.isEmpty();
        java.lang.reflect.Type type32 = typeCircularBuffer11.get();
        boolean boolean33 = typeCircularBuffer1.put(type32);
        boolean boolean34 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test1327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1327");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean9 = typeCircularBuffer8.isFull();
        java.lang.reflect.Type type10 = typeCircularBuffer8.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean13 = typeCircularBuffer12.isEmpty();
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        boolean boolean16 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass15);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer12.getClass();
        boolean boolean18 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass17);
        boolean boolean19 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass17);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type24 = typeCircularBuffer23.get();
        boolean boolean25 = typeCircularBuffer23.isFull();
        boolean boolean26 = typeCircularBuffer23.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        boolean boolean32 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass31);
        java.lang.Class<?> wildcardClass33 = typeCircularBuffer28.getClass();
        boolean boolean34 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass33);
        boolean boolean35 = typeCircularBuffer23.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean38 = typeCircularBuffer37.isFull();
        boolean boolean39 = typeCircularBuffer37.isEmpty();
        java.lang.reflect.Type type40 = typeCircularBuffer37.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean45 = typeCircularBuffer44.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass48 = typeCircularBuffer47.getClass();
        boolean boolean49 = typeCircularBuffer44.put((java.lang.reflect.Type) wildcardClass48);
        java.lang.reflect.Type type50 = typeCircularBuffer44.get();
        boolean boolean51 = typeCircularBuffer42.put(type50);
        java.lang.Class<?> wildcardClass52 = typeCircularBuffer42.getClass();
        boolean boolean53 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass52);
        boolean boolean54 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass52);
        boolean boolean55 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass52);
        boolean boolean56 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass52);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer58 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean59 = typeCircularBuffer58.isEmpty();
        boolean boolean60 = typeCircularBuffer58.isEmpty();
        java.lang.reflect.Type type61 = typeCircularBuffer58.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer63 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean64 = typeCircularBuffer63.isEmpty();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        boolean boolean67 = typeCircularBuffer63.put((java.lang.reflect.Type) wildcardClass66);
        boolean boolean68 = typeCircularBuffer63.isFull();
        java.lang.Class<?> wildcardClass69 = typeCircularBuffer63.getClass();
        boolean boolean70 = typeCircularBuffer58.put((java.lang.reflect.Type) wildcardClass69);
        boolean boolean71 = typeCircularBuffer58.isFull();
        java.lang.reflect.Type type72 = typeCircularBuffer58.get();
        boolean boolean73 = typeCircularBuffer1.put(type72);
        java.lang.reflect.Type type74 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer76 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean77 = typeCircularBuffer76.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer79 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass80 = typeCircularBuffer79.getClass();
        boolean boolean81 = typeCircularBuffer76.put((java.lang.reflect.Type) wildcardClass80);
        boolean boolean82 = typeCircularBuffer76.isFull();
        java.lang.reflect.Type type83 = typeCircularBuffer76.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer85 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass86 = typeCircularBuffer85.getClass();
        boolean boolean87 = typeCircularBuffer76.put((java.lang.reflect.Type) wildcardClass86);
        boolean boolean88 = typeCircularBuffer76.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer90 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean91 = typeCircularBuffer90.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer93 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass94 = typeCircularBuffer93.getClass();
        boolean boolean95 = typeCircularBuffer90.put((java.lang.reflect.Type) wildcardClass94);
        java.lang.Class<?> wildcardClass96 = typeCircularBuffer90.getClass();
        boolean boolean97 = typeCircularBuffer76.put((java.lang.reflect.Type) wildcardClass96);
        java.lang.reflect.Type type98 = typeCircularBuffer76.get();
        boolean boolean99 = typeCircularBuffer1.put(type98);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(type40);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(type61);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(type83);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertNotNull(type98);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + true + "'", boolean99 == true);
    }

    @Test
    public void test1328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1328");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass21);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean25 = typeCircularBuffer24.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer27.getClass();
        boolean boolean29 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.Class<?> wildcardClass30 = typeCircularBuffer24.getClass();
        boolean boolean31 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass30);
        boolean boolean32 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass30);
        boolean boolean33 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        java.lang.reflect.Type type36 = typeCircularBuffer35.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean39 = typeCircularBuffer38.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass42 = typeCircularBuffer41.getClass();
        boolean boolean43 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass42);
        java.lang.reflect.Type type44 = typeCircularBuffer38.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type47 = typeCircularBuffer46.get();
        boolean boolean48 = typeCircularBuffer46.isFull();
        boolean boolean49 = typeCircularBuffer46.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean52 = typeCircularBuffer51.isEmpty();
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        boolean boolean55 = typeCircularBuffer51.put((java.lang.reflect.Type) wildcardClass54);
        java.lang.Class<?> wildcardClass56 = typeCircularBuffer51.getClass();
        boolean boolean57 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass56);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer59 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean60 = typeCircularBuffer59.isEmpty();
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        boolean boolean63 = typeCircularBuffer59.put((java.lang.reflect.Type) wildcardClass62);
        java.lang.Class<?> wildcardClass64 = typeCircularBuffer59.getClass();
        boolean boolean65 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass64);
        boolean boolean66 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass64);
        java.lang.Class<?> wildcardClass67 = typeCircularBuffer38.getClass();
        boolean boolean68 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass67);
        boolean boolean69 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass67);
        boolean boolean70 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass71 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(type36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNull(type47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test1329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1329");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        boolean boolean5 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        java.lang.reflect.Type type15 = typeCircularBuffer9.get();
        boolean boolean16 = typeCircularBuffer7.put(type15);
        boolean boolean17 = typeCircularBuffer7.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean20 = typeCircularBuffer19.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass23 = typeCircularBuffer22.getClass();
        boolean boolean24 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass23);
        java.lang.reflect.Type type25 = typeCircularBuffer19.get();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        boolean boolean28 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer7.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean30 = typeCircularBuffer7.isEmpty();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        boolean boolean33 = typeCircularBuffer7.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass32);
        java.lang.reflect.Type type35 = typeCircularBuffer1.get();
        boolean boolean36 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type37 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean42 = typeCircularBuffer41.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass45 = typeCircularBuffer44.getClass();
        boolean boolean46 = typeCircularBuffer41.put((java.lang.reflect.Type) wildcardClass45);
        java.lang.reflect.Type type47 = typeCircularBuffer41.get();
        boolean boolean48 = typeCircularBuffer39.put(type47);
        boolean boolean49 = typeCircularBuffer39.isEmpty();
        boolean boolean50 = typeCircularBuffer39.isFull();
        boolean boolean51 = typeCircularBuffer39.isFull();
        java.lang.reflect.Type type52 = typeCircularBuffer39.get();
        boolean boolean53 = typeCircularBuffer39.isEmpty();
        java.lang.reflect.Type type54 = typeCircularBuffer39.get();
        boolean boolean55 = typeCircularBuffer39.isEmpty();
        java.lang.Class<?> wildcardClass56 = typeCircularBuffer39.getClass();
        boolean boolean57 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(type37);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(type54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
    }

    @Test
    public void test1330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1330");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean16 = typeCircularBuffer15.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer18.getClass();
        boolean boolean20 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass19);
        java.lang.reflect.Type type21 = typeCircularBuffer15.get();
        boolean boolean22 = typeCircularBuffer13.put(type21);
        boolean boolean23 = typeCircularBuffer13.isFull();
        java.lang.reflect.Type type24 = typeCircularBuffer13.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean27 = typeCircularBuffer26.isEmpty();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        boolean boolean30 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass29);
        boolean boolean31 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass29);
        boolean boolean32 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass29);
        boolean boolean33 = typeCircularBuffer6.isFull();
        boolean boolean34 = typeCircularBuffer6.isFull();
        boolean boolean35 = typeCircularBuffer6.isEmpty();
        boolean boolean36 = typeCircularBuffer6.isFull();
        java.lang.reflect.Type type37 = typeCircularBuffer6.get();
        boolean boolean38 = typeCircularBuffer1.put(type37);
        java.lang.reflect.Type type39 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean42 = typeCircularBuffer41.isEmpty();
        java.lang.reflect.Type type43 = typeCircularBuffer41.get();
        java.lang.reflect.Type type44 = typeCircularBuffer41.get();
        java.lang.reflect.Type type45 = typeCircularBuffer41.get();
        boolean boolean46 = typeCircularBuffer41.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean49 = typeCircularBuffer48.isFull();
        java.lang.reflect.Type type50 = typeCircularBuffer48.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer52 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean53 = typeCircularBuffer52.isEmpty();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        boolean boolean56 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass55);
        java.lang.Class<?> wildcardClass57 = typeCircularBuffer52.getClass();
        boolean boolean58 = typeCircularBuffer48.put((java.lang.reflect.Type) wildcardClass57);
        boolean boolean59 = typeCircularBuffer41.put((java.lang.reflect.Type) wildcardClass57);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer61 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer63 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type64 = typeCircularBuffer63.get();
        boolean boolean65 = typeCircularBuffer63.isFull();
        boolean boolean66 = typeCircularBuffer63.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer68 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean69 = typeCircularBuffer68.isEmpty();
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        boolean boolean72 = typeCircularBuffer68.put((java.lang.reflect.Type) wildcardClass71);
        java.lang.Class<?> wildcardClass73 = typeCircularBuffer68.getClass();
        boolean boolean74 = typeCircularBuffer63.put((java.lang.reflect.Type) wildcardClass73);
        boolean boolean75 = typeCircularBuffer63.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer77 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean78 = typeCircularBuffer77.isFull();
        boolean boolean79 = typeCircularBuffer77.isEmpty();
        java.lang.reflect.Type type80 = typeCircularBuffer77.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer82 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer84 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean85 = typeCircularBuffer84.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer87 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass88 = typeCircularBuffer87.getClass();
        boolean boolean89 = typeCircularBuffer84.put((java.lang.reflect.Type) wildcardClass88);
        java.lang.reflect.Type type90 = typeCircularBuffer84.get();
        boolean boolean91 = typeCircularBuffer82.put(type90);
        java.lang.Class<?> wildcardClass92 = typeCircularBuffer82.getClass();
        boolean boolean93 = typeCircularBuffer77.put((java.lang.reflect.Type) wildcardClass92);
        boolean boolean94 = typeCircularBuffer63.put((java.lang.reflect.Type) wildcardClass92);
        boolean boolean95 = typeCircularBuffer61.put((java.lang.reflect.Type) wildcardClass92);
        boolean boolean96 = typeCircularBuffer41.put((java.lang.reflect.Type) wildcardClass92);
        java.lang.reflect.Type type97 = typeCircularBuffer41.get();
        boolean boolean98 = typeCircularBuffer1.put(type97);
        boolean boolean99 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(type43);
        org.junit.Assert.assertNull(type44);
        org.junit.Assert.assertNull(type45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(type50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(type64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNull(type80);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(type90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertNotNull(type97);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + true + "'", boolean99 == true);
    }

    @Test
    public void test1331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1331");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer6.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer14.getClass();
        boolean boolean20 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass19);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean25 = typeCircularBuffer24.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer27.getClass();
        boolean boolean29 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.reflect.Type type30 = typeCircularBuffer24.get();
        boolean boolean31 = typeCircularBuffer22.put(type30);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer22.getClass();
        boolean boolean33 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass32);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type36 = typeCircularBuffer35.get();
        boolean boolean37 = typeCircularBuffer35.isFull();
        boolean boolean38 = typeCircularBuffer35.isFull();
        boolean boolean39 = typeCircularBuffer35.isEmpty();
        boolean boolean40 = typeCircularBuffer35.isEmpty();
        boolean boolean41 = typeCircularBuffer35.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer46.getClass();
        boolean boolean48 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass47);
        java.lang.reflect.Type type49 = null;
        boolean boolean50 = typeCircularBuffer43.put(type49);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer52 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer54 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean55 = typeCircularBuffer54.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer57 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass58 = typeCircularBuffer57.getClass();
        boolean boolean59 = typeCircularBuffer54.put((java.lang.reflect.Type) wildcardClass58);
        java.lang.reflect.Type type60 = typeCircularBuffer54.get();
        java.lang.Class<?> wildcardClass61 = typeCircularBuffer54.getClass();
        boolean boolean62 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass61);
        boolean boolean63 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass61);
        boolean boolean64 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass61);
        boolean boolean65 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass61);
        boolean boolean66 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass67 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(type36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test1332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1332");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer6.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean15 = typeCircularBuffer14.isFull();
        java.lang.reflect.Type type16 = typeCircularBuffer14.get();
        boolean boolean17 = typeCircularBuffer14.isEmpty();
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer14.getClass();
        boolean boolean19 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass18);
        boolean boolean20 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean23 = typeCircularBuffer22.isFull();
        java.lang.reflect.Type type24 = typeCircularBuffer22.get();
        boolean boolean25 = typeCircularBuffer22.isFull();
        boolean boolean26 = typeCircularBuffer22.isFull();
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer22.getClass();
        boolean boolean28 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass27);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean31 = typeCircularBuffer30.isFull();
        java.lang.reflect.Type type32 = typeCircularBuffer30.get();
        boolean boolean33 = typeCircularBuffer30.isEmpty();
        boolean boolean34 = typeCircularBuffer30.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        boolean boolean37 = typeCircularBuffer36.isEmpty();
        java.lang.Class<?> wildcardClass38 = typeCircularBuffer36.getClass();
        boolean boolean39 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass38);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean42 = typeCircularBuffer41.isFull();
        boolean boolean43 = typeCircularBuffer41.isEmpty();
        boolean boolean44 = typeCircularBuffer41.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean47 = typeCircularBuffer46.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer49 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass50 = typeCircularBuffer49.getClass();
        boolean boolean51 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass50);
        java.lang.reflect.Type type52 = typeCircularBuffer46.get();
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        boolean boolean55 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean56 = typeCircularBuffer41.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean57 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean58 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean59 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type60 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(type32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(type60);
    }

    @Test
    public void test1333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1333");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 0);
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer5 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean6 = typeCircularBuffer5.isFull();
        java.lang.reflect.Type type7 = typeCircularBuffer5.get();
        boolean boolean8 = typeCircularBuffer5.isFull();
        java.lang.reflect.Type type9 = typeCircularBuffer5.get();
        boolean boolean10 = typeCircularBuffer5.isFull();
        boolean boolean11 = typeCircularBuffer5.isEmpty();
        boolean boolean12 = typeCircularBuffer5.isFull();
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer5.getClass();
        boolean boolean14 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass13);
        java.lang.reflect.Type type15 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(type15);
    }

    @Test
    public void test1334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1334");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean24 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type25 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean28 = typeCircularBuffer27.isEmpty();
        java.lang.reflect.Type type29 = typeCircularBuffer27.get();
        java.lang.reflect.Type type30 = typeCircularBuffer27.get();
        java.lang.reflect.Type type31 = typeCircularBuffer27.get();
        boolean boolean32 = typeCircularBuffer27.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean35 = typeCircularBuffer34.isFull();
        java.lang.reflect.Type type36 = typeCircularBuffer34.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean39 = typeCircularBuffer38.isEmpty();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        boolean boolean42 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass41);
        java.lang.Class<?> wildcardClass43 = typeCircularBuffer38.getClass();
        boolean boolean44 = typeCircularBuffer34.put((java.lang.reflect.Type) wildcardClass43);
        boolean boolean45 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass43);
        boolean boolean46 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass43);
        boolean boolean47 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(type29);
        org.junit.Assert.assertNull(type30);
        org.junit.Assert.assertNull(type31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(type36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test1335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1335");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        boolean boolean8 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        boolean boolean10 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(100);
        java.lang.reflect.Type type13 = typeCircularBuffer12.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean16 = typeCircularBuffer15.isFull();
        boolean boolean17 = typeCircularBuffer15.isEmpty();
        boolean boolean18 = typeCircularBuffer15.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean21 = typeCircularBuffer20.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer23.getClass();
        boolean boolean25 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass24);
        java.lang.reflect.Type type26 = typeCircularBuffer20.get();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        boolean boolean29 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass28);
        boolean boolean30 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass28);
        boolean boolean31 = typeCircularBuffer15.isFull();
        java.lang.reflect.Type type32 = typeCircularBuffer15.get();
        java.lang.Class<?> wildcardClass33 = typeCircularBuffer15.getClass();
        boolean boolean34 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass33);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer12.getClass();
        boolean boolean36 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(type13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
    }

    @Test
    public void test1336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1336");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) 'a');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass4 = typeCircularBuffer3.getClass();
        boolean boolean5 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass4);
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type10 = typeCircularBuffer9.get();
        boolean boolean11 = typeCircularBuffer9.isFull();
        boolean boolean12 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer14.getClass();
        boolean boolean20 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass19);
        java.lang.reflect.Type type21 = typeCircularBuffer9.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean26 = typeCircularBuffer25.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass29 = typeCircularBuffer28.getClass();
        boolean boolean30 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass29);
        java.lang.reflect.Type type31 = typeCircularBuffer25.get();
        boolean boolean32 = typeCircularBuffer23.put(type31);
        boolean boolean33 = typeCircularBuffer9.put(type31);
        java.lang.Class<?> wildcardClass34 = typeCircularBuffer9.getClass();
        boolean boolean35 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass34);
        java.lang.reflect.Type type36 = typeCircularBuffer1.get();
        java.lang.reflect.Type type37 = typeCircularBuffer1.get();
        java.lang.reflect.Type type38 = typeCircularBuffer1.get();
        java.lang.reflect.Type type39 = typeCircularBuffer1.get();
        boolean boolean40 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type41 = typeCircularBuffer1.get();
        java.lang.reflect.Type type42 = typeCircularBuffer1.get();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNull(type37);
        org.junit.Assert.assertNull(type38);
        org.junit.Assert.assertNull(type39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(type41);
        org.junit.Assert.assertNull(type42);
    }

    @Test
    public void test1337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1337");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean9 = typeCircularBuffer8.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass12 = typeCircularBuffer11.getClass();
        boolean boolean13 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass12);
        java.lang.reflect.Type type14 = typeCircularBuffer8.get();
        boolean boolean15 = typeCircularBuffer6.put(type14);
        boolean boolean16 = typeCircularBuffer6.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean19 = typeCircularBuffer18.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer21.getClass();
        boolean boolean23 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass22);
        java.lang.reflect.Type type24 = typeCircularBuffer18.get();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        boolean boolean27 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass26);
        boolean boolean28 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass26);
        boolean boolean29 = typeCircularBuffer6.isEmpty();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        boolean boolean32 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass31);
        java.lang.reflect.Type type33 = typeCircularBuffer6.get();
        java.lang.reflect.Type type34 = typeCircularBuffer6.get();
        boolean boolean35 = typeCircularBuffer6.isFull();
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer6.getClass();
        boolean boolean37 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass36);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean40 = typeCircularBuffer39.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass43 = typeCircularBuffer42.getClass();
        boolean boolean44 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass43);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean49 = typeCircularBuffer48.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass52 = typeCircularBuffer51.getClass();
        boolean boolean53 = typeCircularBuffer48.put((java.lang.reflect.Type) wildcardClass52);
        java.lang.reflect.Type type54 = typeCircularBuffer48.get();
        boolean boolean55 = typeCircularBuffer46.put(type54);
        boolean boolean56 = typeCircularBuffer46.isFull();
        java.lang.reflect.Type type57 = typeCircularBuffer46.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer59 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean60 = typeCircularBuffer59.isEmpty();
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        boolean boolean63 = typeCircularBuffer59.put((java.lang.reflect.Type) wildcardClass62);
        boolean boolean64 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass62);
        boolean boolean65 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass62);
        boolean boolean66 = typeCircularBuffer39.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer68 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean69 = typeCircularBuffer68.isFull();
        boolean boolean70 = typeCircularBuffer68.isEmpty();
        boolean boolean71 = typeCircularBuffer68.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer73 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean74 = typeCircularBuffer73.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer76 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass77 = typeCircularBuffer76.getClass();
        boolean boolean78 = typeCircularBuffer73.put((java.lang.reflect.Type) wildcardClass77);
        java.lang.reflect.Type type79 = typeCircularBuffer73.get();
        java.lang.Object obj80 = new java.lang.Object();
        java.lang.Class<?> wildcardClass81 = obj80.getClass();
        boolean boolean82 = typeCircularBuffer73.put((java.lang.reflect.Type) wildcardClass81);
        boolean boolean83 = typeCircularBuffer68.put((java.lang.reflect.Type) wildcardClass81);
        boolean boolean84 = typeCircularBuffer68.isFull();
        java.lang.reflect.Type type85 = typeCircularBuffer68.get();
        boolean boolean86 = typeCircularBuffer39.put(type85);
        boolean boolean87 = typeCircularBuffer39.isEmpty();
        boolean boolean88 = typeCircularBuffer39.isFull();
        java.lang.Class<?> wildcardClass89 = typeCircularBuffer39.getClass();
        boolean boolean90 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass89);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNull(type34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(type85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test1338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1338");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        boolean boolean5 = typeCircularBuffer1.isFull();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        java.lang.reflect.Type type8 = null;
        boolean boolean9 = typeCircularBuffer1.put(type8);
        boolean boolean10 = typeCircularBuffer1.isFull();
        boolean boolean11 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test1339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1339");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test1340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1340");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer6.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.reflect.Type type13 = typeCircularBuffer1.get();
        boolean boolean14 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type17 = typeCircularBuffer16.get();
        boolean boolean18 = typeCircularBuffer16.isFull();
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer16.getClass();
        boolean boolean20 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass19);
        java.lang.reflect.Type type21 = typeCircularBuffer1.get();
        boolean boolean22 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type23 = typeCircularBuffer1.get();
        boolean boolean24 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(type17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test1341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1341");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type10 = typeCircularBuffer9.get();
        boolean boolean11 = typeCircularBuffer9.isFull();
        boolean boolean12 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer14.getClass();
        boolean boolean20 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass19);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        boolean boolean26 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer22.getClass();
        boolean boolean28 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass27);
        java.lang.reflect.Type type30 = typeCircularBuffer1.get();
        boolean boolean31 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type32 = typeCircularBuffer1.get();
        java.lang.reflect.Type type33 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(type32);
        org.junit.Assert.assertNull(type33);
    }

    @Test
    public void test1342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1342");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer5 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean6 = typeCircularBuffer5.isEmpty();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = typeCircularBuffer5.put((java.lang.reflect.Type) wildcardClass8);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer5.getClass();
        boolean boolean11 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass10);
        boolean boolean12 = typeCircularBuffer1.isEmpty();
        boolean boolean13 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer20.getClass();
        boolean boolean22 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type23 = typeCircularBuffer17.get();
        boolean boolean24 = typeCircularBuffer15.put(type23);
        boolean boolean25 = typeCircularBuffer15.isFull();
        java.lang.reflect.Type type26 = typeCircularBuffer15.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        boolean boolean32 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass31);
        boolean boolean33 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass31);
        boolean boolean34 = typeCircularBuffer15.isEmpty();
        java.lang.reflect.Type type35 = typeCircularBuffer15.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        boolean boolean38 = typeCircularBuffer37.isEmpty();
        boolean boolean39 = typeCircularBuffer37.isEmpty();
        boolean boolean40 = typeCircularBuffer37.isFull();
        java.lang.reflect.Type type41 = typeCircularBuffer37.get();
        boolean boolean42 = typeCircularBuffer37.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean47 = typeCircularBuffer46.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer49 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass50 = typeCircularBuffer49.getClass();
        boolean boolean51 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass50);
        java.lang.reflect.Type type52 = typeCircularBuffer46.get();
        boolean boolean53 = typeCircularBuffer44.put(type52);
        boolean boolean54 = typeCircularBuffer44.isFull();
        java.lang.reflect.Type type55 = typeCircularBuffer44.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer57 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer59 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean60 = typeCircularBuffer59.isFull();
        boolean boolean61 = typeCircularBuffer59.isEmpty();
        java.lang.reflect.Type type62 = typeCircularBuffer59.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer64 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer66 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean67 = typeCircularBuffer66.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer69 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass70 = typeCircularBuffer69.getClass();
        boolean boolean71 = typeCircularBuffer66.put((java.lang.reflect.Type) wildcardClass70);
        java.lang.reflect.Type type72 = typeCircularBuffer66.get();
        boolean boolean73 = typeCircularBuffer64.put(type72);
        java.lang.Class<?> wildcardClass74 = typeCircularBuffer64.getClass();
        boolean boolean75 = typeCircularBuffer59.put((java.lang.reflect.Type) wildcardClass74);
        boolean boolean76 = typeCircularBuffer57.put((java.lang.reflect.Type) wildcardClass74);
        boolean boolean77 = typeCircularBuffer44.put((java.lang.reflect.Type) wildcardClass74);
        boolean boolean78 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass74);
        boolean boolean79 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass74);
        boolean boolean80 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass74);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(type41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(type62);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(type72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
    }

    @Test
    public void test1343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1343");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer6.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.reflect.Type type13 = typeCircularBuffer1.get();
        boolean boolean14 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer19.getClass();
        boolean boolean21 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean22 = typeCircularBuffer16.isEmpty();
        java.lang.reflect.Type type23 = typeCircularBuffer16.get();
        boolean boolean24 = typeCircularBuffer1.put(type23);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type27 = typeCircularBuffer26.get();
        boolean boolean28 = typeCircularBuffer26.isFull();
        boolean boolean29 = typeCircularBuffer26.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        boolean boolean35 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass34);
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer31.getClass();
        boolean boolean37 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass36);
        java.lang.reflect.Type type38 = typeCircularBuffer26.get();
        boolean boolean39 = typeCircularBuffer26.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type42 = typeCircularBuffer41.get();
        boolean boolean43 = typeCircularBuffer41.isFull();
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer41.getClass();
        boolean boolean45 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean46 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass44);
        java.lang.reflect.Type type47 = typeCircularBuffer1.get();
        boolean boolean48 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type49 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass50 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(type42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(type49);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test1344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1344");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        boolean boolean6 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        java.lang.reflect.Type type11 = typeCircularBuffer9.get();
        java.lang.reflect.Type type12 = typeCircularBuffer9.get();
        java.lang.reflect.Type type13 = typeCircularBuffer9.get();
        java.lang.reflect.Type type14 = typeCircularBuffer9.get();
        boolean boolean15 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer20.getClass();
        boolean boolean22 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass21);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean27 = typeCircularBuffer26.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass30 = typeCircularBuffer29.getClass();
        boolean boolean31 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass30);
        java.lang.reflect.Type type32 = typeCircularBuffer26.get();
        boolean boolean33 = typeCircularBuffer24.put(type32);
        boolean boolean34 = typeCircularBuffer24.isFull();
        java.lang.reflect.Type type35 = typeCircularBuffer24.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean38 = typeCircularBuffer37.isEmpty();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        boolean boolean41 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass40);
        boolean boolean42 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass40);
        boolean boolean43 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass40);
        boolean boolean44 = typeCircularBuffer17.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean47 = typeCircularBuffer46.isFull();
        boolean boolean48 = typeCircularBuffer46.isEmpty();
        boolean boolean49 = typeCircularBuffer46.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean52 = typeCircularBuffer51.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer54 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass55 = typeCircularBuffer54.getClass();
        boolean boolean56 = typeCircularBuffer51.put((java.lang.reflect.Type) wildcardClass55);
        java.lang.reflect.Type type57 = typeCircularBuffer51.get();
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        boolean boolean60 = typeCircularBuffer51.put((java.lang.reflect.Type) wildcardClass59);
        boolean boolean61 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass59);
        boolean boolean62 = typeCircularBuffer46.isFull();
        java.lang.reflect.Type type63 = typeCircularBuffer46.get();
        boolean boolean64 = typeCircularBuffer17.put(type63);
        boolean boolean65 = typeCircularBuffer9.put(type63);
        java.lang.Class<?> wildcardClass66 = typeCircularBuffer9.getClass();
        boolean boolean67 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass66);
        java.lang.reflect.Type type68 = typeCircularBuffer1.get();
        boolean boolean69 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass70 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(type11);
        org.junit.Assert.assertNull(type12);
        org.junit.Assert.assertNull(type13);
        org.junit.Assert.assertNull(type14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test1345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1345");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type12 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        boolean boolean19 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass17);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean24 = typeCircularBuffer23.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer26.getClass();
        boolean boolean28 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass27);
        java.lang.reflect.Type type29 = typeCircularBuffer23.get();
        boolean boolean30 = typeCircularBuffer21.put(type29);
        boolean boolean31 = typeCircularBuffer21.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean34 = typeCircularBuffer33.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass37 = typeCircularBuffer36.getClass();
        boolean boolean38 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass37);
        java.lang.reflect.Type type39 = typeCircularBuffer33.get();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        boolean boolean42 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean43 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean44 = typeCircularBuffer21.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type47 = typeCircularBuffer46.get();
        boolean boolean48 = typeCircularBuffer46.isFull();
        boolean boolean49 = typeCircularBuffer46.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean52 = typeCircularBuffer51.isEmpty();
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        boolean boolean55 = typeCircularBuffer51.put((java.lang.reflect.Type) wildcardClass54);
        java.lang.Class<?> wildcardClass56 = typeCircularBuffer51.getClass();
        boolean boolean57 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass56);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer59 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean60 = typeCircularBuffer59.isEmpty();
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        boolean boolean63 = typeCircularBuffer59.put((java.lang.reflect.Type) wildcardClass62);
        java.lang.Class<?> wildcardClass64 = typeCircularBuffer59.getClass();
        boolean boolean65 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass64);
        boolean boolean66 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass64);
        java.lang.reflect.Type type67 = typeCircularBuffer21.get();
        boolean boolean68 = typeCircularBuffer1.put(type67);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer70 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type71 = typeCircularBuffer70.get();
        boolean boolean72 = typeCircularBuffer70.isFull();
        boolean boolean73 = typeCircularBuffer70.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer75 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean76 = typeCircularBuffer75.isEmpty();
        java.lang.Object obj77 = new java.lang.Object();
        java.lang.Class<?> wildcardClass78 = obj77.getClass();
        boolean boolean79 = typeCircularBuffer75.put((java.lang.reflect.Type) wildcardClass78);
        java.lang.Class<?> wildcardClass80 = typeCircularBuffer75.getClass();
        boolean boolean81 = typeCircularBuffer70.put((java.lang.reflect.Type) wildcardClass80);
        java.lang.reflect.Type type82 = typeCircularBuffer70.get();
        boolean boolean83 = typeCircularBuffer70.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer85 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean86 = typeCircularBuffer85.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer88 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass89 = typeCircularBuffer88.getClass();
        boolean boolean90 = typeCircularBuffer85.put((java.lang.reflect.Type) wildcardClass89);
        boolean boolean91 = typeCircularBuffer85.isEmpty();
        java.lang.reflect.Type type92 = typeCircularBuffer85.get();
        boolean boolean93 = typeCircularBuffer70.put(type92);
        boolean boolean94 = typeCircularBuffer1.put(type92);
        java.lang.Class<?> wildcardClass95 = type92.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(type47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(type71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(type92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test1346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1346");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 10);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean5 = typeCircularBuffer4.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass8 = typeCircularBuffer7.getClass();
        boolean boolean9 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass8);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        boolean boolean20 = typeCircularBuffer11.put(type19);
        boolean boolean21 = typeCircularBuffer11.isFull();
        java.lang.reflect.Type type22 = typeCircularBuffer11.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean25 = typeCircularBuffer24.isEmpty();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        boolean boolean28 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean30 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean31 = typeCircularBuffer4.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean34 = typeCircularBuffer33.isFull();
        boolean boolean35 = typeCircularBuffer33.isEmpty();
        boolean boolean36 = typeCircularBuffer33.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean39 = typeCircularBuffer38.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass42 = typeCircularBuffer41.getClass();
        boolean boolean43 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass42);
        java.lang.reflect.Type type44 = typeCircularBuffer38.get();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        boolean boolean47 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass46);
        boolean boolean48 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass46);
        boolean boolean49 = typeCircularBuffer33.isFull();
        java.lang.reflect.Type type50 = typeCircularBuffer33.get();
        boolean boolean51 = typeCircularBuffer4.put(type50);
        boolean boolean52 = typeCircularBuffer4.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer54 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean55 = typeCircularBuffer54.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer57 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass58 = typeCircularBuffer57.getClass();
        boolean boolean59 = typeCircularBuffer54.put((java.lang.reflect.Type) wildcardClass58);
        java.lang.reflect.Type type60 = typeCircularBuffer54.get();
        boolean boolean61 = typeCircularBuffer54.isFull();
        java.lang.reflect.Type type62 = typeCircularBuffer54.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer64 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean65 = typeCircularBuffer64.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer67 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass68 = typeCircularBuffer67.getClass();
        boolean boolean69 = typeCircularBuffer64.put((java.lang.reflect.Type) wildcardClass68);
        java.lang.reflect.Type type70 = typeCircularBuffer64.get();
        java.lang.Object obj71 = new java.lang.Object();
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        boolean boolean73 = typeCircularBuffer64.put((java.lang.reflect.Type) wildcardClass72);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer75 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean76 = typeCircularBuffer75.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer78 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass79 = typeCircularBuffer78.getClass();
        boolean boolean80 = typeCircularBuffer75.put((java.lang.reflect.Type) wildcardClass79);
        java.lang.Class<?> wildcardClass81 = typeCircularBuffer75.getClass();
        boolean boolean82 = typeCircularBuffer64.put((java.lang.reflect.Type) wildcardClass81);
        boolean boolean83 = typeCircularBuffer54.put((java.lang.reflect.Type) wildcardClass81);
        java.lang.reflect.Type type84 = typeCircularBuffer54.get();
        boolean boolean85 = typeCircularBuffer4.put(type84);
        boolean boolean86 = typeCircularBuffer1.put(type84);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer88 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass89 = typeCircularBuffer88.getClass();
        boolean boolean90 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass89);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(type62);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(type84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
    }

    @Test
    public void test1347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1347");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer5 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean6 = typeCircularBuffer5.isEmpty();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = typeCircularBuffer5.put((java.lang.reflect.Type) wildcardClass8);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer5.getClass();
        boolean boolean11 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass10);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        boolean boolean19 = typeCircularBuffer13.isEmpty();
        java.lang.reflect.Type type20 = typeCircularBuffer13.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        java.lang.reflect.Type type23 = typeCircularBuffer22.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean26 = typeCircularBuffer25.isFull();
        boolean boolean27 = typeCircularBuffer25.isEmpty();
        boolean boolean28 = typeCircularBuffer25.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean31 = typeCircularBuffer30.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass34 = typeCircularBuffer33.getClass();
        boolean boolean35 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass34);
        java.lang.reflect.Type type36 = typeCircularBuffer30.get();
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        boolean boolean39 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass38);
        boolean boolean40 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass38);
        boolean boolean41 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass38);
        java.lang.Class<?> wildcardClass42 = typeCircularBuffer22.getClass();
        boolean boolean43 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass42);
        boolean boolean44 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass42);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type47 = typeCircularBuffer46.get();
        boolean boolean48 = typeCircularBuffer46.isFull();
        boolean boolean49 = typeCircularBuffer46.isFull();
        boolean boolean50 = typeCircularBuffer46.isFull();
        java.lang.reflect.Type type51 = typeCircularBuffer46.get();
        boolean boolean52 = typeCircularBuffer46.isEmpty();
        java.lang.reflect.Type type53 = typeCircularBuffer46.get();
        java.lang.reflect.Type type54 = typeCircularBuffer46.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer56 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean57 = typeCircularBuffer56.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer59 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass60 = typeCircularBuffer59.getClass();
        boolean boolean61 = typeCircularBuffer56.put((java.lang.reflect.Type) wildcardClass60);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer63 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer65 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean66 = typeCircularBuffer65.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer68 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass69 = typeCircularBuffer68.getClass();
        boolean boolean70 = typeCircularBuffer65.put((java.lang.reflect.Type) wildcardClass69);
        java.lang.reflect.Type type71 = typeCircularBuffer65.get();
        boolean boolean72 = typeCircularBuffer63.put(type71);
        boolean boolean73 = typeCircularBuffer63.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer75 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean76 = typeCircularBuffer75.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer78 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass79 = typeCircularBuffer78.getClass();
        boolean boolean80 = typeCircularBuffer75.put((java.lang.reflect.Type) wildcardClass79);
        java.lang.reflect.Type type81 = typeCircularBuffer75.get();
        java.lang.Object obj82 = new java.lang.Object();
        java.lang.Class<?> wildcardClass83 = obj82.getClass();
        boolean boolean84 = typeCircularBuffer75.put((java.lang.reflect.Type) wildcardClass83);
        boolean boolean85 = typeCircularBuffer63.put((java.lang.reflect.Type) wildcardClass83);
        boolean boolean86 = typeCircularBuffer63.isEmpty();
        java.lang.Object obj87 = new java.lang.Object();
        java.lang.Class<?> wildcardClass88 = obj87.getClass();
        boolean boolean89 = typeCircularBuffer63.put((java.lang.reflect.Type) wildcardClass88);
        boolean boolean90 = typeCircularBuffer56.put((java.lang.reflect.Type) wildcardClass88);
        boolean boolean91 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass88);
        boolean boolean92 = typeCircularBuffer46.isFull();
        java.lang.Class<?> wildcardClass93 = typeCircularBuffer46.getClass();
        boolean boolean94 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass93);
        boolean boolean95 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass96 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNull(type23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(type47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(type51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(type53);
        org.junit.Assert.assertNull(type54);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(type81);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1348");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        java.lang.reflect.Type type12 = typeCircularBuffer6.get();
        boolean boolean13 = typeCircularBuffer4.put(type12);
        boolean boolean14 = typeCircularBuffer4.isFull();
        java.lang.reflect.Type type15 = typeCircularBuffer4.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        boolean boolean21 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean22 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type24 = typeCircularBuffer1.get();
        boolean boolean25 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type26 = typeCircularBuffer1.get();
        boolean boolean27 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type28 = typeCircularBuffer1.get();
        boolean boolean29 = typeCircularBuffer1.isEmpty();
        boolean boolean30 = typeCircularBuffer1.isFull();
        boolean boolean31 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(type26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(type28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test1349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1349");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean7 = typeCircularBuffer6.isFull();
        boolean boolean8 = typeCircularBuffer6.isEmpty();
        boolean boolean9 = typeCircularBuffer6.isFull();
        java.lang.reflect.Type type10 = null;
        boolean boolean11 = typeCircularBuffer6.put(type10);
        boolean boolean12 = typeCircularBuffer6.isFull();
        boolean boolean13 = typeCircularBuffer6.isFull();
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer6.getClass();
        boolean boolean15 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass14);
        boolean boolean16 = typeCircularBuffer1.isFull();
        boolean boolean17 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type20 = typeCircularBuffer19.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean25 = typeCircularBuffer24.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer27.getClass();
        boolean boolean29 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.reflect.Type type30 = typeCircularBuffer24.get();
        boolean boolean31 = typeCircularBuffer22.put(type30);
        boolean boolean32 = typeCircularBuffer22.isFull();
        java.lang.reflect.Type type33 = typeCircularBuffer22.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean36 = typeCircularBuffer35.isEmpty();
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        boolean boolean39 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass38);
        boolean boolean40 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass38);
        boolean boolean41 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass38);
        boolean boolean42 = typeCircularBuffer19.isFull();
        java.lang.reflect.Type type43 = typeCircularBuffer19.get();
        java.lang.Class<?> wildcardClass44 = type43.getClass();
        boolean boolean45 = typeCircularBuffer1.put(type43);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(type20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test1350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1350");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean5 = typeCircularBuffer4.isFull();
        boolean boolean6 = typeCircularBuffer4.isEmpty();
        boolean boolean7 = typeCircularBuffer4.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        java.lang.reflect.Type type15 = typeCircularBuffer9.get();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass17);
        boolean boolean19 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass17);
        boolean boolean20 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass17);
        boolean boolean21 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test1351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1351");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean9 = typeCircularBuffer8.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass12 = typeCircularBuffer11.getClass();
        boolean boolean13 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass12);
        java.lang.reflect.Type type14 = typeCircularBuffer8.get();
        boolean boolean15 = typeCircularBuffer6.put(type14);
        java.lang.Class<?> wildcardClass16 = typeCircularBuffer6.getClass();
        boolean boolean17 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass16);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(10);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer19.getClass();
        boolean boolean21 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean22 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type23 = typeCircularBuffer1.get();
        java.lang.reflect.Type type24 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNull(type24);
    }

    @Test
    public void test1352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1352");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type12 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        boolean boolean19 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass17);
        boolean boolean20 = typeCircularBuffer1.isEmpty();
        boolean boolean21 = typeCircularBuffer1.isEmpty();
        boolean boolean22 = typeCircularBuffer1.isEmpty();
        boolean boolean23 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test1353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1353");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type12 = typeCircularBuffer1.get();
        boolean boolean13 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type14 = typeCircularBuffer1.get();
        java.lang.reflect.Type type15 = typeCircularBuffer1.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass16 = type15.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(type14);
        org.junit.Assert.assertNull(type15);
    }

    @Test
    public void test1354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1354");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean7 = typeCircularBuffer6.isFull();
        boolean boolean8 = typeCircularBuffer6.isEmpty();
        java.lang.reflect.Type type9 = typeCircularBuffer6.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        boolean boolean20 = typeCircularBuffer11.put(type19);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer11.getClass();
        boolean boolean22 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass21);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type26 = typeCircularBuffer25.get();
        boolean boolean27 = typeCircularBuffer25.isFull();
        boolean boolean28 = typeCircularBuffer25.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean31 = typeCircularBuffer30.isEmpty();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        boolean boolean34 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass33);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer30.getClass();
        boolean boolean36 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass35);
        boolean boolean37 = typeCircularBuffer25.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean40 = typeCircularBuffer39.isFull();
        boolean boolean41 = typeCircularBuffer39.isEmpty();
        java.lang.reflect.Type type42 = typeCircularBuffer39.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean47 = typeCircularBuffer46.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer49 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass50 = typeCircularBuffer49.getClass();
        boolean boolean51 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass50);
        java.lang.reflect.Type type52 = typeCircularBuffer46.get();
        boolean boolean53 = typeCircularBuffer44.put(type52);
        java.lang.Class<?> wildcardClass54 = typeCircularBuffer44.getClass();
        boolean boolean55 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean56 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass54);
        java.lang.Class<?> wildcardClass57 = typeCircularBuffer25.getClass();
        boolean boolean58 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass57);
        boolean boolean59 = typeCircularBuffer4.isEmpty();
        boolean boolean60 = typeCircularBuffer4.isFull();
        boolean boolean61 = typeCircularBuffer4.isFull();
        boolean boolean62 = typeCircularBuffer4.isFull();
        java.lang.Class<?> wildcardClass63 = typeCircularBuffer4.getClass();
        boolean boolean64 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass63);
        java.lang.reflect.Type type65 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass66 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(type26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(type42);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test1355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1355");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        java.lang.reflect.Type type11 = typeCircularBuffer1.get();
        boolean boolean12 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer17.getClass();
        boolean boolean19 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass18);
        java.lang.reflect.Type type20 = typeCircularBuffer14.get();
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        boolean boolean23 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass22);
        java.lang.reflect.Type type24 = typeCircularBuffer14.get();
        boolean boolean25 = typeCircularBuffer1.put(type24);
        boolean boolean26 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type27 = typeCircularBuffer1.get();
        boolean boolean28 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean31 = typeCircularBuffer30.isFull();
        java.lang.reflect.Type type32 = typeCircularBuffer30.get();
        boolean boolean33 = typeCircularBuffer30.isEmpty();
        java.lang.reflect.Type type34 = typeCircularBuffer30.get();
        java.lang.reflect.Type type35 = typeCircularBuffer30.get();
        boolean boolean36 = typeCircularBuffer30.isEmpty();
        java.lang.Class<?> wildcardClass37 = typeCircularBuffer30.getClass();
        boolean boolean38 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass37);
        java.lang.reflect.Type type39 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass40 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(type32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(type34);
        org.junit.Assert.assertNull(type35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test1356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1356");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer17.getClass();
        boolean boolean19 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass18);
        java.lang.reflect.Type type20 = typeCircularBuffer14.get();
        boolean boolean21 = typeCircularBuffer12.put(type20);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer12.getClass();
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass22);
        boolean boolean24 = typeCircularBuffer1.isFull();
        boolean boolean25 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type26 = typeCircularBuffer1.get();
        boolean boolean27 = typeCircularBuffer1.isEmpty();
        boolean boolean28 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type29 = typeCircularBuffer1.get();
        java.lang.reflect.Type type30 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(type29);
        org.junit.Assert.assertNull(type30);
    }

    @Test
    public void test1357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1357");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldCircularBuffer5 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>((int) (short) 1);
        java.lang.Class<?> wildcardClass6 = wildcardClassOfFieldCircularBuffer5.getClass();
        boolean boolean7 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass6);
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        boolean boolean9 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        boolean boolean20 = typeCircularBuffer11.put(type19);
        boolean boolean21 = typeCircularBuffer11.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean24 = typeCircularBuffer23.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer26.getClass();
        boolean boolean28 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass27);
        java.lang.reflect.Type type29 = typeCircularBuffer23.get();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        boolean boolean32 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass31);
        boolean boolean33 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass31);
        boolean boolean34 = typeCircularBuffer11.isEmpty();
        boolean boolean35 = typeCircularBuffer11.isEmpty();
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer11.getClass();
        boolean boolean37 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass36);
        java.lang.Class<?> wildcardClass38 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test1358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1358");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        boolean boolean5 = typeCircularBuffer1.isFull();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        boolean boolean7 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass8 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test1359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1359");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        boolean boolean8 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test1360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1360");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        boolean boolean8 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        boolean boolean12 = typeCircularBuffer10.isFull();
        boolean boolean13 = typeCircularBuffer10.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean16 = typeCircularBuffer15.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer18.getClass();
        boolean boolean20 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass19);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean25 = typeCircularBuffer24.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer27.getClass();
        boolean boolean29 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.reflect.Type type30 = typeCircularBuffer24.get();
        boolean boolean31 = typeCircularBuffer22.put(type30);
        boolean boolean32 = typeCircularBuffer22.isFull();
        java.lang.reflect.Type type33 = typeCircularBuffer22.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean36 = typeCircularBuffer35.isEmpty();
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        boolean boolean39 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass38);
        boolean boolean40 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass38);
        boolean boolean41 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass38);
        boolean boolean42 = typeCircularBuffer15.isFull();
        boolean boolean43 = typeCircularBuffer15.isFull();
        boolean boolean44 = typeCircularBuffer15.isEmpty();
        boolean boolean45 = typeCircularBuffer15.isFull();
        java.lang.reflect.Type type46 = typeCircularBuffer15.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean51 = typeCircularBuffer50.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer53 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass54 = typeCircularBuffer53.getClass();
        boolean boolean55 = typeCircularBuffer50.put((java.lang.reflect.Type) wildcardClass54);
        java.lang.reflect.Type type56 = typeCircularBuffer50.get();
        boolean boolean57 = typeCircularBuffer48.put(type56);
        boolean boolean58 = typeCircularBuffer48.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer60 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean61 = typeCircularBuffer60.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer63 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass64 = typeCircularBuffer63.getClass();
        boolean boolean65 = typeCircularBuffer60.put((java.lang.reflect.Type) wildcardClass64);
        java.lang.reflect.Type type66 = typeCircularBuffer60.get();
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        boolean boolean69 = typeCircularBuffer60.put((java.lang.reflect.Type) wildcardClass68);
        boolean boolean70 = typeCircularBuffer48.put((java.lang.reflect.Type) wildcardClass68);
        java.lang.reflect.Type type71 = typeCircularBuffer48.get();
        boolean boolean72 = typeCircularBuffer15.put(type71);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer74 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean75 = typeCircularBuffer74.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer77 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass78 = typeCircularBuffer77.getClass();
        boolean boolean79 = typeCircularBuffer74.put((java.lang.reflect.Type) wildcardClass78);
        java.lang.reflect.Type type80 = typeCircularBuffer74.get();
        java.lang.Object obj81 = new java.lang.Object();
        java.lang.Class<?> wildcardClass82 = obj81.getClass();
        boolean boolean83 = typeCircularBuffer74.put((java.lang.reflect.Type) wildcardClass82);
        boolean boolean84 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass82);
        boolean boolean85 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass82);
        boolean boolean86 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass82);
        java.lang.reflect.Type type87 = typeCircularBuffer1.get();
        java.lang.reflect.Type type88 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(type71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(type87);
        org.junit.Assert.assertNull(type88);
    }

    @Test
    public void test1361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1361");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>((int) '4');
        java.lang.Class<?> wildcardClass9 = wildcardClassOfFieldCircularBuffer8.getClass();
        boolean boolean10 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.reflect.Type type11 = typeCircularBuffer1.get();
        boolean boolean12 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test1362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1362");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean8 = typeCircularBuffer7.isFull();
        java.lang.reflect.Type type9 = typeCircularBuffer7.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean12 = typeCircularBuffer11.isEmpty();
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        boolean boolean15 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.Class<?> wildcardClass16 = typeCircularBuffer11.getClass();
        boolean boolean17 = typeCircularBuffer7.put((java.lang.reflect.Type) wildcardClass16);
        boolean boolean18 = typeCircularBuffer7.isEmpty();
        boolean boolean19 = typeCircularBuffer7.isFull();
        java.lang.reflect.Type type20 = typeCircularBuffer7.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) ' ');
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean26 = typeCircularBuffer25.isEmpty();
        java.lang.reflect.Type type27 = typeCircularBuffer25.get();
        java.lang.reflect.Type type28 = typeCircularBuffer25.get();
        java.lang.reflect.Type type29 = typeCircularBuffer25.get();
        boolean boolean30 = typeCircularBuffer25.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean33 = typeCircularBuffer32.isFull();
        java.lang.reflect.Type type34 = typeCircularBuffer32.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean37 = typeCircularBuffer36.isEmpty();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        boolean boolean40 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass39);
        java.lang.Class<?> wildcardClass41 = typeCircularBuffer36.getClass();
        boolean boolean42 = typeCircularBuffer32.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean43 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass41);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type48 = typeCircularBuffer47.get();
        boolean boolean49 = typeCircularBuffer47.isFull();
        boolean boolean50 = typeCircularBuffer47.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer52 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean53 = typeCircularBuffer52.isEmpty();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        boolean boolean56 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass55);
        java.lang.Class<?> wildcardClass57 = typeCircularBuffer52.getClass();
        boolean boolean58 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass57);
        boolean boolean59 = typeCircularBuffer47.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer61 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean62 = typeCircularBuffer61.isFull();
        boolean boolean63 = typeCircularBuffer61.isEmpty();
        java.lang.reflect.Type type64 = typeCircularBuffer61.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer66 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer68 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean69 = typeCircularBuffer68.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer71 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass72 = typeCircularBuffer71.getClass();
        boolean boolean73 = typeCircularBuffer68.put((java.lang.reflect.Type) wildcardClass72);
        java.lang.reflect.Type type74 = typeCircularBuffer68.get();
        boolean boolean75 = typeCircularBuffer66.put(type74);
        java.lang.Class<?> wildcardClass76 = typeCircularBuffer66.getClass();
        boolean boolean77 = typeCircularBuffer61.put((java.lang.reflect.Type) wildcardClass76);
        boolean boolean78 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass76);
        boolean boolean79 = typeCircularBuffer45.put((java.lang.reflect.Type) wildcardClass76);
        boolean boolean80 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass76);
        java.lang.Class<?> wildcardClass81 = typeCircularBuffer25.getClass();
        boolean boolean82 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass81);
        boolean boolean83 = typeCircularBuffer7.put((java.lang.reflect.Type) wildcardClass81);
        boolean boolean84 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass81);
        boolean boolean85 = typeCircularBuffer1.isEmpty();
        boolean boolean86 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(type27);
        org.junit.Assert.assertNull(type28);
        org.junit.Assert.assertNull(type29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(type34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(type48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(type64);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
    }

    @Test
    public void test1363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1363");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type4 = typeCircularBuffer3.get();
        boolean boolean5 = typeCircularBuffer3.isFull();
        boolean boolean6 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean9 = typeCircularBuffer8.isEmpty();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer8.getClass();
        boolean boolean14 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass13);
        boolean boolean15 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean18 = typeCircularBuffer17.isFull();
        boolean boolean19 = typeCircularBuffer17.isEmpty();
        java.lang.reflect.Type type20 = typeCircularBuffer17.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean25 = typeCircularBuffer24.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer27.getClass();
        boolean boolean29 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.reflect.Type type30 = typeCircularBuffer24.get();
        boolean boolean31 = typeCircularBuffer22.put(type30);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer22.getClass();
        boolean boolean33 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean35 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean36 = typeCircularBuffer1.isFull();
        boolean boolean37 = typeCircularBuffer1.isEmpty();
        boolean boolean38 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type39 = null;
        boolean boolean40 = typeCircularBuffer1.put(type39);
        boolean boolean41 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type42 = typeCircularBuffer1.get();
        java.lang.reflect.Type type43 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(type20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(type42);
        org.junit.Assert.assertNull(type43);
    }

    @Test
    public void test1364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1364");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type5 = typeCircularBuffer4.get();
        boolean boolean6 = typeCircularBuffer4.isFull();
        boolean boolean7 = typeCircularBuffer4.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        java.lang.Object obj11 = new java.lang.Object();
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        boolean boolean13 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass12);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer9.getClass();
        boolean boolean15 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass14);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        boolean boolean21 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer17.getClass();
        boolean boolean23 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass22);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) 'a');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer27.getClass();
        boolean boolean29 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass28);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean32 = typeCircularBuffer31.isFull();
        boolean boolean33 = typeCircularBuffer31.isEmpty();
        java.lang.reflect.Type type34 = typeCircularBuffer31.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean39 = typeCircularBuffer38.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass42 = typeCircularBuffer41.getClass();
        boolean boolean43 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass42);
        java.lang.reflect.Type type44 = typeCircularBuffer38.get();
        boolean boolean45 = typeCircularBuffer36.put(type44);
        java.lang.Class<?> wildcardClass46 = typeCircularBuffer36.getClass();
        boolean boolean47 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass46);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer49 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(10);
        java.lang.Class<?> wildcardClass50 = typeCircularBuffer49.getClass();
        boolean boolean51 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass50);
        boolean boolean52 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass50);
        boolean boolean53 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass50);
        boolean boolean54 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass50);
        boolean boolean55 = typeCircularBuffer1.isFull();
        boolean boolean56 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(type34);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
    }

    @Test
    public void test1365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1365");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        boolean boolean8 = typeCircularBuffer1.isEmpty();
        boolean boolean9 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type12 = typeCircularBuffer11.get();
        boolean boolean13 = typeCircularBuffer11.isFull();
        boolean boolean14 = typeCircularBuffer11.isFull();
        boolean boolean15 = typeCircularBuffer11.isFull();
        boolean boolean16 = typeCircularBuffer11.isFull();
        boolean boolean17 = typeCircularBuffer11.isFull();
        boolean boolean18 = typeCircularBuffer11.isEmpty();
        java.lang.reflect.Type type19 = typeCircularBuffer11.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean22 = typeCircularBuffer21.isEmpty();
        java.lang.reflect.Type type23 = typeCircularBuffer21.get();
        boolean boolean24 = typeCircularBuffer21.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type27 = typeCircularBuffer26.get();
        boolean boolean28 = typeCircularBuffer26.isFull();
        boolean boolean29 = typeCircularBuffer26.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        boolean boolean35 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass34);
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer31.getClass();
        boolean boolean37 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass36);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean40 = typeCircularBuffer39.isEmpty();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        boolean boolean43 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass42);
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer39.getClass();
        boolean boolean45 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean46 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean47 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean48 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean49 = typeCircularBuffer1.isEmpty();
        boolean boolean50 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(type19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
    }

    @Test
    public void test1366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1366");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        boolean boolean8 = typeCircularBuffer1.isEmpty();
        boolean boolean9 = typeCircularBuffer1.isFull();
        boolean boolean10 = typeCircularBuffer1.isFull();
        boolean boolean11 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type12 = null;
        boolean boolean13 = typeCircularBuffer1.put(type12);
        boolean boolean14 = typeCircularBuffer1.isFull();
        boolean boolean15 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean18 = typeCircularBuffer17.isFull();
        boolean boolean19 = typeCircularBuffer17.isEmpty();
        java.lang.reflect.Type type20 = typeCircularBuffer17.get();
        boolean boolean21 = typeCircularBuffer17.isEmpty();
        java.lang.reflect.Type type22 = typeCircularBuffer17.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>> wildcardClassOfFieldCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.invoke.TypeDescriptor.OfField<java.lang.Class<?>>>((int) '4');
        java.lang.Class<?> wildcardClass25 = wildcardClassOfFieldCircularBuffer24.getClass();
        boolean boolean26 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.reflect.Type type27 = typeCircularBuffer17.get();
        boolean boolean28 = typeCircularBuffer1.put(type27);
        java.lang.Class<?> wildcardClass29 = type27.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(type20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(type22);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test1367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1367");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        boolean boolean9 = typeCircularBuffer8.isEmpty();
        boolean boolean10 = typeCircularBuffer8.isEmpty();
        boolean boolean11 = typeCircularBuffer8.isFull();
        java.lang.reflect.Type type12 = typeCircularBuffer8.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer19.getClass();
        boolean boolean21 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type22 = typeCircularBuffer16.get();
        boolean boolean23 = typeCircularBuffer14.put(type22);
        boolean boolean24 = typeCircularBuffer14.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean27 = typeCircularBuffer26.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass30 = typeCircularBuffer29.getClass();
        boolean boolean31 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass30);
        java.lang.reflect.Type type32 = typeCircularBuffer26.get();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        boolean boolean35 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass34);
        boolean boolean36 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass34);
        boolean boolean37 = typeCircularBuffer14.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type40 = typeCircularBuffer39.get();
        boolean boolean41 = typeCircularBuffer39.isFull();
        boolean boolean42 = typeCircularBuffer39.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean45 = typeCircularBuffer44.isEmpty();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        boolean boolean48 = typeCircularBuffer44.put((java.lang.reflect.Type) wildcardClass47);
        java.lang.Class<?> wildcardClass49 = typeCircularBuffer44.getClass();
        boolean boolean50 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass49);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer52 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean53 = typeCircularBuffer52.isEmpty();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        boolean boolean56 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass55);
        java.lang.Class<?> wildcardClass57 = typeCircularBuffer52.getClass();
        boolean boolean58 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass57);
        boolean boolean59 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass57);
        java.lang.Class<?> wildcardClass60 = typeCircularBuffer14.getClass();
        boolean boolean61 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass60);
        boolean boolean62 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass60);
        java.lang.reflect.Type type63 = typeCircularBuffer1.get();
        boolean boolean64 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type65 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(type12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(type40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(type65);
    }

    @Test
    public void test1368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1368");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        boolean boolean6 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test1369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1369");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean24 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type27 = typeCircularBuffer26.get();
        boolean boolean28 = typeCircularBuffer26.isFull();
        boolean boolean29 = typeCircularBuffer26.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        boolean boolean35 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass34);
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer31.getClass();
        boolean boolean37 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass36);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean40 = typeCircularBuffer39.isEmpty();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        boolean boolean43 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass42);
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer39.getClass();
        boolean boolean45 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean46 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass44);
        java.lang.reflect.Type type47 = typeCircularBuffer1.get();
        java.lang.reflect.Type type48 = typeCircularBuffer1.get();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass49 = type48.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertNull(type48);
    }

    @Test
    public void test1370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1370");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        boolean boolean15 = typeCircularBuffer13.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type18 = typeCircularBuffer17.get();
        boolean boolean19 = typeCircularBuffer17.isFull();
        boolean boolean20 = typeCircularBuffer17.isFull();
        boolean boolean21 = typeCircularBuffer17.isEmpty();
        java.lang.reflect.Type type22 = typeCircularBuffer17.get();
        java.lang.Class<?> wildcardClass23 = typeCircularBuffer17.getClass();
        boolean boolean24 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass23);
        boolean boolean25 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass23);
        java.lang.reflect.Type type26 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type29 = typeCircularBuffer28.get();
        boolean boolean30 = typeCircularBuffer28.isFull();
        boolean boolean31 = typeCircularBuffer28.isEmpty();
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer28.getClass();
        boolean boolean33 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '#');
        boolean boolean37 = typeCircularBuffer36.isFull();
        java.lang.reflect.Type type38 = typeCircularBuffer36.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.GenericDeclaration> genericDeclarationCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.GenericDeclaration>((int) (byte) 1);
        java.lang.Class<?> wildcardClass41 = genericDeclarationCircularBuffer40.getClass();
        boolean boolean42 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean43 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass41);
        java.lang.reflect.Type type44 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass45 = type44.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(type18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(type22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNull(type29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(type38);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test1371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1371");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) 'a');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass4 = typeCircularBuffer3.getClass();
        boolean boolean5 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass4);
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        boolean boolean8 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean13 = typeCircularBuffer12.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass16 = typeCircularBuffer15.getClass();
        boolean boolean17 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass16);
        java.lang.reflect.Type type18 = typeCircularBuffer12.get();
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer12.getClass();
        boolean boolean20 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass19);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer10.getClass();
        boolean boolean22 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    }

    @Test
    public void test1372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1372");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean12 = typeCircularBuffer11.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass15 = typeCircularBuffer14.getClass();
        boolean boolean16 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass15);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean21 = typeCircularBuffer20.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer23.getClass();
        boolean boolean25 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass24);
        java.lang.reflect.Type type26 = typeCircularBuffer20.get();
        boolean boolean27 = typeCircularBuffer18.put(type26);
        boolean boolean28 = typeCircularBuffer18.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean31 = typeCircularBuffer30.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass34 = typeCircularBuffer33.getClass();
        boolean boolean35 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass34);
        java.lang.reflect.Type type36 = typeCircularBuffer30.get();
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        boolean boolean39 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass38);
        boolean boolean40 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass38);
        boolean boolean41 = typeCircularBuffer18.isEmpty();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        boolean boolean44 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass43);
        boolean boolean45 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass43);
        boolean boolean46 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass43);
        boolean boolean47 = typeCircularBuffer1.isEmpty();
        boolean boolean48 = typeCircularBuffer1.isFull();
        boolean boolean49 = typeCircularBuffer1.isFull();
        boolean boolean50 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test1373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1373");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type5 = null;
        boolean boolean6 = typeCircularBuffer1.put(type5);
        boolean boolean7 = typeCircularBuffer1.isFull();
        boolean boolean8 = typeCircularBuffer1.isFull();
        boolean boolean9 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type12 = typeCircularBuffer11.get();
        boolean boolean13 = typeCircularBuffer11.isFull();
        boolean boolean14 = typeCircularBuffer11.isFull();
        boolean boolean15 = typeCircularBuffer11.isFull();
        java.lang.reflect.Type type16 = typeCircularBuffer11.get();
        boolean boolean17 = typeCircularBuffer11.isEmpty();
        boolean boolean18 = typeCircularBuffer11.isEmpty();
        boolean boolean19 = typeCircularBuffer11.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type22 = typeCircularBuffer21.get();
        boolean boolean23 = typeCircularBuffer21.isFull();
        boolean boolean24 = typeCircularBuffer21.isFull();
        boolean boolean25 = typeCircularBuffer21.isFull();
        boolean boolean26 = typeCircularBuffer21.isFull();
        boolean boolean27 = typeCircularBuffer21.isFull();
        boolean boolean28 = typeCircularBuffer21.isEmpty();
        java.lang.reflect.Type type29 = typeCircularBuffer21.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        java.lang.reflect.Type type33 = typeCircularBuffer31.get();
        boolean boolean34 = typeCircularBuffer31.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type37 = typeCircularBuffer36.get();
        boolean boolean38 = typeCircularBuffer36.isFull();
        boolean boolean39 = typeCircularBuffer36.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean42 = typeCircularBuffer41.isEmpty();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        boolean boolean45 = typeCircularBuffer41.put((java.lang.reflect.Type) wildcardClass44);
        java.lang.Class<?> wildcardClass46 = typeCircularBuffer41.getClass();
        boolean boolean47 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass46);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer49 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean50 = typeCircularBuffer49.isEmpty();
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        boolean boolean53 = typeCircularBuffer49.put((java.lang.reflect.Type) wildcardClass52);
        java.lang.Class<?> wildcardClass54 = typeCircularBuffer49.getClass();
        boolean boolean55 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean56 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean57 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean58 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean59 = typeCircularBuffer11.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer61 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 1);
        java.lang.reflect.Type type62 = typeCircularBuffer61.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer64 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '#');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer66 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer68 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean69 = typeCircularBuffer68.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer71 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass72 = typeCircularBuffer71.getClass();
        boolean boolean73 = typeCircularBuffer68.put((java.lang.reflect.Type) wildcardClass72);
        java.lang.reflect.Type type74 = typeCircularBuffer68.get();
        boolean boolean75 = typeCircularBuffer66.put(type74);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer77 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer79 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean80 = typeCircularBuffer79.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer82 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass83 = typeCircularBuffer82.getClass();
        boolean boolean84 = typeCircularBuffer79.put((java.lang.reflect.Type) wildcardClass83);
        java.lang.reflect.Type type85 = typeCircularBuffer79.get();
        boolean boolean86 = typeCircularBuffer77.put(type85);
        java.lang.Class<?> wildcardClass87 = typeCircularBuffer77.getClass();
        boolean boolean88 = typeCircularBuffer66.put((java.lang.reflect.Type) wildcardClass87);
        boolean boolean89 = typeCircularBuffer64.put((java.lang.reflect.Type) wildcardClass87);
        boolean boolean90 = typeCircularBuffer64.isEmpty();
        java.lang.Class<?> wildcardClass91 = typeCircularBuffer64.getClass();
        boolean boolean92 = typeCircularBuffer61.put((java.lang.reflect.Type) wildcardClass91);
        boolean boolean93 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass91);
        boolean boolean94 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass91);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(type22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(type29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(type33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(type37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(type62);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(type74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(type85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test1374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1374");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean4 = typeCircularBuffer3.isFull();
        boolean boolean5 = typeCircularBuffer3.isEmpty();
        java.lang.reflect.Type type6 = typeCircularBuffer3.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer10.get();
        boolean boolean17 = typeCircularBuffer8.put(type16);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer8.getClass();
        boolean boolean19 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass18);
        boolean boolean20 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass18);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type23 = typeCircularBuffer22.get();
        boolean boolean24 = typeCircularBuffer22.isFull();
        boolean boolean25 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean28 = typeCircularBuffer27.isEmpty();
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        boolean boolean31 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass30);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer27.getClass();
        boolean boolean33 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean37 = typeCircularBuffer36.isFull();
        boolean boolean38 = typeCircularBuffer36.isEmpty();
        java.lang.reflect.Type type39 = typeCircularBuffer36.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer46.getClass();
        boolean boolean48 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass47);
        java.lang.reflect.Type type49 = typeCircularBuffer43.get();
        boolean boolean50 = typeCircularBuffer41.put(type49);
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer41.getClass();
        boolean boolean52 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean53 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass51);
        java.lang.Class<?> wildcardClass54 = typeCircularBuffer22.getClass();
        boolean boolean55 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean56 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer58 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean59 = typeCircularBuffer58.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer61 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass62 = typeCircularBuffer61.getClass();
        boolean boolean63 = typeCircularBuffer58.put((java.lang.reflect.Type) wildcardClass62);
        java.lang.reflect.Type type64 = typeCircularBuffer58.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer66 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type67 = typeCircularBuffer66.get();
        boolean boolean68 = typeCircularBuffer66.isFull();
        boolean boolean69 = typeCircularBuffer66.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer71 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean72 = typeCircularBuffer71.isEmpty();
        java.lang.Object obj73 = new java.lang.Object();
        java.lang.Class<?> wildcardClass74 = obj73.getClass();
        boolean boolean75 = typeCircularBuffer71.put((java.lang.reflect.Type) wildcardClass74);
        java.lang.Class<?> wildcardClass76 = typeCircularBuffer71.getClass();
        boolean boolean77 = typeCircularBuffer66.put((java.lang.reflect.Type) wildcardClass76);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer79 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean80 = typeCircularBuffer79.isEmpty();
        java.lang.Object obj81 = new java.lang.Object();
        java.lang.Class<?> wildcardClass82 = obj81.getClass();
        boolean boolean83 = typeCircularBuffer79.put((java.lang.reflect.Type) wildcardClass82);
        java.lang.Class<?> wildcardClass84 = typeCircularBuffer79.getClass();
        boolean boolean85 = typeCircularBuffer66.put((java.lang.reflect.Type) wildcardClass84);
        boolean boolean86 = typeCircularBuffer58.put((java.lang.reflect.Type) wildcardClass84);
        java.lang.reflect.Type type87 = typeCircularBuffer58.get();
        java.lang.reflect.Type type88 = typeCircularBuffer58.get();
        java.lang.Class<?> wildcardClass89 = typeCircularBuffer58.getClass();
        boolean boolean90 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass89);
        boolean boolean91 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer93 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type94 = typeCircularBuffer93.get();
        boolean boolean95 = typeCircularBuffer93.isFull();
        boolean boolean96 = typeCircularBuffer93.isFull();
        java.lang.Class<?> wildcardClass97 = typeCircularBuffer93.getClass();
        boolean boolean98 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass97);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(type39);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNull(type67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(type87);
        org.junit.Assert.assertNull(type88);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNull(type94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertNotNull(wildcardClass97);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
    }

    @Test
    public void test1375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1375");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        boolean boolean8 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean13 = typeCircularBuffer12.isFull();
        boolean boolean14 = typeCircularBuffer12.isEmpty();
        java.lang.reflect.Type type15 = typeCircularBuffer12.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean20 = typeCircularBuffer19.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass23 = typeCircularBuffer22.getClass();
        boolean boolean24 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass23);
        java.lang.reflect.Type type25 = typeCircularBuffer19.get();
        boolean boolean26 = typeCircularBuffer17.put(type25);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer17.getClass();
        boolean boolean28 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass27);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type32 = typeCircularBuffer31.get();
        boolean boolean33 = typeCircularBuffer31.isFull();
        boolean boolean34 = typeCircularBuffer31.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean37 = typeCircularBuffer36.isEmpty();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        boolean boolean40 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass39);
        java.lang.Class<?> wildcardClass41 = typeCircularBuffer36.getClass();
        boolean boolean42 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean43 = typeCircularBuffer31.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean46 = typeCircularBuffer45.isFull();
        boolean boolean47 = typeCircularBuffer45.isEmpty();
        java.lang.reflect.Type type48 = typeCircularBuffer45.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer52 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean53 = typeCircularBuffer52.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer55 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass56 = typeCircularBuffer55.getClass();
        boolean boolean57 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass56);
        java.lang.reflect.Type type58 = typeCircularBuffer52.get();
        boolean boolean59 = typeCircularBuffer50.put(type58);
        java.lang.Class<?> wildcardClass60 = typeCircularBuffer50.getClass();
        boolean boolean61 = typeCircularBuffer45.put((java.lang.reflect.Type) wildcardClass60);
        boolean boolean62 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass60);
        java.lang.Class<?> wildcardClass63 = typeCircularBuffer31.getClass();
        boolean boolean64 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass63);
        boolean boolean65 = typeCircularBuffer10.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer67 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer69 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean70 = typeCircularBuffer69.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer72 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass73 = typeCircularBuffer72.getClass();
        boolean boolean74 = typeCircularBuffer69.put((java.lang.reflect.Type) wildcardClass73);
        java.lang.reflect.Type type75 = typeCircularBuffer69.get();
        boolean boolean76 = typeCircularBuffer67.put(type75);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer78 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer80 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean81 = typeCircularBuffer80.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer83 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass84 = typeCircularBuffer83.getClass();
        boolean boolean85 = typeCircularBuffer80.put((java.lang.reflect.Type) wildcardClass84);
        java.lang.reflect.Type type86 = typeCircularBuffer80.get();
        boolean boolean87 = typeCircularBuffer78.put(type86);
        java.lang.Class<?> wildcardClass88 = typeCircularBuffer78.getClass();
        boolean boolean89 = typeCircularBuffer67.put((java.lang.reflect.Type) wildcardClass88);
        boolean boolean90 = typeCircularBuffer67.isFull();
        java.lang.reflect.Type type91 = typeCircularBuffer67.get();
        java.lang.Class<?> wildcardClass92 = typeCircularBuffer67.getClass();
        boolean boolean93 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass92);
        java.lang.Class<?> wildcardClass94 = typeCircularBuffer10.getClass();
        boolean boolean95 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass94);
        boolean boolean96 = typeCircularBuffer1.isFull();
        boolean boolean97 = typeCircularBuffer1.isFull();
        boolean boolean98 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(type15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(type32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(type48);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(type86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(type91);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test1376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1376");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test1377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1377");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        boolean boolean5 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        java.lang.reflect.Type type15 = typeCircularBuffer9.get();
        boolean boolean16 = typeCircularBuffer7.put(type15);
        boolean boolean17 = typeCircularBuffer7.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean20 = typeCircularBuffer19.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass23 = typeCircularBuffer22.getClass();
        boolean boolean24 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass23);
        java.lang.reflect.Type type25 = typeCircularBuffer19.get();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        boolean boolean28 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer7.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean30 = typeCircularBuffer7.isEmpty();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        boolean boolean33 = typeCircularBuffer7.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean35 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean38 = typeCircularBuffer37.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass41 = typeCircularBuffer40.getClass();
        boolean boolean42 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass41);
        java.lang.reflect.Type type43 = typeCircularBuffer37.get();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        boolean boolean46 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass45);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean49 = typeCircularBuffer48.isEmpty();
        java.lang.reflect.Type type50 = typeCircularBuffer48.get();
        java.lang.reflect.Type type51 = typeCircularBuffer48.get();
        java.lang.reflect.Type type52 = typeCircularBuffer48.get();
        boolean boolean53 = typeCircularBuffer48.isFull();
        java.lang.reflect.Type type54 = typeCircularBuffer48.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer56 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean57 = typeCircularBuffer56.isEmpty();
        java.lang.Class<?> wildcardClass58 = typeCircularBuffer56.getClass();
        boolean boolean59 = typeCircularBuffer48.put((java.lang.reflect.Type) wildcardClass58);
        boolean boolean60 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass58);
        boolean boolean61 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass58);
        boolean boolean62 = typeCircularBuffer1.isEmpty();
        boolean boolean63 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(type50);
        org.junit.Assert.assertNull(type51);
        org.junit.Assert.assertNull(type52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(type54);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test1378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1378");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type4 = typeCircularBuffer3.get();
        boolean boolean5 = typeCircularBuffer3.isFull();
        boolean boolean6 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean9 = typeCircularBuffer8.isEmpty();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer8.getClass();
        boolean boolean14 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass13);
        boolean boolean15 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean18 = typeCircularBuffer17.isFull();
        boolean boolean19 = typeCircularBuffer17.isEmpty();
        java.lang.reflect.Type type20 = typeCircularBuffer17.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean25 = typeCircularBuffer24.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer27.getClass();
        boolean boolean29 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.reflect.Type type30 = typeCircularBuffer24.get();
        boolean boolean31 = typeCircularBuffer22.put(type30);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer22.getClass();
        boolean boolean33 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean35 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean36 = typeCircularBuffer1.isFull();
        boolean boolean37 = typeCircularBuffer1.isEmpty();
        boolean boolean38 = typeCircularBuffer1.isFull();
        boolean boolean39 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type40 = typeCircularBuffer1.get();
        java.lang.reflect.Type type41 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(type20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(type40);
        org.junit.Assert.assertNull(type41);
    }

    @Test
    public void test1379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1379");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer10.get();
        boolean boolean17 = typeCircularBuffer8.put(type16);
        boolean boolean18 = typeCircularBuffer8.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean21 = typeCircularBuffer20.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer23.getClass();
        boolean boolean25 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass24);
        java.lang.reflect.Type type26 = typeCircularBuffer20.get();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        boolean boolean29 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass28);
        boolean boolean30 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass28);
        boolean boolean31 = typeCircularBuffer8.isEmpty();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        boolean boolean34 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass33);
        boolean boolean35 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass33);
        boolean boolean36 = typeCircularBuffer1.isEmpty();
        boolean boolean37 = typeCircularBuffer1.isEmpty();
        boolean boolean38 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean41 = typeCircularBuffer40.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer43.getClass();
        boolean boolean45 = typeCircularBuffer40.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean46 = typeCircularBuffer40.isFull();
        java.lang.reflect.Type type47 = typeCircularBuffer40.get();
        boolean boolean48 = typeCircularBuffer1.put(type47);
        java.lang.reflect.Type type49 = typeCircularBuffer1.get();
        boolean boolean50 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type51 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(type51);
    }

    @Test
    public void test1380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1380");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        boolean boolean12 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean15 = typeCircularBuffer14.isFull();
        java.lang.reflect.Type type16 = typeCircularBuffer14.get();
        boolean boolean17 = typeCircularBuffer14.isFull();
        boolean boolean18 = typeCircularBuffer14.isFull();
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer14.getClass();
        boolean boolean20 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass19);
        boolean boolean21 = typeCircularBuffer1.isEmpty();
        boolean boolean22 = typeCircularBuffer1.isEmpty();
        boolean boolean23 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test1381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1381");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        boolean boolean7 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean12 = typeCircularBuffer11.isEmpty();
        boolean boolean13 = typeCircularBuffer11.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type16 = typeCircularBuffer15.get();
        boolean boolean17 = typeCircularBuffer15.isFull();
        boolean boolean18 = typeCircularBuffer15.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean21 = typeCircularBuffer20.isEmpty();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        boolean boolean24 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass23);
        java.lang.Class<?> wildcardClass25 = typeCircularBuffer20.getClass();
        boolean boolean26 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.reflect.Type type27 = typeCircularBuffer15.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer34.getClass();
        boolean boolean36 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass35);
        java.lang.reflect.Type type37 = typeCircularBuffer31.get();
        boolean boolean38 = typeCircularBuffer29.put(type37);
        boolean boolean39 = typeCircularBuffer15.put(type37);
        boolean boolean40 = typeCircularBuffer11.put(type37);
        boolean boolean41 = typeCircularBuffer1.put(type37);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
    }

    @Test
    public void test1382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1382");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type10 = typeCircularBuffer9.get();
        boolean boolean11 = typeCircularBuffer9.isFull();
        boolean boolean12 = typeCircularBuffer9.isFull();
        boolean boolean13 = typeCircularBuffer9.isFull();
        java.lang.reflect.Type type14 = typeCircularBuffer9.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type17 = typeCircularBuffer16.get();
        boolean boolean18 = typeCircularBuffer16.isFull();
        boolean boolean19 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean22 = typeCircularBuffer21.isEmpty();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass24);
        java.lang.Class<?> wildcardClass26 = typeCircularBuffer21.getClass();
        boolean boolean27 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass26);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean30 = typeCircularBuffer29.isEmpty();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        boolean boolean33 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass32);
        java.lang.Class<?> wildcardClass34 = typeCircularBuffer29.getClass();
        boolean boolean35 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass34);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean40 = typeCircularBuffer39.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass43 = typeCircularBuffer42.getClass();
        boolean boolean44 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass43);
        java.lang.reflect.Type type45 = typeCircularBuffer39.get();
        boolean boolean46 = typeCircularBuffer37.put(type45);
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer37.getClass();
        boolean boolean48 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass47);
        java.lang.Class<?> wildcardClass49 = typeCircularBuffer16.getClass();
        boolean boolean50 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass49);
        boolean boolean51 = typeCircularBuffer9.isEmpty();
        java.lang.reflect.Type type52 = typeCircularBuffer9.get();
        boolean boolean53 = typeCircularBuffer1.put(type52);
        java.lang.reflect.Type type54 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(type14);
        org.junit.Assert.assertNull(type17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(type54);
    }

    @Test
    public void test1383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1383");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) 'a');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass4 = typeCircularBuffer3.getClass();
        boolean boolean5 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass4);
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type8 = null;
        boolean boolean9 = typeCircularBuffer1.put(type8);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test1384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1384");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isEmpty();
        boolean boolean12 = typeCircularBuffer1.isFull();
        boolean boolean13 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer20.getClass();
        boolean boolean22 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type23 = typeCircularBuffer17.get();
        boolean boolean24 = typeCircularBuffer15.put(type23);
        boolean boolean25 = typeCircularBuffer15.isFull();
        java.lang.reflect.Type type26 = typeCircularBuffer15.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer31.getClass();
        boolean boolean33 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer28.isFull();
        java.lang.reflect.Type type35 = typeCircularBuffer28.get();
        boolean boolean36 = typeCircularBuffer15.put(type35);
        boolean boolean37 = typeCircularBuffer1.put(type35);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean40 = typeCircularBuffer39.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass43 = typeCircularBuffer42.getClass();
        boolean boolean44 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass43);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean49 = typeCircularBuffer48.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass52 = typeCircularBuffer51.getClass();
        boolean boolean53 = typeCircularBuffer48.put((java.lang.reflect.Type) wildcardClass52);
        java.lang.reflect.Type type54 = typeCircularBuffer48.get();
        boolean boolean55 = typeCircularBuffer46.put(type54);
        boolean boolean56 = typeCircularBuffer46.isFull();
        java.lang.reflect.Type type57 = typeCircularBuffer46.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer59 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean60 = typeCircularBuffer59.isEmpty();
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        boolean boolean63 = typeCircularBuffer59.put((java.lang.reflect.Type) wildcardClass62);
        boolean boolean64 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass62);
        boolean boolean65 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass62);
        boolean boolean66 = typeCircularBuffer39.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer68 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean69 = typeCircularBuffer68.isFull();
        boolean boolean70 = typeCircularBuffer68.isEmpty();
        boolean boolean71 = typeCircularBuffer68.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer73 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean74 = typeCircularBuffer73.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer76 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass77 = typeCircularBuffer76.getClass();
        boolean boolean78 = typeCircularBuffer73.put((java.lang.reflect.Type) wildcardClass77);
        java.lang.reflect.Type type79 = typeCircularBuffer73.get();
        java.lang.Object obj80 = new java.lang.Object();
        java.lang.Class<?> wildcardClass81 = obj80.getClass();
        boolean boolean82 = typeCircularBuffer73.put((java.lang.reflect.Type) wildcardClass81);
        boolean boolean83 = typeCircularBuffer68.put((java.lang.reflect.Type) wildcardClass81);
        boolean boolean84 = typeCircularBuffer68.isFull();
        java.lang.reflect.Type type85 = typeCircularBuffer68.get();
        boolean boolean86 = typeCircularBuffer39.put(type85);
        boolean boolean87 = typeCircularBuffer1.put(type85);
        java.lang.Class<?> wildcardClass88 = type85.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(type79);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(type85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test1385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1385");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        boolean boolean8 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        boolean boolean10 = typeCircularBuffer1.isFull();
        boolean boolean11 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test1386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1386");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        boolean boolean7 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean19 = typeCircularBuffer18.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer21.getClass();
        boolean boolean23 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass22);
        java.lang.reflect.Type type24 = typeCircularBuffer18.get();
        boolean boolean25 = typeCircularBuffer16.put(type24);
        boolean boolean26 = typeCircularBuffer16.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer31.getClass();
        boolean boolean33 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass32);
        java.lang.reflect.Type type34 = typeCircularBuffer28.get();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        boolean boolean37 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean38 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean39 = typeCircularBuffer16.isEmpty();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        boolean boolean42 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean43 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean44 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass41);
        java.lang.reflect.Type type45 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean48 = typeCircularBuffer47.isEmpty();
        java.lang.reflect.Type type49 = typeCircularBuffer47.get();
        java.lang.reflect.Type type50 = typeCircularBuffer47.get();
        java.lang.reflect.Type type51 = typeCircularBuffer47.get();
        boolean boolean52 = typeCircularBuffer47.isFull();
        boolean boolean53 = typeCircularBuffer47.isFull();
        java.lang.reflect.Type type54 = typeCircularBuffer47.get();
        boolean boolean55 = typeCircularBuffer47.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer57 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer59 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean60 = typeCircularBuffer59.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer62 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass63 = typeCircularBuffer62.getClass();
        boolean boolean64 = typeCircularBuffer59.put((java.lang.reflect.Type) wildcardClass63);
        java.lang.reflect.Type type65 = typeCircularBuffer59.get();
        java.lang.Class<?> wildcardClass66 = typeCircularBuffer59.getClass();
        boolean boolean67 = typeCircularBuffer57.put((java.lang.reflect.Type) wildcardClass66);
        boolean boolean68 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass66);
        boolean boolean69 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass66);
        boolean boolean70 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(type49);
        org.junit.Assert.assertNull(type50);
        org.junit.Assert.assertNull(type51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(type54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test1387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1387");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        boolean boolean6 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        boolean boolean8 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer10.get();
        boolean boolean17 = typeCircularBuffer10.isFull();
        java.lang.reflect.Type type18 = typeCircularBuffer10.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean21 = typeCircularBuffer20.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer23.getClass();
        boolean boolean25 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass24);
        java.lang.reflect.Type type26 = typeCircularBuffer20.get();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        boolean boolean29 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass28);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer34.getClass();
        boolean boolean36 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass35);
        java.lang.Class<?> wildcardClass37 = typeCircularBuffer31.getClass();
        boolean boolean38 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass37);
        boolean boolean39 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass37);
        boolean boolean40 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass37);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.String> strCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.String>((int) (short) 10);
        java.lang.Class<?> wildcardClass43 = strCircularBuffer42.getClass();
        boolean boolean44 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass43);
        java.lang.Class<?> wildcardClass45 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(type18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test1388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1388");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type12 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        boolean boolean19 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type20 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass26 = typeCircularBuffer25.getClass();
        boolean boolean27 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass26);
        boolean boolean28 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean31 = typeCircularBuffer30.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass34 = typeCircularBuffer33.getClass();
        boolean boolean35 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass34);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean40 = typeCircularBuffer39.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass43 = typeCircularBuffer42.getClass();
        boolean boolean44 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass43);
        java.lang.reflect.Type type45 = typeCircularBuffer39.get();
        boolean boolean46 = typeCircularBuffer37.put(type45);
        boolean boolean47 = typeCircularBuffer37.isFull();
        java.lang.reflect.Type type48 = typeCircularBuffer37.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean51 = typeCircularBuffer50.isEmpty();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        boolean boolean54 = typeCircularBuffer50.put((java.lang.reflect.Type) wildcardClass53);
        boolean boolean55 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass53);
        boolean boolean56 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass53);
        boolean boolean57 = typeCircularBuffer30.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer59 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean60 = typeCircularBuffer59.isFull();
        boolean boolean61 = typeCircularBuffer59.isEmpty();
        boolean boolean62 = typeCircularBuffer59.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer64 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean65 = typeCircularBuffer64.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer67 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass68 = typeCircularBuffer67.getClass();
        boolean boolean69 = typeCircularBuffer64.put((java.lang.reflect.Type) wildcardClass68);
        java.lang.reflect.Type type70 = typeCircularBuffer64.get();
        java.lang.Object obj71 = new java.lang.Object();
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        boolean boolean73 = typeCircularBuffer64.put((java.lang.reflect.Type) wildcardClass72);
        boolean boolean74 = typeCircularBuffer59.put((java.lang.reflect.Type) wildcardClass72);
        boolean boolean75 = typeCircularBuffer59.isFull();
        java.lang.reflect.Type type76 = typeCircularBuffer59.get();
        boolean boolean77 = typeCircularBuffer30.put(type76);
        java.lang.Class<?> wildcardClass78 = type76.getClass();
        boolean boolean79 = typeCircularBuffer22.put(type76);
        java.lang.reflect.Type type80 = typeCircularBuffer22.get();
        boolean boolean81 = typeCircularBuffer1.put(type80);
        java.lang.reflect.Type type82 = typeCircularBuffer1.get();
        java.lang.reflect.Type type83 = typeCircularBuffer1.get();
        java.lang.reflect.Type type84 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(type80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertNull(type83);
        org.junit.Assert.assertNull(type84);
    }

    @Test
    public void test1389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1389");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) ' ');
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass6 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test1390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1390");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        java.lang.reflect.Type type12 = typeCircularBuffer6.get();
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        boolean boolean15 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass14);
        boolean boolean16 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass14);
        boolean boolean17 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type18 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass19 = type18.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test1391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1391");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass9);
        boolean boolean11 = typeCircularBuffer6.isFull();
        java.lang.Class<?> wildcardClass12 = typeCircularBuffer6.getClass();
        boolean boolean13 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass12);
        boolean boolean14 = typeCircularBuffer1.isFull();
        boolean boolean15 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass16 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test1392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1392");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean9 = typeCircularBuffer8.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass12 = typeCircularBuffer11.getClass();
        boolean boolean13 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass12);
        java.lang.reflect.Type type14 = typeCircularBuffer8.get();
        boolean boolean15 = typeCircularBuffer6.put(type14);
        java.lang.Class<?> wildcardClass16 = typeCircularBuffer6.getClass();
        boolean boolean17 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass16);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type20 = typeCircularBuffer19.get();
        boolean boolean21 = typeCircularBuffer19.isFull();
        boolean boolean22 = typeCircularBuffer19.isFull();
        boolean boolean23 = typeCircularBuffer19.isFull();
        java.lang.reflect.Type type24 = typeCircularBuffer19.get();
        boolean boolean25 = typeCircularBuffer19.isEmpty();
        java.lang.reflect.Type type26 = typeCircularBuffer19.get();
        java.lang.reflect.Type type27 = typeCircularBuffer19.get();
        boolean boolean28 = typeCircularBuffer19.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean33 = typeCircularBuffer32.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer35.getClass();
        boolean boolean37 = typeCircularBuffer32.put((java.lang.reflect.Type) wildcardClass36);
        java.lang.reflect.Type type38 = typeCircularBuffer32.get();
        boolean boolean39 = typeCircularBuffer30.put(type38);
        boolean boolean40 = typeCircularBuffer30.isFull();
        java.lang.reflect.Type type41 = typeCircularBuffer30.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        boolean boolean47 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass46);
        boolean boolean48 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass46);
        boolean boolean49 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass46);
        java.lang.Class<?> wildcardClass50 = typeCircularBuffer19.getClass();
        boolean boolean51 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass50);
        boolean boolean52 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type53 = typeCircularBuffer1.get();
        boolean boolean54 = typeCircularBuffer1.isEmpty();
        boolean boolean55 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type56 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(type20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(type26);
        org.junit.Assert.assertNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(type53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(type56);
    }

    @Test
    public void test1393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1393");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass10);
        java.lang.reflect.Type type13 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test1394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1394");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = null;
        boolean boolean8 = typeCircularBuffer1.put(type7);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean13 = typeCircularBuffer12.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass16 = typeCircularBuffer15.getClass();
        boolean boolean17 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass16);
        java.lang.reflect.Type type18 = typeCircularBuffer12.get();
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer12.getClass();
        boolean boolean20 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass19);
        boolean boolean21 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass19);
        boolean boolean22 = typeCircularBuffer1.isFull();
        boolean boolean23 = typeCircularBuffer1.isEmpty();
        boolean boolean24 = typeCircularBuffer1.isFull();
        boolean boolean25 = typeCircularBuffer1.isFull();
        boolean boolean26 = typeCircularBuffer1.isEmpty();
        boolean boolean27 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test1395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1395");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        boolean boolean8 = typeCircularBuffer1.isEmpty();
        boolean boolean9 = typeCircularBuffer1.isFull();
        boolean boolean10 = typeCircularBuffer1.isEmpty();
        boolean boolean11 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type12 = typeCircularBuffer1.get();
        boolean boolean13 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1396");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        boolean boolean12 = typeCircularBuffer6.isFull();
        java.lang.reflect.Type type13 = typeCircularBuffer6.get();
        boolean boolean14 = typeCircularBuffer1.put(type13);
        boolean boolean15 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type18 = typeCircularBuffer17.get();
        boolean boolean19 = typeCircularBuffer17.isFull();
        boolean boolean20 = typeCircularBuffer17.isFull();
        boolean boolean21 = typeCircularBuffer17.isFull();
        boolean boolean22 = typeCircularBuffer17.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean25 = typeCircularBuffer24.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean30 = typeCircularBuffer29.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass33 = typeCircularBuffer32.getClass();
        boolean boolean34 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass33);
        java.lang.reflect.Type type35 = typeCircularBuffer29.get();
        boolean boolean36 = typeCircularBuffer27.put(type35);
        boolean boolean37 = typeCircularBuffer27.isFull();
        java.lang.reflect.Type type38 = typeCircularBuffer27.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type41 = typeCircularBuffer40.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer46.getClass();
        boolean boolean48 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass47);
        java.lang.reflect.Type type49 = typeCircularBuffer43.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type52 = typeCircularBuffer51.get();
        boolean boolean53 = typeCircularBuffer51.isFull();
        boolean boolean54 = typeCircularBuffer51.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer56 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean57 = typeCircularBuffer56.isEmpty();
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        boolean boolean60 = typeCircularBuffer56.put((java.lang.reflect.Type) wildcardClass59);
        java.lang.Class<?> wildcardClass61 = typeCircularBuffer56.getClass();
        boolean boolean62 = typeCircularBuffer51.put((java.lang.reflect.Type) wildcardClass61);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer64 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean65 = typeCircularBuffer64.isEmpty();
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        boolean boolean68 = typeCircularBuffer64.put((java.lang.reflect.Type) wildcardClass67);
        java.lang.Class<?> wildcardClass69 = typeCircularBuffer64.getClass();
        boolean boolean70 = typeCircularBuffer51.put((java.lang.reflect.Type) wildcardClass69);
        boolean boolean71 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass69);
        boolean boolean72 = typeCircularBuffer40.put((java.lang.reflect.Type) wildcardClass69);
        boolean boolean73 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass69);
        boolean boolean74 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass69);
        boolean boolean75 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass69);
        java.lang.reflect.Type type76 = typeCircularBuffer17.get();
        boolean boolean77 = typeCircularBuffer1.put(type76);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(type18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertNull(type41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNull(type52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test1397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1397");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test1398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1398");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type5 = null;
        boolean boolean6 = typeCircularBuffer1.put(type5);
        boolean boolean7 = typeCircularBuffer1.isFull();
        boolean boolean8 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 10);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type13 = typeCircularBuffer12.get();
        boolean boolean14 = typeCircularBuffer12.isFull();
        java.lang.Class<?> wildcardClass15 = typeCircularBuffer12.getClass();
        boolean boolean16 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass15);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer10.getClass();
        boolean boolean18 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer1.get();
        java.lang.reflect.Type type20 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '#');
        boolean boolean23 = typeCircularBuffer22.isFull();
        java.lang.reflect.Type type24 = typeCircularBuffer22.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.GenericDeclaration> genericDeclarationCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.GenericDeclaration>((int) (byte) 1);
        java.lang.Class<?> wildcardClass27 = genericDeclarationCircularBuffer26.getClass();
        boolean boolean28 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(type13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(type19);
        org.junit.Assert.assertNull(type20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(type24);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    }

    @Test
    public void test1399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1399");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean10 = typeCircularBuffer9.isFull();
        boolean boolean11 = typeCircularBuffer9.isEmpty();
        java.lang.reflect.Type type12 = typeCircularBuffer9.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer19.getClass();
        boolean boolean21 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type22 = typeCircularBuffer16.get();
        boolean boolean23 = typeCircularBuffer14.put(type22);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer14.getClass();
        boolean boolean25 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean26 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass24);
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(type12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    }

    @Test
    public void test1400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1400");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type9 = typeCircularBuffer8.get();
        boolean boolean10 = typeCircularBuffer8.isFull();
        boolean boolean11 = typeCircularBuffer8.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass16);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer13.getClass();
        boolean boolean19 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass18);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean22 = typeCircularBuffer21.isEmpty();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass24);
        java.lang.Class<?> wildcardClass26 = typeCircularBuffer21.getClass();
        boolean boolean27 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass26);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer34.getClass();
        boolean boolean36 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass35);
        java.lang.reflect.Type type37 = typeCircularBuffer31.get();
        boolean boolean38 = typeCircularBuffer29.put(type37);
        java.lang.Class<?> wildcardClass39 = typeCircularBuffer29.getClass();
        boolean boolean40 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass39);
        java.lang.Class<?> wildcardClass41 = typeCircularBuffer8.getClass();
        boolean boolean42 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean43 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type46 = typeCircularBuffer45.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean51 = typeCircularBuffer50.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer53 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass54 = typeCircularBuffer53.getClass();
        boolean boolean55 = typeCircularBuffer50.put((java.lang.reflect.Type) wildcardClass54);
        java.lang.reflect.Type type56 = typeCircularBuffer50.get();
        boolean boolean57 = typeCircularBuffer48.put(type56);
        boolean boolean58 = typeCircularBuffer48.isFull();
        java.lang.reflect.Type type59 = typeCircularBuffer48.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer61 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean62 = typeCircularBuffer61.isEmpty();
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        boolean boolean65 = typeCircularBuffer61.put((java.lang.reflect.Type) wildcardClass64);
        boolean boolean66 = typeCircularBuffer48.put((java.lang.reflect.Type) wildcardClass64);
        boolean boolean67 = typeCircularBuffer45.put((java.lang.reflect.Type) wildcardClass64);
        java.lang.reflect.Type type68 = typeCircularBuffer45.get();
        boolean boolean69 = typeCircularBuffer45.isFull();
        java.lang.reflect.Type type70 = typeCircularBuffer45.get();
        java.lang.Class<?> wildcardClass71 = typeCircularBuffer45.getClass();
        boolean boolean72 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass71);
        java.lang.reflect.Type type73 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(type46);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(type68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(type70);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(type73);
    }

    @Test
    public void test1401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1401");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer6.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        boolean boolean13 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean16 = typeCircularBuffer15.isFull();
        boolean boolean17 = typeCircularBuffer15.isEmpty();
        java.lang.reflect.Type type18 = typeCircularBuffer15.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass26 = typeCircularBuffer25.getClass();
        boolean boolean27 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass26);
        java.lang.reflect.Type type28 = typeCircularBuffer22.get();
        boolean boolean29 = typeCircularBuffer20.put(type28);
        java.lang.Class<?> wildcardClass30 = typeCircularBuffer20.getClass();
        boolean boolean31 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass30);
        boolean boolean32 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass30);
        boolean boolean33 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type34 = typeCircularBuffer1.get();
        java.lang.reflect.Type type35 = typeCircularBuffer1.get();
        java.lang.reflect.Type type36 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(type18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNull(type35);
        org.junit.Assert.assertNull(type36);
    }

    @Test
    public void test1402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1402");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        boolean boolean8 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        boolean boolean10 = typeCircularBuffer1.isEmpty();
        boolean boolean11 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type12 = typeCircularBuffer1.get();
        boolean boolean13 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1403");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type5 = null;
        boolean boolean6 = typeCircularBuffer1.put(type5);
        boolean boolean7 = typeCircularBuffer1.isFull();
        boolean boolean8 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean13 = typeCircularBuffer12.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass16 = typeCircularBuffer15.getClass();
        boolean boolean17 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass16);
        java.lang.reflect.Type type18 = typeCircularBuffer12.get();
        boolean boolean19 = typeCircularBuffer10.put(type18);
        boolean boolean20 = typeCircularBuffer10.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass26 = typeCircularBuffer25.getClass();
        boolean boolean27 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass26);
        boolean boolean28 = typeCircularBuffer22.isFull();
        boolean boolean29 = typeCircularBuffer22.isFull();
        boolean boolean30 = typeCircularBuffer22.isFull();
        java.lang.Class<?> wildcardClass31 = typeCircularBuffer22.getClass();
        boolean boolean32 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass31);
        boolean boolean33 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass31);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean38 = typeCircularBuffer37.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass41 = typeCircularBuffer40.getClass();
        boolean boolean42 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass41);
        java.lang.reflect.Type type43 = typeCircularBuffer37.get();
        boolean boolean44 = typeCircularBuffer35.put(type43);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean49 = typeCircularBuffer48.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass52 = typeCircularBuffer51.getClass();
        boolean boolean53 = typeCircularBuffer48.put((java.lang.reflect.Type) wildcardClass52);
        java.lang.reflect.Type type54 = typeCircularBuffer48.get();
        boolean boolean55 = typeCircularBuffer46.put(type54);
        java.lang.Class<?> wildcardClass56 = typeCircularBuffer46.getClass();
        boolean boolean57 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass56);
        boolean boolean58 = typeCircularBuffer35.isFull();
        boolean boolean59 = typeCircularBuffer35.isFull();
        java.lang.reflect.Type type60 = typeCircularBuffer35.get();
        java.lang.Class<?> wildcardClass61 = type60.getClass();
        boolean boolean62 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(type43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test1404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1404");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type12 = typeCircularBuffer1.get();
        boolean boolean13 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type14 = typeCircularBuffer1.get();
        boolean boolean15 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(type14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test1405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1405");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        boolean boolean5 = typeCircularBuffer1.isFull();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        boolean boolean9 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test1406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1406");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.reflect.Type type11 = typeCircularBuffer1.get();
        boolean boolean12 = typeCircularBuffer1.isFull();
        boolean boolean13 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type14 = typeCircularBuffer1.get();
        boolean boolean15 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(type14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test1407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1407");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean4 = typeCircularBuffer3.isFull();
        boolean boolean5 = typeCircularBuffer3.isEmpty();
        java.lang.reflect.Type type6 = typeCircularBuffer3.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer10.get();
        boolean boolean17 = typeCircularBuffer8.put(type16);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer8.getClass();
        boolean boolean19 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass18);
        boolean boolean20 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass18);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type23 = typeCircularBuffer22.get();
        boolean boolean24 = typeCircularBuffer22.isFull();
        boolean boolean25 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean28 = typeCircularBuffer27.isEmpty();
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        boolean boolean31 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass30);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer27.getClass();
        boolean boolean33 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean37 = typeCircularBuffer36.isFull();
        boolean boolean38 = typeCircularBuffer36.isEmpty();
        java.lang.reflect.Type type39 = typeCircularBuffer36.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer46.getClass();
        boolean boolean48 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass47);
        java.lang.reflect.Type type49 = typeCircularBuffer43.get();
        boolean boolean50 = typeCircularBuffer41.put(type49);
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer41.getClass();
        boolean boolean52 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean53 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass51);
        java.lang.Class<?> wildcardClass54 = typeCircularBuffer22.getClass();
        boolean boolean55 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean56 = typeCircularBuffer1.isEmpty();
        boolean boolean57 = typeCircularBuffer1.isFull();
        boolean boolean58 = typeCircularBuffer1.isFull();
        boolean boolean59 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type60 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass61 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(type39);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test1408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1408");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isEmpty();
        boolean boolean12 = typeCircularBuffer1.isFull();
        boolean boolean13 = typeCircularBuffer1.isEmpty();
        boolean boolean14 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer19.getClass();
        boolean boolean21 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type22 = typeCircularBuffer16.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type25 = typeCircularBuffer24.get();
        boolean boolean26 = typeCircularBuffer24.isFull();
        boolean boolean27 = typeCircularBuffer24.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean30 = typeCircularBuffer29.isEmpty();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        boolean boolean33 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass32);
        java.lang.Class<?> wildcardClass34 = typeCircularBuffer29.getClass();
        boolean boolean35 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass34);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean38 = typeCircularBuffer37.isEmpty();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        boolean boolean41 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass40);
        java.lang.Class<?> wildcardClass42 = typeCircularBuffer37.getClass();
        boolean boolean43 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass42);
        boolean boolean44 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass42);
        boolean boolean45 = typeCircularBuffer16.isEmpty();
        boolean boolean46 = typeCircularBuffer16.isEmpty();
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer16.getClass();
        boolean boolean48 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass47);
        boolean boolean49 = typeCircularBuffer1.isFull();
        boolean boolean50 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNull(type25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test1409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1409");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        boolean boolean15 = typeCircularBuffer9.isFull();
        boolean boolean16 = typeCircularBuffer9.isFull();
        boolean boolean17 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean20 = typeCircularBuffer19.isEmpty();
        boolean boolean21 = typeCircularBuffer19.isFull();
        boolean boolean22 = typeCircularBuffer19.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean25 = typeCircularBuffer24.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer27.getClass();
        boolean boolean29 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.reflect.Type type30 = typeCircularBuffer24.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type33 = typeCircularBuffer32.get();
        boolean boolean34 = typeCircularBuffer32.isFull();
        boolean boolean35 = typeCircularBuffer32.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean38 = typeCircularBuffer37.isEmpty();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        boolean boolean41 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass40);
        java.lang.Class<?> wildcardClass42 = typeCircularBuffer37.getClass();
        boolean boolean43 = typeCircularBuffer32.put((java.lang.reflect.Type) wildcardClass42);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean46 = typeCircularBuffer45.isEmpty();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        boolean boolean49 = typeCircularBuffer45.put((java.lang.reflect.Type) wildcardClass48);
        java.lang.Class<?> wildcardClass50 = typeCircularBuffer45.getClass();
        boolean boolean51 = typeCircularBuffer32.put((java.lang.reflect.Type) wildcardClass50);
        boolean boolean52 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass50);
        boolean boolean53 = typeCircularBuffer24.isEmpty();
        boolean boolean54 = typeCircularBuffer24.isFull();
        java.lang.reflect.Type type55 = typeCircularBuffer24.get();
        boolean boolean56 = typeCircularBuffer24.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer58 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean59 = typeCircularBuffer58.isFull();
        boolean boolean60 = typeCircularBuffer58.isEmpty();
        java.lang.reflect.Type type61 = typeCircularBuffer58.get();
        boolean boolean62 = typeCircularBuffer58.isEmpty();
        boolean boolean63 = typeCircularBuffer58.isEmpty();
        java.lang.Class<?> wildcardClass64 = typeCircularBuffer58.getClass();
        boolean boolean65 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass64);
        boolean boolean66 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass64);
        boolean boolean67 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass64);
        java.lang.Class<?> wildcardClass68 = typeCircularBuffer9.getClass();
        boolean boolean69 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNull(type33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(type61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
    }

    @Test
    public void test1410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1410");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        boolean boolean7 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer10.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        boolean boolean13 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean16 = typeCircularBuffer15.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer18.getClass();
        boolean boolean20 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass19);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer15.getClass();
        boolean boolean22 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type24 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer31.getClass();
        boolean boolean33 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass32);
        java.lang.reflect.Type type34 = typeCircularBuffer28.get();
        boolean boolean35 = typeCircularBuffer26.put(type34);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean38 = typeCircularBuffer37.isFull();
        boolean boolean39 = typeCircularBuffer37.isEmpty();
        boolean boolean40 = typeCircularBuffer37.isFull();
        java.lang.Class<?> wildcardClass41 = typeCircularBuffer37.getClass();
        boolean boolean42 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass41);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type45 = typeCircularBuffer44.get();
        boolean boolean46 = typeCircularBuffer44.isFull();
        boolean boolean47 = typeCircularBuffer44.isFull();
        boolean boolean48 = typeCircularBuffer44.isEmpty();
        java.lang.reflect.Type type49 = typeCircularBuffer44.get();
        boolean boolean50 = typeCircularBuffer44.isEmpty();
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer44.getClass();
        boolean boolean52 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass51);
        java.lang.reflect.Type type53 = typeCircularBuffer26.get();
        boolean boolean54 = typeCircularBuffer1.put(type53);
        boolean boolean55 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(type45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(type49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
    }

    @Test
    public void test1411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1411");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.reflect.Type type11 = typeCircularBuffer1.get();
        boolean boolean12 = typeCircularBuffer1.isFull();
        boolean boolean13 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 10);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type18 = typeCircularBuffer17.get();
        boolean boolean19 = typeCircularBuffer17.isFull();
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer17.getClass();
        boolean boolean21 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean22 = typeCircularBuffer15.isFull();
        java.lang.Class<?> wildcardClass23 = typeCircularBuffer15.getClass();
        boolean boolean24 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass23);
        boolean boolean25 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(type18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test1412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1412");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer6.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.reflect.Type type13 = typeCircularBuffer1.get();
        boolean boolean14 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type17 = typeCircularBuffer16.get();
        boolean boolean18 = typeCircularBuffer16.isFull();
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer16.getClass();
        boolean boolean20 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass19);
        java.lang.reflect.Type type21 = typeCircularBuffer1.get();
        boolean boolean22 = typeCircularBuffer1.isFull();
        boolean boolean23 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(type17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test1413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1413");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean4 = typeCircularBuffer3.isFull();
        boolean boolean5 = typeCircularBuffer3.isEmpty();
        java.lang.reflect.Type type6 = typeCircularBuffer3.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer10.get();
        boolean boolean17 = typeCircularBuffer8.put(type16);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer8.getClass();
        boolean boolean19 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass18);
        boolean boolean20 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass18);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type23 = typeCircularBuffer22.get();
        boolean boolean24 = typeCircularBuffer22.isFull();
        boolean boolean25 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean28 = typeCircularBuffer27.isEmpty();
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        boolean boolean31 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass30);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer27.getClass();
        boolean boolean33 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean37 = typeCircularBuffer36.isFull();
        boolean boolean38 = typeCircularBuffer36.isEmpty();
        java.lang.reflect.Type type39 = typeCircularBuffer36.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer46.getClass();
        boolean boolean48 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass47);
        java.lang.reflect.Type type49 = typeCircularBuffer43.get();
        boolean boolean50 = typeCircularBuffer41.put(type49);
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer41.getClass();
        boolean boolean52 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean53 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass51);
        java.lang.Class<?> wildcardClass54 = typeCircularBuffer22.getClass();
        boolean boolean55 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean56 = typeCircularBuffer1.isEmpty();
        boolean boolean57 = typeCircularBuffer1.isFull();
        boolean boolean58 = typeCircularBuffer1.isFull();
        boolean boolean59 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type60 = typeCircularBuffer1.get();
        java.lang.reflect.Type type61 = typeCircularBuffer1.get();
        boolean boolean62 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass63 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(type39);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test1414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1414");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 100);
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
    }

    @Test
    public void test1415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1415");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer17.getClass();
        boolean boolean19 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass18);
        java.lang.reflect.Type type20 = typeCircularBuffer14.get();
        boolean boolean21 = typeCircularBuffer12.put(type20);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer12.getClass();
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass22);
        boolean boolean24 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type25 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 0);
        boolean boolean28 = typeCircularBuffer27.isFull();
        java.lang.reflect.Type type29 = typeCircularBuffer27.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean32 = typeCircularBuffer31.isFull();
        java.lang.reflect.Type type33 = typeCircularBuffer31.get();
        boolean boolean34 = typeCircularBuffer31.isFull();
        java.lang.reflect.Type type35 = typeCircularBuffer31.get();
        boolean boolean36 = typeCircularBuffer31.isFull();
        boolean boolean37 = typeCircularBuffer31.isEmpty();
        boolean boolean38 = typeCircularBuffer31.isFull();
        java.lang.Class<?> wildcardClass39 = typeCircularBuffer31.getClass();
        boolean boolean40 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass39);
        boolean boolean41 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass39);
        java.lang.reflect.Type type42 = typeCircularBuffer1.get();
        boolean boolean43 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(type29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(type33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(type35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test1416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1416");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean9 = typeCircularBuffer8.isEmpty();
        java.lang.reflect.Type type10 = typeCircularBuffer8.get();
        java.lang.reflect.Type type11 = typeCircularBuffer8.get();
        java.lang.reflect.Type type12 = typeCircularBuffer8.get();
        java.lang.reflect.Type type13 = typeCircularBuffer8.get();
        boolean boolean14 = typeCircularBuffer8.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) ' ');
        java.lang.reflect.Type type17 = typeCircularBuffer16.get();
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer16.getClass();
        boolean boolean19 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass18);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean24 = typeCircularBuffer23.isFull();
        boolean boolean25 = typeCircularBuffer23.isEmpty();
        java.lang.reflect.Type type26 = typeCircularBuffer23.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean31 = typeCircularBuffer30.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass34 = typeCircularBuffer33.getClass();
        boolean boolean35 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass34);
        java.lang.reflect.Type type36 = typeCircularBuffer30.get();
        boolean boolean37 = typeCircularBuffer28.put(type36);
        java.lang.Class<?> wildcardClass38 = typeCircularBuffer28.getClass();
        boolean boolean39 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass38);
        boolean boolean40 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass38);
        boolean boolean41 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass38);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.CharSequence> charSequenceCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.CharSequence>((int) (short) 100);
        java.lang.Class<?> wildcardClass44 = charSequenceCircularBuffer43.getClass();
        boolean boolean45 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean46 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass44);
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertNull(type11);
        org.junit.Assert.assertNull(type12);
        org.junit.Assert.assertNull(type13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(type17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(type26);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test1417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1417");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean24 = typeCircularBuffer1.isEmpty();
        boolean boolean25 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type26 = typeCircularBuffer1.get();
        boolean boolean27 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test1418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1418");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        boolean boolean9 = typeCircularBuffer1.isEmpty();
        boolean boolean10 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type11 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(type11);
    }

    @Test
    public void test1419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1419");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean5 = typeCircularBuffer4.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass8 = typeCircularBuffer7.getClass();
        boolean boolean9 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass8);
        java.lang.reflect.Type type10 = typeCircularBuffer4.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type13 = typeCircularBuffer12.get();
        boolean boolean14 = typeCircularBuffer12.isFull();
        boolean boolean15 = typeCircularBuffer12.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        boolean boolean21 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer17.getClass();
        boolean boolean23 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass22);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean26 = typeCircularBuffer25.isEmpty();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        boolean boolean29 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.Class<?> wildcardClass30 = typeCircularBuffer25.getClass();
        boolean boolean31 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass30);
        boolean boolean32 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass30);
        java.lang.Class<?> wildcardClass33 = typeCircularBuffer4.getClass();
        boolean boolean34 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass33);
        java.lang.reflect.Type type35 = typeCircularBuffer1.get();
        java.lang.reflect.Type type36 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNull(type13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNull(type36);
    }

    @Test
    public void test1420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1420");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer5 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean6 = typeCircularBuffer5.isEmpty();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        boolean boolean9 = typeCircularBuffer5.put((java.lang.reflect.Type) wildcardClass8);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer5.getClass();
        boolean boolean11 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass10);
        boolean boolean12 = typeCircularBuffer1.isEmpty();
        boolean boolean13 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type14 = typeCircularBuffer1.get();
        java.lang.reflect.Type type15 = typeCircularBuffer1.get();
        boolean boolean16 = typeCircularBuffer1.isEmpty();
        boolean boolean17 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNull(type15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test1421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1421");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type5 = typeCircularBuffer4.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        java.lang.reflect.Type type15 = typeCircularBuffer9.get();
        boolean boolean16 = typeCircularBuffer7.put(type15);
        boolean boolean17 = typeCircularBuffer7.isFull();
        java.lang.reflect.Type type18 = typeCircularBuffer7.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean21 = typeCircularBuffer20.isEmpty();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        boolean boolean24 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass23);
        boolean boolean25 = typeCircularBuffer7.put((java.lang.reflect.Type) wildcardClass23);
        boolean boolean26 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass23);
        boolean boolean27 = typeCircularBuffer4.isEmpty();
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer4.getClass();
        boolean boolean29 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass28);
        boolean boolean30 = typeCircularBuffer1.isEmpty();
        boolean boolean31 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test1422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1422");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean9 = typeCircularBuffer8.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass12 = typeCircularBuffer11.getClass();
        boolean boolean13 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass12);
        java.lang.reflect.Type type14 = null;
        boolean boolean15 = typeCircularBuffer8.put(type14);
        java.lang.Class<?> wildcardClass16 = typeCircularBuffer8.getClass();
        boolean boolean17 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test1423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1423");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer10.get();
        boolean boolean17 = typeCircularBuffer8.put(type16);
        boolean boolean18 = typeCircularBuffer8.isFull();
        java.lang.reflect.Type type19 = typeCircularBuffer8.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean22 = typeCircularBuffer21.isEmpty();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean26 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean27 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean28 = typeCircularBuffer1.isFull();
        boolean boolean29 = typeCircularBuffer1.isFull();
        boolean boolean30 = typeCircularBuffer1.isEmpty();
        boolean boolean31 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type32 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean37 = typeCircularBuffer36.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass40 = typeCircularBuffer39.getClass();
        boolean boolean41 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass40);
        java.lang.reflect.Type type42 = typeCircularBuffer36.get();
        boolean boolean43 = typeCircularBuffer34.put(type42);
        boolean boolean44 = typeCircularBuffer34.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean47 = typeCircularBuffer46.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer49 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass50 = typeCircularBuffer49.getClass();
        boolean boolean51 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass50);
        java.lang.reflect.Type type52 = typeCircularBuffer46.get();
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        boolean boolean55 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass54);
        boolean boolean56 = typeCircularBuffer34.put((java.lang.reflect.Type) wildcardClass54);
        java.lang.reflect.Type type57 = typeCircularBuffer34.get();
        boolean boolean58 = typeCircularBuffer1.put(type57);
        java.lang.reflect.Type type59 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(type59);
    }

    @Test
    public void test1424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1424");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isEmpty();
        boolean boolean12 = typeCircularBuffer1.isFull();
        boolean boolean13 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type14 = typeCircularBuffer1.get();
        boolean boolean15 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean20 = typeCircularBuffer19.isFull();
        java.lang.reflect.Type type21 = typeCircularBuffer19.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean24 = typeCircularBuffer23.isEmpty();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        boolean boolean27 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass26);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer23.getClass();
        boolean boolean29 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass28);
        boolean boolean30 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass28);
        boolean boolean31 = typeCircularBuffer17.isEmpty();
        boolean boolean32 = typeCircularBuffer17.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean35 = typeCircularBuffer34.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass38 = typeCircularBuffer37.getClass();
        boolean boolean39 = typeCircularBuffer34.put((java.lang.reflect.Type) wildcardClass38);
        boolean boolean40 = typeCircularBuffer34.isFull();
        java.lang.reflect.Type type41 = typeCircularBuffer34.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer43.getClass();
        boolean boolean45 = typeCircularBuffer34.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean46 = typeCircularBuffer34.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean49 = typeCircularBuffer48.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass52 = typeCircularBuffer51.getClass();
        boolean boolean53 = typeCircularBuffer48.put((java.lang.reflect.Type) wildcardClass52);
        java.lang.Class<?> wildcardClass54 = typeCircularBuffer48.getClass();
        boolean boolean55 = typeCircularBuffer34.put((java.lang.reflect.Type) wildcardClass54);
        java.lang.reflect.Type type56 = typeCircularBuffer34.get();
        boolean boolean57 = typeCircularBuffer17.put(type56);
        boolean boolean58 = typeCircularBuffer1.put(type56);
        boolean boolean59 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(type21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(type56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
    }

    @Test
    public void test1425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1425");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 0);
        java.lang.Class<?> wildcardClass2 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test1426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1426");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test1427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1427");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 0);
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test1428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1428");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer10.get();
        boolean boolean17 = typeCircularBuffer8.put(type16);
        boolean boolean18 = typeCircularBuffer8.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean21 = typeCircularBuffer20.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer23.getClass();
        boolean boolean25 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass24);
        java.lang.reflect.Type type26 = typeCircularBuffer20.get();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        boolean boolean29 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass28);
        boolean boolean30 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass28);
        boolean boolean31 = typeCircularBuffer8.isEmpty();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        boolean boolean34 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass33);
        boolean boolean35 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass33);
        boolean boolean36 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean39 = typeCircularBuffer38.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass42 = typeCircularBuffer41.getClass();
        boolean boolean43 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass42);
        java.lang.reflect.Type type44 = typeCircularBuffer38.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type47 = typeCircularBuffer46.get();
        boolean boolean48 = typeCircularBuffer46.isFull();
        boolean boolean49 = typeCircularBuffer46.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean52 = typeCircularBuffer51.isEmpty();
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        boolean boolean55 = typeCircularBuffer51.put((java.lang.reflect.Type) wildcardClass54);
        java.lang.Class<?> wildcardClass56 = typeCircularBuffer51.getClass();
        boolean boolean57 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass56);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer59 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean60 = typeCircularBuffer59.isEmpty();
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        boolean boolean63 = typeCircularBuffer59.put((java.lang.reflect.Type) wildcardClass62);
        java.lang.Class<?> wildcardClass64 = typeCircularBuffer59.getClass();
        boolean boolean65 = typeCircularBuffer46.put((java.lang.reflect.Type) wildcardClass64);
        boolean boolean66 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass64);
        java.lang.reflect.Type type67 = typeCircularBuffer38.get();
        java.lang.reflect.Type type68 = typeCircularBuffer38.get();
        java.lang.Class<?> wildcardClass69 = typeCircularBuffer38.getClass();
        boolean boolean70 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass69);
        boolean boolean71 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNull(type47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertNull(type68);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test1429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1429");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type10 = typeCircularBuffer9.get();
        boolean boolean11 = typeCircularBuffer9.isFull();
        boolean boolean12 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer14.getClass();
        boolean boolean20 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass19);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        boolean boolean26 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer22.getClass();
        boolean boolean28 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass27);
        java.lang.reflect.Type type30 = typeCircularBuffer1.get();
        java.lang.reflect.Type type31 = typeCircularBuffer1.get();
        boolean boolean32 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type33 = typeCircularBuffer1.get();
        java.lang.reflect.Type type34 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type37 = typeCircularBuffer36.get();
        boolean boolean38 = typeCircularBuffer36.isFull();
        boolean boolean39 = typeCircularBuffer36.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean42 = typeCircularBuffer41.isEmpty();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        boolean boolean45 = typeCircularBuffer41.put((java.lang.reflect.Type) wildcardClass44);
        java.lang.Class<?> wildcardClass46 = typeCircularBuffer41.getClass();
        boolean boolean47 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass46);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer49 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean50 = typeCircularBuffer49.isEmpty();
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        boolean boolean53 = typeCircularBuffer49.put((java.lang.reflect.Type) wildcardClass52);
        java.lang.Class<?> wildcardClass54 = typeCircularBuffer49.getClass();
        boolean boolean55 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass54);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer57 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer59 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean60 = typeCircularBuffer59.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer62 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass63 = typeCircularBuffer62.getClass();
        boolean boolean64 = typeCircularBuffer59.put((java.lang.reflect.Type) wildcardClass63);
        java.lang.reflect.Type type65 = typeCircularBuffer59.get();
        boolean boolean66 = typeCircularBuffer57.put(type65);
        java.lang.Class<?> wildcardClass67 = typeCircularBuffer57.getClass();
        boolean boolean68 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass67);
        boolean boolean69 = typeCircularBuffer36.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer71 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type72 = typeCircularBuffer71.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer74 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer76 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean77 = typeCircularBuffer76.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer79 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass80 = typeCircularBuffer79.getClass();
        boolean boolean81 = typeCircularBuffer76.put((java.lang.reflect.Type) wildcardClass80);
        java.lang.reflect.Type type82 = typeCircularBuffer76.get();
        boolean boolean83 = typeCircularBuffer74.put(type82);
        boolean boolean84 = typeCircularBuffer74.isFull();
        java.lang.reflect.Type type85 = typeCircularBuffer74.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer87 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean88 = typeCircularBuffer87.isEmpty();
        java.lang.Object obj89 = new java.lang.Object();
        java.lang.Class<?> wildcardClass90 = obj89.getClass();
        boolean boolean91 = typeCircularBuffer87.put((java.lang.reflect.Type) wildcardClass90);
        boolean boolean92 = typeCircularBuffer74.put((java.lang.reflect.Type) wildcardClass90);
        boolean boolean93 = typeCircularBuffer71.put((java.lang.reflect.Type) wildcardClass90);
        java.lang.reflect.Type type94 = typeCircularBuffer71.get();
        boolean boolean95 = typeCircularBuffer71.isEmpty();
        java.lang.reflect.Type type96 = typeCircularBuffer71.get();
        java.lang.Class<?> wildcardClass97 = typeCircularBuffer71.getClass();
        boolean boolean98 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass97);
        boolean boolean99 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass97);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNull(type31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(type33);
        org.junit.Assert.assertNull(type34);
        org.junit.Assert.assertNull(type37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNull(type72);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(type82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(type85);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertNotNull(type94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertNull(type96);
        org.junit.Assert.assertNotNull(wildcardClass97);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + true + "'", boolean99 == true);
    }

    @Test
    public void test1430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1430");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass6 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test1431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1431");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        java.lang.reflect.Type type11 = typeCircularBuffer1.get();
        java.lang.reflect.Type type12 = typeCircularBuffer1.get();
        boolean boolean13 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test1432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1432");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type12 = typeCircularBuffer1.get();
        java.lang.reflect.Type type13 = typeCircularBuffer1.get();
        boolean boolean14 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer19.getClass();
        boolean boolean21 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type22 = typeCircularBuffer16.get();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean26 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean27 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNull(type13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test1433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1433");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean16 = typeCircularBuffer15.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer18.getClass();
        boolean boolean20 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass19);
        java.lang.reflect.Type type21 = typeCircularBuffer15.get();
        boolean boolean22 = typeCircularBuffer13.put(type21);
        boolean boolean23 = typeCircularBuffer13.isFull();
        java.lang.reflect.Type type24 = typeCircularBuffer13.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean27 = typeCircularBuffer26.isEmpty();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        boolean boolean30 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass29);
        boolean boolean31 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass29);
        boolean boolean32 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass29);
        boolean boolean33 = typeCircularBuffer6.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean36 = typeCircularBuffer35.isFull();
        boolean boolean37 = typeCircularBuffer35.isEmpty();
        boolean boolean38 = typeCircularBuffer35.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean41 = typeCircularBuffer40.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer43.getClass();
        boolean boolean45 = typeCircularBuffer40.put((java.lang.reflect.Type) wildcardClass44);
        java.lang.reflect.Type type46 = typeCircularBuffer40.get();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        boolean boolean49 = typeCircularBuffer40.put((java.lang.reflect.Type) wildcardClass48);
        boolean boolean50 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass48);
        boolean boolean51 = typeCircularBuffer35.isFull();
        java.lang.reflect.Type type52 = typeCircularBuffer35.get();
        boolean boolean53 = typeCircularBuffer6.put(type52);
        boolean boolean54 = typeCircularBuffer1.put(type52);
        boolean boolean55 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass56 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(type52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test1434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1434");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type12 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type15 = typeCircularBuffer14.get();
        boolean boolean16 = typeCircularBuffer14.isFull();
        java.lang.reflect.Type type17 = typeCircularBuffer14.get();
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer14.getClass();
        boolean boolean19 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass18);
        boolean boolean20 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNull(type15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(type17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test1435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1435");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean8 = typeCircularBuffer7.isEmpty();
        java.lang.reflect.Type type9 = typeCircularBuffer7.get();
        java.lang.reflect.Type type10 = typeCircularBuffer7.get();
        java.lang.reflect.Type type11 = typeCircularBuffer7.get();
        boolean boolean12 = typeCircularBuffer7.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean15 = typeCircularBuffer14.isFull();
        java.lang.reflect.Type type16 = typeCircularBuffer14.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean19 = typeCircularBuffer18.isEmpty();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.Class<?> wildcardClass23 = typeCircularBuffer18.getClass();
        boolean boolean24 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass23);
        boolean boolean25 = typeCircularBuffer7.put((java.lang.reflect.Type) wildcardClass23);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '#');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer34.getClass();
        boolean boolean36 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass35);
        java.lang.reflect.Type type37 = typeCircularBuffer31.get();
        boolean boolean38 = typeCircularBuffer29.put(type37);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean43 = typeCircularBuffer42.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass46 = typeCircularBuffer45.getClass();
        boolean boolean47 = typeCircularBuffer42.put((java.lang.reflect.Type) wildcardClass46);
        java.lang.reflect.Type type48 = typeCircularBuffer42.get();
        boolean boolean49 = typeCircularBuffer40.put(type48);
        java.lang.Class<?> wildcardClass50 = typeCircularBuffer40.getClass();
        boolean boolean51 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass50);
        boolean boolean52 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass50);
        boolean boolean53 = typeCircularBuffer7.put((java.lang.reflect.Type) wildcardClass50);
        boolean boolean54 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass50);
        java.lang.reflect.Type type55 = typeCircularBuffer1.get();
        boolean boolean56 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer58 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer60 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean61 = typeCircularBuffer60.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer63 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass64 = typeCircularBuffer63.getClass();
        boolean boolean65 = typeCircularBuffer60.put((java.lang.reflect.Type) wildcardClass64);
        java.lang.reflect.Type type66 = typeCircularBuffer60.get();
        boolean boolean67 = typeCircularBuffer58.put(type66);
        boolean boolean68 = typeCircularBuffer58.isFull();
        java.lang.reflect.Type type69 = typeCircularBuffer58.get();
        boolean boolean70 = typeCircularBuffer58.isEmpty();
        boolean boolean71 = typeCircularBuffer58.isEmpty();
        boolean boolean72 = typeCircularBuffer58.isEmpty();
        java.lang.Class<?> wildcardClass73 = typeCircularBuffer58.getClass();
        boolean boolean74 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass73);
        java.lang.reflect.Type type75 = typeCircularBuffer1.get();
        boolean boolean76 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertNull(type11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(type16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(type66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(type75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
    }

    @Test
    public void test1436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1436");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test1437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1437");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass10);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer19.getClass();
        boolean boolean21 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type22 = typeCircularBuffer16.get();
        java.lang.Class<?> wildcardClass23 = typeCircularBuffer16.getClass();
        boolean boolean24 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass23);
        boolean boolean25 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass23);
        boolean boolean26 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type27 = typeCircularBuffer1.get();
        boolean boolean28 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type29 = typeCircularBuffer1.get();
        boolean boolean30 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type31 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(type29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(type31);
    }

    @Test
    public void test1438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1438");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        boolean boolean5 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass8 = typeCircularBuffer7.getClass();
        boolean boolean9 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass8);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean12 = typeCircularBuffer11.isFull();
        boolean boolean13 = typeCircularBuffer11.isEmpty();
        boolean boolean14 = typeCircularBuffer11.isFull();
        java.lang.Class<?> wildcardClass15 = typeCircularBuffer11.getClass();
        boolean boolean16 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass15);
        java.lang.reflect.Type type17 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean22 = typeCircularBuffer21.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass25 = typeCircularBuffer24.getClass();
        boolean boolean26 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.reflect.Type type27 = typeCircularBuffer21.get();
        boolean boolean28 = typeCircularBuffer19.put(type27);
        boolean boolean29 = typeCircularBuffer19.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer34.getClass();
        boolean boolean36 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass35);
        java.lang.reflect.Type type37 = typeCircularBuffer31.get();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        boolean boolean40 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass39);
        boolean boolean41 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass39);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer46.getClass();
        boolean boolean48 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass47);
        java.lang.reflect.Type type49 = typeCircularBuffer43.get();
        boolean boolean50 = typeCircularBuffer19.put(type49);
        java.lang.reflect.Type type51 = typeCircularBuffer19.get();
        boolean boolean52 = typeCircularBuffer1.put(type51);
        boolean boolean53 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type54 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer56 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer58 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean59 = typeCircularBuffer58.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer61 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass62 = typeCircularBuffer61.getClass();
        boolean boolean63 = typeCircularBuffer58.put((java.lang.reflect.Type) wildcardClass62);
        java.lang.reflect.Type type64 = typeCircularBuffer58.get();
        boolean boolean65 = typeCircularBuffer56.put(type64);
        boolean boolean66 = typeCircularBuffer56.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer68 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 1);
        boolean boolean69 = typeCircularBuffer68.isEmpty();
        boolean boolean70 = typeCircularBuffer68.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer72 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type73 = typeCircularBuffer72.get();
        boolean boolean74 = typeCircularBuffer72.isFull();
        boolean boolean75 = typeCircularBuffer72.isFull();
        boolean boolean76 = typeCircularBuffer72.isEmpty();
        java.lang.reflect.Type type77 = typeCircularBuffer72.get();
        java.lang.Class<?> wildcardClass78 = typeCircularBuffer72.getClass();
        boolean boolean79 = typeCircularBuffer68.put((java.lang.reflect.Type) wildcardClass78);
        boolean boolean80 = typeCircularBuffer56.put((java.lang.reflect.Type) wildcardClass78);
        java.lang.reflect.Type type81 = typeCircularBuffer56.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer83 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type84 = typeCircularBuffer83.get();
        boolean boolean85 = typeCircularBuffer83.isFull();
        boolean boolean86 = typeCircularBuffer83.isEmpty();
        java.lang.Class<?> wildcardClass87 = typeCircularBuffer83.getClass();
        boolean boolean88 = typeCircularBuffer56.put((java.lang.reflect.Type) wildcardClass87);
        boolean boolean89 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass87);
        boolean boolean90 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type91 = typeCircularBuffer1.get();
        boolean boolean92 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(type73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNull(type77);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(type81);
        org.junit.Assert.assertNull(type84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(type91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test1439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1439");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean9 = typeCircularBuffer8.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass12 = typeCircularBuffer11.getClass();
        boolean boolean13 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass12);
        java.lang.reflect.Type type14 = typeCircularBuffer8.get();
        boolean boolean15 = typeCircularBuffer6.put(type14);
        java.lang.Class<?> wildcardClass16 = typeCircularBuffer6.getClass();
        boolean boolean17 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass16);
        boolean boolean18 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type19 = typeCircularBuffer1.get();
        boolean boolean20 = typeCircularBuffer1.isFull();
        boolean boolean21 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test1440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1440");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        boolean boolean8 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        java.lang.reflect.Type type10 = typeCircularBuffer1.get();
        boolean boolean11 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type12 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(type12);
    }

    @Test
    public void test1441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1441");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer6.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer14.getClass();
        boolean boolean20 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass19);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass26 = typeCircularBuffer25.getClass();
        boolean boolean27 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass26);
        boolean boolean28 = typeCircularBuffer22.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.GenericDeclaration> genericDeclarationCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.GenericDeclaration>((int) (short) 100);
        java.lang.Class<?> wildcardClass31 = genericDeclarationCircularBuffer30.getClass();
        boolean boolean32 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass31);
        boolean boolean33 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass31);
        boolean boolean34 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test1442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1442");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer5 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type6 = typeCircularBuffer5.get();
        boolean boolean7 = typeCircularBuffer5.isFull();
        boolean boolean8 = typeCircularBuffer5.isFull();
        boolean boolean9 = typeCircularBuffer5.isEmpty();
        java.lang.reflect.Type type10 = typeCircularBuffer5.get();
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer5.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        boolean boolean13 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean18 = typeCircularBuffer17.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass21 = typeCircularBuffer20.getClass();
        boolean boolean22 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type23 = typeCircularBuffer17.get();
        boolean boolean24 = typeCircularBuffer15.put(type23);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean27 = typeCircularBuffer26.isFull();
        boolean boolean28 = typeCircularBuffer26.isEmpty();
        boolean boolean29 = typeCircularBuffer26.isFull();
        java.lang.Class<?> wildcardClass30 = typeCircularBuffer26.getClass();
        boolean boolean31 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass30);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer15.getClass();
        boolean boolean33 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test1443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1443");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type9 = typeCircularBuffer8.get();
        boolean boolean10 = typeCircularBuffer8.isFull();
        boolean boolean11 = typeCircularBuffer8.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        boolean boolean17 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass16);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer13.getClass();
        boolean boolean19 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass18);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean22 = typeCircularBuffer21.isEmpty();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass24);
        java.lang.Class<?> wildcardClass26 = typeCircularBuffer21.getClass();
        boolean boolean27 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass26);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer34.getClass();
        boolean boolean36 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass35);
        java.lang.reflect.Type type37 = typeCircularBuffer31.get();
        boolean boolean38 = typeCircularBuffer29.put(type37);
        java.lang.Class<?> wildcardClass39 = typeCircularBuffer29.getClass();
        boolean boolean40 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass39);
        java.lang.Class<?> wildcardClass41 = typeCircularBuffer8.getClass();
        boolean boolean42 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean43 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type44 = typeCircularBuffer1.get();
        boolean boolean45 = typeCircularBuffer1.isFull();
        boolean boolean46 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean49 = typeCircularBuffer48.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass52 = typeCircularBuffer51.getClass();
        boolean boolean53 = typeCircularBuffer48.put((java.lang.reflect.Type) wildcardClass52);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer55 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer57 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean58 = typeCircularBuffer57.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer60 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass61 = typeCircularBuffer60.getClass();
        boolean boolean62 = typeCircularBuffer57.put((java.lang.reflect.Type) wildcardClass61);
        java.lang.reflect.Type type63 = typeCircularBuffer57.get();
        boolean boolean64 = typeCircularBuffer55.put(type63);
        boolean boolean65 = typeCircularBuffer55.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer67 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean68 = typeCircularBuffer67.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer70 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass71 = typeCircularBuffer70.getClass();
        boolean boolean72 = typeCircularBuffer67.put((java.lang.reflect.Type) wildcardClass71);
        java.lang.reflect.Type type73 = typeCircularBuffer67.get();
        java.lang.Object obj74 = new java.lang.Object();
        java.lang.Class<?> wildcardClass75 = obj74.getClass();
        boolean boolean76 = typeCircularBuffer67.put((java.lang.reflect.Type) wildcardClass75);
        boolean boolean77 = typeCircularBuffer55.put((java.lang.reflect.Type) wildcardClass75);
        boolean boolean78 = typeCircularBuffer55.isEmpty();
        java.lang.Object obj79 = new java.lang.Object();
        java.lang.Class<?> wildcardClass80 = obj79.getClass();
        boolean boolean81 = typeCircularBuffer55.put((java.lang.reflect.Type) wildcardClass80);
        boolean boolean82 = typeCircularBuffer48.put((java.lang.reflect.Type) wildcardClass80);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer84 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean85 = typeCircularBuffer84.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer87 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass88 = typeCircularBuffer87.getClass();
        boolean boolean89 = typeCircularBuffer84.put((java.lang.reflect.Type) wildcardClass88);
        java.lang.reflect.Type type90 = typeCircularBuffer84.get();
        java.lang.Class<?> wildcardClass91 = typeCircularBuffer84.getClass();
        boolean boolean92 = typeCircularBuffer48.put((java.lang.reflect.Type) wildcardClass91);
        java.lang.Class<?> wildcardClass93 = typeCircularBuffer48.getClass();
        boolean boolean94 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass93);
        boolean boolean95 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass96 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(type63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(type73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(type90);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1444");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        java.lang.reflect.Type type12 = typeCircularBuffer6.get();
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        boolean boolean15 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass14);
        boolean boolean16 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass14);
        boolean boolean17 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean22 = typeCircularBuffer21.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass25 = typeCircularBuffer24.getClass();
        boolean boolean26 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.reflect.Type type27 = typeCircularBuffer21.get();
        boolean boolean28 = typeCircularBuffer19.put(type27);
        boolean boolean29 = typeCircularBuffer19.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer34.getClass();
        boolean boolean36 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass35);
        java.lang.reflect.Type type37 = typeCircularBuffer31.get();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        boolean boolean40 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass39);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean43 = typeCircularBuffer42.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass46 = typeCircularBuffer45.getClass();
        boolean boolean47 = typeCircularBuffer42.put((java.lang.reflect.Type) wildcardClass46);
        java.lang.Class<?> wildcardClass48 = typeCircularBuffer42.getClass();
        boolean boolean49 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass48);
        boolean boolean50 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass48);
        boolean boolean51 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass48);
        boolean boolean52 = typeCircularBuffer1.isEmpty();
        boolean boolean53 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type54 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass55 = type54.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(type54);
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test1445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1445");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        boolean boolean12 = typeCircularBuffer6.isFull();
        java.lang.reflect.Type type13 = typeCircularBuffer6.get();
        boolean boolean14 = typeCircularBuffer1.put(type13);
        java.lang.reflect.Type type15 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass16 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test1446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1446");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) 'a');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass4 = typeCircularBuffer3.getClass();
        boolean boolean5 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass4);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        java.lang.reflect.Type type15 = typeCircularBuffer9.get();
        boolean boolean16 = typeCircularBuffer7.put(type15);
        boolean boolean17 = typeCircularBuffer7.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean20 = typeCircularBuffer19.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass23 = typeCircularBuffer22.getClass();
        boolean boolean24 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass23);
        java.lang.reflect.Type type25 = typeCircularBuffer19.get();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        boolean boolean28 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer7.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean30 = typeCircularBuffer7.isEmpty();
        java.lang.reflect.Type type31 = typeCircularBuffer7.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean34 = typeCircularBuffer33.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass37 = typeCircularBuffer36.getClass();
        boolean boolean38 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass37);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean43 = typeCircularBuffer42.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass46 = typeCircularBuffer45.getClass();
        boolean boolean47 = typeCircularBuffer42.put((java.lang.reflect.Type) wildcardClass46);
        java.lang.reflect.Type type48 = typeCircularBuffer42.get();
        boolean boolean49 = typeCircularBuffer40.put(type48);
        boolean boolean50 = typeCircularBuffer40.isFull();
        java.lang.reflect.Type type51 = typeCircularBuffer40.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer53 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean54 = typeCircularBuffer53.isEmpty();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        boolean boolean57 = typeCircularBuffer53.put((java.lang.reflect.Type) wildcardClass56);
        boolean boolean58 = typeCircularBuffer40.put((java.lang.reflect.Type) wildcardClass56);
        boolean boolean59 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass56);
        boolean boolean60 = typeCircularBuffer33.isFull();
        boolean boolean61 = typeCircularBuffer33.isFull();
        java.lang.Class<?> wildcardClass62 = typeCircularBuffer33.getClass();
        boolean boolean63 = typeCircularBuffer7.put((java.lang.reflect.Type) wildcardClass62);
        java.lang.reflect.Type type64 = typeCircularBuffer7.get();
        java.lang.Class<?> wildcardClass65 = type64.getClass();
        boolean boolean66 = typeCircularBuffer1.put(type64);
        boolean boolean67 = typeCircularBuffer1.isFull();
        boolean boolean68 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type69 = typeCircularBuffer1.get();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(type69);
    }

    @Test
    public void test1447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1447");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer6.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.reflect.Type type13 = typeCircularBuffer1.get();
        boolean boolean14 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer19.getClass();
        boolean boolean21 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean22 = typeCircularBuffer16.isEmpty();
        java.lang.reflect.Type type23 = typeCircularBuffer16.get();
        boolean boolean24 = typeCircularBuffer1.put(type23);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type27 = typeCircularBuffer26.get();
        boolean boolean28 = typeCircularBuffer26.isFull();
        boolean boolean29 = typeCircularBuffer26.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        boolean boolean35 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass34);
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer31.getClass();
        boolean boolean37 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass36);
        java.lang.reflect.Type type38 = typeCircularBuffer26.get();
        boolean boolean39 = typeCircularBuffer26.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type42 = typeCircularBuffer41.get();
        boolean boolean43 = typeCircularBuffer41.isFull();
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer41.getClass();
        boolean boolean45 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean46 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean47 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type48 = typeCircularBuffer1.get();
        boolean boolean49 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean52 = typeCircularBuffer51.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer54 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass55 = typeCircularBuffer54.getClass();
        boolean boolean56 = typeCircularBuffer51.put((java.lang.reflect.Type) wildcardClass55);
        java.lang.reflect.Type type57 = typeCircularBuffer51.get();
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        boolean boolean60 = typeCircularBuffer51.put((java.lang.reflect.Type) wildcardClass59);
        java.lang.reflect.Type type61 = typeCircularBuffer51.get();
        boolean boolean62 = typeCircularBuffer51.isFull();
        java.lang.Class<?> wildcardClass63 = typeCircularBuffer51.getClass();
        boolean boolean64 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass63);
        boolean boolean65 = typeCircularBuffer1.isFull();
        boolean boolean66 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass67 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(type38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(type42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(type61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test1448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1448");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        boolean boolean8 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        java.lang.reflect.Type type10 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean13 = typeCircularBuffer12.isEmpty();
        java.lang.reflect.Type type14 = typeCircularBuffer12.get();
        java.lang.reflect.Type type15 = typeCircularBuffer12.get();
        java.lang.reflect.Type type16 = typeCircularBuffer12.get();
        java.lang.reflect.Type type17 = typeCircularBuffer12.get();
        boolean boolean18 = typeCircularBuffer12.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) ' ');
        java.lang.reflect.Type type21 = typeCircularBuffer20.get();
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer20.getClass();
        boolean boolean23 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass22);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean28 = typeCircularBuffer27.isFull();
        boolean boolean29 = typeCircularBuffer27.isEmpty();
        java.lang.reflect.Type type30 = typeCircularBuffer27.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean35 = typeCircularBuffer34.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass38 = typeCircularBuffer37.getClass();
        boolean boolean39 = typeCircularBuffer34.put((java.lang.reflect.Type) wildcardClass38);
        java.lang.reflect.Type type40 = typeCircularBuffer34.get();
        boolean boolean41 = typeCircularBuffer32.put(type40);
        java.lang.Class<?> wildcardClass42 = typeCircularBuffer32.getClass();
        boolean boolean43 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass42);
        boolean boolean44 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass42);
        boolean boolean45 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass42);
        java.lang.Class<?> wildcardClass46 = typeCircularBuffer12.getClass();
        boolean boolean47 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass46);
        java.lang.reflect.Type type48 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass49 = type48.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(type14);
        org.junit.Assert.assertNull(type15);
        org.junit.Assert.assertNull(type16);
        org.junit.Assert.assertNull(type17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(type21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(type30);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test1449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1449");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer10.get();
        boolean boolean17 = typeCircularBuffer8.put(type16);
        boolean boolean18 = typeCircularBuffer8.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer20 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean21 = typeCircularBuffer20.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer23.getClass();
        boolean boolean25 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass24);
        java.lang.reflect.Type type26 = typeCircularBuffer20.get();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        boolean boolean29 = typeCircularBuffer20.put((java.lang.reflect.Type) wildcardClass28);
        boolean boolean30 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass28);
        boolean boolean31 = typeCircularBuffer8.isEmpty();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        boolean boolean34 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass33);
        boolean boolean35 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass33);
        boolean boolean36 = typeCircularBuffer1.isEmpty();
        boolean boolean37 = typeCircularBuffer1.isEmpty();
        boolean boolean38 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean41 = typeCircularBuffer40.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer43.getClass();
        boolean boolean45 = typeCircularBuffer40.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean46 = typeCircularBuffer40.isFull();
        java.lang.reflect.Type type47 = typeCircularBuffer40.get();
        boolean boolean48 = typeCircularBuffer1.put(type47);
        boolean boolean49 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type50 = typeCircularBuffer1.get();
        boolean boolean51 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type52 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass53 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(type52);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test1450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1450");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass9);
        boolean boolean11 = typeCircularBuffer6.isFull();
        java.lang.Class<?> wildcardClass12 = typeCircularBuffer6.getClass();
        boolean boolean13 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass12);
        java.lang.reflect.Type type14 = typeCircularBuffer1.get();
        java.lang.reflect.Type type15 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNull(type15);
    }

    @Test
    public void test1451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1451");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean9 = typeCircularBuffer8.isFull();
        java.lang.reflect.Type type10 = typeCircularBuffer8.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean13 = typeCircularBuffer12.isEmpty();
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        boolean boolean16 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass15);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer12.getClass();
        boolean boolean18 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass17);
        boolean boolean19 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass17);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type24 = typeCircularBuffer23.get();
        boolean boolean25 = typeCircularBuffer23.isFull();
        boolean boolean26 = typeCircularBuffer23.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        boolean boolean32 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass31);
        java.lang.Class<?> wildcardClass33 = typeCircularBuffer28.getClass();
        boolean boolean34 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass33);
        boolean boolean35 = typeCircularBuffer23.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean38 = typeCircularBuffer37.isFull();
        boolean boolean39 = typeCircularBuffer37.isEmpty();
        java.lang.reflect.Type type40 = typeCircularBuffer37.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer44 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean45 = typeCircularBuffer44.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass48 = typeCircularBuffer47.getClass();
        boolean boolean49 = typeCircularBuffer44.put((java.lang.reflect.Type) wildcardClass48);
        java.lang.reflect.Type type50 = typeCircularBuffer44.get();
        boolean boolean51 = typeCircularBuffer42.put(type50);
        java.lang.Class<?> wildcardClass52 = typeCircularBuffer42.getClass();
        boolean boolean53 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass52);
        boolean boolean54 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass52);
        boolean boolean55 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass52);
        boolean boolean56 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass52);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer58 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean59 = typeCircularBuffer58.isFull();
        java.lang.reflect.Type type60 = typeCircularBuffer58.get();
        boolean boolean61 = typeCircularBuffer58.isEmpty();
        boolean boolean62 = typeCircularBuffer58.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer64 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        boolean boolean65 = typeCircularBuffer64.isEmpty();
        java.lang.Class<?> wildcardClass66 = typeCircularBuffer64.getClass();
        boolean boolean67 = typeCircularBuffer58.put((java.lang.reflect.Type) wildcardClass66);
        boolean boolean68 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass66);
        java.lang.reflect.Type type69 = typeCircularBuffer1.get();
        boolean boolean70 = typeCircularBuffer1.isFull();
        boolean boolean71 = typeCircularBuffer1.isEmpty();
        boolean boolean72 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(type40);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(type50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(type60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(type69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test1452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1452");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        java.lang.reflect.Type type11 = typeCircularBuffer1.get();
        boolean boolean12 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer17.getClass();
        boolean boolean19 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass18);
        java.lang.reflect.Type type20 = typeCircularBuffer14.get();
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        boolean boolean23 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass22);
        java.lang.reflect.Type type24 = typeCircularBuffer14.get();
        boolean boolean25 = typeCircularBuffer1.put(type24);
        boolean boolean26 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type27 = typeCircularBuffer1.get();
        boolean boolean28 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean31 = typeCircularBuffer30.isFull();
        java.lang.reflect.Type type32 = typeCircularBuffer30.get();
        boolean boolean33 = typeCircularBuffer30.isEmpty();
        java.lang.reflect.Type type34 = typeCircularBuffer30.get();
        java.lang.reflect.Type type35 = typeCircularBuffer30.get();
        boolean boolean36 = typeCircularBuffer30.isEmpty();
        java.lang.Class<?> wildcardClass37 = typeCircularBuffer30.getClass();
        boolean boolean38 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass37);
        boolean boolean39 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(type32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(type34);
        org.junit.Assert.assertNull(type35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
    }

    @Test
    public void test1453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1453");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        boolean boolean8 = typeCircularBuffer1.isEmpty();
        boolean boolean9 = typeCircularBuffer1.isEmpty();
        boolean boolean10 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test1454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1454");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer6.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        boolean boolean13 = typeCircularBuffer1.isFull();
        boolean boolean14 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        boolean boolean20 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass19);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean23 = typeCircularBuffer22.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type26 = typeCircularBuffer25.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean31 = typeCircularBuffer30.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass34 = typeCircularBuffer33.getClass();
        boolean boolean35 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass34);
        java.lang.reflect.Type type36 = typeCircularBuffer30.get();
        boolean boolean37 = typeCircularBuffer28.put(type36);
        boolean boolean38 = typeCircularBuffer28.isFull();
        java.lang.reflect.Type type39 = typeCircularBuffer28.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean42 = typeCircularBuffer41.isEmpty();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        boolean boolean45 = typeCircularBuffer41.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean46 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean47 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean48 = typeCircularBuffer25.isEmpty();
        java.lang.Class<?> wildcardClass49 = typeCircularBuffer25.getClass();
        boolean boolean50 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass49);
        java.lang.Class<?> wildcardClass51 = typeCircularBuffer22.getClass();
        boolean boolean52 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass51);
        java.lang.Class<?> wildcardClass53 = typeCircularBuffer16.getClass();
        boolean boolean54 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass53);
        java.lang.reflect.Type type55 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(type26);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(type55);
    }

    @Test
    public void test1455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1455");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean19 = typeCircularBuffer18.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer21.getClass();
        boolean boolean23 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass22);
        java.lang.reflect.Type type24 = typeCircularBuffer18.get();
        boolean boolean25 = typeCircularBuffer16.put(type24);
        boolean boolean26 = typeCircularBuffer16.isFull();
        java.lang.reflect.Type type27 = typeCircularBuffer16.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean30 = typeCircularBuffer29.isEmpty();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        boolean boolean33 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean35 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean36 = typeCircularBuffer9.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean39 = typeCircularBuffer38.isFull();
        boolean boolean40 = typeCircularBuffer38.isEmpty();
        boolean boolean41 = typeCircularBuffer38.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer46.getClass();
        boolean boolean48 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass47);
        java.lang.reflect.Type type49 = typeCircularBuffer43.get();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        boolean boolean52 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean53 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean54 = typeCircularBuffer38.isFull();
        java.lang.reflect.Type type55 = typeCircularBuffer38.get();
        boolean boolean56 = typeCircularBuffer9.put(type55);
        boolean boolean57 = typeCircularBuffer1.put(type55);
        boolean boolean58 = typeCircularBuffer1.isEmpty();
        boolean boolean59 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type60 = typeCircularBuffer1.get();
        boolean boolean61 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(type60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test1456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1456");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        java.lang.reflect.Type type11 = typeCircularBuffer1.get();
        boolean boolean12 = typeCircularBuffer1.isFull();
        boolean boolean13 = typeCircularBuffer1.isEmpty();
        boolean boolean14 = typeCircularBuffer1.isFull();
        boolean boolean15 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type16 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(type16);
    }

    @Test
    public void test1457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1457");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        boolean boolean9 = typeCircularBuffer1.isFull();
        boolean boolean10 = typeCircularBuffer1.isEmpty();
        boolean boolean11 = typeCircularBuffer1.isFull();
        boolean boolean12 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test1458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1458");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean16 = typeCircularBuffer15.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer18.getClass();
        boolean boolean20 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass19);
        java.lang.reflect.Type type21 = typeCircularBuffer15.get();
        boolean boolean22 = typeCircularBuffer13.put(type21);
        boolean boolean23 = typeCircularBuffer13.isFull();
        java.lang.reflect.Type type24 = typeCircularBuffer13.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean27 = typeCircularBuffer26.isEmpty();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        boolean boolean30 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass29);
        boolean boolean31 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass29);
        boolean boolean32 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass29);
        boolean boolean33 = typeCircularBuffer6.isFull();
        boolean boolean34 = typeCircularBuffer6.isFull();
        boolean boolean35 = typeCircularBuffer6.isEmpty();
        boolean boolean36 = typeCircularBuffer6.isFull();
        java.lang.reflect.Type type37 = typeCircularBuffer6.get();
        boolean boolean38 = typeCircularBuffer1.put(type37);
        java.lang.reflect.Type type39 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass40 = type39.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test1459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1459");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean7 = typeCircularBuffer6.isFull();
        boolean boolean8 = typeCircularBuffer6.isEmpty();
        boolean boolean9 = typeCircularBuffer6.isFull();
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer6.getClass();
        boolean boolean11 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass10);
        boolean boolean12 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) ' ');
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean20 = typeCircularBuffer19.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass23 = typeCircularBuffer22.getClass();
        boolean boolean24 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass23);
        java.lang.reflect.Type type25 = typeCircularBuffer19.get();
        boolean boolean26 = typeCircularBuffer17.put(type25);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean31 = typeCircularBuffer30.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass34 = typeCircularBuffer33.getClass();
        boolean boolean35 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass34);
        java.lang.reflect.Type type36 = typeCircularBuffer30.get();
        boolean boolean37 = typeCircularBuffer28.put(type36);
        java.lang.Class<?> wildcardClass38 = typeCircularBuffer28.getClass();
        boolean boolean39 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass38);
        boolean boolean40 = typeCircularBuffer17.isFull();
        java.lang.reflect.Type type41 = typeCircularBuffer17.get();
        boolean boolean42 = typeCircularBuffer14.put(type41);
        boolean boolean43 = typeCircularBuffer14.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean46 = typeCircularBuffer45.isFull();
        boolean boolean47 = typeCircularBuffer45.isEmpty();
        java.lang.reflect.Type type48 = typeCircularBuffer45.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer52 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean53 = typeCircularBuffer52.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer55 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass56 = typeCircularBuffer55.getClass();
        boolean boolean57 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass56);
        java.lang.reflect.Type type58 = typeCircularBuffer52.get();
        boolean boolean59 = typeCircularBuffer50.put(type58);
        java.lang.Class<?> wildcardClass60 = typeCircularBuffer50.getClass();
        boolean boolean61 = typeCircularBuffer45.put((java.lang.reflect.Type) wildcardClass60);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer63 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(10);
        java.lang.Class<?> wildcardClass64 = typeCircularBuffer63.getClass();
        boolean boolean65 = typeCircularBuffer45.put((java.lang.reflect.Type) wildcardClass64);
        boolean boolean66 = typeCircularBuffer45.isFull();
        java.lang.reflect.Type type67 = typeCircularBuffer45.get();
        boolean boolean68 = typeCircularBuffer14.put(type67);
        boolean boolean69 = typeCircularBuffer1.put(type67);
        java.lang.reflect.Type type70 = typeCircularBuffer1.get();
        boolean boolean71 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass72 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(type48);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(type67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(type70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test1460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1460");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '#');
        boolean boolean2 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 10);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type7 = typeCircularBuffer6.get();
        boolean boolean8 = typeCircularBuffer6.isFull();
        java.lang.Class<?> wildcardClass9 = typeCircularBuffer6.getClass();
        boolean boolean10 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer4.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.reflect.Type type13 = typeCircularBuffer1.get();
        boolean boolean14 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test1461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1461");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        boolean boolean8 = typeCircularBuffer1.isFull();
        boolean boolean9 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type10 = typeCircularBuffer1.get();
        boolean boolean11 = typeCircularBuffer1.isFull();
        boolean boolean12 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type15 = typeCircularBuffer14.get();
        boolean boolean16 = typeCircularBuffer14.isFull();
        boolean boolean17 = typeCircularBuffer14.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean20 = typeCircularBuffer19.isEmpty();
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        boolean boolean23 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass22);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer19.getClass();
        boolean boolean25 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass24);
        java.lang.reflect.Type type26 = typeCircularBuffer14.get();
        boolean boolean27 = typeCircularBuffer14.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type30 = typeCircularBuffer29.get();
        boolean boolean31 = typeCircularBuffer29.isFull();
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer29.getClass();
        boolean boolean33 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer14.isFull();
        java.lang.reflect.Type type35 = typeCircularBuffer14.get();
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer14.getClass();
        boolean boolean37 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean38 = typeCircularBuffer1.isFull();
        boolean boolean39 = typeCircularBuffer1.isFull();
        boolean boolean40 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type41 = typeCircularBuffer1.get();
        boolean boolean42 = typeCircularBuffer1.isFull();
        boolean boolean43 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(type15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test1462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1462");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type4 = typeCircularBuffer3.get();
        boolean boolean5 = typeCircularBuffer3.isFull();
        boolean boolean6 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean9 = typeCircularBuffer8.isEmpty();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer8.getClass();
        boolean boolean14 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass13);
        boolean boolean15 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean18 = typeCircularBuffer17.isFull();
        boolean boolean19 = typeCircularBuffer17.isEmpty();
        java.lang.reflect.Type type20 = typeCircularBuffer17.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean25 = typeCircularBuffer24.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer27.getClass();
        boolean boolean29 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.reflect.Type type30 = typeCircularBuffer24.get();
        boolean boolean31 = typeCircularBuffer22.put(type30);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer22.getClass();
        boolean boolean33 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean35 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass32);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type38 = typeCircularBuffer37.get();
        boolean boolean39 = typeCircularBuffer37.isFull();
        boolean boolean40 = typeCircularBuffer37.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean43 = typeCircularBuffer42.isEmpty();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        boolean boolean46 = typeCircularBuffer42.put((java.lang.reflect.Type) wildcardClass45);
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer42.getClass();
        boolean boolean48 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass47);
        java.lang.reflect.Type type49 = typeCircularBuffer37.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer51 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer53 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean54 = typeCircularBuffer53.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer56 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass57 = typeCircularBuffer56.getClass();
        boolean boolean58 = typeCircularBuffer53.put((java.lang.reflect.Type) wildcardClass57);
        java.lang.reflect.Type type59 = typeCircularBuffer53.get();
        boolean boolean60 = typeCircularBuffer51.put(type59);
        boolean boolean61 = typeCircularBuffer37.put(type59);
        java.lang.reflect.Type type62 = typeCircularBuffer37.get();
        boolean boolean63 = typeCircularBuffer37.isFull();
        boolean boolean64 = typeCircularBuffer37.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer66 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean67 = typeCircularBuffer66.isFull();
        java.lang.reflect.Type type68 = typeCircularBuffer66.get();
        boolean boolean69 = typeCircularBuffer66.isFull();
        java.lang.reflect.Type type70 = typeCircularBuffer66.get();
        boolean boolean71 = typeCircularBuffer66.isFull();
        boolean boolean72 = typeCircularBuffer66.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer74 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean75 = typeCircularBuffer74.isFull();
        boolean boolean76 = typeCircularBuffer74.isEmpty();
        java.lang.reflect.Type type77 = typeCircularBuffer74.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer79 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer81 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean82 = typeCircularBuffer81.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer84 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass85 = typeCircularBuffer84.getClass();
        boolean boolean86 = typeCircularBuffer81.put((java.lang.reflect.Type) wildcardClass85);
        java.lang.reflect.Type type87 = typeCircularBuffer81.get();
        boolean boolean88 = typeCircularBuffer79.put(type87);
        java.lang.Class<?> wildcardClass89 = typeCircularBuffer79.getClass();
        boolean boolean90 = typeCircularBuffer74.put((java.lang.reflect.Type) wildcardClass89);
        boolean boolean91 = typeCircularBuffer66.put((java.lang.reflect.Type) wildcardClass89);
        boolean boolean92 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass89);
        boolean boolean93 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass89);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(type20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(type38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(type62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNull(type68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(type70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNull(type77);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(type87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test1463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1463");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean16 = typeCircularBuffer15.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer18.getClass();
        boolean boolean20 = typeCircularBuffer15.put((java.lang.reflect.Type) wildcardClass19);
        java.lang.reflect.Type type21 = typeCircularBuffer15.get();
        boolean boolean22 = typeCircularBuffer13.put(type21);
        boolean boolean23 = typeCircularBuffer13.isFull();
        java.lang.reflect.Type type24 = typeCircularBuffer13.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean27 = typeCircularBuffer26.isEmpty();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        boolean boolean30 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass29);
        boolean boolean31 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass29);
        boolean boolean32 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass29);
        boolean boolean33 = typeCircularBuffer6.isFull();
        boolean boolean34 = typeCircularBuffer6.isFull();
        boolean boolean35 = typeCircularBuffer6.isEmpty();
        boolean boolean36 = typeCircularBuffer6.isFull();
        java.lang.reflect.Type type37 = typeCircularBuffer6.get();
        boolean boolean38 = typeCircularBuffer1.put(type37);
        java.lang.reflect.Type type39 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer41 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean42 = typeCircularBuffer41.isEmpty();
        java.lang.reflect.Type type43 = typeCircularBuffer41.get();
        java.lang.reflect.Type type44 = typeCircularBuffer41.get();
        java.lang.reflect.Type type45 = typeCircularBuffer41.get();
        boolean boolean46 = typeCircularBuffer41.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean49 = typeCircularBuffer48.isFull();
        java.lang.reflect.Type type50 = typeCircularBuffer48.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer52 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean53 = typeCircularBuffer52.isEmpty();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        boolean boolean56 = typeCircularBuffer52.put((java.lang.reflect.Type) wildcardClass55);
        java.lang.Class<?> wildcardClass57 = typeCircularBuffer52.getClass();
        boolean boolean58 = typeCircularBuffer48.put((java.lang.reflect.Type) wildcardClass57);
        boolean boolean59 = typeCircularBuffer41.put((java.lang.reflect.Type) wildcardClass57);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer61 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer63 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type64 = typeCircularBuffer63.get();
        boolean boolean65 = typeCircularBuffer63.isFull();
        boolean boolean66 = typeCircularBuffer63.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer68 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean69 = typeCircularBuffer68.isEmpty();
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        boolean boolean72 = typeCircularBuffer68.put((java.lang.reflect.Type) wildcardClass71);
        java.lang.Class<?> wildcardClass73 = typeCircularBuffer68.getClass();
        boolean boolean74 = typeCircularBuffer63.put((java.lang.reflect.Type) wildcardClass73);
        boolean boolean75 = typeCircularBuffer63.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer77 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean78 = typeCircularBuffer77.isFull();
        boolean boolean79 = typeCircularBuffer77.isEmpty();
        java.lang.reflect.Type type80 = typeCircularBuffer77.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer82 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer84 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean85 = typeCircularBuffer84.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer87 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass88 = typeCircularBuffer87.getClass();
        boolean boolean89 = typeCircularBuffer84.put((java.lang.reflect.Type) wildcardClass88);
        java.lang.reflect.Type type90 = typeCircularBuffer84.get();
        boolean boolean91 = typeCircularBuffer82.put(type90);
        java.lang.Class<?> wildcardClass92 = typeCircularBuffer82.getClass();
        boolean boolean93 = typeCircularBuffer77.put((java.lang.reflect.Type) wildcardClass92);
        boolean boolean94 = typeCircularBuffer63.put((java.lang.reflect.Type) wildcardClass92);
        boolean boolean95 = typeCircularBuffer61.put((java.lang.reflect.Type) wildcardClass92);
        boolean boolean96 = typeCircularBuffer41.put((java.lang.reflect.Type) wildcardClass92);
        java.lang.reflect.Type type97 = typeCircularBuffer41.get();
        boolean boolean98 = typeCircularBuffer1.put(type97);
        java.lang.Class<?> wildcardClass99 = type97.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(type43);
        org.junit.Assert.assertNull(type44);
        org.junit.Assert.assertNull(type45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(type50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(type64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNull(type80);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(type90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertNotNull(type97);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1464");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        java.lang.reflect.Type type10 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean13 = typeCircularBuffer12.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass16 = typeCircularBuffer15.getClass();
        boolean boolean17 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass16);
        boolean boolean18 = typeCircularBuffer12.isFull();
        java.lang.reflect.Type type19 = typeCircularBuffer12.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer21.getClass();
        boolean boolean23 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass22);
        boolean boolean24 = typeCircularBuffer12.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean27 = typeCircularBuffer26.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass30 = typeCircularBuffer29.getClass();
        boolean boolean31 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass30);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer26.getClass();
        boolean boolean33 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer12.isEmpty();
        java.lang.reflect.Type type35 = typeCircularBuffer12.get();
        boolean boolean36 = typeCircularBuffer1.put(type35);
        boolean boolean37 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test1465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1465");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (short) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        boolean boolean7 = typeCircularBuffer1.isFull();
        boolean boolean8 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test1466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1466");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        java.lang.reflect.Type type12 = typeCircularBuffer6.get();
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        boolean boolean15 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass14);
        boolean boolean16 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass14);
        boolean boolean17 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type18 = typeCircularBuffer1.get();
        java.lang.reflect.Type type19 = null;
        boolean boolean20 = typeCircularBuffer1.put(type19);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type23 = typeCircularBuffer22.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean28 = typeCircularBuffer27.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass31 = typeCircularBuffer30.getClass();
        boolean boolean32 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass31);
        java.lang.reflect.Type type33 = typeCircularBuffer27.get();
        boolean boolean34 = typeCircularBuffer25.put(type33);
        boolean boolean35 = typeCircularBuffer25.isFull();
        java.lang.reflect.Type type36 = typeCircularBuffer25.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean39 = typeCircularBuffer38.isEmpty();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        boolean boolean42 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean43 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean44 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean45 = typeCircularBuffer22.isEmpty();
        boolean boolean46 = typeCircularBuffer22.isFull();
        boolean boolean47 = typeCircularBuffer22.isEmpty();
        java.lang.Class<?> wildcardClass48 = typeCircularBuffer22.getClass();
        boolean boolean49 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass48);
        java.lang.reflect.Type type50 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(type23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(type50);
    }

    @Test
    public void test1467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1467");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer10.get();
        boolean boolean17 = typeCircularBuffer8.put(type16);
        boolean boolean18 = typeCircularBuffer8.isFull();
        java.lang.reflect.Type type19 = typeCircularBuffer8.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean22 = typeCircularBuffer21.isEmpty();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean26 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean27 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass24);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean30 = typeCircularBuffer29.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass33 = typeCircularBuffer32.getClass();
        boolean boolean34 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass33);
        java.lang.reflect.Type type35 = typeCircularBuffer29.get();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        boolean boolean38 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass37);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean41 = typeCircularBuffer40.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer43.getClass();
        boolean boolean45 = typeCircularBuffer40.put((java.lang.reflect.Type) wildcardClass44);
        java.lang.Class<?> wildcardClass46 = typeCircularBuffer40.getClass();
        boolean boolean47 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass46);
        java.lang.reflect.Type type48 = typeCircularBuffer29.get();
        boolean boolean49 = typeCircularBuffer1.put(type48);
        boolean boolean50 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type51 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass52 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test1468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1468");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(100);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean5 = typeCircularBuffer4.isFull();
        boolean boolean6 = typeCircularBuffer4.isEmpty();
        boolean boolean7 = typeCircularBuffer4.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        java.lang.reflect.Type type15 = typeCircularBuffer9.get();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass17);
        boolean boolean19 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass17);
        boolean boolean20 = typeCircularBuffer4.isFull();
        java.lang.reflect.Type type21 = typeCircularBuffer4.get();
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer4.getClass();
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass22);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer25 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type26 = typeCircularBuffer25.get();
        boolean boolean27 = typeCircularBuffer25.isFull();
        boolean boolean28 = typeCircularBuffer25.isFull();
        boolean boolean29 = typeCircularBuffer25.isFull();
        boolean boolean30 = typeCircularBuffer25.isFull();
        java.lang.reflect.Type type31 = typeCircularBuffer25.get();
        boolean boolean32 = typeCircularBuffer25.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean35 = typeCircularBuffer34.isEmpty();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        boolean boolean38 = typeCircularBuffer34.put((java.lang.reflect.Type) wildcardClass37);
        boolean boolean39 = typeCircularBuffer25.put((java.lang.reflect.Type) wildcardClass37);
        java.lang.reflect.Type type40 = typeCircularBuffer25.get();
        boolean boolean41 = typeCircularBuffer1.put(type40);
        boolean boolean42 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(type26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(type31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test1469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1469");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean5 = typeCircularBuffer4.isFull();
        boolean boolean6 = typeCircularBuffer4.isEmpty();
        boolean boolean7 = typeCircularBuffer4.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        java.lang.reflect.Type type15 = typeCircularBuffer9.get();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass17);
        boolean boolean19 = typeCircularBuffer4.put((java.lang.reflect.Type) wildcardClass17);
        boolean boolean20 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type21 = typeCircularBuffer1.get();
        boolean boolean22 = typeCircularBuffer1.isEmpty();
        boolean boolean23 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type24 = null;
        boolean boolean25 = typeCircularBuffer1.put(type24);
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test1470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1470");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '#');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer5 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean6 = typeCircularBuffer5.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass9 = typeCircularBuffer8.getClass();
        boolean boolean10 = typeCircularBuffer5.put((java.lang.reflect.Type) wildcardClass9);
        java.lang.reflect.Type type11 = typeCircularBuffer5.get();
        boolean boolean12 = typeCircularBuffer3.put(type11);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer19.getClass();
        boolean boolean21 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type22 = typeCircularBuffer16.get();
        boolean boolean23 = typeCircularBuffer14.put(type22);
        java.lang.Class<?> wildcardClass24 = typeCircularBuffer14.getClass();
        boolean boolean25 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean26 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean27 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean30 = typeCircularBuffer29.isFull();
        java.lang.reflect.Type type31 = typeCircularBuffer29.get();
        boolean boolean32 = typeCircularBuffer29.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean35 = typeCircularBuffer34.isFull();
        boolean boolean36 = typeCircularBuffer34.isEmpty();
        boolean boolean37 = typeCircularBuffer34.isFull();
        java.lang.reflect.Type type38 = null;
        boolean boolean39 = typeCircularBuffer34.put(type38);
        boolean boolean40 = typeCircularBuffer34.isFull();
        boolean boolean41 = typeCircularBuffer34.isFull();
        java.lang.Class<?> wildcardClass42 = typeCircularBuffer34.getClass();
        boolean boolean43 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass42);
        boolean boolean44 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass42);
        boolean boolean45 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type46 = typeCircularBuffer1.get();
        boolean boolean47 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(type31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test1471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1471");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean9 = typeCircularBuffer8.isFull();
        java.lang.reflect.Type type10 = typeCircularBuffer8.get();
        boolean boolean11 = typeCircularBuffer8.isEmpty();
        boolean boolean12 = typeCircularBuffer8.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Class<?> wildcardClass16 = typeCircularBuffer14.getClass();
        boolean boolean17 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass16);
        boolean boolean18 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass16);
        java.lang.reflect.Type type19 = typeCircularBuffer1.get();
        boolean boolean20 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean23 = typeCircularBuffer22.isFull();
        boolean boolean24 = typeCircularBuffer22.isEmpty();
        java.lang.reflect.Type type25 = typeCircularBuffer22.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean30 = typeCircularBuffer29.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass33 = typeCircularBuffer32.getClass();
        boolean boolean34 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass33);
        java.lang.reflect.Type type35 = typeCircularBuffer29.get();
        boolean boolean36 = typeCircularBuffer27.put(type35);
        java.lang.Class<?> wildcardClass37 = typeCircularBuffer27.getClass();
        boolean boolean38 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass37);
        boolean boolean39 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass37);
        java.lang.Class<?> wildcardClass40 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(type25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test1472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1472");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass10);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean17 = typeCircularBuffer16.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer19.getClass();
        boolean boolean21 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass20);
        java.lang.reflect.Type type22 = typeCircularBuffer16.get();
        java.lang.Class<?> wildcardClass23 = typeCircularBuffer16.getClass();
        boolean boolean24 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass23);
        boolean boolean25 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass23);
        boolean boolean26 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type27 = typeCircularBuffer1.get();
        boolean boolean28 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type29 = typeCircularBuffer1.get();
        boolean boolean30 = typeCircularBuffer1.isFull();
        boolean boolean31 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(type29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
    }

    @Test
    public void test1473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1473");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean24 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type27 = typeCircularBuffer26.get();
        boolean boolean28 = typeCircularBuffer26.isFull();
        boolean boolean29 = typeCircularBuffer26.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        boolean boolean35 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass34);
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer31.getClass();
        boolean boolean37 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass36);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean40 = typeCircularBuffer39.isEmpty();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        boolean boolean43 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass42);
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer39.getClass();
        boolean boolean45 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean46 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean47 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type48 = typeCircularBuffer1.get();
        java.lang.reflect.Type type49 = typeCircularBuffer1.get();
        java.lang.reflect.Type type50 = typeCircularBuffer1.get();
        java.lang.reflect.Type type51 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNull(type49);
        org.junit.Assert.assertNull(type50);
        org.junit.Assert.assertNull(type51);
    }

    @Test
    public void test1474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1474");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '#');
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean8 = typeCircularBuffer7.isFull();
        java.lang.reflect.Type type9 = typeCircularBuffer7.get();
        boolean boolean10 = typeCircularBuffer7.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean13 = typeCircularBuffer12.isEmpty();
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer12.getClass();
        boolean boolean15 = typeCircularBuffer7.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer7.get();
        boolean boolean17 = typeCircularBuffer1.put(type16);
        boolean boolean18 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type19 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(type19);
    }

    @Test
    public void test1475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1475");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type12 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type15 = typeCircularBuffer14.get();
        boolean boolean16 = typeCircularBuffer14.isFull();
        java.lang.reflect.Type type17 = typeCircularBuffer14.get();
        java.lang.Class<?> wildcardClass18 = typeCircularBuffer14.getClass();
        boolean boolean19 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass18);
        boolean boolean20 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean23 = typeCircularBuffer22.isFull();
        java.lang.reflect.Type type24 = typeCircularBuffer22.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean27 = typeCircularBuffer26.isEmpty();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        boolean boolean30 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass29);
        java.lang.Class<?> wildcardClass31 = typeCircularBuffer26.getClass();
        boolean boolean32 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass31);
        boolean boolean33 = typeCircularBuffer22.isEmpty();
        boolean boolean34 = typeCircularBuffer22.isFull();
        java.lang.reflect.Type type35 = typeCircularBuffer22.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type38 = typeCircularBuffer37.get();
        boolean boolean39 = typeCircularBuffer37.isFull();
        boolean boolean40 = typeCircularBuffer37.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean43 = typeCircularBuffer42.isEmpty();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        boolean boolean46 = typeCircularBuffer42.put((java.lang.reflect.Type) wildcardClass45);
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer42.getClass();
        boolean boolean48 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass47);
        boolean boolean49 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass47);
        boolean boolean50 = typeCircularBuffer22.isFull();
        boolean boolean51 = typeCircularBuffer22.isFull();
        java.lang.Class<?> wildcardClass52 = typeCircularBuffer22.getClass();
        boolean boolean53 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass52);
        boolean boolean54 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNull(type15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(type17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(type24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNull(type38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test1476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1476");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '#');
        boolean boolean2 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean9 = typeCircularBuffer8.isFull();
        java.lang.reflect.Type type10 = typeCircularBuffer8.get();
        boolean boolean11 = typeCircularBuffer8.isEmpty();
        java.lang.Class<?> wildcardClass12 = typeCircularBuffer8.getClass();
        boolean boolean13 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test1477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1477");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        boolean boolean22 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean23 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass21);
        boolean boolean24 = typeCircularBuffer1.isEmpty();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        boolean boolean27 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass26);
        java.lang.reflect.Type type28 = typeCircularBuffer1.get();
        java.lang.reflect.Type type29 = typeCircularBuffer1.get();
        boolean boolean30 = typeCircularBuffer1.isFull();
        boolean boolean31 = typeCircularBuffer1.isEmpty();
        boolean boolean32 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNull(type29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
    }

    @Test
    public void test1478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1478");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type4 = typeCircularBuffer3.get();
        boolean boolean5 = typeCircularBuffer3.isFull();
        boolean boolean6 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean9 = typeCircularBuffer8.isEmpty();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        boolean boolean12 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer8.getClass();
        boolean boolean14 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass13);
        boolean boolean15 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer17 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean18 = typeCircularBuffer17.isFull();
        boolean boolean19 = typeCircularBuffer17.isEmpty();
        java.lang.reflect.Type type20 = typeCircularBuffer17.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer24 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean25 = typeCircularBuffer24.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass28 = typeCircularBuffer27.getClass();
        boolean boolean29 = typeCircularBuffer24.put((java.lang.reflect.Type) wildcardClass28);
        java.lang.reflect.Type type30 = typeCircularBuffer24.get();
        boolean boolean31 = typeCircularBuffer22.put(type30);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer22.getClass();
        boolean boolean33 = typeCircularBuffer17.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean35 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean36 = typeCircularBuffer1.isFull();
        boolean boolean37 = typeCircularBuffer1.isEmpty();
        boolean boolean38 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type39 = null;
        boolean boolean40 = typeCircularBuffer1.put(type39);
        boolean boolean41 = typeCircularBuffer1.isEmpty();
        boolean boolean42 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(type20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
    }

    @Test
    public void test1479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1479");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        boolean boolean9 = typeCircularBuffer1.isEmpty();
        boolean boolean10 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type11 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(type11);
    }

    @Test
    public void test1480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1480");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer3 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean4 = typeCircularBuffer3.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass7 = typeCircularBuffer6.getClass();
        boolean boolean8 = typeCircularBuffer3.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer3.get();
        boolean boolean10 = typeCircularBuffer1.put(type9);
        boolean boolean11 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type12 = null;
        boolean boolean13 = typeCircularBuffer1.put(type12);
        java.lang.reflect.Type type14 = null;
        boolean boolean15 = typeCircularBuffer1.put(type14);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test1481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1481");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer10.get();
        boolean boolean17 = typeCircularBuffer8.put(type16);
        boolean boolean18 = typeCircularBuffer8.isFull();
        java.lang.reflect.Type type19 = typeCircularBuffer8.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean22 = typeCircularBuffer21.isEmpty();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean26 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean27 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass24);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean30 = typeCircularBuffer29.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer32 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass33 = typeCircularBuffer32.getClass();
        boolean boolean34 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass33);
        java.lang.reflect.Type type35 = typeCircularBuffer29.get();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        boolean boolean38 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass37);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean41 = typeCircularBuffer40.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer43.getClass();
        boolean boolean45 = typeCircularBuffer40.put((java.lang.reflect.Type) wildcardClass44);
        java.lang.Class<?> wildcardClass46 = typeCircularBuffer40.getClass();
        boolean boolean47 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass46);
        java.lang.reflect.Type type48 = typeCircularBuffer29.get();
        boolean boolean49 = typeCircularBuffer1.put(type48);
        boolean boolean50 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type51 = typeCircularBuffer1.get();
        java.lang.reflect.Type type52 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(type35);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNull(type52);
    }

    @Test
    public void test1482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1482");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isEmpty();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertNull(type9);
    }

    @Test
    public void test1483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1483");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '#');
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
    }

    @Test
    public void test1484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1484");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        boolean boolean5 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass8 = typeCircularBuffer7.getClass();
        boolean boolean9 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass8);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean12 = typeCircularBuffer11.isFull();
        boolean boolean13 = typeCircularBuffer11.isEmpty();
        boolean boolean14 = typeCircularBuffer11.isFull();
        java.lang.Class<?> wildcardClass15 = typeCircularBuffer11.getClass();
        boolean boolean16 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass15);
        boolean boolean17 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test1485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1485");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        boolean boolean7 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer10.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        java.lang.reflect.Type type13 = typeCircularBuffer1.get();
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test1486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1486");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        boolean boolean5 = typeCircularBuffer1.isEmpty();
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        boolean boolean8 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass7);
        java.lang.reflect.Type type9 = typeCircularBuffer1.get();
        boolean boolean10 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        java.lang.reflect.Type type13 = typeCircularBuffer12.get();
        boolean boolean14 = typeCircularBuffer12.isFull();
        boolean boolean15 = typeCircularBuffer12.isFull();
        boolean boolean16 = typeCircularBuffer12.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean19 = typeCircularBuffer18.isFull();
        java.lang.reflect.Type type20 = typeCircularBuffer18.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        boolean boolean26 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer22.getClass();
        boolean boolean28 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer18.isEmpty();
        boolean boolean30 = typeCircularBuffer18.isFull();
        java.lang.reflect.Type type31 = typeCircularBuffer18.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer33 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) ' ');
        boolean boolean34 = typeCircularBuffer33.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer36 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean37 = typeCircularBuffer36.isEmpty();
        java.lang.reflect.Type type38 = typeCircularBuffer36.get();
        java.lang.reflect.Type type39 = typeCircularBuffer36.get();
        java.lang.reflect.Type type40 = typeCircularBuffer36.get();
        boolean boolean41 = typeCircularBuffer36.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean44 = typeCircularBuffer43.isFull();
        java.lang.reflect.Type type45 = typeCircularBuffer43.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean48 = typeCircularBuffer47.isEmpty();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        boolean boolean51 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass50);
        java.lang.Class<?> wildcardClass52 = typeCircularBuffer47.getClass();
        boolean boolean53 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass52);
        boolean boolean54 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass52);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer56 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer58 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type59 = typeCircularBuffer58.get();
        boolean boolean60 = typeCircularBuffer58.isFull();
        boolean boolean61 = typeCircularBuffer58.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer63 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean64 = typeCircularBuffer63.isEmpty();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        boolean boolean67 = typeCircularBuffer63.put((java.lang.reflect.Type) wildcardClass66);
        java.lang.Class<?> wildcardClass68 = typeCircularBuffer63.getClass();
        boolean boolean69 = typeCircularBuffer58.put((java.lang.reflect.Type) wildcardClass68);
        boolean boolean70 = typeCircularBuffer58.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer72 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean73 = typeCircularBuffer72.isFull();
        boolean boolean74 = typeCircularBuffer72.isEmpty();
        java.lang.reflect.Type type75 = typeCircularBuffer72.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer77 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer79 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean80 = typeCircularBuffer79.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer82 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass83 = typeCircularBuffer82.getClass();
        boolean boolean84 = typeCircularBuffer79.put((java.lang.reflect.Type) wildcardClass83);
        java.lang.reflect.Type type85 = typeCircularBuffer79.get();
        boolean boolean86 = typeCircularBuffer77.put(type85);
        java.lang.Class<?> wildcardClass87 = typeCircularBuffer77.getClass();
        boolean boolean88 = typeCircularBuffer72.put((java.lang.reflect.Type) wildcardClass87);
        boolean boolean89 = typeCircularBuffer58.put((java.lang.reflect.Type) wildcardClass87);
        boolean boolean90 = typeCircularBuffer56.put((java.lang.reflect.Type) wildcardClass87);
        boolean boolean91 = typeCircularBuffer36.put((java.lang.reflect.Type) wildcardClass87);
        java.lang.Class<?> wildcardClass92 = typeCircularBuffer36.getClass();
        boolean boolean93 = typeCircularBuffer33.put((java.lang.reflect.Type) wildcardClass92);
        boolean boolean94 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass92);
        boolean boolean95 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass92);
        boolean boolean96 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass92);
        boolean boolean97 = typeCircularBuffer1.isEmpty();
        boolean boolean98 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(type13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(type20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(type31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(type38);
        org.junit.Assert.assertNull(type39);
        org.junit.Assert.assertNull(type40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(type45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNull(type59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNull(type75);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(type85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test1487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1487");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        java.lang.reflect.Type type15 = typeCircularBuffer9.get();
        boolean boolean16 = typeCircularBuffer7.put(type15);
        boolean boolean17 = typeCircularBuffer7.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer19 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean20 = typeCircularBuffer19.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass23 = typeCircularBuffer22.getClass();
        boolean boolean24 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass23);
        java.lang.reflect.Type type25 = typeCircularBuffer19.get();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        boolean boolean28 = typeCircularBuffer19.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer7.put((java.lang.reflect.Type) wildcardClass27);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass35 = typeCircularBuffer34.getClass();
        boolean boolean36 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass35);
        java.lang.reflect.Type type37 = typeCircularBuffer31.get();
        boolean boolean38 = typeCircularBuffer7.put(type37);
        java.lang.reflect.Type type39 = typeCircularBuffer7.get();
        boolean boolean40 = typeCircularBuffer1.put(type39);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean43 = typeCircularBuffer42.isFull();
        java.lang.reflect.Type type44 = typeCircularBuffer42.get();
        boolean boolean45 = typeCircularBuffer42.isEmpty();
        boolean boolean46 = typeCircularBuffer42.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        boolean boolean49 = typeCircularBuffer48.isEmpty();
        java.lang.Class<?> wildcardClass50 = typeCircularBuffer48.getClass();
        boolean boolean51 = typeCircularBuffer42.put((java.lang.reflect.Type) wildcardClass50);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer53 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean54 = typeCircularBuffer53.isFull();
        boolean boolean55 = typeCircularBuffer53.isEmpty();
        boolean boolean56 = typeCircularBuffer53.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer58 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean59 = typeCircularBuffer58.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer61 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass62 = typeCircularBuffer61.getClass();
        boolean boolean63 = typeCircularBuffer58.put((java.lang.reflect.Type) wildcardClass62);
        java.lang.reflect.Type type64 = typeCircularBuffer58.get();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        boolean boolean67 = typeCircularBuffer58.put((java.lang.reflect.Type) wildcardClass66);
        boolean boolean68 = typeCircularBuffer53.put((java.lang.reflect.Type) wildcardClass66);
        boolean boolean69 = typeCircularBuffer42.put((java.lang.reflect.Type) wildcardClass66);
        boolean boolean70 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass66);
        java.lang.Class<?> wildcardClass71 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(type44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(type64);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test1488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1488");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isFull();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        boolean boolean4 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass10 = typeCircularBuffer9.getClass();
        boolean boolean11 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass10);
        java.lang.reflect.Type type12 = typeCircularBuffer6.get();
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        boolean boolean15 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass14);
        boolean boolean16 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass14);
        boolean boolean17 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type18 = typeCircularBuffer1.get();
        java.lang.reflect.Type type19 = null;
        boolean boolean20 = typeCircularBuffer1.put(type19);
        boolean boolean21 = typeCircularBuffer1.isFull();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test1489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1489");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        boolean boolean8 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test1490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1490");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer8 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean11 = typeCircularBuffer10.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer13.getClass();
        boolean boolean15 = typeCircularBuffer10.put((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = typeCircularBuffer10.get();
        boolean boolean17 = typeCircularBuffer8.put(type16);
        boolean boolean18 = typeCircularBuffer8.isFull();
        java.lang.reflect.Type type19 = typeCircularBuffer8.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean22 = typeCircularBuffer21.isEmpty();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        boolean boolean25 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean26 = typeCircularBuffer8.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean27 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass24);
        boolean boolean28 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer30 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean31 = typeCircularBuffer30.isFull();
        boolean boolean32 = typeCircularBuffer30.isEmpty();
        boolean boolean33 = typeCircularBuffer30.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean36 = typeCircularBuffer35.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass39 = typeCircularBuffer38.getClass();
        boolean boolean40 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass39);
        java.lang.reflect.Type type41 = typeCircularBuffer35.get();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        boolean boolean44 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass43);
        boolean boolean45 = typeCircularBuffer30.put((java.lang.reflect.Type) wildcardClass43);
        boolean boolean46 = typeCircularBuffer30.isFull();
        java.lang.reflect.Type type47 = typeCircularBuffer30.get();
        boolean boolean48 = typeCircularBuffer1.put(type47);
        boolean boolean49 = typeCircularBuffer1.isEmpty();
        boolean boolean50 = typeCircularBuffer1.isEmpty();
        boolean boolean51 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type52 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(type47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(type52);
    }

    @Test
    public void test1491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1491");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type10 = typeCircularBuffer9.get();
        boolean boolean11 = typeCircularBuffer9.isFull();
        boolean boolean12 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean15 = typeCircularBuffer14.isEmpty();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        boolean boolean18 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.Class<?> wildcardClass19 = typeCircularBuffer14.getClass();
        boolean boolean20 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass19);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean23 = typeCircularBuffer22.isEmpty();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        boolean boolean26 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass25);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer22.getClass();
        boolean boolean28 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass27);
        boolean boolean29 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass27);
        java.lang.reflect.Type type30 = typeCircularBuffer1.get();
        java.lang.reflect.Type type31 = typeCircularBuffer1.get();
        java.lang.reflect.Type type32 = typeCircularBuffer1.get();
        boolean boolean33 = typeCircularBuffer1.isFull();
        boolean boolean34 = typeCircularBuffer1.isEmpty();
        boolean boolean35 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean38 = typeCircularBuffer37.isFull();
        java.lang.reflect.Type type39 = typeCircularBuffer37.get();
        boolean boolean40 = typeCircularBuffer37.isEmpty();
        boolean boolean41 = typeCircularBuffer37.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        java.lang.Class<?> wildcardClass45 = typeCircularBuffer43.getClass();
        boolean boolean46 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass45);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer48 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean49 = typeCircularBuffer48.isFull();
        boolean boolean50 = typeCircularBuffer48.isEmpty();
        boolean boolean51 = typeCircularBuffer48.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer53 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean54 = typeCircularBuffer53.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer56 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass57 = typeCircularBuffer56.getClass();
        boolean boolean58 = typeCircularBuffer53.put((java.lang.reflect.Type) wildcardClass57);
        java.lang.reflect.Type type59 = typeCircularBuffer53.get();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        boolean boolean62 = typeCircularBuffer53.put((java.lang.reflect.Type) wildcardClass61);
        boolean boolean63 = typeCircularBuffer48.put((java.lang.reflect.Type) wildcardClass61);
        boolean boolean64 = typeCircularBuffer37.put((java.lang.reflect.Type) wildcardClass61);
        java.lang.reflect.Type type65 = typeCircularBuffer37.get();
        boolean boolean66 = typeCircularBuffer1.put(type65);
        boolean boolean67 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass68 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNull(type31);
        org.junit.Assert.assertNull(type32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(type39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(type65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test1492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1492");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isFull();
        boolean boolean5 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        boolean boolean8 = typeCircularBuffer1.isEmpty();
        boolean boolean9 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type12 = typeCircularBuffer11.get();
        boolean boolean13 = typeCircularBuffer11.isFull();
        boolean boolean14 = typeCircularBuffer11.isFull();
        boolean boolean15 = typeCircularBuffer11.isFull();
        boolean boolean16 = typeCircularBuffer11.isFull();
        boolean boolean17 = typeCircularBuffer11.isFull();
        boolean boolean18 = typeCircularBuffer11.isEmpty();
        java.lang.reflect.Type type19 = typeCircularBuffer11.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean22 = typeCircularBuffer21.isEmpty();
        java.lang.reflect.Type type23 = typeCircularBuffer21.get();
        boolean boolean24 = typeCircularBuffer21.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type27 = typeCircularBuffer26.get();
        boolean boolean28 = typeCircularBuffer26.isFull();
        boolean boolean29 = typeCircularBuffer26.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean32 = typeCircularBuffer31.isEmpty();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        boolean boolean35 = typeCircularBuffer31.put((java.lang.reflect.Type) wildcardClass34);
        java.lang.Class<?> wildcardClass36 = typeCircularBuffer31.getClass();
        boolean boolean37 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass36);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer39 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean40 = typeCircularBuffer39.isEmpty();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        boolean boolean43 = typeCircularBuffer39.put((java.lang.reflect.Type) wildcardClass42);
        java.lang.Class<?> wildcardClass44 = typeCircularBuffer39.getClass();
        boolean boolean45 = typeCircularBuffer26.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean46 = typeCircularBuffer21.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean47 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass44);
        boolean boolean48 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass44);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer50 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean51 = typeCircularBuffer50.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer53 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass54 = typeCircularBuffer53.getClass();
        boolean boolean55 = typeCircularBuffer50.put((java.lang.reflect.Type) wildcardClass54);
        java.lang.reflect.Type type56 = null;
        boolean boolean57 = typeCircularBuffer50.put(type56);
        java.lang.Class<?> wildcardClass58 = typeCircularBuffer50.getClass();
        boolean boolean59 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass58);
        boolean boolean60 = typeCircularBuffer1.isEmpty();
        boolean boolean61 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(type19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(type23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(type27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test1493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1493");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) ' ');
        java.lang.reflect.Type type10 = typeCircularBuffer9.get();
        java.lang.Class<?> wildcardClass11 = typeCircularBuffer9.getClass();
        boolean boolean12 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass11);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer14 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean17 = typeCircularBuffer16.isFull();
        boolean boolean18 = typeCircularBuffer16.isEmpty();
        java.lang.reflect.Type type19 = typeCircularBuffer16.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean24 = typeCircularBuffer23.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer26.getClass();
        boolean boolean28 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass27);
        java.lang.reflect.Type type29 = typeCircularBuffer23.get();
        boolean boolean30 = typeCircularBuffer21.put(type29);
        java.lang.Class<?> wildcardClass31 = typeCircularBuffer21.getClass();
        boolean boolean32 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass31);
        boolean boolean33 = typeCircularBuffer14.put((java.lang.reflect.Type) wildcardClass31);
        boolean boolean34 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass31);
        boolean boolean35 = typeCircularBuffer1.isFull();
        boolean boolean36 = typeCircularBuffer1.isEmpty();
        java.lang.Class<?> wildcardClass37 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(type10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(type19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test1494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1494");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        boolean boolean6 = typeCircularBuffer1.isFull();
        boolean boolean7 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        boolean boolean9 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer13 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean14 = typeCircularBuffer13.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer16.getClass();
        boolean boolean18 = typeCircularBuffer13.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer13.get();
        java.lang.Class<?> wildcardClass20 = typeCircularBuffer13.getClass();
        boolean boolean21 = typeCircularBuffer11.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean22 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass20);
        boolean boolean23 = typeCircularBuffer1.isEmpty();
        boolean boolean24 = typeCircularBuffer1.isFull();
        boolean boolean25 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean28 = typeCircularBuffer27.isFull();
        java.lang.reflect.Type type29 = typeCircularBuffer27.get();
        boolean boolean30 = typeCircularBuffer27.isFull();
        java.lang.reflect.Type type31 = typeCircularBuffer27.get();
        boolean boolean32 = typeCircularBuffer27.isFull();
        boolean boolean33 = typeCircularBuffer27.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer35 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean36 = typeCircularBuffer35.isFull();
        boolean boolean37 = typeCircularBuffer35.isEmpty();
        java.lang.reflect.Type type38 = typeCircularBuffer35.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer40 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer42 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean43 = typeCircularBuffer42.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer45 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass46 = typeCircularBuffer45.getClass();
        boolean boolean47 = typeCircularBuffer42.put((java.lang.reflect.Type) wildcardClass46);
        java.lang.reflect.Type type48 = typeCircularBuffer42.get();
        boolean boolean49 = typeCircularBuffer40.put(type48);
        java.lang.Class<?> wildcardClass50 = typeCircularBuffer40.getClass();
        boolean boolean51 = typeCircularBuffer35.put((java.lang.reflect.Type) wildcardClass50);
        boolean boolean52 = typeCircularBuffer27.put((java.lang.reflect.Type) wildcardClass50);
        java.lang.reflect.Type type53 = typeCircularBuffer27.get();
        boolean boolean54 = typeCircularBuffer27.isFull();
        boolean boolean55 = typeCircularBuffer27.isFull();
        boolean boolean56 = typeCircularBuffer27.isEmpty();
        java.lang.Class<?> wildcardClass57 = typeCircularBuffer27.getClass();
        boolean boolean58 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(type29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(type31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(type38);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(type53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test1495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1495");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer6 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean7 = typeCircularBuffer6.isEmpty();
        java.lang.Object obj8 = new java.lang.Object();
        java.lang.Class<?> wildcardClass9 = obj8.getClass();
        boolean boolean10 = typeCircularBuffer6.put((java.lang.reflect.Type) wildcardClass9);
        boolean boolean11 = typeCircularBuffer6.isFull();
        java.lang.Class<?> wildcardClass12 = typeCircularBuffer6.getClass();
        boolean boolean13 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass12);
        boolean boolean14 = typeCircularBuffer1.isFull();
        java.lang.reflect.Type type15 = typeCircularBuffer1.get();
        boolean boolean16 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test1496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1496");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean19 = typeCircularBuffer18.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer21.getClass();
        boolean boolean23 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass22);
        java.lang.reflect.Type type24 = typeCircularBuffer18.get();
        boolean boolean25 = typeCircularBuffer16.put(type24);
        boolean boolean26 = typeCircularBuffer16.isFull();
        java.lang.reflect.Type type27 = typeCircularBuffer16.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer29 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean30 = typeCircularBuffer29.isEmpty();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        boolean boolean33 = typeCircularBuffer29.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean34 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean35 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass32);
        boolean boolean36 = typeCircularBuffer9.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer38 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean39 = typeCircularBuffer38.isFull();
        boolean boolean40 = typeCircularBuffer38.isEmpty();
        boolean boolean41 = typeCircularBuffer38.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer43 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean44 = typeCircularBuffer43.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer46 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass47 = typeCircularBuffer46.getClass();
        boolean boolean48 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass47);
        java.lang.reflect.Type type49 = typeCircularBuffer43.get();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        boolean boolean52 = typeCircularBuffer43.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean53 = typeCircularBuffer38.put((java.lang.reflect.Type) wildcardClass51);
        boolean boolean54 = typeCircularBuffer38.isFull();
        java.lang.reflect.Type type55 = typeCircularBuffer38.get();
        boolean boolean56 = typeCircularBuffer9.put(type55);
        boolean boolean57 = typeCircularBuffer1.put(type55);
        boolean boolean58 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type59 = typeCircularBuffer1.get();
        boolean boolean60 = typeCircularBuffer1.isEmpty();
        boolean boolean61 = typeCircularBuffer1.isEmpty();
        boolean boolean62 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type63 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(type49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(type55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(type59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNull(type63);
    }

    @Test
    public void test1497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1497");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type3 = typeCircularBuffer1.get();
        java.lang.reflect.Type type4 = typeCircularBuffer1.get();
        java.lang.reflect.Type type5 = typeCircularBuffer1.get();
        java.lang.reflect.Type type6 = typeCircularBuffer1.get();
        boolean boolean7 = typeCircularBuffer1.isEmpty();
        java.lang.reflect.Type type8 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean13 = typeCircularBuffer12.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer15 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass16 = typeCircularBuffer15.getClass();
        boolean boolean17 = typeCircularBuffer12.put((java.lang.reflect.Type) wildcardClass16);
        java.lang.reflect.Type type18 = typeCircularBuffer12.get();
        boolean boolean19 = typeCircularBuffer10.put(type18);
        boolean boolean20 = typeCircularBuffer10.isEmpty();
        boolean boolean21 = typeCircularBuffer10.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer23 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean24 = typeCircularBuffer23.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer26 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass27 = typeCircularBuffer26.getClass();
        boolean boolean28 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass27);
        java.lang.reflect.Type type29 = typeCircularBuffer23.get();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        boolean boolean32 = typeCircularBuffer23.put((java.lang.reflect.Type) wildcardClass31);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer34 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean35 = typeCircularBuffer34.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer37 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass38 = typeCircularBuffer37.getClass();
        boolean boolean39 = typeCircularBuffer34.put((java.lang.reflect.Type) wildcardClass38);
        java.lang.reflect.Type type40 = typeCircularBuffer34.get();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        boolean boolean43 = typeCircularBuffer34.put((java.lang.reflect.Type) wildcardClass42);
        java.lang.reflect.Type type44 = typeCircularBuffer34.get();
        boolean boolean45 = typeCircularBuffer23.put(type44);
        boolean boolean46 = typeCircularBuffer10.put(type44);
        boolean boolean47 = typeCircularBuffer10.isEmpty();
        java.lang.reflect.Type type48 = typeCircularBuffer10.get();
        boolean boolean49 = typeCircularBuffer1.put(type48);
        boolean boolean50 = typeCircularBuffer1.isFull();
        boolean boolean51 = typeCircularBuffer1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(type3);
        org.junit.Assert.assertNull(type4);
        org.junit.Assert.assertNull(type5);
        org.junit.Assert.assertNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test1498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1498");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 100);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        boolean boolean3 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer5 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean6 = typeCircularBuffer5.isFull();
        java.lang.reflect.Type type7 = typeCircularBuffer5.get();
        java.lang.reflect.Type type8 = typeCircularBuffer5.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer10 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean11 = typeCircularBuffer10.isFull();
        java.lang.reflect.Type type12 = typeCircularBuffer10.get();
        boolean boolean13 = typeCircularBuffer10.isEmpty();
        java.lang.Class<?> wildcardClass14 = typeCircularBuffer10.getClass();
        boolean boolean15 = typeCircularBuffer5.put((java.lang.reflect.Type) wildcardClass14);
        boolean boolean16 = typeCircularBuffer5.isEmpty();
        java.lang.Class<?> wildcardClass17 = typeCircularBuffer5.getClass();
        boolean boolean18 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = typeCircularBuffer1.get();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(type7);
        org.junit.Assert.assertNull(type8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(type12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(type19);
    }

    @Test
    public void test1499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1499");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean2 = typeCircularBuffer1.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer4 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass5 = typeCircularBuffer4.getClass();
        boolean boolean6 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass5);
        boolean boolean7 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer9 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean10 = typeCircularBuffer9.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer12 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = typeCircularBuffer12.getClass();
        boolean boolean14 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass13);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer16 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer18 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean19 = typeCircularBuffer18.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer21 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass22 = typeCircularBuffer21.getClass();
        boolean boolean23 = typeCircularBuffer18.put((java.lang.reflect.Type) wildcardClass22);
        java.lang.reflect.Type type24 = typeCircularBuffer18.get();
        boolean boolean25 = typeCircularBuffer16.put(type24);
        boolean boolean26 = typeCircularBuffer16.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer28 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean29 = typeCircularBuffer28.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer31 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass32 = typeCircularBuffer31.getClass();
        boolean boolean33 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass32);
        java.lang.reflect.Type type34 = typeCircularBuffer28.get();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        boolean boolean37 = typeCircularBuffer28.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean38 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass36);
        boolean boolean39 = typeCircularBuffer16.isEmpty();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        boolean boolean42 = typeCircularBuffer16.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean43 = typeCircularBuffer9.put((java.lang.reflect.Type) wildcardClass41);
        boolean boolean44 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass41);
        java.lang.reflect.Type type45 = typeCircularBuffer1.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer47 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(0);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer49 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type50 = typeCircularBuffer49.get();
        boolean boolean51 = typeCircularBuffer49.isFull();
        boolean boolean52 = typeCircularBuffer49.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer54 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean55 = typeCircularBuffer54.isEmpty();
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        boolean boolean58 = typeCircularBuffer54.put((java.lang.reflect.Type) wildcardClass57);
        java.lang.Class<?> wildcardClass59 = typeCircularBuffer54.getClass();
        boolean boolean60 = typeCircularBuffer49.put((java.lang.reflect.Type) wildcardClass59);
        boolean boolean61 = typeCircularBuffer49.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer63 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean64 = typeCircularBuffer63.isFull();
        boolean boolean65 = typeCircularBuffer63.isEmpty();
        java.lang.reflect.Type type66 = typeCircularBuffer63.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer68 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer70 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean71 = typeCircularBuffer70.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer73 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass74 = typeCircularBuffer73.getClass();
        boolean boolean75 = typeCircularBuffer70.put((java.lang.reflect.Type) wildcardClass74);
        java.lang.reflect.Type type76 = typeCircularBuffer70.get();
        boolean boolean77 = typeCircularBuffer68.put(type76);
        java.lang.Class<?> wildcardClass78 = typeCircularBuffer68.getClass();
        boolean boolean79 = typeCircularBuffer63.put((java.lang.reflect.Type) wildcardClass78);
        boolean boolean80 = typeCircularBuffer49.put((java.lang.reflect.Type) wildcardClass78);
        boolean boolean81 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass78);
        boolean boolean82 = typeCircularBuffer47.isFull();
        boolean boolean83 = typeCircularBuffer47.isEmpty();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer85 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        boolean boolean86 = typeCircularBuffer85.isEmpty();
        java.lang.Object obj87 = new java.lang.Object();
        java.lang.Class<?> wildcardClass88 = obj87.getClass();
        boolean boolean89 = typeCircularBuffer85.put((java.lang.reflect.Type) wildcardClass88);
        boolean boolean90 = typeCircularBuffer85.isFull();
        java.lang.Class<?> wildcardClass91 = typeCircularBuffer85.getClass();
        boolean boolean92 = typeCircularBuffer47.put((java.lang.reflect.Type) wildcardClass91);
        boolean boolean93 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass91);
        boolean boolean94 = typeCircularBuffer1.isEmpty();
        boolean boolean95 = typeCircularBuffer1.isFull();
        java.lang.Class<?> wildcardClass96 = typeCircularBuffer1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertNull(type50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(type66);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(type76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1500");
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer1 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.reflect.Type type2 = typeCircularBuffer1.get();
        boolean boolean3 = typeCircularBuffer1.isFull();
        boolean boolean4 = typeCircularBuffer1.isEmpty();
        boolean boolean5 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer7 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) (byte) 1);
        java.lang.Class<?> wildcardClass8 = typeCircularBuffer7.getClass();
        boolean boolean9 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass8);
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer11 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>(1);
        boolean boolean12 = typeCircularBuffer11.isFull();
        boolean boolean13 = typeCircularBuffer11.isEmpty();
        boolean boolean14 = typeCircularBuffer11.isFull();
        java.lang.Class<?> wildcardClass15 = typeCircularBuffer11.getClass();
        boolean boolean16 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass15);
        boolean boolean17 = typeCircularBuffer1.isFull();
        boolean boolean18 = typeCircularBuffer1.isFull();
        boolean boolean19 = typeCircularBuffer1.isEmpty();
        boolean boolean20 = typeCircularBuffer1.isFull();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer22 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean23 = typeCircularBuffer22.isFull();
        java.lang.reflect.Type type24 = typeCircularBuffer22.get();
        java.lang.reflect.Type type25 = typeCircularBuffer22.get();
        com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type> typeCircularBuffer27 = new com.thealgorithms.datastructures.buffers.CircularBuffer<java.lang.reflect.Type>((int) '4');
        boolean boolean28 = typeCircularBuffer27.isFull();
        java.lang.reflect.Type type29 = typeCircularBuffer27.get();
        boolean boolean30 = typeCircularBuffer27.isEmpty();
        java.lang.Class<?> wildcardClass31 = typeCircularBuffer27.getClass();
        boolean boolean32 = typeCircularBuffer22.put((java.lang.reflect.Type) wildcardClass31);
        boolean boolean33 = typeCircularBuffer1.put((java.lang.reflect.Type) wildcardClass31);
        java.lang.reflect.Type type34 = typeCircularBuffer1.get();
        org.junit.Assert.assertNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(type24);
        org.junit.Assert.assertNull(type25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(type29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(type34);
    }
}

